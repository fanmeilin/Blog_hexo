{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"themes/fluid2/source/css/gitalk.css","path":"css/gitalk.css","modified":1,"renderable":1},{"_id":"themes/fluid2/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/avatar.png","path":"img/avatar.png","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/default.png","path":"img/default.png","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/favicon.png","path":"img/favicon.png","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/favicon1.png","path":"img/favicon1.png","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/loading.gif","path":"img/loading.gif","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/meicon.png","path":"img/meicon.png","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/meiconbali.jpg","path":"img/meiconbali.jpg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/police_beian.png","path":"img/police_beian.png","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/test.jpg","path":"img/test.jpg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/wechatid.png","path":"img/wechatid.png","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/boot.js","path":"js/boot.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/color-schema.js","path":"js/color-schema.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/deployggb.js","path":"js/deployggb.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/events.js","path":"js/events.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/jquery.js","path":"js/jquery.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/leancloud.js","path":"js/leancloud.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/plugins.js","path":"js/plugins.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/video_url.json","path":"js/video_url.json","modified":1,"renderable":1},{"_id":"themes/fluid2/source/xml/local-search.xml","path":"xml/local-search.xml","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/bg/03990bbe091d5cca73421ac40bacfc46_1.jpg","path":"img/bg/03990bbe091d5cca73421ac40bacfc46_1.jpg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/bg/36e6c0d304d7a672d6d828e164f2c48b_1.jpg","path":"img/bg/36e6c0d304d7a672d6d828e164f2c48b_1.jpg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/bg/4cb90122eb95819122b32d17e238ee1b_1.jpg","path":"img/bg/4cb90122eb95819122b32d17e238ee1b_1.jpg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/bg/5afd5a558c69261be00db0024ce0ccdf_1.jpg","path":"img/bg/5afd5a558c69261be00db0024ce0ccdf_1.jpg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/bg/7cc417b7ace4b99c19d3034179926555_3.jpg","path":"img/bg/7cc417b7ace4b99c19d3034179926555_3.jpg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/bg/7fb86b41c8bb0d7bff7a3142c83d8348_1.jpg","path":"img/bg/7fb86b41c8bb0d7bff7a3142c83d8348_1.jpg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/bg/9884183b3b1e1b50e1d68c69d97b38d6_4.jpg","path":"img/bg/9884183b3b1e1b50e1d68c69d97b38d6_4.jpg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/bg/a8d2b7b118107c8a8446ca81691d20ee_1.jpg","path":"img/bg/a8d2b7b118107c8a8446ca81691d20ee_1.jpg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/bg/a9564f5c58411c94f3d83feeb0647643_1.jpg","path":"img/bg/a9564f5c58411c94f3d83feeb0647643_1.jpg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/bg/b4f8a6143ef84a1ef177b4bde3f8d805_1.jpg","path":"img/bg/b4f8a6143ef84a1ef177b4bde3f8d805_1.jpg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/bg/b7fb479d6dbb4525a0393f9934aceab3_1.jpg","path":"img/bg/b7fb479d6dbb4525a0393f9934aceab3_1.jpg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/bg/bd643dc0ad68f830b3a0eeae50ceba5f_4.jpg","path":"img/bg/bd643dc0ad68f830b3a0eeae50ceba5f_4.jpg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/bg/c65f7b13787572d4f5d33f66d627df71_2.jpg","path":"img/bg/c65f7b13787572d4f5d33f66d627df71_2.jpg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/bg/c989b7d72a5a30f48a3544a7cec9562b_1.jpg","path":"img/bg/c989b7d72a5a30f48a3544a7cec9562b_1.jpg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/bg/e7050bc333ebfc01afce3b434f95e7b0_2.jpg","path":"img/bg/e7050bc333ebfc01afce3b434f95e7b0_2.jpg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/bg/girl.png","path":"img/bg/girl.png","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/bg/wm1.mp4","path":"img/bg/wm1.mp4","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/bg/wm10.mp4","path":"img/bg/wm10.mp4","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/bg/wm11.mp4","path":"img/bg/wm11.mp4","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/bg/wm2.mp4","path":"img/bg/wm2.mp4","modified":1,"renderable":1},{"_id":"themes/fluid2/source/img/bg/wm9.mp4","path":"img/bg/wm9.mp4","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/LICENSE","path":"js/pdfjs/LICENSE","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/LICENSE","path":"js/pdfjs_old/LICENSE","modified":1,"renderable":1},{"_id":"themes/fluid2/source/lib/hint/hint.min.css","path":"lib/hint/hint.min.css","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/18EBAFF235EE31DFDA1EE52C35151A34.cache.js","path":"js/5.0/web3d/18EBAFF235EE31DFDA1EE52C35151A34.cache.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/clear.cache.gif","path":"js/5.0/web3d/clear.cache.gif","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/sworker-locked.js","path":"js/5.0/web3d/sworker-locked.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/sworker.js","path":"js/5.0/web3d/sworker.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/web3d.nocache.js","path":"js/5.0/web3d/web3d.nocache.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/build/pdf.js","path":"js/pdfjs/build/pdf.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/build/pdf.js.map","path":"js/pdfjs/build/pdf.js.map","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/build/pdf.sandbox.js","path":"js/pdfjs/build/pdf.sandbox.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/build/pdf.sandbox.js.map","path":"js/pdfjs/build/pdf.sandbox.js.map","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/build/pdf.worker.js","path":"js/pdfjs/build/pdf.worker.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/build/pdf.worker.js.map","path":"js/pdfjs/build/pdf.worker.js.map","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/compressed.tracemonkey-pldi-09.pdf","path":"js/pdfjs/web/compressed.tracemonkey-pldi-09.pdf","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/debugger.js","path":"js/pdfjs/web/debugger.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/viewer.css","path":"js/pdfjs/web/viewer.css","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/viewer.html","path":"js/pdfjs/web/viewer.html","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/viewer.js","path":"js/pdfjs/web/viewer.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/viewer.js.map","path":"js/pdfjs/web/viewer.js.map","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/build/pdf.js","path":"js/pdfjs_old/build/pdf.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/build/pdf.js.map","path":"js/pdfjs_old/build/pdf.js.map","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/build/pdf.sandbox.js","path":"js/pdfjs_old/build/pdf.sandbox.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/build/pdf.sandbox.js.map","path":"js/pdfjs_old/build/pdf.sandbox.js.map","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/build/pdf.worker.js","path":"js/pdfjs_old/build/pdf.worker.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/build/pdf.worker.js.map","path":"js/pdfjs_old/build/pdf.worker.js.map","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/compressed.tracemonkey-pldi-09.pdf","path":"js/pdfjs_old/web/compressed.tracemonkey-pldi-09.pdf","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/debugger.js","path":"js/pdfjs_old/web/debugger.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/viewer.css","path":"js/pdfjs_old/web/viewer.css","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/viewer.html","path":"js/pdfjs_old/web/viewer.html","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/viewer.js","path":"js/pdfjs_old/web/viewer.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/viewer.js.map","path":"js/pdfjs_old/web/viewer.js.map","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/html/ggtcallback.html","path":"js/5.0/web3d/html/ggtcallback.html","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/html/opener.html","path":"js/5.0/web3d/html/opener.html","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/html/skydriveproxy.php","path":"js/5.0/web3d/html/skydriveproxy.php","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/html/windowslive.html","path":"js/5.0/web3d/html/windowslive.html","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/gl-matrix-min.js","path":"js/5.0/web3d/js/gl-matrix-min.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_af.js","path":"js/5.0/web3d/js/properties_keys_af.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_am.js","path":"js/5.0/web3d/js/properties_keys_am.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ar-MA.js","path":"js/5.0/web3d/js/properties_keys_ar-MA.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ar-TN.js","path":"js/5.0/web3d/js/properties_keys_ar-TN.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ar.js","path":"js/5.0/web3d/js/properties_keys_ar.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_az.js","path":"js/5.0/web3d/js/properties_keys_az.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_bg.js","path":"js/5.0/web3d/js/properties_keys_bg.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_bn.js","path":"js/5.0/web3d/js/properties_keys_bn.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_bs.js","path":"js/5.0/web3d/js/properties_keys_bs.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ca-XV.js","path":"js/5.0/web3d/js/properties_keys_ca-XV.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ca.js","path":"js/5.0/web3d/js/properties_keys_ca.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_cs.js","path":"js/5.0/web3d/js/properties_keys_cs.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_da.js","path":"js/5.0/web3d/js/properties_keys_da.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_cy.js","path":"js/5.0/web3d/js/properties_keys_cy.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_de-AT.js","path":"js/5.0/web3d/js/properties_keys_de-AT.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_de.js","path":"js/5.0/web3d/js/properties_keys_de.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_el.js","path":"js/5.0/web3d/js/properties_keys_el.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_en-AU.js","path":"js/5.0/web3d/js/properties_keys_en-AU.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_en-GB.js","path":"js/5.0/web3d/js/properties_keys_en-GB.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_en.js","path":"js/5.0/web3d/js/properties_keys_en.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_eo.js","path":"js/5.0/web3d/js/properties_keys_eo.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_es-ES.js","path":"js/5.0/web3d/js/properties_keys_es-ES.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_es-UY.js","path":"js/5.0/web3d/js/properties_keys_es-UY.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_es.js","path":"js/5.0/web3d/js/properties_keys_es.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_et.js","path":"js/5.0/web3d/js/properties_keys_et.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_eu.js","path":"js/5.0/web3d/js/properties_keys_eu.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_fa.js","path":"js/5.0/web3d/js/properties_keys_fa.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_fi.js","path":"js/5.0/web3d/js/properties_keys_fi.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_fil.js","path":"js/5.0/web3d/js/properties_keys_fil.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_fr.js","path":"js/5.0/web3d/js/properties_keys_fr.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_gl.js","path":"js/5.0/web3d/js/properties_keys_gl.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_he.js","path":"js/5.0/web3d/js/properties_keys_he.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_hi.js","path":"js/5.0/web3d/js/properties_keys_hi.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_hr.js","path":"js/5.0/web3d/js/properties_keys_hr.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_hu.js","path":"js/5.0/web3d/js/properties_keys_hu.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_hy.js","path":"js/5.0/web3d/js/properties_keys_hy.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_id.js","path":"js/5.0/web3d/js/properties_keys_id.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_is.js","path":"js/5.0/web3d/js/properties_keys_is.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_it.js","path":"js/5.0/web3d/js/properties_keys_it.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ja.js","path":"js/5.0/web3d/js/properties_keys_ja.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ka.js","path":"js/5.0/web3d/js/properties_keys_ka.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_kk.js","path":"js/5.0/web3d/js/properties_keys_kk.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_km.js","path":"js/5.0/web3d/js/properties_keys_km.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_kn.js","path":"js/5.0/web3d/js/properties_keys_kn.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ko.js","path":"js/5.0/web3d/js/properties_keys_ko.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_lt.js","path":"js/5.0/web3d/js/properties_keys_lt.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_lv.js","path":"js/5.0/web3d/js/properties_keys_lv.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_mk.js","path":"js/5.0/web3d/js/properties_keys_mk.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ml.js","path":"js/5.0/web3d/js/properties_keys_ml.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_mn.js","path":"js/5.0/web3d/js/properties_keys_mn.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_mr.js","path":"js/5.0/web3d/js/properties_keys_mr.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ms.js","path":"js/5.0/web3d/js/properties_keys_ms.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_nb.js","path":"js/5.0/web3d/js/properties_keys_nb.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ne.js","path":"js/5.0/web3d/js/properties_keys_ne.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_nl-NL.js","path":"js/5.0/web3d/js/properties_keys_nl-NL.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_nl.js","path":"js/5.0/web3d/js/properties_keys_nl.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_nn.js","path":"js/5.0/web3d/js/properties_keys_nn.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_pl.js","path":"js/5.0/web3d/js/properties_keys_pl.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_pt-PT.js","path":"js/5.0/web3d/js/properties_keys_pt-PT.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_pt.js","path":"js/5.0/web3d/js/properties_keys_pt.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ro.js","path":"js/5.0/web3d/js/properties_keys_ro.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ru.js","path":"js/5.0/web3d/js/properties_keys_ru.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_si.js","path":"js/5.0/web3d/js/properties_keys_si.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_sk.js","path":"js/5.0/web3d/js/properties_keys_sk.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_sl.js","path":"js/5.0/web3d/js/properties_keys_sl.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_sq.js","path":"js/5.0/web3d/js/properties_keys_sq.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_sr.js","path":"js/5.0/web3d/js/properties_keys_sr.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_sv.js","path":"js/5.0/web3d/js/properties_keys_sv.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ta.js","path":"js/5.0/web3d/js/properties_keys_ta.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_tg.js","path":"js/5.0/web3d/js/properties_keys_tg.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_th.js","path":"js/5.0/web3d/js/properties_keys_th.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_tr.js","path":"js/5.0/web3d/js/properties_keys_tr.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ug.js","path":"js/5.0/web3d/js/properties_keys_ug.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_uk.js","path":"js/5.0/web3d/js/properties_keys_uk.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_uz.js","path":"js/5.0/web3d/js/properties_keys_uz.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_vi.js","path":"js/5.0/web3d/js/properties_keys_vi.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_xh.js","path":"js/5.0/web3d/js/properties_keys_xh.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_yi.js","path":"js/5.0/web3d/js/properties_keys_yi.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_zh-CN.js","path":"js/5.0/web3d/js/properties_keys_zh-CN.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_zh-TW.js","path":"js/5.0/web3d/js/properties_keys_zh-TW.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/webfont.js","path":"js/5.0/web3d/js/webfont.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/workercheck.js","path":"js/5.0/web3d/js/workercheck.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/zSpace.js","path":"js/5.0/web3d/js/zSpace.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/78-EUC-H.bcmap","path":"js/pdfjs/web/cmaps/78-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/78-EUC-V.bcmap","path":"js/pdfjs/web/cmaps/78-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/78-H.bcmap","path":"js/pdfjs/web/cmaps/78-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/78-RKSJ-H.bcmap","path":"js/pdfjs/web/cmaps/78-RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/78-RKSJ-V.bcmap","path":"js/pdfjs/web/cmaps/78-RKSJ-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/78-V.bcmap","path":"js/pdfjs/web/cmaps/78-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/78ms-RKSJ-H.bcmap","path":"js/pdfjs/web/cmaps/78ms-RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/78ms-RKSJ-V.bcmap","path":"js/pdfjs/web/cmaps/78ms-RKSJ-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/83pv-RKSJ-H.bcmap","path":"js/pdfjs/web/cmaps/83pv-RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/90ms-RKSJ-H.bcmap","path":"js/pdfjs/web/cmaps/90ms-RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/90ms-RKSJ-V.bcmap","path":"js/pdfjs/web/cmaps/90ms-RKSJ-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/90msp-RKSJ-V.bcmap","path":"js/pdfjs/web/cmaps/90msp-RKSJ-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/90msp-RKSJ-H.bcmap","path":"js/pdfjs/web/cmaps/90msp-RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/90pv-RKSJ-H.bcmap","path":"js/pdfjs/web/cmaps/90pv-RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/90pv-RKSJ-V.bcmap","path":"js/pdfjs/web/cmaps/90pv-RKSJ-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Add-H.bcmap","path":"js/pdfjs/web/cmaps/Add-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Add-RKSJ-H.bcmap","path":"js/pdfjs/web/cmaps/Add-RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Add-RKSJ-V.bcmap","path":"js/pdfjs/web/cmaps/Add-RKSJ-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Add-V.bcmap","path":"js/pdfjs/web/cmaps/Add-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-CNS1-0.bcmap","path":"js/pdfjs/web/cmaps/Adobe-CNS1-0.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-CNS1-1.bcmap","path":"js/pdfjs/web/cmaps/Adobe-CNS1-1.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-CNS1-2.bcmap","path":"js/pdfjs/web/cmaps/Adobe-CNS1-2.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-CNS1-3.bcmap","path":"js/pdfjs/web/cmaps/Adobe-CNS1-3.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-CNS1-4.bcmap","path":"js/pdfjs/web/cmaps/Adobe-CNS1-4.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-CNS1-5.bcmap","path":"js/pdfjs/web/cmaps/Adobe-CNS1-5.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-CNS1-6.bcmap","path":"js/pdfjs/web/cmaps/Adobe-CNS1-6.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-CNS1-UCS2.bcmap","path":"js/pdfjs/web/cmaps/Adobe-CNS1-UCS2.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-GB1-0.bcmap","path":"js/pdfjs/web/cmaps/Adobe-GB1-0.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-GB1-1.bcmap","path":"js/pdfjs/web/cmaps/Adobe-GB1-1.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-GB1-2.bcmap","path":"js/pdfjs/web/cmaps/Adobe-GB1-2.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-GB1-3.bcmap","path":"js/pdfjs/web/cmaps/Adobe-GB1-3.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-GB1-4.bcmap","path":"js/pdfjs/web/cmaps/Adobe-GB1-4.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-GB1-5.bcmap","path":"js/pdfjs/web/cmaps/Adobe-GB1-5.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-GB1-UCS2.bcmap","path":"js/pdfjs/web/cmaps/Adobe-GB1-UCS2.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-Japan1-0.bcmap","path":"js/pdfjs/web/cmaps/Adobe-Japan1-0.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-Japan1-1.bcmap","path":"js/pdfjs/web/cmaps/Adobe-Japan1-1.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-Japan1-2.bcmap","path":"js/pdfjs/web/cmaps/Adobe-Japan1-2.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-Japan1-3.bcmap","path":"js/pdfjs/web/cmaps/Adobe-Japan1-3.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-Japan1-4.bcmap","path":"js/pdfjs/web/cmaps/Adobe-Japan1-4.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-Japan1-5.bcmap","path":"js/pdfjs/web/cmaps/Adobe-Japan1-5.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-Japan1-6.bcmap","path":"js/pdfjs/web/cmaps/Adobe-Japan1-6.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-Japan1-UCS2.bcmap","path":"js/pdfjs/web/cmaps/Adobe-Japan1-UCS2.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-Korea1-0.bcmap","path":"js/pdfjs/web/cmaps/Adobe-Korea1-0.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-Korea1-1.bcmap","path":"js/pdfjs/web/cmaps/Adobe-Korea1-1.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-Korea1-2.bcmap","path":"js/pdfjs/web/cmaps/Adobe-Korea1-2.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-Korea1-UCS2.bcmap","path":"js/pdfjs/web/cmaps/Adobe-Korea1-UCS2.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/B5-H.bcmap","path":"js/pdfjs/web/cmaps/B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/B5-V.bcmap","path":"js/pdfjs/web/cmaps/B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/B5pc-H.bcmap","path":"js/pdfjs/web/cmaps/B5pc-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/B5pc-V.bcmap","path":"js/pdfjs/web/cmaps/B5pc-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/CNS-EUC-H.bcmap","path":"js/pdfjs/web/cmaps/CNS-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/CNS-EUC-V.bcmap","path":"js/pdfjs/web/cmaps/CNS-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/CNS1-H.bcmap","path":"js/pdfjs/web/cmaps/CNS1-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/CNS1-V.bcmap","path":"js/pdfjs/web/cmaps/CNS1-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/CNS2-V.bcmap","path":"js/pdfjs/web/cmaps/CNS2-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/ETHK-B5-H.bcmap","path":"js/pdfjs/web/cmaps/ETHK-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/ETHK-B5-V.bcmap","path":"js/pdfjs/web/cmaps/ETHK-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/CNS2-H.bcmap","path":"js/pdfjs/web/cmaps/CNS2-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/ETen-B5-H.bcmap","path":"js/pdfjs/web/cmaps/ETen-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/ETen-B5-V.bcmap","path":"js/pdfjs/web/cmaps/ETen-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/ETenms-B5-H.bcmap","path":"js/pdfjs/web/cmaps/ETenms-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/ETenms-B5-V.bcmap","path":"js/pdfjs/web/cmaps/ETenms-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/EUC-H.bcmap","path":"js/pdfjs/web/cmaps/EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/EUC-V.bcmap","path":"js/pdfjs/web/cmaps/EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Ext-H.bcmap","path":"js/pdfjs/web/cmaps/Ext-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Ext-RKSJ-H.bcmap","path":"js/pdfjs/web/cmaps/Ext-RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Ext-RKSJ-V.bcmap","path":"js/pdfjs/web/cmaps/Ext-RKSJ-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Ext-V.bcmap","path":"js/pdfjs/web/cmaps/Ext-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GB-EUC-H.bcmap","path":"js/pdfjs/web/cmaps/GB-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GB-EUC-V.bcmap","path":"js/pdfjs/web/cmaps/GB-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GB-H.bcmap","path":"js/pdfjs/web/cmaps/GB-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GB-V.bcmap","path":"js/pdfjs/web/cmaps/GB-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBK-EUC-H.bcmap","path":"js/pdfjs/web/cmaps/GBK-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBK-EUC-V.bcmap","path":"js/pdfjs/web/cmaps/GBK-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBK2K-H.bcmap","path":"js/pdfjs/web/cmaps/GBK2K-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBK2K-V.bcmap","path":"js/pdfjs/web/cmaps/GBK2K-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBKp-EUC-H.bcmap","path":"js/pdfjs/web/cmaps/GBKp-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBKp-EUC-V.bcmap","path":"js/pdfjs/web/cmaps/GBKp-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBT-EUC-H.bcmap","path":"js/pdfjs/web/cmaps/GBT-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBT-EUC-V.bcmap","path":"js/pdfjs/web/cmaps/GBT-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBT-H.bcmap","path":"js/pdfjs/web/cmaps/GBT-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBT-V.bcmap","path":"js/pdfjs/web/cmaps/GBT-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBTpc-EUC-H.bcmap","path":"js/pdfjs/web/cmaps/GBTpc-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBTpc-EUC-V.bcmap","path":"js/pdfjs/web/cmaps/GBTpc-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBpc-EUC-H.bcmap","path":"js/pdfjs/web/cmaps/GBpc-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBpc-EUC-V.bcmap","path":"js/pdfjs/web/cmaps/GBpc-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/H.bcmap","path":"js/pdfjs/web/cmaps/H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/HKdla-B5-H.bcmap","path":"js/pdfjs/web/cmaps/HKdla-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/HKdla-B5-V.bcmap","path":"js/pdfjs/web/cmaps/HKdla-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/HKdlb-B5-H.bcmap","path":"js/pdfjs/web/cmaps/HKdlb-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/HKdlb-B5-V.bcmap","path":"js/pdfjs/web/cmaps/HKdlb-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/HKgccs-B5-H.bcmap","path":"js/pdfjs/web/cmaps/HKgccs-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/HKgccs-B5-V.bcmap","path":"js/pdfjs/web/cmaps/HKgccs-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/HKm314-B5-H.bcmap","path":"js/pdfjs/web/cmaps/HKm314-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/HKm314-B5-V.bcmap","path":"js/pdfjs/web/cmaps/HKm314-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/HKm471-B5-H.bcmap","path":"js/pdfjs/web/cmaps/HKm471-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/HKm471-B5-V.bcmap","path":"js/pdfjs/web/cmaps/HKm471-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/HKscs-B5-H.bcmap","path":"js/pdfjs/web/cmaps/HKscs-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/HKscs-B5-V.bcmap","path":"js/pdfjs/web/cmaps/HKscs-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Hankaku.bcmap","path":"js/pdfjs/web/cmaps/Hankaku.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Hiragana.bcmap","path":"js/pdfjs/web/cmaps/Hiragana.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/KSC-EUC-H.bcmap","path":"js/pdfjs/web/cmaps/KSC-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/KSC-EUC-V.bcmap","path":"js/pdfjs/web/cmaps/KSC-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/KSC-H.bcmap","path":"js/pdfjs/web/cmaps/KSC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/KSC-Johab-H.bcmap","path":"js/pdfjs/web/cmaps/KSC-Johab-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/KSC-Johab-V.bcmap","path":"js/pdfjs/web/cmaps/KSC-Johab-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/KSC-V.bcmap","path":"js/pdfjs/web/cmaps/KSC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/KSCms-UHC-H.bcmap","path":"js/pdfjs/web/cmaps/KSCms-UHC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/KSCms-UHC-HW-H.bcmap","path":"js/pdfjs/web/cmaps/KSCms-UHC-HW-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/KSCms-UHC-HW-V.bcmap","path":"js/pdfjs/web/cmaps/KSCms-UHC-HW-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/KSCms-UHC-V.bcmap","path":"js/pdfjs/web/cmaps/KSCms-UHC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/KSCpc-EUC-H.bcmap","path":"js/pdfjs/web/cmaps/KSCpc-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/KSCpc-EUC-V.bcmap","path":"js/pdfjs/web/cmaps/KSCpc-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Katakana.bcmap","path":"js/pdfjs/web/cmaps/Katakana.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/LICENSE","path":"js/pdfjs/web/cmaps/LICENSE","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/NWP-H.bcmap","path":"js/pdfjs/web/cmaps/NWP-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/NWP-V.bcmap","path":"js/pdfjs/web/cmaps/NWP-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/RKSJ-H.bcmap","path":"js/pdfjs/web/cmaps/RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/RKSJ-V.bcmap","path":"js/pdfjs/web/cmaps/RKSJ-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Roman.bcmap","path":"js/pdfjs/web/cmaps/Roman.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniCNS-UCS2-H.bcmap","path":"js/pdfjs/web/cmaps/UniCNS-UCS2-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniCNS-UCS2-V.bcmap","path":"js/pdfjs/web/cmaps/UniCNS-UCS2-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniCNS-UTF16-H.bcmap","path":"js/pdfjs/web/cmaps/UniCNS-UTF16-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniCNS-UTF16-V.bcmap","path":"js/pdfjs/web/cmaps/UniCNS-UTF16-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniCNS-UTF32-H.bcmap","path":"js/pdfjs/web/cmaps/UniCNS-UTF32-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniCNS-UTF32-V.bcmap","path":"js/pdfjs/web/cmaps/UniCNS-UTF32-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniCNS-UTF8-H.bcmap","path":"js/pdfjs/web/cmaps/UniCNS-UTF8-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniCNS-UTF8-V.bcmap","path":"js/pdfjs/web/cmaps/UniCNS-UTF8-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniGB-UCS2-H.bcmap","path":"js/pdfjs/web/cmaps/UniGB-UCS2-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniGB-UCS2-V.bcmap","path":"js/pdfjs/web/cmaps/UniGB-UCS2-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniGB-UTF16-H.bcmap","path":"js/pdfjs/web/cmaps/UniGB-UTF16-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniGB-UTF16-V.bcmap","path":"js/pdfjs/web/cmaps/UniGB-UTF16-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniGB-UTF32-H.bcmap","path":"js/pdfjs/web/cmaps/UniGB-UTF32-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniGB-UTF32-V.bcmap","path":"js/pdfjs/web/cmaps/UniGB-UTF32-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniGB-UTF8-H.bcmap","path":"js/pdfjs/web/cmaps/UniGB-UTF8-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniGB-UTF8-V.bcmap","path":"js/pdfjs/web/cmaps/UniGB-UTF8-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS-UCS2-H.bcmap","path":"js/pdfjs/web/cmaps/UniJIS-UCS2-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS-UCS2-HW-H.bcmap","path":"js/pdfjs/web/cmaps/UniJIS-UCS2-HW-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS-UCS2-HW-V.bcmap","path":"js/pdfjs/web/cmaps/UniJIS-UCS2-HW-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS-UCS2-V.bcmap","path":"js/pdfjs/web/cmaps/UniJIS-UCS2-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS-UTF16-H.bcmap","path":"js/pdfjs/web/cmaps/UniJIS-UTF16-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS-UTF16-V.bcmap","path":"js/pdfjs/web/cmaps/UniJIS-UTF16-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS-UTF32-H.bcmap","path":"js/pdfjs/web/cmaps/UniJIS-UTF32-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS-UTF32-V.bcmap","path":"js/pdfjs/web/cmaps/UniJIS-UTF32-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS-UTF8-H.bcmap","path":"js/pdfjs/web/cmaps/UniJIS-UTF8-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS-UTF8-V.bcmap","path":"js/pdfjs/web/cmaps/UniJIS-UTF8-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS2004-UTF16-H.bcmap","path":"js/pdfjs/web/cmaps/UniJIS2004-UTF16-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS2004-UTF16-V.bcmap","path":"js/pdfjs/web/cmaps/UniJIS2004-UTF16-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS2004-UTF32-H.bcmap","path":"js/pdfjs/web/cmaps/UniJIS2004-UTF32-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS2004-UTF32-V.bcmap","path":"js/pdfjs/web/cmaps/UniJIS2004-UTF32-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS2004-UTF8-H.bcmap","path":"js/pdfjs/web/cmaps/UniJIS2004-UTF8-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS2004-UTF8-V.bcmap","path":"js/pdfjs/web/cmaps/UniJIS2004-UTF8-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJISPro-UCS2-HW-V.bcmap","path":"js/pdfjs/web/cmaps/UniJISPro-UCS2-HW-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJISPro-UCS2-V.bcmap","path":"js/pdfjs/web/cmaps/UniJISPro-UCS2-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJISPro-UTF8-V.bcmap","path":"js/pdfjs/web/cmaps/UniJISPro-UTF8-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJISX0213-UTF32-H.bcmap","path":"js/pdfjs/web/cmaps/UniJISX0213-UTF32-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJISX0213-UTF32-V.bcmap","path":"js/pdfjs/web/cmaps/UniJISX0213-UTF32-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJISX02132004-UTF32-H.bcmap","path":"js/pdfjs/web/cmaps/UniJISX02132004-UTF32-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJISX02132004-UTF32-V.bcmap","path":"js/pdfjs/web/cmaps/UniJISX02132004-UTF32-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniKS-UCS2-H.bcmap","path":"js/pdfjs/web/cmaps/UniKS-UCS2-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniKS-UCS2-V.bcmap","path":"js/pdfjs/web/cmaps/UniKS-UCS2-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniKS-UTF16-H.bcmap","path":"js/pdfjs/web/cmaps/UniKS-UTF16-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniKS-UTF16-V.bcmap","path":"js/pdfjs/web/cmaps/UniKS-UTF16-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniKS-UTF32-H.bcmap","path":"js/pdfjs/web/cmaps/UniKS-UTF32-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniKS-UTF32-V.bcmap","path":"js/pdfjs/web/cmaps/UniKS-UTF32-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniKS-UTF8-H.bcmap","path":"js/pdfjs/web/cmaps/UniKS-UTF8-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniKS-UTF8-V.bcmap","path":"js/pdfjs/web/cmaps/UniKS-UTF8-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/V.bcmap","path":"js/pdfjs/web/cmaps/V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/WP-Symbol.bcmap","path":"js/pdfjs/web/cmaps/WP-Symbol.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/locale.properties","path":"js/pdfjs/web/locale/locale.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/annotation-check.svg","path":"js/pdfjs/web/images/annotation-check.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/annotation-comment.svg","path":"js/pdfjs/web/images/annotation-comment.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/annotation-help.svg","path":"js/pdfjs/web/images/annotation-help.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/annotation-insert.svg","path":"js/pdfjs/web/images/annotation-insert.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/annotation-key.svg","path":"js/pdfjs/web/images/annotation-key.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/annotation-newparagraph.svg","path":"js/pdfjs/web/images/annotation-newparagraph.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/annotation-noicon.svg","path":"js/pdfjs/web/images/annotation-noicon.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/annotation-paragraph.svg","path":"js/pdfjs/web/images/annotation-paragraph.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/annotation-note.svg","path":"js/pdfjs/web/images/annotation-note.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/findbarButton-next.svg","path":"js/pdfjs/web/images/findbarButton-next.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/findbarButton-previous.svg","path":"js/pdfjs/web/images/findbarButton-previous.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/grab.cur","path":"js/pdfjs/web/images/grab.cur","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/grabbing.cur","path":"js/pdfjs/web/images/grabbing.cur","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/loading-dark.svg","path":"js/pdfjs/web/images/loading-dark.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/loading-icon.gif","path":"js/pdfjs/web/images/loading-icon.gif","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/loading.svg","path":"js/pdfjs/web/images/loading.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/secondaryToolbarButton-documentProperties.svg","path":"js/pdfjs/web/images/secondaryToolbarButton-documentProperties.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/secondaryToolbarButton-firstPage.svg","path":"js/pdfjs/web/images/secondaryToolbarButton-firstPage.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/secondaryToolbarButton-handTool.svg","path":"js/pdfjs/web/images/secondaryToolbarButton-handTool.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/secondaryToolbarButton-lastPage.svg","path":"js/pdfjs/web/images/secondaryToolbarButton-lastPage.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/secondaryToolbarButton-rotateCcw.svg","path":"js/pdfjs/web/images/secondaryToolbarButton-rotateCcw.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/secondaryToolbarButton-rotateCw.svg","path":"js/pdfjs/web/images/secondaryToolbarButton-rotateCw.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/secondaryToolbarButton-scrollHorizontal.svg","path":"js/pdfjs/web/images/secondaryToolbarButton-scrollHorizontal.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/secondaryToolbarButton-scrollWrapped.svg","path":"js/pdfjs/web/images/secondaryToolbarButton-scrollWrapped.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/secondaryToolbarButton-scrollVertical.svg","path":"js/pdfjs/web/images/secondaryToolbarButton-scrollVertical.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/secondaryToolbarButton-spreadEven.svg","path":"js/pdfjs/web/images/secondaryToolbarButton-spreadEven.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/secondaryToolbarButton-selectTool.svg","path":"js/pdfjs/web/images/secondaryToolbarButton-selectTool.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/secondaryToolbarButton-spreadNone.svg","path":"js/pdfjs/web/images/secondaryToolbarButton-spreadNone.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/secondaryToolbarButton-spreadOdd.svg","path":"js/pdfjs/web/images/secondaryToolbarButton-spreadOdd.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/shadow.png","path":"js/pdfjs/web/images/shadow.png","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-bookmark.svg","path":"js/pdfjs/web/images/toolbarButton-bookmark.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-currentOutlineItem.svg","path":"js/pdfjs/web/images/toolbarButton-currentOutlineItem.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-download.svg","path":"js/pdfjs/web/images/toolbarButton-download.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-menuArrow.svg","path":"js/pdfjs/web/images/toolbarButton-menuArrow.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-openFile.svg","path":"js/pdfjs/web/images/toolbarButton-openFile.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-pageDown.svg","path":"js/pdfjs/web/images/toolbarButton-pageDown.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-pageUp.svg","path":"js/pdfjs/web/images/toolbarButton-pageUp.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-print.svg","path":"js/pdfjs/web/images/toolbarButton-print.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-presentationMode.svg","path":"js/pdfjs/web/images/toolbarButton-presentationMode.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-search.svg","path":"js/pdfjs/web/images/toolbarButton-search.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-secondaryToolbarToggle.svg","path":"js/pdfjs/web/images/toolbarButton-secondaryToolbarToggle.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-sidebarToggle.svg","path":"js/pdfjs/web/images/toolbarButton-sidebarToggle.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-viewAttachments.svg","path":"js/pdfjs/web/images/toolbarButton-viewAttachments.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-viewLayers.svg","path":"js/pdfjs/web/images/toolbarButton-viewLayers.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-viewOutline.svg","path":"js/pdfjs/web/images/toolbarButton-viewOutline.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-viewThumbnail.svg","path":"js/pdfjs/web/images/toolbarButton-viewThumbnail.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-zoomIn.svg","path":"js/pdfjs/web/images/toolbarButton-zoomIn.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-zoomOut.svg","path":"js/pdfjs/web/images/toolbarButton-zoomOut.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/treeitem-collapsed.svg","path":"js/pdfjs/web/images/treeitem-collapsed.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/images/treeitem-expanded.svg","path":"js/pdfjs/web/images/treeitem-expanded.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/78-EUC-H.bcmap","path":"js/pdfjs_old/web/cmaps/78-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/78-EUC-V.bcmap","path":"js/pdfjs_old/web/cmaps/78-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/78-H.bcmap","path":"js/pdfjs_old/web/cmaps/78-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/78-RKSJ-H.bcmap","path":"js/pdfjs_old/web/cmaps/78-RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/78-RKSJ-V.bcmap","path":"js/pdfjs_old/web/cmaps/78-RKSJ-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/78-V.bcmap","path":"js/pdfjs_old/web/cmaps/78-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/78ms-RKSJ-H.bcmap","path":"js/pdfjs_old/web/cmaps/78ms-RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/83pv-RKSJ-H.bcmap","path":"js/pdfjs_old/web/cmaps/83pv-RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/78ms-RKSJ-V.bcmap","path":"js/pdfjs_old/web/cmaps/78ms-RKSJ-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/90ms-RKSJ-H.bcmap","path":"js/pdfjs_old/web/cmaps/90ms-RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/90ms-RKSJ-V.bcmap","path":"js/pdfjs_old/web/cmaps/90ms-RKSJ-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/90msp-RKSJ-H.bcmap","path":"js/pdfjs_old/web/cmaps/90msp-RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/90pv-RKSJ-H.bcmap","path":"js/pdfjs_old/web/cmaps/90pv-RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/90msp-RKSJ-V.bcmap","path":"js/pdfjs_old/web/cmaps/90msp-RKSJ-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/90pv-RKSJ-V.bcmap","path":"js/pdfjs_old/web/cmaps/90pv-RKSJ-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Add-RKSJ-H.bcmap","path":"js/pdfjs_old/web/cmaps/Add-RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Add-H.bcmap","path":"js/pdfjs_old/web/cmaps/Add-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Add-V.bcmap","path":"js/pdfjs_old/web/cmaps/Add-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-CNS1-0.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-CNS1-0.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Add-RKSJ-V.bcmap","path":"js/pdfjs_old/web/cmaps/Add-RKSJ-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-CNS1-1.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-CNS1-1.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-CNS1-2.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-CNS1-2.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-CNS1-3.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-CNS1-3.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-CNS1-4.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-CNS1-4.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-CNS1-5.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-CNS1-5.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-CNS1-6.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-CNS1-6.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-CNS1-UCS2.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-CNS1-UCS2.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-GB1-0.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-GB1-0.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-GB1-1.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-GB1-1.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-GB1-2.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-GB1-2.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-GB1-3.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-GB1-3.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-GB1-4.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-GB1-4.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-GB1-5.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-GB1-5.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-GB1-UCS2.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-GB1-UCS2.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-Japan1-0.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-Japan1-0.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-Japan1-1.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-Japan1-1.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-Japan1-2.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-Japan1-2.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-Japan1-3.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-Japan1-3.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-Japan1-4.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-Japan1-4.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-Japan1-5.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-Japan1-5.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-Japan1-6.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-Japan1-6.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-Japan1-UCS2.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-Japan1-UCS2.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-Korea1-0.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-Korea1-0.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-Korea1-1.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-Korea1-1.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-Korea1-2.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-Korea1-2.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-Korea1-UCS2.bcmap","path":"js/pdfjs_old/web/cmaps/Adobe-Korea1-UCS2.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/B5-H.bcmap","path":"js/pdfjs_old/web/cmaps/B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/B5-V.bcmap","path":"js/pdfjs_old/web/cmaps/B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/B5pc-H.bcmap","path":"js/pdfjs_old/web/cmaps/B5pc-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/B5pc-V.bcmap","path":"js/pdfjs_old/web/cmaps/B5pc-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/CNS-EUC-H.bcmap","path":"js/pdfjs_old/web/cmaps/CNS-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/CNS-EUC-V.bcmap","path":"js/pdfjs_old/web/cmaps/CNS-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/CNS1-H.bcmap","path":"js/pdfjs_old/web/cmaps/CNS1-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/CNS1-V.bcmap","path":"js/pdfjs_old/web/cmaps/CNS1-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/CNS2-V.bcmap","path":"js/pdfjs_old/web/cmaps/CNS2-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/CNS2-H.bcmap","path":"js/pdfjs_old/web/cmaps/CNS2-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/ETHK-B5-H.bcmap","path":"js/pdfjs_old/web/cmaps/ETHK-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/ETen-B5-H.bcmap","path":"js/pdfjs_old/web/cmaps/ETen-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/ETenms-B5-H.bcmap","path":"js/pdfjs_old/web/cmaps/ETenms-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/ETHK-B5-V.bcmap","path":"js/pdfjs_old/web/cmaps/ETHK-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/ETen-B5-V.bcmap","path":"js/pdfjs_old/web/cmaps/ETen-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/ETenms-B5-V.bcmap","path":"js/pdfjs_old/web/cmaps/ETenms-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/EUC-H.bcmap","path":"js/pdfjs_old/web/cmaps/EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/EUC-V.bcmap","path":"js/pdfjs_old/web/cmaps/EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Ext-H.bcmap","path":"js/pdfjs_old/web/cmaps/Ext-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Ext-RKSJ-H.bcmap","path":"js/pdfjs_old/web/cmaps/Ext-RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Ext-RKSJ-V.bcmap","path":"js/pdfjs_old/web/cmaps/Ext-RKSJ-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Ext-V.bcmap","path":"js/pdfjs_old/web/cmaps/Ext-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GB-EUC-H.bcmap","path":"js/pdfjs_old/web/cmaps/GB-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GB-EUC-V.bcmap","path":"js/pdfjs_old/web/cmaps/GB-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GB-H.bcmap","path":"js/pdfjs_old/web/cmaps/GB-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GB-V.bcmap","path":"js/pdfjs_old/web/cmaps/GB-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBK-EUC-H.bcmap","path":"js/pdfjs_old/web/cmaps/GBK-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBK-EUC-V.bcmap","path":"js/pdfjs_old/web/cmaps/GBK-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBK2K-H.bcmap","path":"js/pdfjs_old/web/cmaps/GBK2K-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBK2K-V.bcmap","path":"js/pdfjs_old/web/cmaps/GBK2K-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBKp-EUC-H.bcmap","path":"js/pdfjs_old/web/cmaps/GBKp-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBKp-EUC-V.bcmap","path":"js/pdfjs_old/web/cmaps/GBKp-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBT-EUC-H.bcmap","path":"js/pdfjs_old/web/cmaps/GBT-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBT-EUC-V.bcmap","path":"js/pdfjs_old/web/cmaps/GBT-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBT-H.bcmap","path":"js/pdfjs_old/web/cmaps/GBT-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBT-V.bcmap","path":"js/pdfjs_old/web/cmaps/GBT-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBTpc-EUC-H.bcmap","path":"js/pdfjs_old/web/cmaps/GBTpc-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBTpc-EUC-V.bcmap","path":"js/pdfjs_old/web/cmaps/GBTpc-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBpc-EUC-H.bcmap","path":"js/pdfjs_old/web/cmaps/GBpc-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBpc-EUC-V.bcmap","path":"js/pdfjs_old/web/cmaps/GBpc-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/H.bcmap","path":"js/pdfjs_old/web/cmaps/H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/HKdla-B5-H.bcmap","path":"js/pdfjs_old/web/cmaps/HKdla-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/HKdla-B5-V.bcmap","path":"js/pdfjs_old/web/cmaps/HKdla-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/HKdlb-B5-H.bcmap","path":"js/pdfjs_old/web/cmaps/HKdlb-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/HKdlb-B5-V.bcmap","path":"js/pdfjs_old/web/cmaps/HKdlb-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/HKgccs-B5-H.bcmap","path":"js/pdfjs_old/web/cmaps/HKgccs-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/HKgccs-B5-V.bcmap","path":"js/pdfjs_old/web/cmaps/HKgccs-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/HKm314-B5-H.bcmap","path":"js/pdfjs_old/web/cmaps/HKm314-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/HKm314-B5-V.bcmap","path":"js/pdfjs_old/web/cmaps/HKm314-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/HKm471-B5-H.bcmap","path":"js/pdfjs_old/web/cmaps/HKm471-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/HKm471-B5-V.bcmap","path":"js/pdfjs_old/web/cmaps/HKm471-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/HKscs-B5-H.bcmap","path":"js/pdfjs_old/web/cmaps/HKscs-B5-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/HKscs-B5-V.bcmap","path":"js/pdfjs_old/web/cmaps/HKscs-B5-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Hankaku.bcmap","path":"js/pdfjs_old/web/cmaps/Hankaku.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Hiragana.bcmap","path":"js/pdfjs_old/web/cmaps/Hiragana.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/KSC-EUC-H.bcmap","path":"js/pdfjs_old/web/cmaps/KSC-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/KSC-EUC-V.bcmap","path":"js/pdfjs_old/web/cmaps/KSC-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/KSC-H.bcmap","path":"js/pdfjs_old/web/cmaps/KSC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/KSC-Johab-H.bcmap","path":"js/pdfjs_old/web/cmaps/KSC-Johab-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/KSC-Johab-V.bcmap","path":"js/pdfjs_old/web/cmaps/KSC-Johab-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/KSC-V.bcmap","path":"js/pdfjs_old/web/cmaps/KSC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/KSCms-UHC-H.bcmap","path":"js/pdfjs_old/web/cmaps/KSCms-UHC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/KSCms-UHC-HW-H.bcmap","path":"js/pdfjs_old/web/cmaps/KSCms-UHC-HW-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/KSCms-UHC-HW-V.bcmap","path":"js/pdfjs_old/web/cmaps/KSCms-UHC-HW-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/KSCms-UHC-V.bcmap","path":"js/pdfjs_old/web/cmaps/KSCms-UHC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/KSCpc-EUC-H.bcmap","path":"js/pdfjs_old/web/cmaps/KSCpc-EUC-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/KSCpc-EUC-V.bcmap","path":"js/pdfjs_old/web/cmaps/KSCpc-EUC-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Katakana.bcmap","path":"js/pdfjs_old/web/cmaps/Katakana.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/LICENSE","path":"js/pdfjs_old/web/cmaps/LICENSE","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/NWP-H.bcmap","path":"js/pdfjs_old/web/cmaps/NWP-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/NWP-V.bcmap","path":"js/pdfjs_old/web/cmaps/NWP-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/RKSJ-H.bcmap","path":"js/pdfjs_old/web/cmaps/RKSJ-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/RKSJ-V.bcmap","path":"js/pdfjs_old/web/cmaps/RKSJ-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Roman.bcmap","path":"js/pdfjs_old/web/cmaps/Roman.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniCNS-UCS2-H.bcmap","path":"js/pdfjs_old/web/cmaps/UniCNS-UCS2-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniCNS-UCS2-V.bcmap","path":"js/pdfjs_old/web/cmaps/UniCNS-UCS2-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniCNS-UTF16-H.bcmap","path":"js/pdfjs_old/web/cmaps/UniCNS-UTF16-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniCNS-UTF16-V.bcmap","path":"js/pdfjs_old/web/cmaps/UniCNS-UTF16-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniCNS-UTF32-H.bcmap","path":"js/pdfjs_old/web/cmaps/UniCNS-UTF32-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniCNS-UTF32-V.bcmap","path":"js/pdfjs_old/web/cmaps/UniCNS-UTF32-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniCNS-UTF8-H.bcmap","path":"js/pdfjs_old/web/cmaps/UniCNS-UTF8-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniCNS-UTF8-V.bcmap","path":"js/pdfjs_old/web/cmaps/UniCNS-UTF8-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniGB-UCS2-H.bcmap","path":"js/pdfjs_old/web/cmaps/UniGB-UCS2-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniGB-UCS2-V.bcmap","path":"js/pdfjs_old/web/cmaps/UniGB-UCS2-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniGB-UTF16-H.bcmap","path":"js/pdfjs_old/web/cmaps/UniGB-UTF16-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniGB-UTF16-V.bcmap","path":"js/pdfjs_old/web/cmaps/UniGB-UTF16-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniGB-UTF32-H.bcmap","path":"js/pdfjs_old/web/cmaps/UniGB-UTF32-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniGB-UTF32-V.bcmap","path":"js/pdfjs_old/web/cmaps/UniGB-UTF32-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniGB-UTF8-H.bcmap","path":"js/pdfjs_old/web/cmaps/UniGB-UTF8-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniGB-UTF8-V.bcmap","path":"js/pdfjs_old/web/cmaps/UniGB-UTF8-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS-UCS2-H.bcmap","path":"js/pdfjs_old/web/cmaps/UniJIS-UCS2-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS-UCS2-HW-H.bcmap","path":"js/pdfjs_old/web/cmaps/UniJIS-UCS2-HW-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS-UCS2-HW-V.bcmap","path":"js/pdfjs_old/web/cmaps/UniJIS-UCS2-HW-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS-UCS2-V.bcmap","path":"js/pdfjs_old/web/cmaps/UniJIS-UCS2-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS-UTF16-H.bcmap","path":"js/pdfjs_old/web/cmaps/UniJIS-UTF16-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS-UTF16-V.bcmap","path":"js/pdfjs_old/web/cmaps/UniJIS-UTF16-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS-UTF32-H.bcmap","path":"js/pdfjs_old/web/cmaps/UniJIS-UTF32-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS-UTF32-V.bcmap","path":"js/pdfjs_old/web/cmaps/UniJIS-UTF32-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS-UTF8-H.bcmap","path":"js/pdfjs_old/web/cmaps/UniJIS-UTF8-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS-UTF8-V.bcmap","path":"js/pdfjs_old/web/cmaps/UniJIS-UTF8-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS2004-UTF16-H.bcmap","path":"js/pdfjs_old/web/cmaps/UniJIS2004-UTF16-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS2004-UTF16-V.bcmap","path":"js/pdfjs_old/web/cmaps/UniJIS2004-UTF16-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS2004-UTF32-H.bcmap","path":"js/pdfjs_old/web/cmaps/UniJIS2004-UTF32-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS2004-UTF32-V.bcmap","path":"js/pdfjs_old/web/cmaps/UniJIS2004-UTF32-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS2004-UTF8-H.bcmap","path":"js/pdfjs_old/web/cmaps/UniJIS2004-UTF8-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS2004-UTF8-V.bcmap","path":"js/pdfjs_old/web/cmaps/UniJIS2004-UTF8-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJISPro-UCS2-HW-V.bcmap","path":"js/pdfjs_old/web/cmaps/UniJISPro-UCS2-HW-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJISPro-UCS2-V.bcmap","path":"js/pdfjs_old/web/cmaps/UniJISPro-UCS2-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJISPro-UTF8-V.bcmap","path":"js/pdfjs_old/web/cmaps/UniJISPro-UTF8-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJISX0213-UTF32-H.bcmap","path":"js/pdfjs_old/web/cmaps/UniJISX0213-UTF32-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJISX0213-UTF32-V.bcmap","path":"js/pdfjs_old/web/cmaps/UniJISX0213-UTF32-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJISX02132004-UTF32-H.bcmap","path":"js/pdfjs_old/web/cmaps/UniJISX02132004-UTF32-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJISX02132004-UTF32-V.bcmap","path":"js/pdfjs_old/web/cmaps/UniJISX02132004-UTF32-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniKS-UCS2-H.bcmap","path":"js/pdfjs_old/web/cmaps/UniKS-UCS2-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniKS-UCS2-V.bcmap","path":"js/pdfjs_old/web/cmaps/UniKS-UCS2-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniKS-UTF16-H.bcmap","path":"js/pdfjs_old/web/cmaps/UniKS-UTF16-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniKS-UTF16-V.bcmap","path":"js/pdfjs_old/web/cmaps/UniKS-UTF16-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniKS-UTF32-H.bcmap","path":"js/pdfjs_old/web/cmaps/UniKS-UTF32-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniKS-UTF32-V.bcmap","path":"js/pdfjs_old/web/cmaps/UniKS-UTF32-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniKS-UTF8-H.bcmap","path":"js/pdfjs_old/web/cmaps/UniKS-UTF8-H.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniKS-UTF8-V.bcmap","path":"js/pdfjs_old/web/cmaps/UniKS-UTF8-V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/V.bcmap","path":"js/pdfjs_old/web/cmaps/V.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/WP-Symbol.bcmap","path":"js/pdfjs_old/web/cmaps/WP-Symbol.bcmap","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/annotation-check.svg","path":"js/pdfjs_old/web/images/annotation-check.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/annotation-comment.svg","path":"js/pdfjs_old/web/images/annotation-comment.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/annotation-help.svg","path":"js/pdfjs_old/web/images/annotation-help.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/annotation-insert.svg","path":"js/pdfjs_old/web/images/annotation-insert.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/annotation-key.svg","path":"js/pdfjs_old/web/images/annotation-key.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/annotation-newparagraph.svg","path":"js/pdfjs_old/web/images/annotation-newparagraph.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/annotation-noicon.svg","path":"js/pdfjs_old/web/images/annotation-noicon.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/annotation-note.svg","path":"js/pdfjs_old/web/images/annotation-note.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/annotation-paragraph.svg","path":"js/pdfjs_old/web/images/annotation-paragraph.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/findbarButton-next.svg","path":"js/pdfjs_old/web/images/findbarButton-next.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/findbarButton-previous.svg","path":"js/pdfjs_old/web/images/findbarButton-previous.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/grab.cur","path":"js/pdfjs_old/web/images/grab.cur","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/grabbing.cur","path":"js/pdfjs_old/web/images/grabbing.cur","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/loading-dark.svg","path":"js/pdfjs_old/web/images/loading-dark.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/loading-icon.gif","path":"js/pdfjs_old/web/images/loading-icon.gif","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/loading.svg","path":"js/pdfjs_old/web/images/loading.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/secondaryToolbarButton-documentProperties.svg","path":"js/pdfjs_old/web/images/secondaryToolbarButton-documentProperties.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/secondaryToolbarButton-firstPage.svg","path":"js/pdfjs_old/web/images/secondaryToolbarButton-firstPage.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/secondaryToolbarButton-handTool.svg","path":"js/pdfjs_old/web/images/secondaryToolbarButton-handTool.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/secondaryToolbarButton-lastPage.svg","path":"js/pdfjs_old/web/images/secondaryToolbarButton-lastPage.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/secondaryToolbarButton-rotateCcw.svg","path":"js/pdfjs_old/web/images/secondaryToolbarButton-rotateCcw.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/secondaryToolbarButton-rotateCw.svg","path":"js/pdfjs_old/web/images/secondaryToolbarButton-rotateCw.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/secondaryToolbarButton-scrollHorizontal.svg","path":"js/pdfjs_old/web/images/secondaryToolbarButton-scrollHorizontal.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/secondaryToolbarButton-scrollVertical.svg","path":"js/pdfjs_old/web/images/secondaryToolbarButton-scrollVertical.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/secondaryToolbarButton-scrollWrapped.svg","path":"js/pdfjs_old/web/images/secondaryToolbarButton-scrollWrapped.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/secondaryToolbarButton-selectTool.svg","path":"js/pdfjs_old/web/images/secondaryToolbarButton-selectTool.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/secondaryToolbarButton-spreadEven.svg","path":"js/pdfjs_old/web/images/secondaryToolbarButton-spreadEven.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/secondaryToolbarButton-spreadNone.svg","path":"js/pdfjs_old/web/images/secondaryToolbarButton-spreadNone.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/secondaryToolbarButton-spreadOdd.svg","path":"js/pdfjs_old/web/images/secondaryToolbarButton-spreadOdd.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/shadow.png","path":"js/pdfjs_old/web/images/shadow.png","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-bookmark.svg","path":"js/pdfjs_old/web/images/toolbarButton-bookmark.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-currentOutlineItem.svg","path":"js/pdfjs_old/web/images/toolbarButton-currentOutlineItem.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-menuArrow.svg","path":"js/pdfjs_old/web/images/toolbarButton-menuArrow.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-download.svg","path":"js/pdfjs_old/web/images/toolbarButton-download.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-openFile.svg","path":"js/pdfjs_old/web/images/toolbarButton-openFile.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-pageDown.svg","path":"js/pdfjs_old/web/images/toolbarButton-pageDown.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-pageUp.svg","path":"js/pdfjs_old/web/images/toolbarButton-pageUp.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-presentationMode.svg","path":"js/pdfjs_old/web/images/toolbarButton-presentationMode.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-print.svg","path":"js/pdfjs_old/web/images/toolbarButton-print.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-search.svg","path":"js/pdfjs_old/web/images/toolbarButton-search.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-secondaryToolbarToggle.svg","path":"js/pdfjs_old/web/images/toolbarButton-secondaryToolbarToggle.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-sidebarToggle.svg","path":"js/pdfjs_old/web/images/toolbarButton-sidebarToggle.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-viewAttachments.svg","path":"js/pdfjs_old/web/images/toolbarButton-viewAttachments.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-viewLayers.svg","path":"js/pdfjs_old/web/images/toolbarButton-viewLayers.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-viewOutline.svg","path":"js/pdfjs_old/web/images/toolbarButton-viewOutline.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-viewThumbnail.svg","path":"js/pdfjs_old/web/images/toolbarButton-viewThumbnail.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-zoomIn.svg","path":"js/pdfjs_old/web/images/toolbarButton-zoomIn.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-zoomOut.svg","path":"js/pdfjs_old/web/images/toolbarButton-zoomOut.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/treeitem-collapsed.svg","path":"js/pdfjs_old/web/images/treeitem-collapsed.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/treeitem-expanded.svg","path":"js/pdfjs_old/web/images/treeitem-expanded.svg","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/locale.properties","path":"js/pdfjs_old/web/locale/locale.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/1.cache.js","path":"js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/1.cache.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/10.cache.js","path":"js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/10.cache.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/11.cache.js","path":"js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/11.cache.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/12.cache.js","path":"js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/12.cache.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/13.cache.js","path":"js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/13.cache.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/14.cache.js","path":"js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/14.cache.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/2.cache.js","path":"js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/2.cache.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/3.cache.js","path":"js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/3.cache.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/4.cache.js","path":"js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/4.cache.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/5.cache.js","path":"js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/5.cache.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/6.cache.js","path":"js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/6.cache.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/7.cache.js","path":"js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/7.cache.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/8.cache.js","path":"js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/8.cache.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/9.cache.js","path":"js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/9.cache.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/base/jlm_cmmi10.js","path":"js/5.0/web3d/fonts/base/jlm_cmmi10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/base/jlm_cmmib10.js","path":"js/5.0/web3d/fonts/base/jlm_cmmib10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/cyrillic/jlm_wnbx10.js","path":"js/5.0/web3d/fonts/cyrillic/jlm_wnbx10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/cyrillic/jlm_wnbxti10.js","path":"js/5.0/web3d/fonts/cyrillic/jlm_wnbxti10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/cyrillic/jlm_wnr10.js","path":"js/5.0/web3d/fonts/cyrillic/jlm_wnr10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/cyrillic/jlm_wnss10.js","path":"js/5.0/web3d/fonts/cyrillic/jlm_wnss10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/cyrillic/jlm_wnssbx10.js","path":"js/5.0/web3d/fonts/cyrillic/jlm_wnssbx10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/cyrillic/jlm_wnssi10.js","path":"js/5.0/web3d/fonts/cyrillic/jlm_wnssi10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/cyrillic/jlm_wnti10.js","path":"js/5.0/web3d/fonts/cyrillic/jlm_wnti10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/cyrillic/jlm_wntt10.js","path":"js/5.0/web3d/fonts/cyrillic/jlm_wntt10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/euler/jlm_eufb10.js","path":"js/5.0/web3d/fonts/euler/jlm_eufb10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/euler/jlm_eufm10.js","path":"js/5.0/web3d/fonts/euler/jlm_eufm10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/jlm_cmr10.js","path":"js/5.0/web3d/fonts/latin/jlm_cmr10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/jlm_jlmbi10.js","path":"js/5.0/web3d/fonts/latin/jlm_jlmbi10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/jlm_jlmbx10.js","path":"js/5.0/web3d/fonts/latin/jlm_jlmbx10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/jlm_jlmi10.js","path":"js/5.0/web3d/fonts/latin/jlm_jlmi10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/jlm_jlmr10.js","path":"js/5.0/web3d/fonts/latin/jlm_jlmr10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/jlm_jlmsb10.js","path":"js/5.0/web3d/fonts/latin/jlm_jlmsb10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/jlm_jlmsbi10.js","path":"js/5.0/web3d/fonts/latin/jlm_jlmsbi10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/jlm_jlmsi10.js","path":"js/5.0/web3d/fonts/latin/jlm_jlmsi10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/jlm_jlmss10.js","path":"js/5.0/web3d/fonts/latin/jlm_jlmss10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/jlm_jlmtt10.js","path":"js/5.0/web3d/fonts/latin/jlm_jlmtt10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/greek/jlm_fcmbipg.js","path":"js/5.0/web3d/fonts/greek/jlm_fcmbipg.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/greek/jlm_fcmbpg.js","path":"js/5.0/web3d/fonts/greek/jlm_fcmbpg.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/greek/jlm_fcmripg.js","path":"js/5.0/web3d/fonts/greek/jlm_fcmripg.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/greek/jlm_fcmrpg.js","path":"js/5.0/web3d/fonts/greek/jlm_fcmrpg.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/greek/jlm_fcsbpg.js","path":"js/5.0/web3d/fonts/greek/jlm_fcsbpg.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/greek/jlm_fcsropg.js","path":"js/5.0/web3d/fonts/greek/jlm_fcsropg.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/greek/jlm_fcsrpg.js","path":"js/5.0/web3d/fonts/greek/jlm_fcsrpg.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/greek/jlm_fctrpg.js","path":"js/5.0/web3d/fonts/greek/jlm_fctrpg.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/licences/Knuth_License.txt","path":"js/5.0/web3d/fonts/licences/Knuth_License.txt","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/licences/License_for_dsrom.txt","path":"js/5.0/web3d/fonts/licences/License_for_dsrom.txt","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/licences/OFL.txt","path":"js/5.0/web3d/fonts/licences/OFL.txt","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/maths/jlm_cmbsy10.js","path":"js/5.0/web3d/fonts/maths/jlm_cmbsy10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/maths/jlm_msam10.js","path":"js/5.0/web3d/fonts/maths/jlm_msam10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/maths/jlm_msbm10.js","path":"js/5.0/web3d/fonts/maths/jlm_msbm10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/maths/jlm_rsfs10.js","path":"js/5.0/web3d/fonts/maths/jlm_rsfs10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/maths/jlm_special.js","path":"js/5.0/web3d/fonts/maths/jlm_special.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/maths/jlm_stmary10.js","path":"js/5.0/web3d/fonts/maths/jlm_stmary10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/zipjs/codecs.js","path":"js/5.0/web3d/js/zipjs/codecs.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/zipjs/pako1.0.6_min.js","path":"js/5.0/web3d/js/zipjs/pako1.0.6_min.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/js/zipjs/z-worker.js","path":"js/5.0/web3d/js/zipjs/z-worker.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ach/viewer.properties","path":"js/pdfjs/web/locale/ach/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/af/viewer.properties","path":"js/pdfjs/web/locale/af/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/an/viewer.properties","path":"js/pdfjs/web/locale/an/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ar/viewer.properties","path":"js/pdfjs/web/locale/ar/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ast/viewer.properties","path":"js/pdfjs/web/locale/ast/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/az/viewer.properties","path":"js/pdfjs/web/locale/az/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/be/viewer.properties","path":"js/pdfjs/web/locale/be/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/bg/viewer.properties","path":"js/pdfjs/web/locale/bg/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/bn/viewer.properties","path":"js/pdfjs/web/locale/bn/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/bo/viewer.properties","path":"js/pdfjs/web/locale/bo/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/br/viewer.properties","path":"js/pdfjs/web/locale/br/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/brx/viewer.properties","path":"js/pdfjs/web/locale/brx/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/bs/viewer.properties","path":"js/pdfjs/web/locale/bs/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ca/viewer.properties","path":"js/pdfjs/web/locale/ca/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/cak/viewer.properties","path":"js/pdfjs/web/locale/cak/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ckb/viewer.properties","path":"js/pdfjs/web/locale/ckb/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/cs/viewer.properties","path":"js/pdfjs/web/locale/cs/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/cy/viewer.properties","path":"js/pdfjs/web/locale/cy/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/da/viewer.properties","path":"js/pdfjs/web/locale/da/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/de/viewer.properties","path":"js/pdfjs/web/locale/de/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/dsb/viewer.properties","path":"js/pdfjs/web/locale/dsb/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/el/viewer.properties","path":"js/pdfjs/web/locale/el/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/en-CA/viewer.properties","path":"js/pdfjs/web/locale/en-CA/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/en-GB/viewer.properties","path":"js/pdfjs/web/locale/en-GB/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/en-US/viewer.properties","path":"js/pdfjs/web/locale/en-US/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/eo/viewer.properties","path":"js/pdfjs/web/locale/eo/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/es-AR/viewer.properties","path":"js/pdfjs/web/locale/es-AR/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/es-CL/viewer.properties","path":"js/pdfjs/web/locale/es-CL/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/es-ES/viewer.properties","path":"js/pdfjs/web/locale/es-ES/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/es-MX/viewer.properties","path":"js/pdfjs/web/locale/es-MX/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/et/viewer.properties","path":"js/pdfjs/web/locale/et/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/eu/viewer.properties","path":"js/pdfjs/web/locale/eu/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/fa/viewer.properties","path":"js/pdfjs/web/locale/fa/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ff/viewer.properties","path":"js/pdfjs/web/locale/ff/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/fi/viewer.properties","path":"js/pdfjs/web/locale/fi/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/fr/viewer.properties","path":"js/pdfjs/web/locale/fr/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/fy-NL/viewer.properties","path":"js/pdfjs/web/locale/fy-NL/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ga-IE/viewer.properties","path":"js/pdfjs/web/locale/ga-IE/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/gd/viewer.properties","path":"js/pdfjs/web/locale/gd/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/gl/viewer.properties","path":"js/pdfjs/web/locale/gl/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/gn/viewer.properties","path":"js/pdfjs/web/locale/gn/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/gu-IN/viewer.properties","path":"js/pdfjs/web/locale/gu-IN/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/he/viewer.properties","path":"js/pdfjs/web/locale/he/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/hi-IN/viewer.properties","path":"js/pdfjs/web/locale/hi-IN/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/hr/viewer.properties","path":"js/pdfjs/web/locale/hr/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/hsb/viewer.properties","path":"js/pdfjs/web/locale/hsb/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/hu/viewer.properties","path":"js/pdfjs/web/locale/hu/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/hy-AM/viewer.properties","path":"js/pdfjs/web/locale/hy-AM/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/hye/viewer.properties","path":"js/pdfjs/web/locale/hye/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ia/viewer.properties","path":"js/pdfjs/web/locale/ia/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/id/viewer.properties","path":"js/pdfjs/web/locale/id/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/is/viewer.properties","path":"js/pdfjs/web/locale/is/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/it/viewer.properties","path":"js/pdfjs/web/locale/it/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ja/viewer.properties","path":"js/pdfjs/web/locale/ja/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ka/viewer.properties","path":"js/pdfjs/web/locale/ka/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/kab/viewer.properties","path":"js/pdfjs/web/locale/kab/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/kk/viewer.properties","path":"js/pdfjs/web/locale/kk/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/km/viewer.properties","path":"js/pdfjs/web/locale/km/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/kn/viewer.properties","path":"js/pdfjs/web/locale/kn/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ko/viewer.properties","path":"js/pdfjs/web/locale/ko/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/lo/viewer.properties","path":"js/pdfjs/web/locale/lo/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/lij/viewer.properties","path":"js/pdfjs/web/locale/lij/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/lt/viewer.properties","path":"js/pdfjs/web/locale/lt/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ltg/viewer.properties","path":"js/pdfjs/web/locale/ltg/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/lv/viewer.properties","path":"js/pdfjs/web/locale/lv/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/meh/viewer.properties","path":"js/pdfjs/web/locale/meh/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/mk/viewer.properties","path":"js/pdfjs/web/locale/mk/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ms/viewer.properties","path":"js/pdfjs/web/locale/ms/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/mr/viewer.properties","path":"js/pdfjs/web/locale/mr/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/my/viewer.properties","path":"js/pdfjs/web/locale/my/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/nb-NO/viewer.properties","path":"js/pdfjs/web/locale/nb-NO/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/nl/viewer.properties","path":"js/pdfjs/web/locale/nl/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ne-NP/viewer.properties","path":"js/pdfjs/web/locale/ne-NP/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/nn-NO/viewer.properties","path":"js/pdfjs/web/locale/nn-NO/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/oc/viewer.properties","path":"js/pdfjs/web/locale/oc/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/pa-IN/viewer.properties","path":"js/pdfjs/web/locale/pa-IN/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/pl/viewer.properties","path":"js/pdfjs/web/locale/pl/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/pt-BR/viewer.properties","path":"js/pdfjs/web/locale/pt-BR/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/pt-PT/viewer.properties","path":"js/pdfjs/web/locale/pt-PT/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/rm/viewer.properties","path":"js/pdfjs/web/locale/rm/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ro/viewer.properties","path":"js/pdfjs/web/locale/ro/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ru/viewer.properties","path":"js/pdfjs/web/locale/ru/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/scn/viewer.properties","path":"js/pdfjs/web/locale/scn/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/sco/viewer.properties","path":"js/pdfjs/web/locale/sco/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/si/viewer.properties","path":"js/pdfjs/web/locale/si/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/sk/viewer.properties","path":"js/pdfjs/web/locale/sk/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/sl/viewer.properties","path":"js/pdfjs/web/locale/sl/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/son/viewer.properties","path":"js/pdfjs/web/locale/son/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/sq/viewer.properties","path":"js/pdfjs/web/locale/sq/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/sr/viewer.properties","path":"js/pdfjs/web/locale/sr/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/sv-SE/viewer.properties","path":"js/pdfjs/web/locale/sv-SE/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/szl/viewer.properties","path":"js/pdfjs/web/locale/szl/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ta/viewer.properties","path":"js/pdfjs/web/locale/ta/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/te/viewer.properties","path":"js/pdfjs/web/locale/te/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/tg/viewer.properties","path":"js/pdfjs/web/locale/tg/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/th/viewer.properties","path":"js/pdfjs/web/locale/th/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/tl/viewer.properties","path":"js/pdfjs/web/locale/tl/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/tr/viewer.properties","path":"js/pdfjs/web/locale/tr/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/trs/viewer.properties","path":"js/pdfjs/web/locale/trs/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/uk/viewer.properties","path":"js/pdfjs/web/locale/uk/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ur/viewer.properties","path":"js/pdfjs/web/locale/ur/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/uz/viewer.properties","path":"js/pdfjs/web/locale/uz/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/vi/viewer.properties","path":"js/pdfjs/web/locale/vi/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/wo/viewer.properties","path":"js/pdfjs/web/locale/wo/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/xh/viewer.properties","path":"js/pdfjs/web/locale/xh/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/zh-CN/viewer.properties","path":"js/pdfjs/web/locale/zh-CN/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/zh-TW/viewer.properties","path":"js/pdfjs/web/locale/zh-TW/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ach/viewer.properties","path":"js/pdfjs_old/web/locale/ach/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/af/viewer.properties","path":"js/pdfjs_old/web/locale/af/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/an/viewer.properties","path":"js/pdfjs_old/web/locale/an/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ar/viewer.properties","path":"js/pdfjs_old/web/locale/ar/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ast/viewer.properties","path":"js/pdfjs_old/web/locale/ast/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/az/viewer.properties","path":"js/pdfjs_old/web/locale/az/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/be/viewer.properties","path":"js/pdfjs_old/web/locale/be/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/bg/viewer.properties","path":"js/pdfjs_old/web/locale/bg/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/bn/viewer.properties","path":"js/pdfjs_old/web/locale/bn/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/bo/viewer.properties","path":"js/pdfjs_old/web/locale/bo/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/br/viewer.properties","path":"js/pdfjs_old/web/locale/br/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/brx/viewer.properties","path":"js/pdfjs_old/web/locale/brx/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/bs/viewer.properties","path":"js/pdfjs_old/web/locale/bs/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ca/viewer.properties","path":"js/pdfjs_old/web/locale/ca/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/cak/viewer.properties","path":"js/pdfjs_old/web/locale/cak/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ckb/viewer.properties","path":"js/pdfjs_old/web/locale/ckb/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/cy/viewer.properties","path":"js/pdfjs_old/web/locale/cy/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/cs/viewer.properties","path":"js/pdfjs_old/web/locale/cs/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/da/viewer.properties","path":"js/pdfjs_old/web/locale/da/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/de/viewer.properties","path":"js/pdfjs_old/web/locale/de/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/dsb/viewer.properties","path":"js/pdfjs_old/web/locale/dsb/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/el/viewer.properties","path":"js/pdfjs_old/web/locale/el/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/en-CA/viewer.properties","path":"js/pdfjs_old/web/locale/en-CA/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/en-GB/viewer.properties","path":"js/pdfjs_old/web/locale/en-GB/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/en-US/viewer.properties","path":"js/pdfjs_old/web/locale/en-US/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/eo/viewer.properties","path":"js/pdfjs_old/web/locale/eo/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/es-CL/viewer.properties","path":"js/pdfjs_old/web/locale/es-CL/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/es-AR/viewer.properties","path":"js/pdfjs_old/web/locale/es-AR/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/es-ES/viewer.properties","path":"js/pdfjs_old/web/locale/es-ES/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/es-MX/viewer.properties","path":"js/pdfjs_old/web/locale/es-MX/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/eu/viewer.properties","path":"js/pdfjs_old/web/locale/eu/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/et/viewer.properties","path":"js/pdfjs_old/web/locale/et/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/fa/viewer.properties","path":"js/pdfjs_old/web/locale/fa/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ff/viewer.properties","path":"js/pdfjs_old/web/locale/ff/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/fi/viewer.properties","path":"js/pdfjs_old/web/locale/fi/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/fr/viewer.properties","path":"js/pdfjs_old/web/locale/fr/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/fy-NL/viewer.properties","path":"js/pdfjs_old/web/locale/fy-NL/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ga-IE/viewer.properties","path":"js/pdfjs_old/web/locale/ga-IE/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/gl/viewer.properties","path":"js/pdfjs_old/web/locale/gl/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/gd/viewer.properties","path":"js/pdfjs_old/web/locale/gd/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/gn/viewer.properties","path":"js/pdfjs_old/web/locale/gn/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/gu-IN/viewer.properties","path":"js/pdfjs_old/web/locale/gu-IN/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/he/viewer.properties","path":"js/pdfjs_old/web/locale/he/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/hi-IN/viewer.properties","path":"js/pdfjs_old/web/locale/hi-IN/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/hr/viewer.properties","path":"js/pdfjs_old/web/locale/hr/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/hsb/viewer.properties","path":"js/pdfjs_old/web/locale/hsb/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/hu/viewer.properties","path":"js/pdfjs_old/web/locale/hu/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/hy-AM/viewer.properties","path":"js/pdfjs_old/web/locale/hy-AM/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/hye/viewer.properties","path":"js/pdfjs_old/web/locale/hye/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ia/viewer.properties","path":"js/pdfjs_old/web/locale/ia/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/id/viewer.properties","path":"js/pdfjs_old/web/locale/id/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/is/viewer.properties","path":"js/pdfjs_old/web/locale/is/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/it/viewer.properties","path":"js/pdfjs_old/web/locale/it/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ja/viewer.properties","path":"js/pdfjs_old/web/locale/ja/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ka/viewer.properties","path":"js/pdfjs_old/web/locale/ka/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/kab/viewer.properties","path":"js/pdfjs_old/web/locale/kab/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/kk/viewer.properties","path":"js/pdfjs_old/web/locale/kk/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/km/viewer.properties","path":"js/pdfjs_old/web/locale/km/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/kn/viewer.properties","path":"js/pdfjs_old/web/locale/kn/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ko/viewer.properties","path":"js/pdfjs_old/web/locale/ko/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/lij/viewer.properties","path":"js/pdfjs_old/web/locale/lij/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/lo/viewer.properties","path":"js/pdfjs_old/web/locale/lo/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/lt/viewer.properties","path":"js/pdfjs_old/web/locale/lt/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ltg/viewer.properties","path":"js/pdfjs_old/web/locale/ltg/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/lv/viewer.properties","path":"js/pdfjs_old/web/locale/lv/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/meh/viewer.properties","path":"js/pdfjs_old/web/locale/meh/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/mk/viewer.properties","path":"js/pdfjs_old/web/locale/mk/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/mr/viewer.properties","path":"js/pdfjs_old/web/locale/mr/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ms/viewer.properties","path":"js/pdfjs_old/web/locale/ms/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/my/viewer.properties","path":"js/pdfjs_old/web/locale/my/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/nb-NO/viewer.properties","path":"js/pdfjs_old/web/locale/nb-NO/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ne-NP/viewer.properties","path":"js/pdfjs_old/web/locale/ne-NP/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/nl/viewer.properties","path":"js/pdfjs_old/web/locale/nl/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/nn-NO/viewer.properties","path":"js/pdfjs_old/web/locale/nn-NO/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/oc/viewer.properties","path":"js/pdfjs_old/web/locale/oc/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/pa-IN/viewer.properties","path":"js/pdfjs_old/web/locale/pa-IN/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/pl/viewer.properties","path":"js/pdfjs_old/web/locale/pl/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/pt-BR/viewer.properties","path":"js/pdfjs_old/web/locale/pt-BR/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/pt-PT/viewer.properties","path":"js/pdfjs_old/web/locale/pt-PT/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/rm/viewer.properties","path":"js/pdfjs_old/web/locale/rm/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ro/viewer.properties","path":"js/pdfjs_old/web/locale/ro/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ru/viewer.properties","path":"js/pdfjs_old/web/locale/ru/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/scn/viewer.properties","path":"js/pdfjs_old/web/locale/scn/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/sco/viewer.properties","path":"js/pdfjs_old/web/locale/sco/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/si/viewer.properties","path":"js/pdfjs_old/web/locale/si/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/sk/viewer.properties","path":"js/pdfjs_old/web/locale/sk/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/sl/viewer.properties","path":"js/pdfjs_old/web/locale/sl/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/son/viewer.properties","path":"js/pdfjs_old/web/locale/son/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/sr/viewer.properties","path":"js/pdfjs_old/web/locale/sr/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/sq/viewer.properties","path":"js/pdfjs_old/web/locale/sq/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/sv-SE/viewer.properties","path":"js/pdfjs_old/web/locale/sv-SE/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/szl/viewer.properties","path":"js/pdfjs_old/web/locale/szl/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ta/viewer.properties","path":"js/pdfjs_old/web/locale/ta/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/te/viewer.properties","path":"js/pdfjs_old/web/locale/te/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/tg/viewer.properties","path":"js/pdfjs_old/web/locale/tg/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/th/viewer.properties","path":"js/pdfjs_old/web/locale/th/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/tl/viewer.properties","path":"js/pdfjs_old/web/locale/tl/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/tr/viewer.properties","path":"js/pdfjs_old/web/locale/tr/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/trs/viewer.properties","path":"js/pdfjs_old/web/locale/trs/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/uk/viewer.properties","path":"js/pdfjs_old/web/locale/uk/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ur/viewer.properties","path":"js/pdfjs_old/web/locale/ur/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/uz/viewer.properties","path":"js/pdfjs_old/web/locale/uz/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/vi/viewer.properties","path":"js/pdfjs_old/web/locale/vi/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/wo/viewer.properties","path":"js/pdfjs_old/web/locale/wo/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/xh/viewer.properties","path":"js/pdfjs_old/web/locale/xh/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/zh-CN/viewer.properties","path":"js/pdfjs_old/web/locale/zh-CN/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/zh-TW/viewer.properties","path":"js/pdfjs_old/web/locale/zh-TW/viewer.properties","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/optional/jlm_cmssbx10.js","path":"js/5.0/web3d/fonts/latin/optional/jlm_cmssbx10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/optional/jlm_cmbx10.js","path":"js/5.0/web3d/fonts/latin/optional/jlm_cmbx10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/optional/jlm_cmssi10.js","path":"js/5.0/web3d/fonts/latin/optional/jlm_cmssi10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/optional/jlm_cmbxti10.js","path":"js/5.0/web3d/fonts/latin/optional/jlm_cmbxti10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/optional/jlm_cmti10.js","path":"js/5.0/web3d/fonts/latin/optional/jlm_cmti10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/optional/jlm_cmtt10.js","path":"js/5.0/web3d/fonts/latin/optional/jlm_cmtt10.js","modified":1,"renderable":1},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/maths/optional/jlm_dsrom10.js","path":"js/5.0/web3d/fonts/maths/optional/jlm_dsrom10.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"f5776ace0c267af3c5acde0ed1be1754175ad6ff","modified":1629354561693},{"_id":"source/404/index.md","hash":"06571ce4e8c46dc5e1840c263ede31b161e0ba48","modified":1628935690535},{"_id":"source/_data/friends.json","hash":"519916312399331fdcee1d72ee4cef6b284908fb","modified":1628935690535},{"_id":"source/about/index.md","hash":"c1ce75fe83ce1d6febfc458749550fba05ac5302","modified":1628935690543},{"_id":"source/categories/index.md","hash":"5f895e23001662266e0acf292b24397e1ab7b062","modified":1628935690544},{"_id":"source/contact/index.md","hash":"5338b9905b34f130024df1f88eda24376c2171d8","modified":1628935690544},{"_id":"source/friends/index.md","hash":"3adac5d2ccf78e8f846c10ce4b1398716eb92eae","modified":1628935690545},{"_id":"source/tags/index.md","hash":"b83bfcf1ca00f582682619d8e647667bfc3c6e4d","modified":1628935690545},{"_id":"source/_posts/config/git-submodule.md","hash":"6f56833ecadcdbbb57da76149270ec50921359fc","modified":1629252764811},{"_id":"source/_posts/config/hexo-emoji.md","hash":"ee3d64a2ab32ce40e4ae1206b774b39048728ea1","modified":1629793365814},{"_id":"source/_posts/config/pdf-config.md","hash":"3f2fc9952642aec5b7bc79ab9861c49ce6a1e1c2","modified":1630032953672},{"_id":"source/_posts/config/hexo-math-config.md","hash":"9385cc40c0183e448647f8d1e1cf2e090f29aabe","modified":1628935690538},{"_id":"source/_posts/docker/docker-intro.md","hash":"c2d5f980278840ad6a70fddd7e9efdcfd4ce1f26","modified":1628935690536},{"_id":"source/_posts/docker/docker-ssh.md","hash":"eaf4644a46bc1432d3549dcf7d3d360bc8ca8873","modified":1629360936413},{"_id":"source/_posts/deep_learning/fine-tuning.md","hash":"85db08bb3661978d7ffe97901f5771e7f2faa5dd","modified":1629360818101},{"_id":"source/_posts/deep_learning/gradient-clip.md","hash":"53f0b8854ee28f133c58176cf5ae90590846e197","modified":1629359935159},{"_id":"source/_posts/deep_learning/gradient-exp.md","hash":"add48392e8a311765bb37961083b153e84f14476","modified":1629360021333},{"_id":"source/_posts/deep_learning/swin.md","hash":"49e7e44b0755f2e038a34179944804f1a4c78977","modified":1630032631929},{"_id":"source/_posts/deep_learning/yolov1.md","hash":"fd88913954d8a3db4d7c242b981d65b07fdb0f68","modified":1630147705738},{"_id":"source/_posts/deep_learning/yolov2.md","hash":"a8f4ad9f7a77581bf643e6a33c4bfdf3d724d530","modified":1630147661634},{"_id":"source/_posts/dvc/dvc-config.md","hash":"58510cbcb31c5f1c44cbe66ab0a745f12d90d71e","modified":1628935690537},{"_id":"source/_posts/english/self-aware.md","hash":"7eb609c4267f45557c5512f4cc5030333fcd1994","modified":1629379596133},{"_id":"source/_posts/img_process/laplace.md","hash":"d98053c11d4cdfba1dce2fdba49d953fb0c71f29","modified":1629448335457},{"_id":"source/_posts/img_process/sobel.md","hash":"a3798e9dc80c1102fae0b6a9ed4b824cfa950022","modified":1629375611175},{"_id":"source/_posts/leetcode/leetcode-offer03.md","hash":"c579cd0c2c17ba79e16fe523d15527aa18c8329f","modified":1628935127407},{"_id":"source/_posts/leetcode/leetcode-offer04.md","hash":"49124cf10c863e2533361f5c2edf76d6cd2dbc51","modified":1628935690539},{"_id":"source/_posts/leetcode/leetcode-offer05.md","hash":"bfa4d4f363bac19939f94774ba708d9339e9b117","modified":1628935690539},{"_id":"source/_posts/leetcode/leetcode-offer06.md","hash":"e805c6ac4b19202ab3ef1c68d9cb632fb19a97a0","modified":1628935690540},{"_id":"source/_posts/leetcode/leetcode-offer07.md","hash":"8f28486ad019011cd3486c1044caf64d6aabcb37","modified":1629360276471},{"_id":"source/_posts/leetcode/leetcode-offer09.md","hash":"8ec70b605674b8bae3ec4e666e146bea01fe1479","modified":1628935690540},{"_id":"source/_posts/leetcode/leetcode-offer10-1.md","hash":"d00e7c41cc9790400a0d0f3b2a5afda3c04051f0","modified":1628935690540},{"_id":"source/_posts/leetcode/leetcode-offer10-2.md","hash":"68046e0a4388af72a2a3d6e0e78ffefd198375ae","modified":1628935690541},{"_id":"source/_posts/leetcode/leetcode-offer11.md","hash":"e648448f83ea138d610fd5135bdbf5c39b8ef7b9","modified":1629360613845},{"_id":"source/_posts/leetcode/leetcode-offer12.md","hash":"51c380259a8468c424dafc564a4d091af94bdf90","modified":1629360575487},{"_id":"source/_posts/leetcode/leetcode-offer13.md","hash":"f103122985c2fbc66280d4a50e40213ed80c0270","modified":1628936903532},{"_id":"source/_posts/leetcode/leetcode-offer14-1.md","hash":"37482f7732bf506d2b16e5c4911c65160ff0fc6c","modified":1629252526305},{"_id":"source/_posts/leetcode/leetcode-offer14-2.md","hash":"4d7c5e257fac7cdb440128510a844263ee41a835","modified":1629252532469},{"_id":"source/_posts/leetcode/leetcode-offer15.md","hash":"3862aaa6c66d971e7ca0186c23efa5af9e813cb9","modified":1629376672725},{"_id":"source/_posts/leetcode/leetcode-offer16.md","hash":"db4d4724157c76f169360deba235d37042579cb1","modified":1629517353770},{"_id":"source/_posts/leetcode/leetcode-offer17.md","hash":"e6b95f30c0c133ffcd6bc396614e4fc7adb5947b","modified":1629454251179},{"_id":"source/_posts/leetcode/leetcode-offer18.md","hash":"4e904aa7a840fa9768fa23c0dbaac2912f06f832","modified":1629526660782},{"_id":"source/_posts/leetcode/leetcode-offer19.md","hash":"11c0d4287f10a5e309a6f84d2dcdc5db637f45db","modified":1629532582691},{"_id":"source/_posts/leetcode/leetcode-offer20.md","hash":"f31714b1e56d031a9bcdce455e53e34f1b69f357","modified":1629360246793},{"_id":"source/_posts/leetcode/leetcode-offer21.md","hash":"35ee371884d9774073cc2b71a9e719de88e0a7e8","modified":1629282064666},{"_id":"source/_posts/leetcode/leetcode-offer22.md","hash":"b0345606c4da8f781a27eb9c335b15e3b36b85e7","modified":1629440808747},{"_id":"source/_posts/leetcode/leetcode-offer24.md","hash":"cedf36e2e86d00a9d35a372453095109700ccc6d","modified":1629519578422},{"_id":"source/_posts/leetcode/leetcode-offer25.md","hash":"87c30c5de2bd0e0b856b399c6a5e138e83e0f295","modified":1629118216121},{"_id":"source/_posts/leetcode/leetcode-offer26.md","hash":"9300553299b273d6cbc255d8dac0aee33ed32084","modified":1629279499861},{"_id":"source/_posts/leetcode/leetcode-offer27.md","hash":"61d3979ee34b0e6cdbc9f2f45b04935c7c4122a8","modified":1629183337145},{"_id":"source/_posts/leetcode/leetcode-offer28.md","hash":"5948a3c565a5b58032076eef08b2a829d32a9e14","modified":1629281518511},{"_id":"source/_posts/leetcode/leetcode-offer29.md","hash":"fdb6862454e6f94cd8007f0ec849c2daf0671837","modified":1629427296284},{"_id":"source/_posts/leetcode/leetcode-offer40.md","hash":"69896934158cc213f650adaf323df60559a70244","modified":1629859870126},{"_id":"source/_posts/math/Eckark-young.md","hash":"ebe2bacfd7eb37772eb75d9af7fa07c65037da52","modified":1628935690542},{"_id":"source/_posts/math/Mahalanobis-distance.md","hash":"f9ffe062b853e5047e158b4c9707362f2017c58e","modified":1629361483505},{"_id":"source/_posts/math/covariance-matrix.md","hash":"8992664833a05aae00b0689480e93239f7cc1608","modified":1629362250444},{"_id":"source/_posts/math/low-rank-app.md","hash":"397d638d3d612a83ee689e1f6cf57eaafac49fd0","modified":1629362030992},{"_id":"source/_posts/paper/paper-site.md","hash":"a3728e53daee32c0a42c66c7888cb18ad8b291c4","modified":1629690486250},{"_id":"themes/fluid2/source/css/_pages/_category/category.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1628924916114},{"_id":"themes/fluid2/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1628924916115},{"_id":"themes/fluid2/.editorconfig","hash":"b595159772f3ee1ef5e6780ce307270e741cb309","modified":1628924916086},{"_id":"themes/fluid2/.gitattributes","hash":"3e00e1fb043438cd820d94ee3dc9ffb6718996f3","modified":1628924916087},{"_id":"themes/fluid2/.eslintrc","hash":"3df89453e1f63051fafc90f16a8d83951050e316","modified":1628924916087},{"_id":"themes/fluid2/.gitignore","hash":"5d7e78749ba0a1efcf61253d4a9e50fc6ce0b4bc","modified":1628924916089},{"_id":"themes/fluid2/LICENSE","hash":"694fb3659a4331dd752bd92e4248623bff8617cd","modified":1628924916090},{"_id":"themes/fluid2/README.md","hash":"ed4749a88de9e54fce5bd00e8ac7b3d35969c615","modified":1628925227449},{"_id":"themes/fluid2/README_en.md","hash":"2b47ed68ec888dcc34fa6aad9ce95aeba6744fec","modified":1628924916090},{"_id":"themes/fluid2/gulpfile.js","hash":"93e2bd4a4f1902e7a4c99ae3ebfa6420fd906c1b","modified":1628924916091},{"_id":"themes/fluid2/_config.yml","hash":"0960c399086a0cbb889dd8666b6c2789aa1a914b","modified":1628925227449},{"_id":"themes/fluid2/package.json","hash":"8b6640fe2d7e71900bf708b977074f621b2e7a8a","modified":1628924916102},{"_id":"themes/fluid2/languages/de.yml","hash":"288f649c2c2314eb610693b18853ee74f0541e87","modified":1628924916091},{"_id":"themes/fluid2/languages/en.yml","hash":"31f2867619a768606166778d4ee51f3d00ac33a0","modified":1628924916091},{"_id":"themes/fluid2/languages/eo.yml","hash":"2c1c481d9af116e79fe55a0aa0bdbb143a97f559","modified":1628924916091},{"_id":"themes/fluid2/languages/ja.yml","hash":"dc43be11a300893ebef47283c22f2f946ca21260","modified":1628924916092},{"_id":"themes/fluid2/languages/zh-TW.yml","hash":"de9b7e729d72eee9327671c3d5df0a607c4c3257","modified":1628924916092},{"_id":"themes/fluid2/languages/zh-CN.yml","hash":"3b92f4428d66c31610f6cde13b82ee723aff00d2","modified":1628924916092},{"_id":"themes/fluid2/layout/404.ejs","hash":"79a598e43c40d48b23076361720f1e77df466e41","modified":1628924916092},{"_id":"themes/fluid2/layout/about.ejs","hash":"5b6de01c82b14834ab1e67f0a803612f5855f064","modified":1628924916099},{"_id":"themes/fluid2/layout/archive.ejs","hash":"7a1e19dec37804927f0d331d7e6c80ed03becd61","modified":1628924916099},{"_id":"themes/fluid2/layout/categories.ejs","hash":"4255c27c8f31fbcc12ec3a973fe73b7a3a35782f","modified":1628924916100},{"_id":"themes/fluid2/layout/category.ejs","hash":"dd2bd15cbd811d6ea973b6e6a17d99e36151e274","modified":1628924916100},{"_id":"themes/fluid2/layout/index.ejs","hash":"32a6c84b4690ecf8505ca786bc80aa90530b1534","modified":1628924916100},{"_id":"themes/fluid2/layout/layout.ejs","hash":"2c760995a403360c276b140f9092112adaeac82a","modified":1629428672429},{"_id":"themes/fluid2/layout/links.ejs","hash":"b282e8888cd844bb24b31677a32feb444ecc4144","modified":1628924916101},{"_id":"themes/fluid2/layout/page.ejs","hash":"f867e69e563b8ad83054714f73d9173ea050d93b","modified":1628924916101},{"_id":"themes/fluid2/layout/post.ejs","hash":"edfeb655895027d15334d009324d27a29926cc94","modified":1628924916101},{"_id":"themes/fluid2/layout/tag.ejs","hash":"3a9296eb7181e8b3fb0cdc60cbafc815b98d6f51","modified":1628924916102},{"_id":"themes/fluid2/layout/tags.ejs","hash":"b7c1a6d8fc1097fc16d2300260297013cb692153","modified":1628924916102},{"_id":"themes/fluid2/.github/ISSUE_TEMPLATE/bug_report.md","hash":"beb3474d6f65c1e56700ba872c6a0d0836d4168e","modified":1628924916087},{"_id":"themes/fluid2/.github/ISSUE_TEMPLATE/bug_report_zh.md","hash":"78ce211415d502c5a4398d786d5c697d34d868b9","modified":1628924916088},{"_id":"themes/fluid2/.github/ISSUE_TEMPLATE/feature_request.md","hash":"5cc30e7b6e7b77c8b40b182ba02a5d93d37d2fc2","modified":1628924916088},{"_id":"themes/fluid2/.github/ISSUE_TEMPLATE/feature_request_zh.md","hash":"7db378613df2b7d13e8c428c006399a879a4a852","modified":1628924916088},{"_id":"themes/fluid2/.github/ISSUE_TEMPLATE/question.md","hash":"102213e5d6790d060c0e26b4a3a7ec744d753c52","modified":1628924916088},{"_id":"themes/fluid2/.github/ISSUE_TEMPLATE/question_zh.md","hash":"18381d03518526d7cefd024a0bdd8d9e7c6440f5","modified":1628924916089},{"_id":"themes/fluid2/.github/workflows/limit.yaml","hash":"bdbdb66da69ab7353b546f02150a6792f4787975","modified":1628924916089},{"_id":"themes/fluid2/.github/workflows/lint.yaml","hash":"4c04caa5ca20bbcbf0934bb7adba4d2cd8a26da2","modified":1628924916089},{"_id":"themes/fluid2/layout/_partial/archive-list.ejs","hash":"7d780309e12c437c2f8a246dd2fd0c272b8636ce","modified":1628924916093},{"_id":"themes/fluid2/layout/_partial/beian.ejs","hash":"53d9f79b4a3b71d2e89872fa138bc09611862ee4","modified":1628924916093},{"_id":"themes/fluid2/layout/_partial/css.ejs","hash":"04957fcd5c9025da54d593652b51939e54056827","modified":1628924916095},{"_id":"themes/fluid2/layout/_partial/footer.ejs","hash":"c8d3788cd600cc641a167eb52185b73e0513557f","modified":1629791041470},{"_id":"themes/fluid2/layout/_partial/head.ejs","hash":"8e29e7ddbda1555c0f9d0d4b5d4550975fec7537","modified":1628924916096},{"_id":"themes/fluid2/layout/_partial/nav.ejs","hash":"48944e12d95dc46137f9f270629296cfd2a8dd22","modified":1628924916096},{"_id":"themes/fluid2/layout/_partial/paginator.ejs","hash":"0d443f23c459787338917900f50fec1c8b3b3bdd","modified":1628924916096},{"_id":"themes/fluid2/layout/_partial/post-meta.ejs","hash":"3f16de8c40d87c7d23eba121dd8061757c3f9a58","modified":1628924916098},{"_id":"themes/fluid2/layout/_partial/scripts.ejs","hash":"1d8349b7d26271e08cee592aa66f9c79ec41c3c0","modified":1628924916098},{"_id":"themes/fluid2/layout/_partial/statistics.ejs","hash":"a70c26e415a27f07f38b9384e7eb48d1f2b30328","modified":1628924916099},{"_id":"themes/fluid2/layout/_partial/toc.ejs","hash":"76e6bc368cf46d4103ea9514699e10ec0b9a4b56","modified":1628924916099},{"_id":"themes/fluid2/layout/_partial/search.ejs","hash":"bea21f1b5de61badd6c068080315c201fc80bc36","modified":1628924916098},{"_id":"themes/fluid2/scripts/events/index.js","hash":"91defe82d50a317903411f0b260da0f140f43dc4","modified":1628924916102},{"_id":"themes/fluid2/scripts/filters/locals.js","hash":"2340a576635b16fd2456b3494f5afe89cd7764db","modified":1628924916104},{"_id":"themes/fluid2/scripts/filters/post-filter.js","hash":"cb72e5acfba882a6eacd6cae8db3238bb078737a","modified":1628924916104},{"_id":"themes/fluid2/scripts/generators/local-search.js","hash":"bda7fbe58082a2a02c0db066794b791b14462271","modified":1628924916105},{"_id":"themes/fluid2/scripts/generators/pages.js","hash":"a2a15ea722863aba09dcad578558432682a3b6b3","modified":1628924916105},{"_id":"themes/fluid2/scripts/helpers/export-config.js","hash":"c72a7373c19b730e926b476eb528f651617ac4f2","modified":1628924916105},{"_id":"themes/fluid2/scripts/helpers/page.js","hash":"49b2c6449d7be35739c6cfea3cab4e790580983a","modified":1628924916105},{"_id":"themes/fluid2/scripts/helpers/url.js","hash":"1664f8faa028898bd6f91d6db61c7dbf7463ee01","modified":1628924916106},{"_id":"themes/fluid2/scripts/helpers/utils.js","hash":"4acb213f90f1e7ba3696ef08d894a2a84807b669","modified":1628924916106},{"_id":"themes/fluid2/scripts/helpers/wordcount.js","hash":"da6144ee040fed0a9b9f45da3478bc33087b5ac9","modified":1628924916106},{"_id":"themes/fluid2/scripts/tags/button.js","hash":"e1d0caed12e7cd9a35cf64272c41854b2901a58f","modified":1628924916106},{"_id":"themes/fluid2/scripts/tags/checkbox.js","hash":"dac0e08eaa3614a6fd9ddbdfb4584094b1bdb30a","modified":1628924916107},{"_id":"themes/fluid2/scripts/tags/group-image.js","hash":"cc176cc1d7e7cc28cedf8397ae748c691d140be2","modified":1628924916107},{"_id":"themes/fluid2/scripts/tags/label.js","hash":"6c5916d86c63795c7e910bf614b0e7ece5073702","modified":1628924916107},{"_id":"themes/fluid2/scripts/tags/mermaid.js","hash":"dbfe59fde77d87b1d7d0c46480a2a729010988eb","modified":1628924916107},{"_id":"themes/fluid2/scripts/tags/note.js","hash":"8020acc2c4bb3a2054e3cb349fac7cd10b79a0be","modified":1628924916107},{"_id":"themes/fluid2/scripts/utils/join-path.js","hash":"ec068c699155565aea4aa4ab55d8a10b2947a114","modified":1628924916108},{"_id":"themes/fluid2/scripts/utils/object.js","hash":"d798779ec79a53ce04b8ac79efd5d064981d95bd","modified":1628924916108},{"_id":"themes/fluid2/source/css/gitalk.css","hash":"1fe60b2ab1d704f5a4f55e700dca5b8785fb390e","modified":1628924916116},{"_id":"themes/fluid2/source/css/main.styl","hash":"bf536db598434c36cc0c752196bfde46e584a92e","modified":1628924916117},{"_id":"themes/fluid2/source/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1628164697304},{"_id":"themes/fluid2/source/img/default.png","hash":"7bb2b8ee07db305bcadee2985b81b942027ae940","modified":1628164697304},{"_id":"themes/fluid2/source/img/favicon.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1628164697304},{"_id":"themes/fluid2/source/img/favicon1.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1628164697304},{"_id":"themes/fluid2/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1628164697304},{"_id":"themes/fluid2/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1628164697305},{"_id":"themes/fluid2/source/img/wechatid.png","hash":"fc275472320ea1215e6c7c7a3f64045b9e784944","modified":1628559587277},{"_id":"themes/fluid2/source/js/boot.js","hash":"5264c0d2eb73b4948ee6bcb1bd847a924d906088","modified":1628924916118},{"_id":"themes/fluid2/source/js/color-schema.js","hash":"2840108a36b1e9a02cd2ed25adcffde08c42e1cc","modified":1628924916119},{"_id":"themes/fluid2/source/js/events.js","hash":"2c40be98f3471427626b9130fd231bc7e9a66d03","modified":1628924916119},{"_id":"themes/fluid2/source/js/img-lazyload.js","hash":"67f6250f98b36a6599ea982d11cbb060c5ffb92a","modified":1628924916119},{"_id":"themes/fluid2/source/js/leancloud.js","hash":"ca82e71e31d3d5ef7fe9487756af06d4e27d9b53","modified":1628924916119},{"_id":"themes/fluid2/source/js/local-search.js","hash":"3b9322b6b669c870360db468446b00f53bd1b44c","modified":1628924916120},{"_id":"themes/fluid2/source/js/plugins.js","hash":"1afcd1ca415edc994ae813d6f5d54dd3d1888bc4","modified":1628924916120},{"_id":"themes/fluid2/source/js/utils.js","hash":"f20aa828122fce9a76c03b07c7da142704edc8c0","modified":1628924916120},{"_id":"themes/fluid2/source/js/video_url.json","hash":"109e85377af72bf3bc87ee0f1cbdbf69fcec929d","modified":1630122832364},{"_id":"themes/fluid2/source/xml/local-search.xml","hash":"85fcc23b4db654a7f91fc55b6fb0442bb3ed3a9a","modified":1628924916121},{"_id":"themes/fluid2/layout/_partial/comments/changyan.ejs","hash":"b13e69e555ddec2a71710e07178793e7e13319e7","modified":1628924916093},{"_id":"themes/fluid2/layout/_partial/comments/cusdis.ejs","hash":"1e93ca89777e4beb0f0e5cb70e03aab48e958542","modified":1628924916093},{"_id":"themes/fluid2/layout/_partial/comments/gitalk.ejs","hash":"7f04e5c22821bb94da791973d9c6692b03bac81d","modified":1628924916094},{"_id":"themes/fluid2/layout/_partial/comments/livere.ejs","hash":"bcceafab01fe695c59951d939f7cef502f3d7b48","modified":1628924916094},{"_id":"themes/fluid2/layout/_partial/comments/disqus.ejs","hash":"7a35381478328b65c9d81827504c4e031bc76a86","modified":1628924916094},{"_id":"themes/fluid2/layout/_partial/comments/remark42.ejs","hash":"45c879768b40ba56af62e18ad54bffbf73a6f3a1","modified":1628924916094},{"_id":"themes/fluid2/layout/_partial/comments/twikoo.ejs","hash":"c3297931cf5d3d1bc53d988b74cbc54dd06ebbd7","modified":1628924916095},{"_id":"themes/fluid2/layout/_partial/comments/utterances.ejs","hash":"d1e86754c9560f7346200b2aa9a7f715a3fac82b","modified":1628924916095},{"_id":"themes/fluid2/layout/_partial/comments/valine.ejs","hash":"caae3f692523275b8ca1c56c009a6aeb9c7fdc03","modified":1628924916095},{"_id":"themes/fluid2/layout/_partial/comments/waline.ejs","hash":"d6f6620fbc6cf3df5a52322378c0d703b7e1fcf9","modified":1628924916095},{"_id":"themes/fluid2/layout/_partial/plugins/analytics.ejs","hash":"d20f54bf2fd5cd274b4b9c5542eafbfec5120838","modified":1628924916097},{"_id":"themes/fluid2/layout/_partial/plugins/math.ejs","hash":"a49a0064b55cf6d8f2a61abfecd41f0083757e04","modified":1628924916097},{"_id":"themes/fluid2/layout/_partial/plugins/nprogress.ejs","hash":"47c1df255aa552ad71ef3e57deca46530a8f2802","modified":1628924916097},{"_id":"themes/fluid2/layout/_partial/plugins/mermaid.ejs","hash":"fd1f78287c868ccab78b6244b66e3f9b0968c4a8","modified":1628924916097},{"_id":"themes/fluid2/layout/_partial/plugins/typed.ejs","hash":"c57817ceaee868d416558e56d2a8d0d418c64a2d","modified":1628924916098},{"_id":"themes/fluid2/scripts/events/lib/compatible-configs.js","hash":"c0da20f9adca2761d370cc6dda013ec1ecbb7710","modified":1628924916103},{"_id":"themes/fluid2/scripts/events/lib/footnote.js","hash":"13d8466cd4c98367131b5f3d6a30b3d4ce8de26f","modified":1628924916103},{"_id":"themes/fluid2/scripts/events/lib/highlight.js","hash":"5eec946182fd537a4d75f15bdf7a09453cc00d83","modified":1628924916103},{"_id":"themes/fluid2/scripts/events/lib/hello.js","hash":"1a262c15896663dba773a1796f637f6484f3e524","modified":1628924916103},{"_id":"themes/fluid2/scripts/events/lib/lazyload.js","hash":"00a4876e9c37b77fed619138b8bd9ad88ea1e9f3","modified":1628924916104},{"_id":"themes/fluid2/scripts/events/lib/merge-configs.js","hash":"3f2dba4959b27466521de97eff692815650c02b7","modified":1628924916104},{"_id":"themes/fluid2/source/css/_functions/base.styl","hash":"171697018fd384fce0834875ca94b91f16564cac","modified":1628924916108},{"_id":"themes/fluid2/source/css/_mixins/base.styl","hash":"046979dbd8cdabd21d89f9c1d8f1bb3f2fd06d6f","modified":1628924916109},{"_id":"themes/fluid2/source/css/_pages/pages.styl","hash":"92c062cf55457b6549497244d09ec34e9c0c95c2","modified":1628924916116},{"_id":"themes/fluid2/source/css/_variables/base.styl","hash":"d555a4c9df7b49250c1747c2fbd8353f2d822775","modified":1628924916116},{"_id":"themes/fluid2/source/js/pdfjs/LICENSE","hash":"598f87f072f66e2269dd6919292b2934dbb20492","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/LICENSE","hash":"598f87f072f66e2269dd6919292b2934dbb20492","modified":1469427908000},{"_id":"themes/fluid2/source/lib/hint/hint.min.css","hash":"64fa8c328dc93432ec822de2818aef21a4f63b29","modified":1628924916121},{"_id":"themes/fluid2/source/css/_pages/_about/about.styl","hash":"47235d222812e2f829e9bde039fa719bbced9325","modified":1628924916109},{"_id":"themes/fluid2/source/css/_pages/_base/base.styl","hash":"33d237014f22324a034ae463857ce2af72a0d65e","modified":1628924916112},{"_id":"themes/fluid2/source/css/_pages/_base/color-schema.styl","hash":"2dd6f1a8470f5bd10ed53cfcba6811197c79d487","modified":1628924916112},{"_id":"themes/fluid2/source/css/_pages/_base/inline.styl","hash":"6f2a3b8af2793dd831f661c6db0ccbe0a62ccc48","modified":1628924916113},{"_id":"themes/fluid2/source/css/_pages/_base/keyframes.styl","hash":"58a7f8f2baea2d58cf5f7edfc91314ee5d7156ca","modified":1628924916113},{"_id":"themes/fluid2/source/css/_pages/_base/rewrite.styl","hash":"c628894ec5afab5b3e6f4633390f2b403bf6678f","modified":1628924916113},{"_id":"themes/fluid2/source/css/_pages/_category/categories.styl","hash":"0924e35eff2ec84e2d9e4772abccda452d9463ef","modified":1628924916113},{"_id":"themes/fluid2/source/css/_pages/_archive/archive.styl","hash":"86926a80bf6f39a7f47789b1a8f44b5984b4683f","modified":1628924916110},{"_id":"themes/fluid2/source/css/_pages/_index/index.styl","hash":"5775fd234c62a2f3520b34b2a66fe181cc2d4ea3","modified":1628924916114},{"_id":"themes/fluid2/source/css/_pages/_links/links.styl","hash":"83694b28209c548ef38bee78e473b02e90cbcf9f","modified":1628924916114},{"_id":"themes/fluid2/source/css/_pages/_post/post.styl","hash":"c189a52dbc6eb554d1da3f2636920813b3b7e4fb","modified":1628924916115},{"_id":"themes/fluid2/source/css/_pages/_post/tag_plugin.styl","hash":"88939a09d1ab73a2b96a6b8b08c96ad03d402728","modified":1628924916115},{"_id":"themes/fluid2/source/css/_pages/_tag/tags.styl","hash":"29e9b72cfda2f2baf9cf2597fcd7f9e66303a9bd","modified":1628924916116},{"_id":"themes/fluid2/source/js/5.0/web3d/clear.cache.gif","hash":"b80b11203d97fe01c5597ca3be70406ea48f5709","modified":1628925227493},{"_id":"themes/fluid2/source/js/5.0/web3d/sworker-locked.js","hash":"442e8de1f4591455368b3fdf6fd349851e89c50f","modified":1628925227713},{"_id":"themes/fluid2/source/js/5.0/web3d/sworker.js","hash":"8c8a6e175629f92f1565bc99ff416e553d9c61c8","modified":1628925227713},{"_id":"themes/fluid2/source/js/5.0/web3d/web3d.nocache.js","hash":"16f7ee902d87482fedb41c9ad1d4cd33ed6a477c","modified":1628925227714},{"_id":"themes/fluid2/source/js/pdfjs/web/debugger.js","hash":"4ab7d76ffdf3b79b54ca8f985ffc556852a9c4c7","modified":1621144990000},{"_id":"themes/fluid2/source/js/pdfjs/web/viewer.css","hash":"ab1d93a7410542b1f93745de47c5ce4e88e821f4","modified":1622354160000},{"_id":"themes/fluid2/source/js/pdfjs/web/viewer.html","hash":"985d4fd837f3aa8824f7982382b8a3213789e163","modified":1622354160000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/debugger.js","hash":"4ab7d76ffdf3b79b54ca8f985ffc556852a9c4c7","modified":1621144990000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/viewer.css","hash":"ab1d93a7410542b1f93745de47c5ce4e88e821f4","modified":1622354194000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/viewer.html","hash":"985d4fd837f3aa8824f7982382b8a3213789e163","modified":1622354194000},{"_id":"themes/fluid2/source/css/_pages/_base/_widget/banner.styl","hash":"da823846f0896f16b21c7430f047f7222a89cd10","modified":1628924916110},{"_id":"themes/fluid2/source/css/_pages/_base/_widget/copy-btn.styl","hash":"c398892fba1494dd6fd417415076458ed321d34d","modified":1628924916110},{"_id":"themes/fluid2/source/css/_pages/_base/_widget/board.styl","hash":"bb9cdde191b9b1287ba19414bab862f30be6a8a0","modified":1628924916110},{"_id":"themes/fluid2/source/css/_pages/_base/_widget/footer.styl","hash":"dbd0a3518e5bfca92851490b34654f46bb5cfc76","modified":1628924916111},{"_id":"themes/fluid2/source/css/_pages/_base/_widget/header.styl","hash":"f770c5c3ee89421e9e3f1313ca5bd07a2448f400","modified":1628924916111},{"_id":"themes/fluid2/source/css/_pages/_base/_widget/footnote.styl","hash":"41935973a66c14ab2bea0539d4b1f15c62534fa4","modified":1628924916111},{"_id":"themes/fluid2/source/css/_pages/_base/_widget/qrcode.styl","hash":"d29064ed8bdf62d5cf4eac32ebdb5d0c7075ebbd","modified":1628924916111},{"_id":"themes/fluid2/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"e568f308df26465e0432197e8b57384707470f54","modified":1628924916112},{"_id":"themes/fluid2/source/css/_pages/_base/_widget/search.styl","hash":"1f4e678d7219815ab62de1b92ec75e021247f90b","modified":1628924916112},{"_id":"themes/fluid2/source/js/5.0/web3d/html/ggtcallback.html","hash":"8cb0ab174f8e888d0deb336cef2c0826ef0ce6a1","modified":1628925227636},{"_id":"themes/fluid2/source/js/5.0/web3d/html/opener.html","hash":"3f01511be9da5df96d7cba53b04cf301a3ead5c0","modified":1628925227636},{"_id":"themes/fluid2/source/js/5.0/web3d/html/skydriveproxy.php","hash":"8252ff9eae5ccc8b8568bed79f3c2ca290b63921","modified":1628925227637},{"_id":"themes/fluid2/source/js/5.0/web3d/html/windowslive.html","hash":"88c6f4a605962d7a839b5afdb359bcb9f80724e5","modified":1628925227637},{"_id":"themes/fluid2/source/js/5.0/web3d/js/gl-matrix-min.js","hash":"866e8cada09cb002ce43303d2802312cc45f6248","modified":1628925227637},{"_id":"themes/fluid2/source/js/5.0/web3d/js/workercheck.js","hash":"d745965e9a81fb7a35f11695f5ecc00bbe089995","modified":1628925227711},{"_id":"themes/fluid2/source/js/5.0/web3d/js/webfont.js","hash":"721539eaac2ebd488a80a6e4b8d472fafd520e2b","modified":1628925227711},{"_id":"themes/fluid2/source/js/5.0/web3d/js/zSpace.js","hash":"1a96254f17b7ecdb4f5e6506666fa0cf8141488a","modified":1628925227711},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/78-EUC-H.bcmap","hash":"c84a5fe05bb2a5e4e599329d0ebb3ed8fe1ebfdf","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/78-EUC-V.bcmap","hash":"678dcba8720226133150374f78493cc09c9b8d9e","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/78-H.bcmap","hash":"e77449427a5d5411c9da1c1a64e1e3ae362bbcdf","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/78-RKSJ-H.bcmap","hash":"5f0f202932865c38e7b0b06924e419c77f74be85","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/78-RKSJ-V.bcmap","hash":"3fa6830e3e5c6b0cc5d03402cfb6712a04c08d31","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/78-V.bcmap","hash":"c58a521bdfad6ffe30e292505992a396033d03c3","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/78ms-RKSJ-H.bcmap","hash":"ef37df685e4779722b34fcc026b196b224bfca13","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/78ms-RKSJ-V.bcmap","hash":"27d45708491107b2cf673c2cd584bf22ca27e4e4","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/83pv-RKSJ-H.bcmap","hash":"c4474f77d94be66d771ba68f18ff2fd606a3c820","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/90ms-RKSJ-H.bcmap","hash":"994ca6d6232d91be047c68e087e0951dcca4cba4","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/90ms-RKSJ-V.bcmap","hash":"c4ed8e0b82fc29ff6140c72ec8ab3acc3cd0578f","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/90msp-RKSJ-V.bcmap","hash":"ddfc0fdb34314f2d7116d707fa6dbb24bc9bf390","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/90msp-RKSJ-H.bcmap","hash":"d3f02d6724d9c91d077ed38545c9321dba65b624","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/90pv-RKSJ-H.bcmap","hash":"76218acded94b2d29f747735e7fb41f19cee84eb","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/90pv-RKSJ-V.bcmap","hash":"7296d339f5c1d843b823482fa2b3857c0559eb93","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Add-H.bcmap","hash":"cd55ec3d5627b80505d7dbea433e5702f8c05260","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Add-RKSJ-H.bcmap","hash":"9a17c268decf876dc35c5f20c660ee63563fa523","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Add-RKSJ-V.bcmap","hash":"0e4ef11ed7f4e5ed3b2e32f267f4c3fb4359d08e","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Add-V.bcmap","hash":"02ca7b80b507640df998e9b5f6d25b346082d8c1","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-CNS1-0.bcmap","hash":"241cccfc85b5ef9ea4618f94a6341e02d1b03b98","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-CNS1-1.bcmap","hash":"f37b5b68198690c8270322daa0ea522225a46127","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-CNS1-2.bcmap","hash":"a568bee71b12ec4e79a2fa65c4eb9f865c505a5e","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-CNS1-3.bcmap","hash":"ef567b58254e03837d46e1fdff4fea5cce318a74","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-CNS1-4.bcmap","hash":"5f81f4782a5f996649dc318c1587ae7728afd10b","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-CNS1-5.bcmap","hash":"b7de7cea41575c7933cffdb917ad1f918df76c70","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-CNS1-6.bcmap","hash":"4eaa2ec548df7cdbdece2eec227fdb9d4cb2f281","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-CNS1-UCS2.bcmap","hash":"bee971d04cae79d791a52bf0d3d5e2e9deb1d1c8","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-GB1-0.bcmap","hash":"86edf145080d2fedba2f0a0b0ab1bc18d9a5af55","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-GB1-1.bcmap","hash":"83cc28efd5e778b9d37898f9b100b502bc442dc3","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-GB1-2.bcmap","hash":"a3ce0132af54173d30a4330314bc4cf273fc29c8","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-GB1-3.bcmap","hash":"c7b6cfbeac681010771d022d319913c798416d75","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-GB1-4.bcmap","hash":"cee3007bb41ed1bbe7fd22f054c0fb036a92c8cf","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-GB1-5.bcmap","hash":"a7d9440784d773507e3d83d0bf93fa8d93a3289f","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-GB1-UCS2.bcmap","hash":"23366624efa674e2493a18bf6b6e2c16929d68d3","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-Japan1-0.bcmap","hash":"ce5b494e809c30621968169d01d1136f3ad1ce3c","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-Japan1-1.bcmap","hash":"a766b29745a30aa3316cafc73d884c271cc12ff4","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-Japan1-2.bcmap","hash":"78c4e86cff8aa1c2f2bc18aaf83095a96f0bca50","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-Japan1-3.bcmap","hash":"5b520d2cf37e21b084bc9e6a21d006c53e4e552e","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-Japan1-4.bcmap","hash":"4136c902f4715ed18b8b2390965d3621d2fda048","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-Japan1-5.bcmap","hash":"38970fd416a1c3ef4faa25009254347627d24964","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-Japan1-6.bcmap","hash":"dfba7ab251b5ac07d7648c4e81e808ea096578c9","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-Japan1-UCS2.bcmap","hash":"d99c0d908b8075afa69aa3c579a9393b13b29dd9","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-Korea1-0.bcmap","hash":"ca8e1774cdd2859ba0341e4474d07d6fb2f9395b","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-Korea1-1.bcmap","hash":"e9b783963160380ccfe33fa1dcdd9c79b1cf2934","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-Korea1-2.bcmap","hash":"0b8d7fd848de3efa86f958c6e1cf5aece9bf1bf4","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Adobe-Korea1-UCS2.bcmap","hash":"15e4e07c96891a2bb2778b5df8dd0a131edeed52","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/B5-H.bcmap","hash":"771d71153bf652d1134b7d65beb8afc60c835ff6","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/B5-V.bcmap","hash":"dfc7362c157c24651761e5216ef0c46aba795488","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/B5pc-H.bcmap","hash":"29d5fd41dc8fc4f19b59949b9a7f410d63f4f3bd","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/B5pc-V.bcmap","hash":"f12ae6ed2320136959420e28b1b937001cdd4f0b","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/CNS-EUC-H.bcmap","hash":"1da78eb52781330148c95ccf64c78edd2072a991","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/CNS-EUC-V.bcmap","hash":"895fe039258dae00d7a8cea93b3b07d794543d2d","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/CNS1-H.bcmap","hash":"07f422b28ca4fedf2cdc6ccdf551eaecae40f60b","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/CNS1-V.bcmap","hash":"7455bd92e1a1f32bfd2cb5b80eb938aa665f6b8a","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/CNS2-V.bcmap","hash":"c0870c3fad8349e3391ff7cda29d1f3a917e27f1","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/ETHK-B5-H.bcmap","hash":"225205ad3aad58967faf23a2504731abebc6dccc","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/ETHK-B5-V.bcmap","hash":"03e35e7fc1b75495df5559a3f71c5f0cbd1517ba","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/CNS2-H.bcmap","hash":"0570a8186311bba4ad216250f805461220d41d0a","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/ETen-B5-H.bcmap","hash":"9c3b70700d7ae2b8c4cc6f658cdc98f4e65b3be4","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/ETen-B5-V.bcmap","hash":"5b637fa1b203754d98463053b38a2f694cde499b","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/ETenms-B5-H.bcmap","hash":"1207c931295ad5f57a430317d5014fb66d0eab7d","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/ETenms-B5-V.bcmap","hash":"631c58a7f7a8094d44a858d26485ab65b499b59b","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/EUC-H.bcmap","hash":"f88729b6a413ae1365bafb5dc8076b465aa1fb87","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Ext-H.bcmap","hash":"4b6a27e1125bb11bf9fd8fe9c5375f7781c95204","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/EUC-V.bcmap","hash":"c47c42d9099caf1447498e57fc1c8f3c7ff417b3","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Ext-RKSJ-H.bcmap","hash":"e1c2563a6d785aa5e30de423911d179fe79ec957","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Ext-RKSJ-V.bcmap","hash":"5443591823737ba98993537c4d4e8af70a37c92e","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Ext-V.bcmap","hash":"0d88a7517783f25ce1eee082a5ed12b0f96061c2","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GB-EUC-H.bcmap","hash":"4231eab22968baa29ea4e6fdc4278b737067a7da","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GB-EUC-V.bcmap","hash":"7d268732b300431fced1351b4bfd12b51299283e","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GB-H.bcmap","hash":"3f1c2a68bdd13541e6a2cd6a7a393581e9444e1e","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GB-V.bcmap","hash":"b70477a9738709f639adf6bc20e81363efcc9ed0","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBK-EUC-H.bcmap","hash":"08986b370ac27b60cf8cd7023c9e49f6b784b52b","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBK-EUC-V.bcmap","hash":"4f0e0cfffafa21b30f7a25e5161738faf2e265fe","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBK2K-H.bcmap","hash":"a36052b8b5d7dc1dde2b721437d6abc90ec7cefe","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBK2K-V.bcmap","hash":"d27b6916b7de1993464e5f33822f176fdc8e949f","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBKp-EUC-H.bcmap","hash":"a8785a44403f130097ee9a23c3923d5af252ac51","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBKp-EUC-V.bcmap","hash":"717f6d6585184bfebb894e59868886ab8f3c38f1","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBT-EUC-H.bcmap","hash":"e2dda44896a41f4fa817c5397f17894763b7623e","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBT-EUC-V.bcmap","hash":"9d6ef5fa295e3005d620904754d7cc16104be908","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBT-H.bcmap","hash":"62508bbc22bcd3795e4af2c7fa3cfddc71367813","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBT-V.bcmap","hash":"2f0936e0bd4362f7c6f8c2b56642d6483366cd11","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBTpc-EUC-H.bcmap","hash":"388eb76b53b008d90dfe68c1e3288314b21c3cdc","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBTpc-EUC-V.bcmap","hash":"ce125f52097c71fc83631577977ac267b8901c78","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBpc-EUC-H.bcmap","hash":"5c34efa7cca4e2f652f81f4498fdf41db1b7b1e6","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/GBpc-EUC-V.bcmap","hash":"36004a6bedae0edfaea620a7d8f61cfb875f9640","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/H.bcmap","hash":"149c08c0eadc405f6ba64adac9329fdb300d11ab","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/HKdla-B5-H.bcmap","hash":"57ba02cf438eba88d2071bd99d1beb816b438b9e","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/HKdla-B5-V.bcmap","hash":"035e4064559dd56ceb0f06c3ac1c2e766aeffe62","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/HKdlb-B5-H.bcmap","hash":"2be77ea4f4cd8a338ff7007d314773582f565efa","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/HKdlb-B5-V.bcmap","hash":"3dc79100304f82ec559b70d120100f6ebe6ab5c0","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/HKgccs-B5-H.bcmap","hash":"dbaa1026222370fa6e3275c98e3bdb5ef3d37709","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/HKgccs-B5-V.bcmap","hash":"6f22784990eb168bcf9192e7e36de18e08927dfb","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/HKm314-B5-H.bcmap","hash":"cbfb65ab0cae690e7679a1769de521ea20fb6602","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/HKm314-B5-V.bcmap","hash":"3ef5f7e35ebffe68dea8ea757cdceac5b8151372","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/HKm471-B5-H.bcmap","hash":"a75f2e32e5495d46e14b1d07ac124b3fc675ef1a","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/HKm471-B5-V.bcmap","hash":"2a6f2cc4d105f464432187daeff7b81040c093e4","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/HKscs-B5-H.bcmap","hash":"45f1793e771de030af89938eed23fff4c7daca3a","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/HKscs-B5-V.bcmap","hash":"fa5b3a1f0b3ab6bd614f8a39c9ab80b203daadf5","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Hankaku.bcmap","hash":"dfc2f635dd66602f9978ae3fe72695a02e512a6a","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Hiragana.bcmap","hash":"10e7a0f20cde8865a1dd3086a89f2e96e330d1a6","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/KSC-EUC-H.bcmap","hash":"bc349367bb60b06af5fdeeec05047f596ac71ab3","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/KSC-EUC-V.bcmap","hash":"4529ddac78c931d63411b6061b0af740b4c44ca5","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/KSC-H.bcmap","hash":"42e15fbce70bdec4f7bb5b2cbd02b0efd8bc65fc","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/KSC-Johab-H.bcmap","hash":"3585accc6e6957eda55302393fd9c3a563db6cbb","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/KSC-Johab-V.bcmap","hash":"e68b770b37b591884c459d6ce3bb43bc4556547b","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/KSC-V.bcmap","hash":"22b097fd376c21e40a0f9392961be74acc316343","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/KSCms-UHC-H.bcmap","hash":"4e0ed017a2a41ee7bf6eacf0f7e6b40ae60d223d","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/KSCms-UHC-HW-H.bcmap","hash":"d410341b19a6f05e0c20ea4a1a77078a3084044e","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/KSCms-UHC-HW-V.bcmap","hash":"6cfeb36f492702aef5ce5b7671342291010b29e1","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/KSCms-UHC-V.bcmap","hash":"3de7c5c70cf172ff560a62d5dfe84a9336b4f5ad","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/KSCpc-EUC-H.bcmap","hash":"3705fd3621117a7e5a3772c3849c5d69620ef08f","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/KSCpc-EUC-V.bcmap","hash":"1d3a11932c44a5fa8fa22efd2bd3dba7db9a2c8e","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Katakana.bcmap","hash":"da100ad00f2a9ba196892bfb4d6644ec828a4fcf","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/LICENSE","hash":"1afb5991fce0d60110b5092b68bf9ff76b0c73f6","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/NWP-H.bcmap","hash":"7d0f51c52d7a96bf289d0c6454d7e9dccf009c15","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/NWP-V.bcmap","hash":"891a866c52b46e7526123799a829db24ac6cda4f","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/RKSJ-H.bcmap","hash":"a4f7d5cdd13d3008cc42d82f69672d9e50a9d5b3","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/RKSJ-V.bcmap","hash":"16ae42a46e7eb92ca048fe24649b668c5103b4b2","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/Roman.bcmap","hash":"5755781c7e9c50cc8192426d8733a506382b5fdd","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniCNS-UCS2-H.bcmap","hash":"7f289b94c643b7cc43d4936078143a2347ca0fc1","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniCNS-UCS2-V.bcmap","hash":"6b19ece5c921516431eb94d28d74080fdd7d35bc","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniCNS-UTF16-H.bcmap","hash":"d73d55388c76932033915cea627bb628edad4f66","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniCNS-UTF16-V.bcmap","hash":"0f7152f2845cc2be4d3ce7e0e1530639ec4162e3","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniCNS-UTF32-H.bcmap","hash":"a5872864e2b121c1df5068a54201ed166c69d5f1","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniCNS-UTF32-V.bcmap","hash":"debaa98acaf13f341a5003856ef6a6a7df8f6e14","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniCNS-UTF8-V.bcmap","hash":"019bd0716b2aa80bc1bcabfd389d3d5e1065ba8e","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniCNS-UTF8-H.bcmap","hash":"734ad1a00033d70c195c81358b643c7cba1327b2","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniGB-UCS2-H.bcmap","hash":"868238e34cb9548c4d138af1adc1a4bea62dec37","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniGB-UCS2-V.bcmap","hash":"f5853ca83c25b888c1d925e2a20ef44e064d064e","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniGB-UTF16-V.bcmap","hash":"1771376eef979ad42c2b5c01a1af1d34f54580b7","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniGB-UTF16-H.bcmap","hash":"28963866dfb575b58b4370e60ebd9bfb6e56ac09","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniGB-UTF32-H.bcmap","hash":"b9ea278eb4c324d12a81e2d62479548d1e7126cb","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniGB-UTF32-V.bcmap","hash":"8167ba503aa8a6c805f39be0ca538b99898a967d","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniGB-UTF8-H.bcmap","hash":"09cc7750f69da77434093e4c94211394f5665eda","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniGB-UTF8-V.bcmap","hash":"e23616fa12132c73f52071b96e76d876430ececf","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS-UCS2-H.bcmap","hash":"caf525125e29fa4de78088e5eb1785c1af1f9950","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS-UCS2-HW-H.bcmap","hash":"97cbb8599cf62914885a8b2b47594865fff52099","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS-UCS2-HW-V.bcmap","hash":"f36bad9c680f4bba6cbcf8ac57f53e7ce21c806b","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS-UCS2-V.bcmap","hash":"45396576a6bd5468a84e2c2e4ae64c23fe7f2e85","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS-UTF16-H.bcmap","hash":"16499e93f0a447a94e1e44bfa9951401d290d89d","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS-UTF16-V.bcmap","hash":"44402b8f73e0b0160846b641e7cb2e75ab8c81bd","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS-UTF32-H.bcmap","hash":"bc482114d214e2fffe85dd0b7422f48c3e282c17","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS-UTF32-V.bcmap","hash":"2f5ec2584fd7c39f455161a857550fa7fea5f53a","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS-UTF8-H.bcmap","hash":"f47956c1c7b2eadbda93aac25fe4546b413ec0a5","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS-UTF8-V.bcmap","hash":"b3ea8d2172a2f6f9e73cf62ae467aa84848df6d7","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS2004-UTF16-H.bcmap","hash":"b8b0cc6779d3960426899fc2e7cf2866ffc80167","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS2004-UTF16-V.bcmap","hash":"2872cb273dab9d0dbb7f331826045df18764a7b0","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS2004-UTF32-H.bcmap","hash":"f48723212d1ad18c0b3c41168d6f630798e04160","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS2004-UTF32-V.bcmap","hash":"ef16ccb3102fc44c1d46f4cad40cfbdb020ee277","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS2004-UTF8-H.bcmap","hash":"385ab762d03499d35539048176928e031e5340d1","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJIS2004-UTF8-V.bcmap","hash":"565560a59d5174ac379a8d91f165c8ecdef54e06","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJISPro-UCS2-HW-V.bcmap","hash":"3f0a364246717707db82913593304cb7bd37c378","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJISPro-UCS2-V.bcmap","hash":"b1a47305fa79afa19ab696d33af5099d35570c56","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJISPro-UTF8-V.bcmap","hash":"ed6b571aeed388d3b53b9e65824af3f0146a5857","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJISX0213-UTF32-H.bcmap","hash":"15c953c36436d32f748ec7468a95c3e5843d70bb","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJISX0213-UTF32-V.bcmap","hash":"dfbe3e295505977b4e1881ef30b80362d7406bbc","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJISX02132004-UTF32-H.bcmap","hash":"c41dd50df01e3d3331f0acdb6da6c1b857a67cf7","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniJISX02132004-UTF32-V.bcmap","hash":"9c48a0c654acf4bcf51defde2f7d8b3ce52a063d","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniKS-UCS2-H.bcmap","hash":"50fcce1b2e3224791b480289e7c4c42938beb854","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniKS-UCS2-V.bcmap","hash":"6743b3e07370fd49962b97d97be77dae8d18aabb","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniKS-UTF16-H.bcmap","hash":"4f4603408966d9ac29a96c3a6755b9f23e7aa953","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniKS-UTF16-V.bcmap","hash":"cfdbfbf0b0e8ef98fef6236ea570c73465da1581","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniKS-UTF32-H.bcmap","hash":"6b0e98e16418fa5a86338b3fb361f1700971f649","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniKS-UTF32-V.bcmap","hash":"73bd343b188a80471eb156655f5b192903f86cbf","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniKS-UTF8-H.bcmap","hash":"8117d31e498a8f0fb7c223c4172ba881c0496c6f","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/UniKS-UTF8-V.bcmap","hash":"586c64948a67e4cb12de64e221b0dc3d9e47dedf","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/V.bcmap","hash":"99790f12ca21a196bc1d836ae5bf0ad7af95e079","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/cmaps/WP-Symbol.bcmap","hash":"3a6417abad460a1a083be75636c014f3a73937b5","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/locale.properties","hash":"ea87f38f31a6f65f6c44b371c0af47cbe264fa25","modified":1622354156000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/annotation-check.svg","hash":"015d03ffa6a0ce93b41ed93a262879e4f8cf72fd","modified":1469427910000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/annotation-comment.svg","hash":"5ec875153d5046507050a3531422ca69b44680c7","modified":1469427910000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/annotation-help.svg","hash":"2f3d88f4e8cefafc2d76932104f6b2517034af2f","modified":1469427910000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/annotation-insert.svg","hash":"7a12af74ef20d5249a0c330d992bd1132308cbac","modified":1469427910000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/annotation-key.svg","hash":"d9224d3aef774d6ecc9735b440810ada4384be11","modified":1469427910000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/annotation-newparagraph.svg","hash":"453ba47aa10b6fcf8459569e0a550b4f91260ec7","modified":1469427910000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/annotation-noicon.svg","hash":"5a5447e5c39cf7ca748853a15dbd835ddaa3b5df","modified":1469427910000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/annotation-paragraph.svg","hash":"70591a3b26c56815c6e5ab2bae959e8a951c43fb","modified":1469427910000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/annotation-note.svg","hash":"6100deeb6121f98c7e024ec1a273171207c84c7f","modified":1469427910000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/findbarButton-next.svg","hash":"b8694ebb1f7f2f3691d52645a74d5a50a9b22ff3","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/findbarButton-previous.svg","hash":"585dd87195847bcce9b5b24450bf8c86d1248edb","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/grab.cur","hash":"fbd667e863c8278950e7761aee54b394cd93ea0c","modified":1469427910000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/grabbing.cur","hash":"f30d68405751e730ca94ada8628df45b4839931f","modified":1469427910000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/loading-dark.svg","hash":"6beecaf20132520e63af2f7729110627aa513f4b","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/loading-icon.gif","hash":"e043879d3ee94a3edf10260f21f44bfa4a6fc66e","modified":1469427910000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/loading.svg","hash":"eed9fc8e8c5aa8a579804d130c705df4acfc7559","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/secondaryToolbarButton-documentProperties.svg","hash":"d2f45686a4d7687a02aaeaad1e3362a6464b8f34","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/secondaryToolbarButton-firstPage.svg","hash":"401049e3f24dd7d23d20153b84621c346101cb1a","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/secondaryToolbarButton-handTool.svg","hash":"9b84882a6943b4e9d40cf85546099d1c5e13c5b7","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/secondaryToolbarButton-lastPage.svg","hash":"d4570550efe68c44e3a2e227d3254908e402f735","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/secondaryToolbarButton-rotateCcw.svg","hash":"29a312c7c98296b3b8c9fa4ef6a5669c49c7b2e8","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/secondaryToolbarButton-rotateCw.svg","hash":"23d341acd174c1864d35c7ce5e63dd83a331c74a","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/secondaryToolbarButton-scrollHorizontal.svg","hash":"f12f76653b9d5a5b87857c16f87ba321918a2b70","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/secondaryToolbarButton-scrollWrapped.svg","hash":"6f08b682673d936d697c86b043cde478c282a14c","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/secondaryToolbarButton-scrollVertical.svg","hash":"e59336dafede013bf0dc2331c22841994638a61d","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/secondaryToolbarButton-spreadEven.svg","hash":"09b8adc28babb563f880415fae270b75c601975b","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/secondaryToolbarButton-selectTool.svg","hash":"b22cd19d4eec18a106d35eb0629763f61e10bcd7","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/secondaryToolbarButton-spreadNone.svg","hash":"6b438647d978f50657d3324065776843b7249e15","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/secondaryToolbarButton-spreadOdd.svg","hash":"d58e18af4c5b47b05f1c37f3658f6370df95537f","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/shadow.png","hash":"b931e2de029146b2e1502ebd61c8160e72d6306c","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-bookmark.svg","hash":"6c621d20fd62e2cab21e730606e41655bc90676e","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-currentOutlineItem.svg","hash":"c4b02b9875a01992715305bf3b2e2ece3506cb85","modified":1610266950000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-download.svg","hash":"63f4143020019df8d607f01e6b22da86e93dd326","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-menuArrow.svg","hash":"49b82a1d7fc96cbe8793474c3c42ced5682cf50d","modified":1598075168000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-openFile.svg","hash":"dc27ad6bc304f9256e1821e327187efe3adee5ea","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-pageDown.svg","hash":"22883f1872f39254dce4979b43f786872dec7cd5","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-pageUp.svg","hash":"e521b0bbe583ef9ba858071e5af0e1def294ffb7","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-print.svg","hash":"c87e531fcafc7347b4c163b2923a10fa9d56a329","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-presentationMode.svg","hash":"f7a2416c2ba73a78b99ec3ab2ea546df86195a47","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-search.svg","hash":"0ef58f82497562def0aec5ca59d8cf4a9d247070","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-secondaryToolbarToggle.svg","hash":"4fe70d9c98f2bf33b8ca096378e3037dd8f89fe1","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-sidebarToggle.svg","hash":"36051f39c70897a381250c1a247523e128ce4f3a","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-viewAttachments.svg","hash":"4fa65284ff8194045f100794e1d6cd0cb5e5fa84","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-viewLayers.svg","hash":"3988264f3b30f0e402717954eabbc692f8cb6d98","modified":1599405136000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-viewOutline.svg","hash":"fc1dbb0d6ca5a4bd5e51b64d61f35423d145ef9d","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-viewThumbnail.svg","hash":"94d128518c79b50977f9a595c937702bb12df5e3","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-zoomIn.svg","hash":"dfde15786e30d5e96cba282f3b67c0f7a3b24ae6","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/toolbarButton-zoomOut.svg","hash":"ebc21e5385e4636b3842ce8d629f31b8065dd17f","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/treeitem-collapsed.svg","hash":"5b10744cb6d843f08b492fd10328c9cdb521ec14","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs/web/images/treeitem-expanded.svg","hash":"f7791f5b8486039bfa9efbefe97de4ee4364a342","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/78-EUC-H.bcmap","hash":"c84a5fe05bb2a5e4e599329d0ebb3ed8fe1ebfdf","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/78-EUC-V.bcmap","hash":"678dcba8720226133150374f78493cc09c9b8d9e","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/78-H.bcmap","hash":"e77449427a5d5411c9da1c1a64e1e3ae362bbcdf","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/78-RKSJ-H.bcmap","hash":"5f0f202932865c38e7b0b06924e419c77f74be85","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/78-RKSJ-V.bcmap","hash":"3fa6830e3e5c6b0cc5d03402cfb6712a04c08d31","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/78-V.bcmap","hash":"c58a521bdfad6ffe30e292505992a396033d03c3","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/78ms-RKSJ-H.bcmap","hash":"ef37df685e4779722b34fcc026b196b224bfca13","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/83pv-RKSJ-H.bcmap","hash":"c4474f77d94be66d771ba68f18ff2fd606a3c820","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/78ms-RKSJ-V.bcmap","hash":"27d45708491107b2cf673c2cd584bf22ca27e4e4","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/90ms-RKSJ-H.bcmap","hash":"994ca6d6232d91be047c68e087e0951dcca4cba4","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/90ms-RKSJ-V.bcmap","hash":"c4ed8e0b82fc29ff6140c72ec8ab3acc3cd0578f","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/90msp-RKSJ-H.bcmap","hash":"d3f02d6724d9c91d077ed38545c9321dba65b624","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/90pv-RKSJ-H.bcmap","hash":"76218acded94b2d29f747735e7fb41f19cee84eb","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/90msp-RKSJ-V.bcmap","hash":"ddfc0fdb34314f2d7116d707fa6dbb24bc9bf390","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/90pv-RKSJ-V.bcmap","hash":"7296d339f5c1d843b823482fa2b3857c0559eb93","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Add-RKSJ-H.bcmap","hash":"9a17c268decf876dc35c5f20c660ee63563fa523","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Add-H.bcmap","hash":"cd55ec3d5627b80505d7dbea433e5702f8c05260","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Add-V.bcmap","hash":"02ca7b80b507640df998e9b5f6d25b346082d8c1","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-CNS1-0.bcmap","hash":"241cccfc85b5ef9ea4618f94a6341e02d1b03b98","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Add-RKSJ-V.bcmap","hash":"0e4ef11ed7f4e5ed3b2e32f267f4c3fb4359d08e","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-CNS1-1.bcmap","hash":"f37b5b68198690c8270322daa0ea522225a46127","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-CNS1-2.bcmap","hash":"a568bee71b12ec4e79a2fa65c4eb9f865c505a5e","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-CNS1-3.bcmap","hash":"ef567b58254e03837d46e1fdff4fea5cce318a74","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-CNS1-4.bcmap","hash":"5f81f4782a5f996649dc318c1587ae7728afd10b","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-CNS1-5.bcmap","hash":"b7de7cea41575c7933cffdb917ad1f918df76c70","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-CNS1-6.bcmap","hash":"4eaa2ec548df7cdbdece2eec227fdb9d4cb2f281","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-CNS1-UCS2.bcmap","hash":"bee971d04cae79d791a52bf0d3d5e2e9deb1d1c8","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-GB1-0.bcmap","hash":"86edf145080d2fedba2f0a0b0ab1bc18d9a5af55","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-GB1-1.bcmap","hash":"83cc28efd5e778b9d37898f9b100b502bc442dc3","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-GB1-2.bcmap","hash":"a3ce0132af54173d30a4330314bc4cf273fc29c8","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-GB1-3.bcmap","hash":"c7b6cfbeac681010771d022d319913c798416d75","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-GB1-4.bcmap","hash":"cee3007bb41ed1bbe7fd22f054c0fb036a92c8cf","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-GB1-5.bcmap","hash":"a7d9440784d773507e3d83d0bf93fa8d93a3289f","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-GB1-UCS2.bcmap","hash":"23366624efa674e2493a18bf6b6e2c16929d68d3","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-Japan1-0.bcmap","hash":"ce5b494e809c30621968169d01d1136f3ad1ce3c","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-Japan1-1.bcmap","hash":"a766b29745a30aa3316cafc73d884c271cc12ff4","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-Japan1-2.bcmap","hash":"78c4e86cff8aa1c2f2bc18aaf83095a96f0bca50","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-Japan1-3.bcmap","hash":"5b520d2cf37e21b084bc9e6a21d006c53e4e552e","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-Japan1-4.bcmap","hash":"4136c902f4715ed18b8b2390965d3621d2fda048","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-Japan1-5.bcmap","hash":"38970fd416a1c3ef4faa25009254347627d24964","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-Japan1-6.bcmap","hash":"dfba7ab251b5ac07d7648c4e81e808ea096578c9","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-Japan1-UCS2.bcmap","hash":"d99c0d908b8075afa69aa3c579a9393b13b29dd9","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-Korea1-0.bcmap","hash":"ca8e1774cdd2859ba0341e4474d07d6fb2f9395b","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-Korea1-1.bcmap","hash":"e9b783963160380ccfe33fa1dcdd9c79b1cf2934","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-Korea1-2.bcmap","hash":"0b8d7fd848de3efa86f958c6e1cf5aece9bf1bf4","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Adobe-Korea1-UCS2.bcmap","hash":"15e4e07c96891a2bb2778b5df8dd0a131edeed52","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/B5-H.bcmap","hash":"771d71153bf652d1134b7d65beb8afc60c835ff6","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/B5-V.bcmap","hash":"dfc7362c157c24651761e5216ef0c46aba795488","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/B5pc-H.bcmap","hash":"29d5fd41dc8fc4f19b59949b9a7f410d63f4f3bd","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/B5pc-V.bcmap","hash":"f12ae6ed2320136959420e28b1b937001cdd4f0b","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/CNS-EUC-H.bcmap","hash":"1da78eb52781330148c95ccf64c78edd2072a991","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/CNS-EUC-V.bcmap","hash":"895fe039258dae00d7a8cea93b3b07d794543d2d","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/CNS1-H.bcmap","hash":"07f422b28ca4fedf2cdc6ccdf551eaecae40f60b","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/CNS1-V.bcmap","hash":"7455bd92e1a1f32bfd2cb5b80eb938aa665f6b8a","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/CNS2-V.bcmap","hash":"c0870c3fad8349e3391ff7cda29d1f3a917e27f1","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/CNS2-H.bcmap","hash":"0570a8186311bba4ad216250f805461220d41d0a","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/ETHK-B5-H.bcmap","hash":"225205ad3aad58967faf23a2504731abebc6dccc","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/ETen-B5-H.bcmap","hash":"9c3b70700d7ae2b8c4cc6f658cdc98f4e65b3be4","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/ETenms-B5-H.bcmap","hash":"1207c931295ad5f57a430317d5014fb66d0eab7d","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/ETHK-B5-V.bcmap","hash":"03e35e7fc1b75495df5559a3f71c5f0cbd1517ba","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/ETen-B5-V.bcmap","hash":"5b637fa1b203754d98463053b38a2f694cde499b","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/ETenms-B5-V.bcmap","hash":"631c58a7f7a8094d44a858d26485ab65b499b59b","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/EUC-H.bcmap","hash":"f88729b6a413ae1365bafb5dc8076b465aa1fb87","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/EUC-V.bcmap","hash":"c47c42d9099caf1447498e57fc1c8f3c7ff417b3","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Ext-H.bcmap","hash":"4b6a27e1125bb11bf9fd8fe9c5375f7781c95204","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Ext-RKSJ-H.bcmap","hash":"e1c2563a6d785aa5e30de423911d179fe79ec957","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Ext-RKSJ-V.bcmap","hash":"5443591823737ba98993537c4d4e8af70a37c92e","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Ext-V.bcmap","hash":"0d88a7517783f25ce1eee082a5ed12b0f96061c2","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GB-EUC-H.bcmap","hash":"4231eab22968baa29ea4e6fdc4278b737067a7da","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GB-EUC-V.bcmap","hash":"7d268732b300431fced1351b4bfd12b51299283e","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GB-H.bcmap","hash":"3f1c2a68bdd13541e6a2cd6a7a393581e9444e1e","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GB-V.bcmap","hash":"b70477a9738709f639adf6bc20e81363efcc9ed0","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBK-EUC-H.bcmap","hash":"08986b370ac27b60cf8cd7023c9e49f6b784b52b","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBK-EUC-V.bcmap","hash":"4f0e0cfffafa21b30f7a25e5161738faf2e265fe","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBK2K-H.bcmap","hash":"a36052b8b5d7dc1dde2b721437d6abc90ec7cefe","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBK2K-V.bcmap","hash":"d27b6916b7de1993464e5f33822f176fdc8e949f","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBKp-EUC-H.bcmap","hash":"a8785a44403f130097ee9a23c3923d5af252ac51","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBKp-EUC-V.bcmap","hash":"717f6d6585184bfebb894e59868886ab8f3c38f1","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBT-EUC-H.bcmap","hash":"e2dda44896a41f4fa817c5397f17894763b7623e","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBT-EUC-V.bcmap","hash":"9d6ef5fa295e3005d620904754d7cc16104be908","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBT-H.bcmap","hash":"62508bbc22bcd3795e4af2c7fa3cfddc71367813","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBT-V.bcmap","hash":"2f0936e0bd4362f7c6f8c2b56642d6483366cd11","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBTpc-EUC-H.bcmap","hash":"388eb76b53b008d90dfe68c1e3288314b21c3cdc","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBTpc-EUC-V.bcmap","hash":"ce125f52097c71fc83631577977ac267b8901c78","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBpc-EUC-H.bcmap","hash":"5c34efa7cca4e2f652f81f4498fdf41db1b7b1e6","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/GBpc-EUC-V.bcmap","hash":"36004a6bedae0edfaea620a7d8f61cfb875f9640","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/H.bcmap","hash":"149c08c0eadc405f6ba64adac9329fdb300d11ab","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/HKdla-B5-H.bcmap","hash":"57ba02cf438eba88d2071bd99d1beb816b438b9e","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/HKdla-B5-V.bcmap","hash":"035e4064559dd56ceb0f06c3ac1c2e766aeffe62","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/HKdlb-B5-H.bcmap","hash":"2be77ea4f4cd8a338ff7007d314773582f565efa","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/HKdlb-B5-V.bcmap","hash":"3dc79100304f82ec559b70d120100f6ebe6ab5c0","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/HKgccs-B5-H.bcmap","hash":"dbaa1026222370fa6e3275c98e3bdb5ef3d37709","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/HKgccs-B5-V.bcmap","hash":"6f22784990eb168bcf9192e7e36de18e08927dfb","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/HKm314-B5-H.bcmap","hash":"cbfb65ab0cae690e7679a1769de521ea20fb6602","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/HKm314-B5-V.bcmap","hash":"3ef5f7e35ebffe68dea8ea757cdceac5b8151372","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/HKm471-B5-H.bcmap","hash":"a75f2e32e5495d46e14b1d07ac124b3fc675ef1a","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/HKm471-B5-V.bcmap","hash":"2a6f2cc4d105f464432187daeff7b81040c093e4","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/HKscs-B5-H.bcmap","hash":"45f1793e771de030af89938eed23fff4c7daca3a","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/HKscs-B5-V.bcmap","hash":"fa5b3a1f0b3ab6bd614f8a39c9ab80b203daadf5","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Hankaku.bcmap","hash":"dfc2f635dd66602f9978ae3fe72695a02e512a6a","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Hiragana.bcmap","hash":"10e7a0f20cde8865a1dd3086a89f2e96e330d1a6","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/KSC-EUC-H.bcmap","hash":"bc349367bb60b06af5fdeeec05047f596ac71ab3","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/KSC-EUC-V.bcmap","hash":"4529ddac78c931d63411b6061b0af740b4c44ca5","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/KSC-H.bcmap","hash":"42e15fbce70bdec4f7bb5b2cbd02b0efd8bc65fc","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/KSC-Johab-H.bcmap","hash":"3585accc6e6957eda55302393fd9c3a563db6cbb","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/KSC-Johab-V.bcmap","hash":"e68b770b37b591884c459d6ce3bb43bc4556547b","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/KSC-V.bcmap","hash":"22b097fd376c21e40a0f9392961be74acc316343","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/KSCms-UHC-H.bcmap","hash":"4e0ed017a2a41ee7bf6eacf0f7e6b40ae60d223d","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/KSCms-UHC-HW-H.bcmap","hash":"d410341b19a6f05e0c20ea4a1a77078a3084044e","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/KSCms-UHC-HW-V.bcmap","hash":"6cfeb36f492702aef5ce5b7671342291010b29e1","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/KSCms-UHC-V.bcmap","hash":"3de7c5c70cf172ff560a62d5dfe84a9336b4f5ad","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/KSCpc-EUC-H.bcmap","hash":"3705fd3621117a7e5a3772c3849c5d69620ef08f","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/KSCpc-EUC-V.bcmap","hash":"1d3a11932c44a5fa8fa22efd2bd3dba7db9a2c8e","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Katakana.bcmap","hash":"da100ad00f2a9ba196892bfb4d6644ec828a4fcf","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/LICENSE","hash":"1afb5991fce0d60110b5092b68bf9ff76b0c73f6","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/NWP-H.bcmap","hash":"7d0f51c52d7a96bf289d0c6454d7e9dccf009c15","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/NWP-V.bcmap","hash":"891a866c52b46e7526123799a829db24ac6cda4f","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/RKSJ-H.bcmap","hash":"a4f7d5cdd13d3008cc42d82f69672d9e50a9d5b3","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/RKSJ-V.bcmap","hash":"16ae42a46e7eb92ca048fe24649b668c5103b4b2","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/Roman.bcmap","hash":"5755781c7e9c50cc8192426d8733a506382b5fdd","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniCNS-UCS2-H.bcmap","hash":"7f289b94c643b7cc43d4936078143a2347ca0fc1","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniCNS-UCS2-V.bcmap","hash":"6b19ece5c921516431eb94d28d74080fdd7d35bc","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniCNS-UTF16-V.bcmap","hash":"0f7152f2845cc2be4d3ce7e0e1530639ec4162e3","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniCNS-UTF16-H.bcmap","hash":"d73d55388c76932033915cea627bb628edad4f66","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniCNS-UTF32-H.bcmap","hash":"a5872864e2b121c1df5068a54201ed166c69d5f1","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniCNS-UTF32-V.bcmap","hash":"debaa98acaf13f341a5003856ef6a6a7df8f6e14","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniCNS-UTF8-H.bcmap","hash":"734ad1a00033d70c195c81358b643c7cba1327b2","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniCNS-UTF8-V.bcmap","hash":"019bd0716b2aa80bc1bcabfd389d3d5e1065ba8e","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniGB-UCS2-H.bcmap","hash":"868238e34cb9548c4d138af1adc1a4bea62dec37","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniGB-UCS2-V.bcmap","hash":"f5853ca83c25b888c1d925e2a20ef44e064d064e","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniGB-UTF16-H.bcmap","hash":"28963866dfb575b58b4370e60ebd9bfb6e56ac09","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniGB-UTF16-V.bcmap","hash":"1771376eef979ad42c2b5c01a1af1d34f54580b7","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniGB-UTF32-H.bcmap","hash":"b9ea278eb4c324d12a81e2d62479548d1e7126cb","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniGB-UTF32-V.bcmap","hash":"8167ba503aa8a6c805f39be0ca538b99898a967d","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniGB-UTF8-H.bcmap","hash":"09cc7750f69da77434093e4c94211394f5665eda","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniGB-UTF8-V.bcmap","hash":"e23616fa12132c73f52071b96e76d876430ececf","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS-UCS2-HW-H.bcmap","hash":"97cbb8599cf62914885a8b2b47594865fff52099","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS-UCS2-H.bcmap","hash":"caf525125e29fa4de78088e5eb1785c1af1f9950","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS-UCS2-HW-V.bcmap","hash":"f36bad9c680f4bba6cbcf8ac57f53e7ce21c806b","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS-UCS2-V.bcmap","hash":"45396576a6bd5468a84e2c2e4ae64c23fe7f2e85","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS-UTF16-H.bcmap","hash":"16499e93f0a447a94e1e44bfa9951401d290d89d","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS-UTF16-V.bcmap","hash":"44402b8f73e0b0160846b641e7cb2e75ab8c81bd","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS-UTF32-H.bcmap","hash":"bc482114d214e2fffe85dd0b7422f48c3e282c17","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS-UTF32-V.bcmap","hash":"2f5ec2584fd7c39f455161a857550fa7fea5f53a","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS-UTF8-H.bcmap","hash":"f47956c1c7b2eadbda93aac25fe4546b413ec0a5","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS-UTF8-V.bcmap","hash":"b3ea8d2172a2f6f9e73cf62ae467aa84848df6d7","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS2004-UTF16-H.bcmap","hash":"b8b0cc6779d3960426899fc2e7cf2866ffc80167","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS2004-UTF16-V.bcmap","hash":"2872cb273dab9d0dbb7f331826045df18764a7b0","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS2004-UTF32-H.bcmap","hash":"f48723212d1ad18c0b3c41168d6f630798e04160","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS2004-UTF32-V.bcmap","hash":"ef16ccb3102fc44c1d46f4cad40cfbdb020ee277","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS2004-UTF8-H.bcmap","hash":"385ab762d03499d35539048176928e031e5340d1","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJIS2004-UTF8-V.bcmap","hash":"565560a59d5174ac379a8d91f165c8ecdef54e06","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJISPro-UCS2-HW-V.bcmap","hash":"3f0a364246717707db82913593304cb7bd37c378","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJISPro-UCS2-V.bcmap","hash":"b1a47305fa79afa19ab696d33af5099d35570c56","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJISPro-UTF8-V.bcmap","hash":"ed6b571aeed388d3b53b9e65824af3f0146a5857","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJISX0213-UTF32-H.bcmap","hash":"15c953c36436d32f748ec7468a95c3e5843d70bb","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJISX0213-UTF32-V.bcmap","hash":"dfbe3e295505977b4e1881ef30b80362d7406bbc","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJISX02132004-UTF32-H.bcmap","hash":"c41dd50df01e3d3331f0acdb6da6c1b857a67cf7","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniJISX02132004-UTF32-V.bcmap","hash":"9c48a0c654acf4bcf51defde2f7d8b3ce52a063d","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniKS-UCS2-H.bcmap","hash":"50fcce1b2e3224791b480289e7c4c42938beb854","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniKS-UCS2-V.bcmap","hash":"6743b3e07370fd49962b97d97be77dae8d18aabb","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniKS-UTF16-H.bcmap","hash":"4f4603408966d9ac29a96c3a6755b9f23e7aa953","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniKS-UTF16-V.bcmap","hash":"cfdbfbf0b0e8ef98fef6236ea570c73465da1581","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniKS-UTF32-H.bcmap","hash":"6b0e98e16418fa5a86338b3fb361f1700971f649","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniKS-UTF32-V.bcmap","hash":"73bd343b188a80471eb156655f5b192903f86cbf","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniKS-UTF8-H.bcmap","hash":"8117d31e498a8f0fb7c223c4172ba881c0496c6f","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/UniKS-UTF8-V.bcmap","hash":"586c64948a67e4cb12de64e221b0dc3d9e47dedf","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/V.bcmap","hash":"99790f12ca21a196bc1d836ae5bf0ad7af95e079","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/cmaps/WP-Symbol.bcmap","hash":"3a6417abad460a1a083be75636c014f3a73937b5","modified":1469427908000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/annotation-check.svg","hash":"015d03ffa6a0ce93b41ed93a262879e4f8cf72fd","modified":1469427910000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/annotation-comment.svg","hash":"5ec875153d5046507050a3531422ca69b44680c7","modified":1469427910000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/annotation-help.svg","hash":"2f3d88f4e8cefafc2d76932104f6b2517034af2f","modified":1469427910000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/annotation-insert.svg","hash":"7a12af74ef20d5249a0c330d992bd1132308cbac","modified":1469427910000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/annotation-key.svg","hash":"d9224d3aef774d6ecc9735b440810ada4384be11","modified":1469427910000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/annotation-newparagraph.svg","hash":"453ba47aa10b6fcf8459569e0a550b4f91260ec7","modified":1469427910000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/annotation-noicon.svg","hash":"5a5447e5c39cf7ca748853a15dbd835ddaa3b5df","modified":1469427910000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/annotation-note.svg","hash":"6100deeb6121f98c7e024ec1a273171207c84c7f","modified":1469427910000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/annotation-paragraph.svg","hash":"70591a3b26c56815c6e5ab2bae959e8a951c43fb","modified":1469427910000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/findbarButton-next.svg","hash":"b8694ebb1f7f2f3691d52645a74d5a50a9b22ff3","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/findbarButton-previous.svg","hash":"585dd87195847bcce9b5b24450bf8c86d1248edb","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/grab.cur","hash":"fbd667e863c8278950e7761aee54b394cd93ea0c","modified":1469427910000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/grabbing.cur","hash":"f30d68405751e730ca94ada8628df45b4839931f","modified":1469427910000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/loading-dark.svg","hash":"6beecaf20132520e63af2f7729110627aa513f4b","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/loading-icon.gif","hash":"e043879d3ee94a3edf10260f21f44bfa4a6fc66e","modified":1469427910000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/loading.svg","hash":"eed9fc8e8c5aa8a579804d130c705df4acfc7559","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/secondaryToolbarButton-documentProperties.svg","hash":"d2f45686a4d7687a02aaeaad1e3362a6464b8f34","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/secondaryToolbarButton-firstPage.svg","hash":"401049e3f24dd7d23d20153b84621c346101cb1a","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/secondaryToolbarButton-handTool.svg","hash":"9b84882a6943b4e9d40cf85546099d1c5e13c5b7","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/secondaryToolbarButton-lastPage.svg","hash":"d4570550efe68c44e3a2e227d3254908e402f735","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/secondaryToolbarButton-rotateCcw.svg","hash":"29a312c7c98296b3b8c9fa4ef6a5669c49c7b2e8","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/secondaryToolbarButton-rotateCw.svg","hash":"23d341acd174c1864d35c7ce5e63dd83a331c74a","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/secondaryToolbarButton-scrollHorizontal.svg","hash":"f12f76653b9d5a5b87857c16f87ba321918a2b70","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/secondaryToolbarButton-scrollVertical.svg","hash":"e59336dafede013bf0dc2331c22841994638a61d","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/secondaryToolbarButton-scrollWrapped.svg","hash":"6f08b682673d936d697c86b043cde478c282a14c","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/secondaryToolbarButton-selectTool.svg","hash":"b22cd19d4eec18a106d35eb0629763f61e10bcd7","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/secondaryToolbarButton-spreadEven.svg","hash":"09b8adc28babb563f880415fae270b75c601975b","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/secondaryToolbarButton-spreadNone.svg","hash":"6b438647d978f50657d3324065776843b7249e15","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/secondaryToolbarButton-spreadOdd.svg","hash":"d58e18af4c5b47b05f1c37f3658f6370df95537f","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/shadow.png","hash":"b931e2de029146b2e1502ebd61c8160e72d6306c","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-bookmark.svg","hash":"6c621d20fd62e2cab21e730606e41655bc90676e","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-currentOutlineItem.svg","hash":"c4b02b9875a01992715305bf3b2e2ece3506cb85","modified":1610266950000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-menuArrow.svg","hash":"49b82a1d7fc96cbe8793474c3c42ced5682cf50d","modified":1598075168000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-download.svg","hash":"63f4143020019df8d607f01e6b22da86e93dd326","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-openFile.svg","hash":"dc27ad6bc304f9256e1821e327187efe3adee5ea","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-pageDown.svg","hash":"22883f1872f39254dce4979b43f786872dec7cd5","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-pageUp.svg","hash":"e521b0bbe583ef9ba858071e5af0e1def294ffb7","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-presentationMode.svg","hash":"f7a2416c2ba73a78b99ec3ab2ea546df86195a47","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-print.svg","hash":"c87e531fcafc7347b4c163b2923a10fa9d56a329","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-search.svg","hash":"0ef58f82497562def0aec5ca59d8cf4a9d247070","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-secondaryToolbarToggle.svg","hash":"4fe70d9c98f2bf33b8ca096378e3037dd8f89fe1","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-sidebarToggle.svg","hash":"36051f39c70897a381250c1a247523e128ce4f3a","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-viewAttachments.svg","hash":"4fa65284ff8194045f100794e1d6cd0cb5e5fa84","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-viewLayers.svg","hash":"3988264f3b30f0e402717954eabbc692f8cb6d98","modified":1599405136000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-viewOutline.svg","hash":"fc1dbb0d6ca5a4bd5e51b64d61f35423d145ef9d","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-viewThumbnail.svg","hash":"94d128518c79b50977f9a595c937702bb12df5e3","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-zoomIn.svg","hash":"dfde15786e30d5e96cba282f3b67c0f7a3b24ae6","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/toolbarButton-zoomOut.svg","hash":"ebc21e5385e4636b3842ce8d629f31b8065dd17f","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/treeitem-collapsed.svg","hash":"5b10744cb6d843f08b492fd10328c9cdb521ec14","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/images/treeitem-expanded.svg","hash":"f7791f5b8486039bfa9efbefe97de4ee4364a342","modified":1597849942000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/locale.properties","hash":"ea87f38f31a6f65f6c44b371c0af47cbe264fa25","modified":1622354192000},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/10.cache.js","hash":"6e5194198927f8f747ffd26ec1d2a159c8f24ebf","modified":1628925227495},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/14.cache.js","hash":"081fe7b879b22e50cd0a9b122e1b9739427e1b5d","modified":1628925227603},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/4.cache.js","hash":"c3de3e02b11d3e25583d9cd6b097a2782ef81d28","modified":1628925227607},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/6.cache.js","hash":"57ca64ce315abc907e6f480355011c8432baf35f","modified":1628925227608},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/cyrillic/jlm_wnss10.js","hash":"07a1ce77f22a2563e586900b6e8caca766978aa0","modified":1628925227615},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/euler/jlm_eufb10.js","hash":"1d3c3c567457a150f27f8c2bea6f2c6a99c6fa2a","modified":1628925227618},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/euler/jlm_eufm10.js","hash":"4b5ae0e5e1da729b0859e9a7224bbefa9fb5cbcf","modified":1628925227619},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/jlm_cmr10.js","hash":"077dac4ac5f0511034c9ba7e9d51862c8a8bd58a","modified":1628925227626},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/jlm_jlmbi10.js","hash":"ed885eca2df1a7dd206829563efce81cc84afa48","modified":1628925227626},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/jlm_jlmbx10.js","hash":"8f1109703b7a681323ecca9940373b1c476732b3","modified":1628925227626},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/jlm_jlmi10.js","hash":"731d0e8e9d6ddb21fbdc935b6a0e50a39ad9b249","modified":1628925227627},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/jlm_jlmr10.js","hash":"b5f7a0e6f58a77d87fb14b936edd70ed2bb43f75","modified":1628925227627},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/jlm_jlmsb10.js","hash":"9b194e98611a290144d1fa19e6508fa3ae805a74","modified":1628925227627},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/jlm_jlmsbi10.js","hash":"21f4825489fedb466ca194f6dc16031ee76c896d","modified":1628925227628},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/jlm_jlmsi10.js","hash":"9b0b8870e74abb4da139d403704e9b3f39f1e062","modified":1628925227628},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/jlm_jlmss10.js","hash":"44199254053d1763e9c15df658050532b2269862","modified":1628925227628},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/jlm_jlmtt10.js","hash":"7116f20b590a0435fa1232a3532b6771d36e1079","modified":1628925227628},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/licences/Knuth_License.txt","hash":"105c0c89c5cbea0a2f4a84551b2959ed08575a17","modified":1628925227632},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/licences/License_for_dsrom.txt","hash":"88bd1ecb66367f374e0373c6daf8bb51108b46ed","modified":1628925227632},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/licences/OFL.txt","hash":"023d12270653afe0d8706a063bfc47c1db8059f6","modified":1628925227632},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/maths/jlm_cmbsy10.js","hash":"2520d7ccfb0cd61d10d634f97ff9303786ff63a3","modified":1628925227633},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/maths/jlm_msam10.js","hash":"011f9f9f7bd9d578bdd2723b7daf97089a12f7c2","modified":1628925227634},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/maths/jlm_special.js","hash":"04b260a0de703f2813d402b60216b2dd9e8f129a","modified":1628925227635},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/maths/jlm_rsfs10.js","hash":"ada13973e6e968c9bc34651edd29bffc55b22dbb","modified":1628925227635},{"_id":"themes/fluid2/source/js/5.0/web3d/js/zipjs/codecs.js","hash":"f8f8e7c547e2b097d43a9e8c5bad02b8f7c8c54c","modified":1628925227712},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/maths/jlm_stmary10.js","hash":"dc979dd704addbc796ca198dadf874c023b7f989","modified":1628925227635},{"_id":"themes/fluid2/source/js/5.0/web3d/js/zipjs/z-worker.js","hash":"127c5a3479f70f5ca07996d2cd195d6bbcb401f5","modified":1628925227713},{"_id":"themes/fluid2/source/js/5.0/web3d/js/zipjs/pako1.0.6_min.js","hash":"ee0538024b2dcc7670909693ec3cd3543dcfaf69","modified":1628925227712},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ach/viewer.properties","hash":"22233e0524c11bfa38d180ec5f89c9a8c97853c3","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/af/viewer.properties","hash":"cda8da0df120f83ef571bae3457650af9f845cae","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/an/viewer.properties","hash":"eec2f66fa37a6f3163fb7d06f51845fc58b51bea","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ar/viewer.properties","hash":"abef7a7c48fafd5fd12b72fb60322a45ca2d5ba5","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ast/viewer.properties","hash":"00b445afc193df32c4fc13a75eaab6c44f6b3c42","modified":1621144990000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/az/viewer.properties","hash":"0fed4acef9407e9c832d0ae625a05301305add21","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/be/viewer.properties","hash":"e357490fbfdf9e43e49fda1cea3e4c4121d622e8","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/bg/viewer.properties","hash":"16e1b4a830c2a91c6bbc86d1d51ae598c0a925c5","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/bn/viewer.properties","hash":"0084429d36c41b3dd530d7e5955fb1cf37dd2e40","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/bo/viewer.properties","hash":"0121edf8d19a64d07e8fbcba4999464eb8145768","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/br/viewer.properties","hash":"d7b1272ae65ca96638b7057c242b972190c7df14","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/brx/viewer.properties","hash":"df2505908f0a3892247578ff387f9c556abc2e46","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/bs/viewer.properties","hash":"7467e153a429f2e4862fde1ef94ba5a79aa7fe62","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ca/viewer.properties","hash":"d615c145192c4b4e3be592a7a90ae9a6441c955d","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/cak/viewer.properties","hash":"693e3429a8b7a2600c890a4420cb980d481c021f","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ckb/viewer.properties","hash":"fc076de69218a2f8f6dd074771ce82f9ca2c58de","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/cs/viewer.properties","hash":"c12b2316beef18cb50377f39216fffc8e3d3a8ba","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/cy/viewer.properties","hash":"e75641d670c4e014e014d7471c68fa6c99d201be","modified":1621144990000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/da/viewer.properties","hash":"94d157b33044a1ac0dc14b1d4214aceeeb94d704","modified":1622353974000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/de/viewer.properties","hash":"abcff6b79566782cd76b4102c11659f2c4211b42","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/dsb/viewer.properties","hash":"0c98c92289b9004aa59471aa2c2a8173667fb9ed","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/el/viewer.properties","hash":"853bc05f83422f3c9f01137afc8718591b69593e","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/en-CA/viewer.properties","hash":"3eec6c9ec82635f3d4feb5a53cc96750a71b7743","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/en-GB/viewer.properties","hash":"6e3565f14ab631f6c4d0a84f8e9f56177a45ec82","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/en-US/viewer.properties","hash":"12b2108dd9eab08f4b900f948a9cc61b9dd78731","modified":1618578602000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/eo/viewer.properties","hash":"41a51e90cddb8b25385ed66dff53f0ed7cb4ad86","modified":1622353974000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/es-AR/viewer.properties","hash":"3fc16c5b5817cfc7e3b97f259ca01217b7659df2","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/es-CL/viewer.properties","hash":"5b59c142d50d8827f3b959f8870e24a6b483079e","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/es-ES/viewer.properties","hash":"6dbfa750a62f297929f7ff778c215abadbfb77b2","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/es-MX/viewer.properties","hash":"eb26865ba31ef94f93df42ecb8d5bd9d1bc01265","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/et/viewer.properties","hash":"49c974e3498e5180e2e22818ce4bf5a118897587","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/eu/viewer.properties","hash":"18d429ecaa63043c625c94bf99e2521e9c90ddf8","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/fa/viewer.properties","hash":"126e5dc7e15392b4329755c7e2d8ed880fad3f0b","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ff/viewer.properties","hash":"73938a6a494a6e6ac40dccc48e6e2b2bce8aa195","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/fi/viewer.properties","hash":"250abdfd721a6b5ed2d8ea5014e194db799f6eed","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/fr/viewer.properties","hash":"9bc0443f7525b32417fe0f8f6fb55db961e08109","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/fy-NL/viewer.properties","hash":"b3248fb5e2bd82454450f6f0858ba2266b9524f2","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ga-IE/viewer.properties","hash":"ae15ad3dd8b97ae8ca3598f6e87d0b8e7a9215eb","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/gd/viewer.properties","hash":"3f419f18118f75c051712f66b1c5594581fafe9a","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/gl/viewer.properties","hash":"549eb46c7227121ba6ed43fc190f9a2c6b8d01b7","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/gn/viewer.properties","hash":"fc059bef988190d8833b4d8ff66d69e4831de64d","modified":1621144990000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/gu-IN/viewer.properties","hash":"f8e9a229dea000df970fe8e319f43265c48f6292","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/he/viewer.properties","hash":"c2cbd966f3cc61164b8c6d656425c8c01859b1a3","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/hi-IN/viewer.properties","hash":"6ce80e3fd59a5d11a7a313befc51a5470deaf20d","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/hr/viewer.properties","hash":"b1bbae09354ae972cfbfcfed6e17f2dd3766f2d2","modified":1621144990000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/hsb/viewer.properties","hash":"6df5120b7cb2c401c8964b04b3dcb983e9ee351d","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/hu/viewer.properties","hash":"d07257c6577cf489a88cfd25a14ea2b470f0ee60","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/hy-AM/viewer.properties","hash":"3a5d42645591b32642833b6c678c588f45918cbc","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/hye/viewer.properties","hash":"bc7746be7a9f2b8fa3e1adf883f6c45b65d79029","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ia/viewer.properties","hash":"c574d325003bda9d96ab6df914ecb8631cfaf257","modified":1622353974000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/id/viewer.properties","hash":"681d0eaf73d8dead26fc8662fd805c5eaf685ca6","modified":1622353974000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/is/viewer.properties","hash":"00cf782347f4f205f259417240c0cfd3bc1014d5","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/it/viewer.properties","hash":"7a8552cb389c08e51f72b2501edf22dfe9a08d62","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ja/viewer.properties","hash":"bbbb1a854d1d37faca5d11c69e2c39891da19f3b","modified":1621144990000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ka/viewer.properties","hash":"9123b5a9d63d495c38a9f905c7d46bb9fada6475","modified":1621144990000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/kab/viewer.properties","hash":"6bda951e307e31ecc481f125d2457f81b39f51a9","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/kk/viewer.properties","hash":"61edd40dde6b907490f803533a4cbc368ecca15d","modified":1622353974000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/km/viewer.properties","hash":"a847274b304a9300cee5c6593164c3baef2aa3e2","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/kn/viewer.properties","hash":"668a2de23d6b4ea5afdfd43747705c8bdad1f7f4","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ko/viewer.properties","hash":"59b829364bfdfec7c6964bf5181c0e2936416d68","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/lo/viewer.properties","hash":"625438b69b56a04f2e45464f8c113cac82c7e4af","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/lij/viewer.properties","hash":"24f627446177af986af909188d11e603bf250fb5","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/lt/viewer.properties","hash":"ed3d0af9105380fdd26e40381f2d54ed81ac9187","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ltg/viewer.properties","hash":"f2ed2096794dcb0bbcded9ec3170f3321ee3c943","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/lv/viewer.properties","hash":"91af03141a3e19dca288bdbdc2fa71db67c5bf91","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/meh/viewer.properties","hash":"d472059016f2cfb00d40fbe87c4f9680ea364605","modified":1606025440000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/mk/viewer.properties","hash":"1c2a20a06f7fb4ba248c0651ef1694a50ebf18de","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ms/viewer.properties","hash":"ff932b96820ceefc690339a0c9a3304682e394e2","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/mr/viewer.properties","hash":"d7aeb6b29a64066ea2201c1ae21f65922abe5b5a","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/my/viewer.properties","hash":"68b5887c765c0c1d6ea03abbe14e3148d4434ad3","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/nb-NO/viewer.properties","hash":"3de1522e9e66e6afcb2f2dcfc5d3102f647f7203","modified":1622353974000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/nl/viewer.properties","hash":"9172d8f691147bd4882d691f250ebf0fc822df12","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ne-NP/viewer.properties","hash":"1829530b8f43127940aa86fde201f09e27285e53","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/nn-NO/viewer.properties","hash":"b4343c3ef823340027c3ce3e6f2da8cb85cc182d","modified":1622353974000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/oc/viewer.properties","hash":"52d00fdaf1881c6c6cbcee2bd1be747012aa005b","modified":1622353974000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/pa-IN/viewer.properties","hash":"0867bc6c3ec2a30c06a102526ff32a345e325aa0","modified":1622353974000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/pl/viewer.properties","hash":"528f2bb170a6997ac95755a175ba60cc54221f96","modified":1621144990000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/pt-BR/viewer.properties","hash":"9a91e1bed06ef2b18ff122c8c52930fdc9026cf9","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/pt-PT/viewer.properties","hash":"426cafa44d382ecdbaf4f0d4f4c870248c64e55c","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/rm/viewer.properties","hash":"cacbcdc8bc15296a07e024ad6fd2613cdc37e277","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ro/viewer.properties","hash":"1c23d6911910801a04c2eab29bea07de243c3f79","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ru/viewer.properties","hash":"bfa4e178c905d33189a7767efcdc23a0dac668a8","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/scn/viewer.properties","hash":"591b7ddd7a61c15d2bdeb04b1c1bf42120afd259","modified":1606025450000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/sco/viewer.properties","hash":"942df702b63317a007cf8d33a77a482bba7b81d4","modified":1622353974000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/si/viewer.properties","hash":"b1f41db0c4faebadb7bb91a44b265b50c6de0996","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/sk/viewer.properties","hash":"da713afcb684176d2ce9aa4dbc1d006c0ef5d543","modified":1622353974000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/sl/viewer.properties","hash":"e8a24ee56cc2c15d7642885cfd23147e94899684","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/son/viewer.properties","hash":"260d780bb7a9ffabd049a7a0ffbbd7877ae0946d","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/sq/viewer.properties","hash":"2263c496b47fb8bda695cb687682d19beefd907f","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/sr/viewer.properties","hash":"bfa745a3c454c50e57c2a89f129b412e1c9c63d7","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/sv-SE/viewer.properties","hash":"9af605df3b2bb40ded376c8cd3d58e9ed0c92eae","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/szl/viewer.properties","hash":"545827b6848c153a801aa3b63822ea4f8e12fe3c","modified":1621144990000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ta/viewer.properties","hash":"5a62b0aea318c9e7cdc38fecc9b02bfb156a9011","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/te/viewer.properties","hash":"de0d4f0a497d3423724340343dff098d86c3cd2f","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/tg/viewer.properties","hash":"c33b9b80f34307a5f839ecedc731b5e71787a03f","modified":1621144990000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/th/viewer.properties","hash":"ab49a6e1babcfcaa7220ac9c6ef7b2914128a330","modified":1621144990000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/tl/viewer.properties","hash":"88634d2e212d7c0e0f67fba9c5b7430abe692e3c","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/tr/viewer.properties","hash":"e9395224d95c5d04c5dc295293e81f3e1f5f8272","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/trs/viewer.properties","hash":"c55ee335a9337a51b782a1d1dc3bd635338bc237","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/uk/viewer.properties","hash":"2e7e5eb34010429851f93b6430631f1533d9874f","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/ur/viewer.properties","hash":"3f9b6d2ebe51a7d30099c44f3473fcaec73ec81f","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/uz/viewer.properties","hash":"8ac52233d8269d523e64d77186268b86dc92f562","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/vi/viewer.properties","hash":"eae7ef3e8993b4bd09d2e051b4fed78365c5d048","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/wo/viewer.properties","hash":"1426459b8518b593673ac0b758407f2a228c89ba","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/xh/viewer.properties","hash":"d7281ebaa9e44e80ab8010d5c478bb091740e0a0","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/zh-CN/viewer.properties","hash":"fd941a56f549efa2a1acb3cd6caca69283283638","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs/web/locale/zh-TW/viewer.properties","hash":"e1db3a58598a64d62c1653fb6407bae54e9738bf","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ach/viewer.properties","hash":"22233e0524c11bfa38d180ec5f89c9a8c97853c3","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/af/viewer.properties","hash":"cda8da0df120f83ef571bae3457650af9f845cae","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/an/viewer.properties","hash":"eec2f66fa37a6f3163fb7d06f51845fc58b51bea","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ar/viewer.properties","hash":"abef7a7c48fafd5fd12b72fb60322a45ca2d5ba5","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ast/viewer.properties","hash":"00b445afc193df32c4fc13a75eaab6c44f6b3c42","modified":1621144990000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/az/viewer.properties","hash":"0fed4acef9407e9c832d0ae625a05301305add21","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/be/viewer.properties","hash":"e357490fbfdf9e43e49fda1cea3e4c4121d622e8","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/bg/viewer.properties","hash":"16e1b4a830c2a91c6bbc86d1d51ae598c0a925c5","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/bn/viewer.properties","hash":"0084429d36c41b3dd530d7e5955fb1cf37dd2e40","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/bo/viewer.properties","hash":"0121edf8d19a64d07e8fbcba4999464eb8145768","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/br/viewer.properties","hash":"d7b1272ae65ca96638b7057c242b972190c7df14","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/brx/viewer.properties","hash":"df2505908f0a3892247578ff387f9c556abc2e46","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/bs/viewer.properties","hash":"7467e153a429f2e4862fde1ef94ba5a79aa7fe62","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/cak/viewer.properties","hash":"693e3429a8b7a2600c890a4420cb980d481c021f","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ca/viewer.properties","hash":"d615c145192c4b4e3be592a7a90ae9a6441c955d","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ckb/viewer.properties","hash":"fc076de69218a2f8f6dd074771ce82f9ca2c58de","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/cy/viewer.properties","hash":"e75641d670c4e014e014d7471c68fa6c99d201be","modified":1621144990000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/cs/viewer.properties","hash":"c12b2316beef18cb50377f39216fffc8e3d3a8ba","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/da/viewer.properties","hash":"94d157b33044a1ac0dc14b1d4214aceeeb94d704","modified":1622353974000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/de/viewer.properties","hash":"abcff6b79566782cd76b4102c11659f2c4211b42","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/dsb/viewer.properties","hash":"0c98c92289b9004aa59471aa2c2a8173667fb9ed","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/el/viewer.properties","hash":"853bc05f83422f3c9f01137afc8718591b69593e","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/en-CA/viewer.properties","hash":"3eec6c9ec82635f3d4feb5a53cc96750a71b7743","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/en-GB/viewer.properties","hash":"6e3565f14ab631f6c4d0a84f8e9f56177a45ec82","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/en-US/viewer.properties","hash":"12b2108dd9eab08f4b900f948a9cc61b9dd78731","modified":1618578602000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/eo/viewer.properties","hash":"41a51e90cddb8b25385ed66dff53f0ed7cb4ad86","modified":1622353974000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/es-CL/viewer.properties","hash":"5b59c142d50d8827f3b959f8870e24a6b483079e","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/es-AR/viewer.properties","hash":"3fc16c5b5817cfc7e3b97f259ca01217b7659df2","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/es-ES/viewer.properties","hash":"6dbfa750a62f297929f7ff778c215abadbfb77b2","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/es-MX/viewer.properties","hash":"eb26865ba31ef94f93df42ecb8d5bd9d1bc01265","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/eu/viewer.properties","hash":"18d429ecaa63043c625c94bf99e2521e9c90ddf8","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/et/viewer.properties","hash":"49c974e3498e5180e2e22818ce4bf5a118897587","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/fa/viewer.properties","hash":"126e5dc7e15392b4329755c7e2d8ed880fad3f0b","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ff/viewer.properties","hash":"73938a6a494a6e6ac40dccc48e6e2b2bce8aa195","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/fi/viewer.properties","hash":"250abdfd721a6b5ed2d8ea5014e194db799f6eed","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/fr/viewer.properties","hash":"9bc0443f7525b32417fe0f8f6fb55db961e08109","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/fy-NL/viewer.properties","hash":"b3248fb5e2bd82454450f6f0858ba2266b9524f2","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ga-IE/viewer.properties","hash":"ae15ad3dd8b97ae8ca3598f6e87d0b8e7a9215eb","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/gl/viewer.properties","hash":"549eb46c7227121ba6ed43fc190f9a2c6b8d01b7","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/gd/viewer.properties","hash":"3f419f18118f75c051712f66b1c5594581fafe9a","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/gn/viewer.properties","hash":"fc059bef988190d8833b4d8ff66d69e4831de64d","modified":1621144990000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/gu-IN/viewer.properties","hash":"f8e9a229dea000df970fe8e319f43265c48f6292","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/he/viewer.properties","hash":"c2cbd966f3cc61164b8c6d656425c8c01859b1a3","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/hi-IN/viewer.properties","hash":"6ce80e3fd59a5d11a7a313befc51a5470deaf20d","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/hr/viewer.properties","hash":"b1bbae09354ae972cfbfcfed6e17f2dd3766f2d2","modified":1621144990000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/hsb/viewer.properties","hash":"6df5120b7cb2c401c8964b04b3dcb983e9ee351d","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/hu/viewer.properties","hash":"d07257c6577cf489a88cfd25a14ea2b470f0ee60","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/hy-AM/viewer.properties","hash":"3a5d42645591b32642833b6c678c588f45918cbc","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/hye/viewer.properties","hash":"bc7746be7a9f2b8fa3e1adf883f6c45b65d79029","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ia/viewer.properties","hash":"c574d325003bda9d96ab6df914ecb8631cfaf257","modified":1622353974000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/id/viewer.properties","hash":"681d0eaf73d8dead26fc8662fd805c5eaf685ca6","modified":1622353974000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/is/viewer.properties","hash":"00cf782347f4f205f259417240c0cfd3bc1014d5","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/it/viewer.properties","hash":"7a8552cb389c08e51f72b2501edf22dfe9a08d62","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ja/viewer.properties","hash":"bbbb1a854d1d37faca5d11c69e2c39891da19f3b","modified":1621144990000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ka/viewer.properties","hash":"9123b5a9d63d495c38a9f905c7d46bb9fada6475","modified":1621144990000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/kab/viewer.properties","hash":"6bda951e307e31ecc481f125d2457f81b39f51a9","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/kk/viewer.properties","hash":"61edd40dde6b907490f803533a4cbc368ecca15d","modified":1622353974000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/km/viewer.properties","hash":"a847274b304a9300cee5c6593164c3baef2aa3e2","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/kn/viewer.properties","hash":"668a2de23d6b4ea5afdfd43747705c8bdad1f7f4","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ko/viewer.properties","hash":"59b829364bfdfec7c6964bf5181c0e2936416d68","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/lij/viewer.properties","hash":"24f627446177af986af909188d11e603bf250fb5","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/lo/viewer.properties","hash":"625438b69b56a04f2e45464f8c113cac82c7e4af","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/lt/viewer.properties","hash":"ed3d0af9105380fdd26e40381f2d54ed81ac9187","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ltg/viewer.properties","hash":"f2ed2096794dcb0bbcded9ec3170f3321ee3c943","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/lv/viewer.properties","hash":"91af03141a3e19dca288bdbdc2fa71db67c5bf91","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/meh/viewer.properties","hash":"d472059016f2cfb00d40fbe87c4f9680ea364605","modified":1606025440000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/mk/viewer.properties","hash":"1c2a20a06f7fb4ba248c0651ef1694a50ebf18de","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/mr/viewer.properties","hash":"d7aeb6b29a64066ea2201c1ae21f65922abe5b5a","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ms/viewer.properties","hash":"ff932b96820ceefc690339a0c9a3304682e394e2","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/my/viewer.properties","hash":"68b5887c765c0c1d6ea03abbe14e3148d4434ad3","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/nb-NO/viewer.properties","hash":"3de1522e9e66e6afcb2f2dcfc5d3102f647f7203","modified":1622353974000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ne-NP/viewer.properties","hash":"1829530b8f43127940aa86fde201f09e27285e53","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/nl/viewer.properties","hash":"9172d8f691147bd4882d691f250ebf0fc822df12","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/nn-NO/viewer.properties","hash":"b4343c3ef823340027c3ce3e6f2da8cb85cc182d","modified":1622353974000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/oc/viewer.properties","hash":"52d00fdaf1881c6c6cbcee2bd1be747012aa005b","modified":1622353974000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/pa-IN/viewer.properties","hash":"0867bc6c3ec2a30c06a102526ff32a345e325aa0","modified":1622353974000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/pl/viewer.properties","hash":"528f2bb170a6997ac95755a175ba60cc54221f96","modified":1621144990000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/pt-BR/viewer.properties","hash":"9a91e1bed06ef2b18ff122c8c52930fdc9026cf9","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/pt-PT/viewer.properties","hash":"426cafa44d382ecdbaf4f0d4f4c870248c64e55c","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/rm/viewer.properties","hash":"cacbcdc8bc15296a07e024ad6fd2613cdc37e277","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ro/viewer.properties","hash":"1c23d6911910801a04c2eab29bea07de243c3f79","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ru/viewer.properties","hash":"bfa4e178c905d33189a7767efcdc23a0dac668a8","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/scn/viewer.properties","hash":"591b7ddd7a61c15d2bdeb04b1c1bf42120afd259","modified":1606025450000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/sco/viewer.properties","hash":"942df702b63317a007cf8d33a77a482bba7b81d4","modified":1622353974000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/si/viewer.properties","hash":"b1f41db0c4faebadb7bb91a44b265b50c6de0996","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/sk/viewer.properties","hash":"da713afcb684176d2ce9aa4dbc1d006c0ef5d543","modified":1622353974000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/sl/viewer.properties","hash":"e8a24ee56cc2c15d7642885cfd23147e94899684","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/son/viewer.properties","hash":"260d780bb7a9ffabd049a7a0ffbbd7877ae0946d","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/sr/viewer.properties","hash":"bfa745a3c454c50e57c2a89f129b412e1c9c63d7","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/sq/viewer.properties","hash":"2263c496b47fb8bda695cb687682d19beefd907f","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/sv-SE/viewer.properties","hash":"9af605df3b2bb40ded376c8cd3d58e9ed0c92eae","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/szl/viewer.properties","hash":"545827b6848c153a801aa3b63822ea4f8e12fe3c","modified":1621144990000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ta/viewer.properties","hash":"5a62b0aea318c9e7cdc38fecc9b02bfb156a9011","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/te/viewer.properties","hash":"de0d4f0a497d3423724340343dff098d86c3cd2f","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/tg/viewer.properties","hash":"c33b9b80f34307a5f839ecedc731b5e71787a03f","modified":1621144990000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/th/viewer.properties","hash":"ab49a6e1babcfcaa7220ac9c6ef7b2914128a330","modified":1621144990000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/tl/viewer.properties","hash":"88634d2e212d7c0e0f67fba9c5b7430abe692e3c","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/tr/viewer.properties","hash":"e9395224d95c5d04c5dc295293e81f3e1f5f8272","modified":1619934416000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/trs/viewer.properties","hash":"c55ee335a9337a51b782a1d1dc3bd635338bc237","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/uk/viewer.properties","hash":"2e7e5eb34010429851f93b6430631f1533d9874f","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/ur/viewer.properties","hash":"3f9b6d2ebe51a7d30099c44f3473fcaec73ec81f","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/uz/viewer.properties","hash":"8ac52233d8269d523e64d77186268b86dc92f562","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/vi/viewer.properties","hash":"eae7ef3e8993b4bd09d2e051b4fed78365c5d048","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/wo/viewer.properties","hash":"1426459b8518b593673ac0b758407f2a228c89ba","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/xh/viewer.properties","hash":"d7281ebaa9e44e80ab8010d5c478bb091740e0a0","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/zh-CN/viewer.properties","hash":"fd941a56f549efa2a1acb3cd6caca69283283638","modified":1618727220000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/locale/zh-TW/viewer.properties","hash":"e1db3a58598a64d62c1653fb6407bae54e9738bf","modified":1619934416000},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/optional/jlm_cmssbx10.js","hash":"f2999dc67503d4d6892fcf60f108c631991a3700","modified":1628925227630},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/optional/jlm_cmbx10.js","hash":"a0e89ebb45a12f9233883b8a737c9a4a24c633dc","modified":1628925227629},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/optional/jlm_cmssi10.js","hash":"3e300470950026f5763ae50e4c3fa8698378655e","modified":1628925227630},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/maths/optional/jlm_dsrom10.js","hash":"afa082c6fb7042909663d89d6206d2350fd8974c","modified":1628925227636},{"_id":"themes/fluid2/source/img/meicon.png","hash":"9232364c346db7d635804d69e1e2d5ecda6007f3","modified":1628215074715},{"_id":"themes/fluid2/source/js/deployggb.js","hash":"d518621cf4b141eee075d9b398abf0f130c44d1d","modified":1628925227714},{"_id":"themes/fluid2/source/js/jquery.js","hash":"29fa5ad995e9ec866ece1d3d0b698fc556580eee","modified":1628925227715},{"_id":"themes/fluid2/source/img/bg/9884183b3b1e1b50e1d68c69d97b38d6_4.jpg","hash":"a0159bcf7c7ab5b2cbe2e4fdb7307b7ac8e0d061","modified":1628600323224},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/base/jlm_cmmi10.js","hash":"05b260820869b1d18f6c61509f59123764acd092","modified":1628925227611},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/base/jlm_cmmib10.js","hash":"2e4455930cfba2c7bb99ac7f8fa5f326d09de514","modified":1628925227612},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/cyrillic/jlm_wnbx10.js","hash":"da6f0f87603d713cee58242e60c4ac91b7cbbc5b","modified":1628925227613},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/cyrillic/jlm_wnr10.js","hash":"88446b429371e7eee03852efe0c9fae5b8176566","modified":1628925227614},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/cyrillic/jlm_wnssbx10.js","hash":"a5bf88d9813b83ea2834d93a80fd4244a4032f73","modified":1628925227615},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/cyrillic/jlm_wnssi10.js","hash":"1ca4e11415505e21fc38f5c17dc0978e846167a0","modified":1628925227616},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/cyrillic/jlm_wntt10.js","hash":"9d7229b45e02f659596c831ec3cac9666ab8bb42","modified":1628925227618},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/maths/jlm_msbm10.js","hash":"2f2fff6b5f6ff1fce31edbc8dc22ed26c55b9911","modified":1628925227634},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/optional/jlm_cmbxti10.js","hash":"5f842daf04d00c1789e332b64d41de51f76e3387","modified":1628925227630},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/optional/jlm_cmti10.js","hash":"95339af0bc2b62348cbb98e8b796981309a71980","modified":1628925227631},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/latin/optional/jlm_cmtt10.js","hash":"c3fbab7f56b27ab40dc615210fb8d087e98660b9","modified":1628925227632},{"_id":"themes/fluid2/source/img/bg/36e6c0d304d7a672d6d828e164f2c48b_1.jpg","hash":"ca1ad49f059e26019a7df2904a7bc22a5b10d09c","modified":1628599383955},{"_id":"themes/fluid2/source/img/bg/7fb86b41c8bb0d7bff7a3142c83d8348_1.jpg","hash":"084e16156fa67e0d090663ed15ad64b2104a67a6","modified":1628599469189},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_am.js","hash":"f6e9e7a7fc15f6ce0c669154684262c661779f05","modified":1628925227639},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ar-MA.js","hash":"166dad5b40dca8cf8cca649d8bf206682d95a9db","modified":1628925227640},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ar-TN.js","hash":"8806d01286ab3085789338156977734e04ca1743","modified":1628925227641},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ar.js","hash":"886f615e9eccc0d051e2738c2b739877f8f1979a","modified":1628925227642},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_az.js","hash":"93526a888c0812eda3f9b98a9d5ee9529ad98de4","modified":1628925227643},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_bn.js","hash":"9c2cb08fe7c8e0556203a9ba89e89fe86970886c","modified":1628925227644},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_bs.js","hash":"c50f8486f047a00510fcbe1ebb8e55c859820b50","modified":1628925227645},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ca.js","hash":"f7cfc6a968e87a53cb16a7c9d142b2d9a3059f9c","modified":1628925227647},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ca-XV.js","hash":"fda9e3063c5e5334a101d3864b3a33bad03efbda","modified":1628925227646},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_cs.js","hash":"941da981453596efbc166119f81c7c0c72417cd6","modified":1628925227647},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_da.js","hash":"69e9225f535c8f5a1e08890793ce27d580e823d0","modified":1628925227649},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_de-AT.js","hash":"40ac135b5d0d1c5b35d64e0b4688fd16686f9ffa","modified":1628925227650},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_de.js","hash":"3b4b531bc42a7d6ddd8a5566206ab0e9695b487c","modified":1628925227651},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_en-AU.js","hash":"83fba757db880b5014064f9cf62abf5fdf5a6a8b","modified":1628925227653},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_en-GB.js","hash":"ee0243a40a741b8ff2444a5e8cce46a83ca84acc","modified":1628925227654},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_en.js","hash":"7f1840dcc6009eddc1f3703825bd3acacdd50bd5","modified":1628925227655},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_eo.js","hash":"2ec0867650108eb5d29548ee1c5e79064abcbd64","modified":1628925227656},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_es-ES.js","hash":"19cf2225e03dc4645d8b428aa1fc6696ab8957e7","modified":1628925227657},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_es-UY.js","hash":"aea291dba0012ba0a1a3f15d0977d8796328cf57","modified":1628925227657},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_es.js","hash":"3c4f411ba0c6cda16bc3a136f30ddba60022235f","modified":1628925227658},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_et.js","hash":"a05db12d7f2c46751929f6303aaf2cc2fa2e23ac","modified":1628925227659},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_eu.js","hash":"daa1f345d53e80ae64286d3684f99bf8d3366f29","modified":1628925227660},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_fa.js","hash":"41ec0f05ce51a582fb9035eba9434a3d5d2bb68b","modified":1628925227661},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_fi.js","hash":"490cda1008d6b9edfcf0746e179cf2402dd1349f","modified":1628925227661},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_fil.js","hash":"2aef4b985e47fcca035d7d57d75c214f2c8b898c","modified":1628925227662},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_fr.js","hash":"e6e1ce60e6b859557bef70dd9e62a59fa6ca660f","modified":1628925227663},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_gl.js","hash":"b437ac7246de7439c4a4e77640c6804dd0c383c4","modified":1628925227664},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_he.js","hash":"b627ac36425f5f28b56b78408d88df36e4037369","modified":1628925227665},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_hr.js","hash":"5e3dc314e8634d31cc9891a457c66dfe9abf58c7","modified":1628925227667},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_hu.js","hash":"189642d62216579b734850ae0fa1ee563e503d06","modified":1628925227668},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_id.js","hash":"4251bd250ede2c2f17cb638472a86205153b10a8","modified":1628925227670},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_is.js","hash":"65ad4b02985d2f3dbd793a6bb4209d486d750ef6","modified":1628925227671},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_it.js","hash":"4a7a099ac38cf6d4292e0f2e7e2a455a9f4282f9","modified":1628925227672},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_km.js","hash":"aa44350f130e0714beb4047df4219b689098bcb0","modified":1628925227675},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ko.js","hash":"67433c0023afdc32f187fa8ae8cd261dc14ecbba","modified":1628925227677},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_lt.js","hash":"f60b9179a920892938b95fe4397470fb7ff5add0","modified":1628925227678},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_lv.js","hash":"2ad082b399af3897dca56747deb638bee7a81834","modified":1628925227679},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ml.js","hash":"61c06cb43ef349fea863c8489b66acec03dffe84","modified":1628925227680},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_mr.js","hash":"5379c7cbe0fa2bc39c58b7cfb018d87c55de383d","modified":1628925227683},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ms.js","hash":"e56a7cac61240eb5b4df1111170252a178e4ca1f","modified":1628925227683},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_nb.js","hash":"012689dce5efb43bbbef386f091745103b029c54","modified":1628925227684},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_nl-NL.js","hash":"189dd1de885a1f483aef887f11e26ba21e9039e1","modified":1628925227686},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_nl.js","hash":"e35d4ca5c28bb286c57aac4f24fa85cdb9cb15d2","modified":1628925227687},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_nn.js","hash":"1c6b8fa792b5642598cac77cf347765882b05182","modified":1628925227688},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_pl.js","hash":"387b308ab2e07aac9915d83ea067c8d730be958d","modified":1628925227690},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_pt-PT.js","hash":"74b7d32a3a144c5a09714a232ce35713fa956540","modified":1628925227691},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_pt.js","hash":"bdf27a59b921b245907a51819d7b1eb03e56d474","modified":1628925227692},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ro.js","hash":"bc7dba2881a68df810dbf13a1e979e0978ae8507","modified":1628925227693},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_sk.js","hash":"65822513376d69d2068bd88fd174460812de646e","modified":1628925227696},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_sl.js","hash":"e22e366bb7830bb18b1837ced295fab121f4b4c6","modified":1628925227697},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_sq.js","hash":"5cf5edcbc12a6593d5016123e5469127aeea4603","modified":1628925227698},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_sr.js","hash":"b936050fb908e52c28d091f4b83c5f4b4cd7df13","modified":1628925227699},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_sv.js","hash":"85f8ff1e85d929f2955daa91cd179974ae3970d6","modified":1628925227700},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_tr.js","hash":"e4b497b3b94ad0957a198601ce2b6c1a21b80193","modified":1628925227704},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_uz.js","hash":"878595399f2a88805819df01d80d877074a63968","modified":1628925227706},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_vi.js","hash":"d62dd87fd1fded522202e8ffbc6d93405999d636","modified":1628925227707},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_xh.js","hash":"7cb84d5b17aab6f0f24ea734adf3c036aaf169e6","modified":1628925227708},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_yi.js","hash":"8ce39b2e1ca422c52a4ca2240887796187322382","modified":1628925227709},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_zh-CN.js","hash":"f6e2eb6332efdb8b53f7d7a51898b475d8319476","modified":1628925227710},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_zh-TW.js","hash":"f597199b838c6986e9267c73ced422b56e9afbac","modified":1628925227710},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/2.cache.js","hash":"d5f1d97021fe50b6e55b7437ffa4b45d750c4822","modified":1628925227604},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/5.cache.js","hash":"c20a87816b343d449e7dc21b00702fdad41edddc","modified":1628925227607},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/8.cache.js","hash":"a547af7af40e5b123797d702fa4636cb41d6d49e","modified":1628925227610},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/9.cache.js","hash":"35db8427e8226fb183f7b856545a1f58460cbd21","modified":1628925227611},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/cyrillic/jlm_wnbxti10.js","hash":"329db1d249f54083f42bf9312e098687127f29fb","modified":1628925227614},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/greek/jlm_fcmbipg.js","hash":"9a2d9698df3b1ccb2120f1bd65db31b4390f145f","modified":1628925227620},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/greek/jlm_fcmbpg.js","hash":"b12e48b042c80d5f6f379e1d8abbc5950d6295f7","modified":1628925227621},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/greek/jlm_fcmrpg.js","hash":"0b3c611253a7c6b04d51edb3943e4b2357474b0d","modified":1628925227622},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/greek/jlm_fcsbpg.js","hash":"8aff085490b314c5e8004addf71534b1c5fbf2fa","modified":1628925227623},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/greek/jlm_fcsropg.js","hash":"fedd13adb544ab5f100bec147e46e53d495c90bd","modified":1628925227624},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/greek/jlm_fcsrpg.js","hash":"d639e486892af309e8f53f7cfea0e97095d774aa","modified":1628925227625},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/greek/jlm_fctrpg.js","hash":"58843194ff1fae4c6a122e1aa2b10bc1880fb609","modified":1628925227625},{"_id":"themes/fluid2/source/img/meiconbali.jpg","hash":"251240f4833515e6df48cdec4b17f4c0313c0784","modified":1628232992878},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_af.js","hash":"d498a7f286145d07f917e7c8b472531cff02ff76","modified":1628925227638},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_bg.js","hash":"c283208e01623dbe78768003cc7bcdb3897f0f1b","modified":1628925227644},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_cy.js","hash":"692bdf24cabb67d90bc22a885db2ac830b2616c8","modified":1628925227649},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_el.js","hash":"048d6f9571a4210a14cbe2d38d6f5bbfe60c42c5","modified":1628925227652},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_hi.js","hash":"6f7e26bac41db803ee3bff2bc01443aaa9f1da4f","modified":1628925227666},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_hy.js","hash":"a41a9672ecf6dc755ea7954c2f03352a4527a084","modified":1628925227669},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ja.js","hash":"0789288569ed7a2c1fd64c7b246c6ce1a1511eec","modified":1628925227672},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_kk.js","hash":"3e9ba0fdd9a1b6c6e2be0d93006a2a11561da672","modified":1628925227675},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_kn.js","hash":"9c73006a01b7499e0b40be1b6abb41ca13342d7d","modified":1628925227676},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_mk.js","hash":"ec0d2848665337c28a5ba87686a50a739f7d40f8","modified":1628925227680},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_mn.js","hash":"7b0038110e346faf975205046720a9d4a835d825","modified":1628925227682},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ne.js","hash":"c0b913c294ad220c87f46d4eb7db896d8d37e1bc","modified":1628925227686},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ru.js","hash":"8abba2d4a7209f32e08848ef82b544abef957767","modified":1628925227694},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_si.js","hash":"bfe548e1b966695fddbe4fff2826af16792e8848","modified":1628925227695},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ta.js","hash":"0710cb3992c162a91925d08505ac572e192ff54b","modified":1628925227701},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_tg.js","hash":"80caab4970d2ab418edd115315903a54ab2a6292","modified":1628925227702},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ug.js","hash":"74e1f2912d3503181197eba0081037cc9ad47de0","modified":1628925227705},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_uk.js","hash":"ef3343f3a29a9ae544da5c885547441cadffbd56","modified":1628925227706},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/7.cache.js","hash":"3c19456df0f15acfaa831d7df64f70a4196f7140","modified":1628925227609},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/cyrillic/jlm_wnti10.js","hash":"66da069276b8a75d6db83d61032474616f81e054","modified":1628925227617},{"_id":"themes/fluid2/source/js/5.0/web3d/fonts/greek/jlm_fcmripg.js","hash":"7b4738526fa5c6efb98e58db276e8a957814f8c4","modified":1628925227622},{"_id":"themes/fluid2/source/img/bg/b7fb479d6dbb4525a0393f9934aceab3_1.jpg","hash":"e5ba3a056b042b7411776311840140e17a51529c","modified":1628599510771},{"_id":"themes/fluid2/source/img/bg/c65f7b13787572d4f5d33f66d627df71_2.jpg","hash":"ce37c68377e3d277d432507ec33e4d02c458d569","modified":1628599408332},{"_id":"themes/fluid2/source/img/bg/e7050bc333ebfc01afce3b434f95e7b0_2.jpg","hash":"b56be4c6838c5b1e98c50468b5efab86c006cdb0","modified":1628599530161},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_ka.js","hash":"4feff31ead6176a5d67b14c116d64721da95bc35","modified":1628925227674},{"_id":"themes/fluid2/source/js/5.0/web3d/js/properties_keys_th.js","hash":"df4713647267da3b6fc341e77bb7473ca195d320","modified":1628925227703},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/1.cache.js","hash":"348bb593857af480df2434e00a131841c149d542","modified":1628925227495},{"_id":"themes/fluid2/source/img/bg/7cc417b7ace4b99c19d3034179926555_3.jpg","hash":"36304bc7d6ed3f6d8a9330d843c92d105c506f28","modified":1628600362520},{"_id":"themes/fluid2/source/img/bg/4cb90122eb95819122b32d17e238ee1b_1.jpg","hash":"7df7f85fa28588cd468bb4ccc46d788be62f468d","modified":1628599358021},{"_id":"themes/fluid2/source/img/bg/bd643dc0ad68f830b3a0eeae50ceba5f_4.jpg","hash":"2b0eb78d531d1aa4ea559d18efc9068deda95d20","modified":1628599332736},{"_id":"themes/fluid2/source/js/pdfjs/web/viewer.js","hash":"5926d26fa4c8cbfe1254c9ef42b13c18ed4fcdef","modified":1629254002713},{"_id":"themes/fluid2/source/js/pdfjs/build/pdf.js","hash":"2386e91a5e005936c3b534f04f6e5f902229d97b","modified":1622354182000},{"_id":"themes/fluid2/source/img/bg/5afd5a558c69261be00db0024ce0ccdf_1.jpg","hash":"9f21bac1d0ae6664b50b799880d7f6ffb16b0ac4","modified":1628599335626},{"_id":"themes/fluid2/source/img/bg/c989b7d72a5a30f48a3544a7cec9562b_1.jpg","hash":"3de36db1282675551f69ffe9c4932800a712b4ee","modified":1628599055757},{"_id":"themes/fluid2/source/js/pdfjs/build/pdf.sandbox.js.map","hash":"e64b166e70fe85d3ebe795256b6e830e66e40e6f","modified":1622354170000},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/3.cache.js","hash":"7e650db0fda0f9947c25bbae3cb5e968a48cc97d","modified":1628925227606},{"_id":"themes/fluid2/source/img/bg/03990bbe091d5cca73421ac40bacfc46_1.jpg","hash":"79cb7b38f7f28ccdc9cdb8fa498fbf772036ba2c","modified":1628599224283},{"_id":"themes/fluid2/source/js/pdfjs_old/build/pdf.sandbox.js.map","hash":"24019cb18989fa44e76077b03d67a8b1cfc43e96","modified":1622354212000},{"_id":"themes/fluid2/source/js/pdfjs/build/pdf.sandbox.js","hash":"a65f6a0106fa2ef340f3d0b62fc990cc93ab24f3","modified":1622354168000},{"_id":"themes/fluid2/source/img/bg/a9564f5c58411c94f3d83feeb0647643_1.jpg","hash":"2909b72df883e07a59e4d77f783dfbb7adce0774","modified":1628599373545},{"_id":"themes/fluid2/source/js/pdfjs_old/web/viewer.js","hash":"945a23ef4641c92064af6e8c346042c29262cc21","modified":1629255818210},{"_id":"themes/fluid2/source/img/bg/b4f8a6143ef84a1ef177b4bde3f8d805_1.jpg","hash":"c431e3f86fd73aa25221d1dc7001a9caee5b6e16","modified":1628598147585},{"_id":"themes/fluid2/source/js/pdfjs_old/build/pdf.sandbox.js","hash":"958eb03227b04e327e44cfae489bd79a660309a5","modified":1622354210000},{"_id":"themes/fluid2/source/js/pdfjs_old/build/pdf.js","hash":"c82259c253905677358b76ae4b2dd3e6323ef9ac","modified":1622354244000},{"_id":"themes/fluid2/source/js/pdfjs/build/pdf.js.map","hash":"a7d0e9bf335bb0ec4b4e1b17db92af19daffd813","modified":1622354182000},{"_id":"themes/fluid2/source/img/bg/a8d2b7b118107c8a8446ca81691d20ee_1.jpg","hash":"8a53d60923c984efe760eeadfed04d468a7b04e9","modified":1628599637788},{"_id":"themes/fluid2/source/img/bg/wm2.mp4","hash":"b6fdb4962f2efe2ba593c786af557ab04e01942a","modified":1628597868505},{"_id":"themes/fluid2/source/js/pdfjs/web/compressed.tracemonkey-pldi-09.pdf","hash":"0d281938d3ff2377541704cab6ba1c4408420733","modified":1478185434000},{"_id":"themes/fluid2/source/js/pdfjs/web/viewer.js.map","hash":"b378d4b37e8bce789f7174ef2c0c1f86955aa1db","modified":1622354188000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/compressed.tracemonkey-pldi-09.pdf","hash":"0d281938d3ff2377541704cab6ba1c4408420733","modified":1478185434000},{"_id":"themes/fluid2/source/js/pdfjs_old/web/viewer.js.map","hash":"685034e892b4a205ac8710ba08586aacd248905b","modified":1622354240000},{"_id":"themes/fluid2/source/img/test.jpg","hash":"6bdc058ef177dd8521b85e19d4e805d5b8f94cad","modified":1628925227456},{"_id":"themes/fluid2/source/img/bg/girl.png","hash":"bb2aa45e869a12640a9c38f54dbc0fab32b9e692","modified":1628600557043},{"_id":"themes/fluid2/source/img/bg/wm10.mp4","hash":"b870f16f79786e1fd956bef8b14e1e3659356025","modified":1628598805790},{"_id":"themes/fluid2/source/js/pdfjs_old/build/pdf.js.map","hash":"cd608142b8821db284574b0712d9e12f631555c1","modified":1622354244000},{"_id":"themes/fluid2/source/js/pdfjs/build/pdf.worker.js","hash":"276782b5763a7c8eeceb915d75f0c512327843a4","modified":1622354190000},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/11.cache.js","hash":"6244586110ca219c7cce15b9df65bc7715da7aad","modified":1628925227504},{"_id":"themes/fluid2/source/img/bg/wm1.mp4","hash":"b5ff1c5af1be3edba17807f0c75540a078eff6af","modified":1628597830184},{"_id":"themes/fluid2/source/js/pdfjs_old/build/pdf.worker.js","hash":"aa66273bf7d111676fb260d1db6d14a62dc36464","modified":1622354244000},{"_id":"themes/fluid2/source/img/bg/wm9.mp4","hash":"7333f9649921c5e94c6e081939bd7cda1dec6964","modified":1628598556280},{"_id":"themes/fluid2/source/img/bg/wm11.mp4","hash":"d4bde698732e28c122f421e604be1654796a7034","modified":1628598938251},{"_id":"themes/fluid2/source/js/pdfjs/build/pdf.worker.js.map","hash":"866d8b477edce9f524f1e8493d07c110ce30dc5e","modified":1622354190000},{"_id":"themes/fluid2/source/js/pdfjs_old/build/pdf.worker.js.map","hash":"598197f21e6e441dabf888ebef5ec71ddb4972f7","modified":1622354244000},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/12.cache.js","hash":"c1ea01817d7e80feccc6ce88a12c66c6d40a3497","modified":1628925227541},{"_id":"themes/fluid2/source/js/5.0/web3d/18EBAFF235EE31DFDA1EE52C35151A34.cache.js","hash":"4e632d3dcadaead30f3e2452dce11fc7ce9010b6","modified":1628925227493},{"_id":"themes/fluid2/source/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/13.cache.js","hash":"31fe6e57055c821afdcbbdd5ed01d18c27cba6f0","modified":1628925227601},{"_id":"public/search.xml","hash":"46519f3c072bbf3b492ea03edf263ec368c004a0","modified":1630147840098},{"_id":"public/local-search.xml","hash":"6f0d66b3a6ec92f5757c8532c804da2bfc73f63c","modified":1630147840098},{"_id":"public/404/index.html","hash":"c234c9d9675115ebfa8f4032487b4de98e40c158","modified":1630147840098},{"_id":"public/about/index.html","hash":"d10892711767a9b61bd8c815519ddfcd36bbe3ce","modified":1630147840098},{"_id":"public/contact/index.html","hash":"637eed1d66769afbd5aefed171993d235ef9d7cc","modified":1630147840098},{"_id":"public/tags/index.html","hash":"e1fbdbae83500ab037490ea6bf1e86323f7e6f6d","modified":1630147840098},{"_id":"public/friends/index.html","hash":"3bed5f4fde7e381eac264e477deb69823904cbe3","modified":1630147840098},{"_id":"public/categories/配置/index.html","hash":"fe6047b6b9db44e315e7d9541314d5e8b49c9981","modified":1630147840098},{"_id":"public/categories/git/index.html","hash":"f1a406a081073c9a4b2c53047c907bcbc57c4f7c","modified":1630147840098},{"_id":"public/categories/配置/hexo/index.html","hash":"41b0d353c4c48839c2cae5a10aa73b460a656686","modified":1630147840098},{"_id":"public/categories/docker/index.html","hash":"b06252292cd7fa2a03ce0eb167c9835732ebf377","modified":1630147840098},{"_id":"public/categories/index.html","hash":"6a25bfc69d88548e628c1b6d8b408978cd615683","modified":1630147840098},{"_id":"public/2021/08/27/deep_learning/yolov2/index.html","hash":"91890543464a8e4e8c48a4c27412bebeab258712","modified":1630147840098},{"_id":"public/2021/08/25/config/pdf-config/index.html","hash":"11a0a1a0e83bf1f480966eadd170d6b481d97046","modified":1630147840098},{"_id":"public/2021/08/25/deep_learning/swin/index.html","hash":"23cb013e3928a61e1276f33d57cfe0a360d61a3b","modified":1630147840098},{"_id":"public/2021/08/24/leetcode/leetcode-offer40/index.html","hash":"2afda48114b4f0f196a10dc620f976c1efed89f0","modified":1630147840098},{"_id":"public/2021/08/24/config/hexo-emoji/index.html","hash":"6cbd9b2f02fe4a7e0a338fb7788d3f5f7c3c3c86","modified":1630147840098},{"_id":"public/2021/08/21/deep_learning/yolov1/index.html","hash":"df09dfef03ee3091b2041d01bb98ecf86fe56075","modified":1630147840098},{"_id":"public/2021/08/21/leetcode/leetcode-offer18/index.html","hash":"37c184598a80600035658e99d2eb05d397b38d72","modified":1630147840098},{"_id":"public/2021/08/21/leetcode/leetcode-offer19/index.html","hash":"cc3166e52b5b30316f8b9311ae0449a6e7c69a44","modified":1630147840098},{"_id":"public/2021/08/21/leetcode/leetcode-offer24/index.html","hash":"05339e23464badb43a5873f2a7cf111a2e2d9143","modified":1630147840098},{"_id":"public/2021/08/21/leetcode/leetcode-offer16/index.html","hash":"e718b989e7d7820696aefa3dcd33abb02b837c5b","modified":1630147840098},{"_id":"public/2021/08/20/leetcode/leetcode-offer17/index.html","hash":"05e9df48f79005952081f8e2491496f726dd61c8","modified":1630147840098},{"_id":"public/2021/08/20/img_process/laplace/index.html","hash":"3d0e5bb97ab74f5d7551ba032aa52667f3056f5d","modified":1630147840098},{"_id":"public/2021/08/20/leetcode/leetcode-offer22/index.html","hash":"6ca4b1ed61ff905d04566f675c79fb008686a0e1","modified":1630147840098},{"_id":"public/2021/08/19/english/self-aware/index.html","hash":"36ace0d8a8d17ee7001647a4151b69f708d7548c","modified":1630147840098},{"_id":"public/2021/08/19/leetcode/leetcode-offer29/index.html","hash":"26c51ac33b237f5c6e7e39fd567ec0f3e3d5ea11","modified":1630147840098},{"_id":"public/2021/08/19/leetcode/leetcode-offer15/index.html","hash":"af007c9cd2f9bb22733bcd97bd8fde2869469d3d","modified":1630147840098},{"_id":"public/2021/08/19/leetcode/leetcode-offer20/index.html","hash":"3f3491cde6a4517224e10bba012ae799852dc371","modified":1630147840098},{"_id":"public/2021/08/18/leetcode/leetcode-offer21/index.html","hash":"6295f34dcaa2482b9bcd8a62b1fb6ecdd2b8da7e","modified":1630147840098},{"_id":"public/2021/08/18/leetcode/leetcode-offer28/index.html","hash":"c9cb5e7ee3fe3fd1b7f59ed84aed6fbd473895a8","modified":1630147840098},{"_id":"public/2021/08/18/leetcode/leetcode-offer26/index.html","hash":"12d46472548615b82b4f197f9f0a7038f44d2b90","modified":1630147840098},{"_id":"public/2021/08/18/leetcode/leetcode-offer14-2/index.html","hash":"ef7c5243f9f7f8462c5b18792f97c5eacdecf86e","modified":1630147840098},{"_id":"public/2021/08/17/leetcode/leetcode-offer14-1/index.html","hash":"1ffaf4e0fba3e81cbfff1c92a7a9052f236f4d71","modified":1630147840098},{"_id":"public/2021/08/17/leetcode/leetcode-offer07/index.html","hash":"9a55ff1791f81652ef2b88151d1733212de3181e","modified":1630147840098},{"_id":"public/2021/08/17/deep_learning/gradient-exp/index.html","hash":"d1f95daac20d4915c79e9a36c13ace494986d668","modified":1630147840098},{"_id":"public/2021/08/16/leetcode/leetcode-offer27/index.html","hash":"9e9996926b289f2f1797f61f979c9b9a26fd66ba","modified":1630147840098},{"_id":"public/2021/08/16/leetcode/leetcode-offer25/index.html","hash":"971e22bca9b47acdb1f0714c847e91e36256574b","modified":1630147840098},{"_id":"public/2021/08/14/leetcode/leetcode-offer13/index.html","hash":"523671f0989163cef85085456a1960596c7a2337","modified":1630147840098},{"_id":"public/2021/08/14/img_process/sobel/index.html","hash":"968543ec2f9eae732014a6062449ae0569706b60","modified":1630147840098},{"_id":"public/2021/08/14/leetcode/leetcode-offer06/index.html","hash":"03ac6b493b1c7bdbc654b61cd2e234fd8196f781","modified":1630147840098},{"_id":"public/2021/08/14/leetcode/leetcode-offer12/index.html","hash":"eababdf50d35d5fad9792a8643b3793ca42540cb","modified":1630147840098},{"_id":"public/2021/08/13/leetcode/leetcode-offer11/index.html","hash":"d3a3db5d375c98b2fe40e69d55958a5525157de7","modified":1630147840098},{"_id":"public/2021/08/13/paper/paper-site/index.html","hash":"ed61516b11bc1b31a3b139c5927e175b3be6cd19","modified":1630147840098},{"_id":"public/2021/08/13/deep_learning/fine-tuning/index.html","hash":"9c469f46b703f4ae749ca651f4de39a80ecfa283","modified":1630147840098},{"_id":"public/2021/08/12/deep_learning/gradient-clip/index.html","hash":"b0b5312bb7f66034d04970b3aba3cd167e2b5d4a","modified":1630147840098},{"_id":"public/2021/08/11/leetcode/leetcode-offer05/index.html","hash":"489760d0e58cbb8c97f4a5e26806aa6804659df4","modified":1630147840098},{"_id":"public/2021/08/11/leetcode/leetcode-offer04/index.html","hash":"c95731958f9f83cd858e242b4205067a79cfb1a2","modified":1630147840098},{"_id":"public/2021/08/11/leetcode/leetcode-offer03/index.html","hash":"f330c42cb071aa8de9cc23106be9a5f14690c478","modified":1630147840098},{"_id":"public/2021/08/10/dvc/dvc-config/index.html","hash":"5c650d36d3a63e9fabfe2eb9bc96938dd024efe0","modified":1630147840098},{"_id":"public/2021/08/10/docker/docker-ssh/index.html","hash":"994c1b6c561c722d6350767afd1489db85912640","modified":1630147840098},{"_id":"public/2021/08/10/docker/docker-intro/index.html","hash":"763c076b337c96daf2da171e21583cf41fd5481b","modified":1630147840098},{"_id":"public/2021/08/10/leetcode/leetcode-offer10-2/index.html","hash":"5045ed6d8d3f98b3e42ed21c6e5cf2032dbb1d7d","modified":1630147840098},{"_id":"public/2021/08/10/leetcode/leetcode-offer10-1/index.html","hash":"e1c08e6d1b5f7135b1cafd734b474579f3d9b631","modified":1630147840098},{"_id":"public/2021/08/09/math/Mahalanobis-distance/index.html","hash":"a6698aa371aec4f0946776ff05c98a8c13f0ec39","modified":1630147840098},{"_id":"public/2021/08/10/leetcode/leetcode-offer09/index.html","hash":"133e50f9a6c813940bd6315294f3533abd27e040","modified":1630147840098},{"_id":"public/2021/08/09/math/Eckark-young/index.html","hash":"7dd7714b50b953ca5d48c1c6ef704cded55f6da8","modified":1630147840098},{"_id":"public/2021/08/06/math/low-rank-app/index.html","hash":"38d52f88c5d5fbc23ea1f6297892115a3535c019","modified":1630147840098},{"_id":"public/2021/08/06/config/git-submodule/index.html","hash":"678e55470ecb2561bbd92ac8e64ee06e9550587e","modified":1630147840098},{"_id":"public/2021/08/05/config/hexo-math-config/index.html","hash":"bcb73aeb9c6511d567badbd2d511a7da3b1d0201","modified":1630147840098},{"_id":"public/2021/08/05/math/covariance-matrix/index.html","hash":"1b35a855c458bdf6eb56bffd9561bd7ae1b169ea","modified":1630147840098},{"_id":"public/categories/深度学习/index.html","hash":"583ab251713f15dfd65123b3ee0965538f605d2c","modified":1630147840098},{"_id":"public/categories/dvc/index.html","hash":"1ef0c2309055b130ffbc49139d06a57cda244b47","modified":1630147840098},{"_id":"public/categories/英语/index.html","hash":"708175d50f1905fdb28a0a7d1cda0aa3cd39c86b","modified":1630147840098},{"_id":"public/categories/图像处理/index.html","hash":"67bc963e49653a418bcc54931bd9416ea433eba7","modified":1630147840098},{"_id":"public/categories/剑指/index.html","hash":"10c7ea684d705d951000ce41b029736943e0bb33","modified":1630147840098},{"_id":"public/categories/剑指/page/2/index.html","hash":"b9213905c987afb8f9015478cfeeb8d163487467","modified":1630147840098},{"_id":"public/categories/剑指/page/3/index.html","hash":"a5b63e959453ea03a1f1782e292871549c3e1de2","modified":1630147840098},{"_id":"public/categories/深度学习/目标检测/index.html","hash":"bf8894751e4db492c03f1e8a8fc602d58e579f39","modified":1630147840098},{"_id":"public/categories/剑指/链表/index.html","hash":"052587328f4e4819d454b8d3644a74c238b702c9","modified":1630147840098},{"_id":"public/categories/剑指/数组/index.html","hash":"776233de16dd88277a5d7380c512fdb5d603cfe1","modified":1630147840098},{"_id":"public/categories/剑指/树/index.html","hash":"689fbd3af63ee832fc09b3050a23996eb194e744","modified":1630147840098},{"_id":"public/categories/剑指/字符串/index.html","hash":"186fedb391313ecc903f347fc1b01f50259fc0d5","modified":1630147840098},{"_id":"public/categories/剑指/快速排序/index.html","hash":"02f6f4278eba2d48ab3fc2afd0e34c848a58d38e","modified":1630147840098},{"_id":"public/categories/math/index.html","hash":"a0380ffb30bd638fc4408230b4a5565fc03ee950","modified":1630147840098},{"_id":"public/categories/文献/index.html","hash":"97949ba022f23a3948e3b2c535f07695916eee3b","modified":1630147840098},{"_id":"public/categories/剑指/栈/index.html","hash":"f86b1e15ebc1f81d3265e5e3a066e647895d17dc","modified":1630147840098},{"_id":"public/categories/剑指/动态规划/index.html","hash":"7001965e3fccf9b44928b7dc1f05f26cd425e258","modified":1630147840098},{"_id":"public/categories/剑指/DFS/index.html","hash":"4d553348783d0ab6c5c26a4bb16067c3bd716926","modified":1630147840098},{"_id":"public/categories/剑指/变量/index.html","hash":"02413738deebc28d579608b42ff4fc3b9885b32e","modified":1630147840098},{"_id":"public/categories/剑指/快速幂/index.html","hash":"db87192266563cd08a75d69902a409006a4e2603","modified":1630147840098},{"_id":"public/categories/剑指/大数/index.html","hash":"768a5be51ff9de7ca787f6526bc58ee2ad0a5f60","modified":1630147840098},{"_id":"public/categories/剑指/有限状态机/index.html","hash":"45fcb5615e97b5c569df8cd2ed5fceab63f5e2b4","modified":1630147840098},{"_id":"public/categories/math/线性代数/index.html","hash":"2ffa5762e4c8c439b7de8cad293187c1b5d5556c","modified":1630147840098},{"_id":"public/categories/math/概率论/index.html","hash":"928cd11d7fb5db506f98f2f8026d0507252edac4","modified":1630147840098},{"_id":"public/categories/深度学习/网络架构/index.html","hash":"a16df2be2d97ca5590d7551cc261182acb73709b","modified":1630147840098},{"_id":"public/tags/emoji/index.html","hash":"f0231b06df0a077d0a797d38091efa18ba24874e","modified":1630147840098},{"_id":"public/tags/git/index.html","hash":"3782d52e904c230100ad799d8dc786f13cf87368","modified":1630147840098},{"_id":"public/tags/配置/index.html","hash":"4c8c227bbfeb44b76f6abaaef12be3ec2c9f4d22","modified":1630147840098},{"_id":"public/tags/pdf/index.html","hash":"638e1273c4d3c7eb6eccc627a27ea98f5cbf7df2","modified":1630147840098},{"_id":"public/tags/hexo/index.html","hash":"d6462a5ec5efac5268e73aac805adac9be6aa6ae","modified":1630147840098},{"_id":"public/tags/fluid/index.html","hash":"16185236f076a815f80cab9de8d56d6380a4f059","modified":1630147840098},{"_id":"public/tags/docker/index.html","hash":"d938e07688cbd57a4013b50d4f88be61c096f74c","modified":1630147840098},{"_id":"public/tags/远程配置/index.html","hash":"fb70932e9007fae4b174babd11ec79277e79a94d","modified":1630147840098},{"_id":"public/tags/ssh/index.html","hash":"425f6a3b1dc2a6714d5d0173d9440c60e0821cbc","modified":1630147840098},{"_id":"public/tags/深度学习/index.html","hash":"d59055ef96342d33b0a8932b348a16d6d38ff7f3","modified":1630147840098},{"_id":"public/tags/微调/index.html","hash":"d54c896fd854e11ba2f332d71ea2b2f0b7b3db7f","modified":1630147840098},{"_id":"public/tags/深度学习，梯度/index.html","hash":"9ec2a5b9a59d42d79def6e908408419ce0a596a2","modified":1630147840098},{"_id":"public/tags/目标检测/index.html","hash":"28e0b21fe2df44125e315d9d755c0673ac437a73","modified":1630147840098},{"_id":"public/tags/yolo/index.html","hash":"afc6d89042017bbefcf5ed51b50d39ff34b2ca5e","modified":1630147840098},{"_id":"public/tags/dvc/index.html","hash":"2ed43c692367337166da20d75fdbec67ab337783","modified":1630147840098},{"_id":"public/tags/英语/index.html","hash":"3a77bffa3a04bfe8c4f4f718b7ee66cef63315aa","modified":1630147840098},{"_id":"public/tags/图像处理/index.html","hash":"e68e8246e6ca0a05098291e28056f02997733178","modified":1630147840098},{"_id":"public/tags/剑指/index.html","hash":"bd7a0de2558df799aeb1c42e6a7ec1314f4b3bfc","modified":1630147840098},{"_id":"public/tags/剑指/page/2/index.html","hash":"60e23f4a604b0570da140cb18f5475e41cbb804e","modified":1630147840098},{"_id":"public/tags/剑指/page/3/index.html","hash":"a451d8b14bc3cff1efc18bf2037f80f0ad210d1a","modified":1630147840098},{"_id":"public/tags/数组/index.html","hash":"9331f5c003b9614cc95a44973b08a166713e62e6","modified":1630147840098},{"_id":"public/tags/idea/index.html","hash":"26062cf86cee3104f8cfd8aa4f20b389d446678f","modified":1630147840098},{"_id":"public/tags/数组查找/index.html","hash":"06fc588a93e8b12274ee54d05df5464d8d61e028","modified":1630147840098},{"_id":"public/tags/字符串/index.html","hash":"7abde6851c3c150914e196805b81e45bd9370a34","modified":1630147840098},{"_id":"public/tags/链表/index.html","hash":"6281fb34747e76a7a26804b68072c651a5e89243","modified":1630147840098},{"_id":"public/tags/树/index.html","hash":"10be8b914a6ec31b9aa51dc582d99cf1daf0a990","modified":1630147840098},{"_id":"public/tags/栈/index.html","hash":"7df14d48b2811674c500831b5656048ed214d9bb","modified":1630147840098},{"_id":"public/tags/斐波那契/index.html","hash":"3a00d6adaa4d5eb33d33fc50e9d08be45583128e","modified":1630147840098},{"_id":"public/tags/动态规划/index.html","hash":"a04b4b742696a44feb1c36bbc3950ae0d2438da9","modified":1630147840098},{"_id":"public/tags/DFS/index.html","hash":"ad95174de39186eacefffb961edbb4fbc20a5ead","modified":1630147840098},{"_id":"public/tags/变量/index.html","hash":"0706e4d56a43e961e0b1c04d46d9603dfc8f32af","modified":1630147840098},{"_id":"public/tags/快速幂/index.html","hash":"4a43014caf4e6a4472a8d27e49a59c9541ca1299","modified":1630147840098},{"_id":"public/tags/大数/index.html","hash":"3814c911658184590936dc28b48eb8238260dfc4","modified":1630147840098},{"_id":"public/tags/有限状态机/index.html","hash":"740dee473c448cee3d5f6669eb86ff39d47e024b","modified":1630147840098},{"_id":"public/tags/快速排序/index.html","hash":"123e093d3df36b681fc63b3d390946c5e414beb0","modified":1630147840098},{"_id":"public/tags/math/index.html","hash":"8603a0defd4873055770a76d8bd5c3ab1562ea66","modified":1630147840098},{"_id":"public/tags/线性代数/index.html","hash":"8de893220fc404a53f8b1e89ceafe5fc83cbab67","modified":1630147840098},{"_id":"public/tags/马氏距离/index.html","hash":"03e90f99e21d400340b51ca966f73a06c8964e7e","modified":1630147840098},{"_id":"public/tags/概率论/index.html","hash":"f49745107db8f1d54106c39202791f1651126be3","modified":1630147840098},{"_id":"public/tags/文献/index.html","hash":"f4d95f8a28035a96a8c6ae113cac252a870b9960","modified":1630147840098},{"_id":"public/tags/swin/index.html","hash":"0299af78834fe03ccdde900b15446878b2f768ed","modified":1630147840098},{"_id":"public/archives/index.html","hash":"53927c932a1e6dbf7d327ef897ef5779768a796f","modified":1630147840098},{"_id":"public/archives/page/2/index.html","hash":"9c1fda2362cf1dc533976b0c7dd4a133d3c9c888","modified":1630147840098},{"_id":"public/archives/page/3/index.html","hash":"02ca37801f21de97e3460efe5b79207bbd3fc9c0","modified":1630147840098},{"_id":"public/archives/page/4/index.html","hash":"ad52e6569a99d35457fac1eb909ce1b78ee7266e","modified":1630147840098},{"_id":"public/archives/page/5/index.html","hash":"1ccfec5235b166edccc7015d880c014085fa5bb5","modified":1630147840098},{"_id":"public/archives/2021/index.html","hash":"c1a1ddb1e356dd5ccc75c127f97adcf939e4b02b","modified":1630147840098},{"_id":"public/archives/2021/page/2/index.html","hash":"735d49b1e4d29a2315548d771ac9f84d7782119c","modified":1630147840098},{"_id":"public/archives/2021/page/3/index.html","hash":"50fa336edd70e737e30769159e27907626abc1d7","modified":1630147840098},{"_id":"public/archives/2021/page/4/index.html","hash":"515205103c96e18cdd1ef47279d3e6f1a9cb26fb","modified":1630147840098},{"_id":"public/archives/2021/page/5/index.html","hash":"3da16c371e080ed33ffd593b5b5f97a66ac45db8","modified":1630147840098},{"_id":"public/archives/2021/08/index.html","hash":"212a04de2ea4d8b0c507769daac02cc8d87d2596","modified":1630147840098},{"_id":"public/archives/2021/08/page/2/index.html","hash":"0e57b49e5c27aa6ca9e8a4d1190c4a98a371688a","modified":1630147840098},{"_id":"public/archives/2021/08/page/3/index.html","hash":"8b034a3595321c90e41a63817c8a318e94aab756","modified":1630147840098},{"_id":"public/archives/2021/08/page/4/index.html","hash":"17a8b4f38ebfc466bcbd9688e671677a8387f363","modified":1630147840098},{"_id":"public/archives/2021/08/page/5/index.html","hash":"5512ca116eff77c6556fb4a730bcd5112a60134d","modified":1630147840098},{"_id":"public/404.html","hash":"4e3efada1b65b453416ec7271fb2457a1a27eef6","modified":1630147840098},{"_id":"public/links/index.html","hash":"c58b54f06ed9ae58c50e07c53d40443b93c6eccf","modified":1630147840098},{"_id":"public/index.html","hash":"793aedefcec3d0010e3ac03c8279492e7d639446","modified":1630147840098},{"_id":"public/page/4/index.html","hash":"1305d2d8b50a30c837b1e3b35807c63b0df76b0e","modified":1630147840098},{"_id":"public/page/2/index.html","hash":"be09fd866368561a8df6850d9dd1d2b6f62c443b","modified":1630147840098},{"_id":"public/page/3/index.html","hash":"490da8212dcee37c4035e44ec6bf4450e7c9053e","modified":1630147840098},{"_id":"public/page/5/index.html","hash":"81ed40192984990f6e8f9c3284f25e7e473cc93d","modified":1630147840098},{"_id":"public/CNAME","hash":"f5776ace0c267af3c5acde0ed1be1754175ad6ff","modified":1630147840098},{"_id":"public/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1630147840098},{"_id":"public/img/favicon.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1630147840098},{"_id":"public/img/default.png","hash":"7bb2b8ee07db305bcadee2985b81b942027ae940","modified":1630147840098},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1630147840098},{"_id":"public/img/favicon1.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1630147840098},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1630147840098},{"_id":"public/img/wechatid.png","hash":"fc275472320ea1215e6c7c7a3f64045b9e784944","modified":1630147840098},{"_id":"public/xml/local-search.xml","hash":"85fcc23b4db654a7f91fc55b6fb0442bb3ed3a9a","modified":1630147840098},{"_id":"public/js/pdfjs/LICENSE","hash":"598f87f072f66e2269dd6919292b2934dbb20492","modified":1630147840098},{"_id":"public/js/pdfjs_old/LICENSE","hash":"598f87f072f66e2269dd6919292b2934dbb20492","modified":1630147840098},{"_id":"public/js/5.0/web3d/clear.cache.gif","hash":"b80b11203d97fe01c5597ca3be70406ea48f5709","modified":1630147840098},{"_id":"public/js/5.0/web3d/html/skydriveproxy.php","hash":"8252ff9eae5ccc8b8568bed79f3c2ca290b63921","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/78-EUC-H.bcmap","hash":"c84a5fe05bb2a5e4e599329d0ebb3ed8fe1ebfdf","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/78-EUC-V.bcmap","hash":"678dcba8720226133150374f78493cc09c9b8d9e","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/78-H.bcmap","hash":"e77449427a5d5411c9da1c1a64e1e3ae362bbcdf","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/78-RKSJ-H.bcmap","hash":"5f0f202932865c38e7b0b06924e419c77f74be85","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/78-RKSJ-V.bcmap","hash":"3fa6830e3e5c6b0cc5d03402cfb6712a04c08d31","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/78-V.bcmap","hash":"c58a521bdfad6ffe30e292505992a396033d03c3","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/78ms-RKSJ-H.bcmap","hash":"ef37df685e4779722b34fcc026b196b224bfca13","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/78ms-RKSJ-V.bcmap","hash":"27d45708491107b2cf673c2cd584bf22ca27e4e4","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/83pv-RKSJ-H.bcmap","hash":"c4474f77d94be66d771ba68f18ff2fd606a3c820","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/90ms-RKSJ-H.bcmap","hash":"994ca6d6232d91be047c68e087e0951dcca4cba4","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/90ms-RKSJ-V.bcmap","hash":"c4ed8e0b82fc29ff6140c72ec8ab3acc3cd0578f","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/90msp-RKSJ-V.bcmap","hash":"ddfc0fdb34314f2d7116d707fa6dbb24bc9bf390","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/90msp-RKSJ-H.bcmap","hash":"d3f02d6724d9c91d077ed38545c9321dba65b624","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/90pv-RKSJ-H.bcmap","hash":"76218acded94b2d29f747735e7fb41f19cee84eb","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/90pv-RKSJ-V.bcmap","hash":"7296d339f5c1d843b823482fa2b3857c0559eb93","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Add-H.bcmap","hash":"cd55ec3d5627b80505d7dbea433e5702f8c05260","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Add-V.bcmap","hash":"02ca7b80b507640df998e9b5f6d25b346082d8c1","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-CNS1-0.bcmap","hash":"241cccfc85b5ef9ea4618f94a6341e02d1b03b98","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Add-RKSJ-V.bcmap","hash":"0e4ef11ed7f4e5ed3b2e32f267f4c3fb4359d08e","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-CNS1-1.bcmap","hash":"f37b5b68198690c8270322daa0ea522225a46127","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Add-RKSJ-H.bcmap","hash":"9a17c268decf876dc35c5f20c660ee63563fa523","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-CNS1-2.bcmap","hash":"a568bee71b12ec4e79a2fa65c4eb9f865c505a5e","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-CNS1-3.bcmap","hash":"ef567b58254e03837d46e1fdff4fea5cce318a74","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-CNS1-4.bcmap","hash":"5f81f4782a5f996649dc318c1587ae7728afd10b","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-CNS1-6.bcmap","hash":"4eaa2ec548df7cdbdece2eec227fdb9d4cb2f281","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-CNS1-5.bcmap","hash":"b7de7cea41575c7933cffdb917ad1f918df76c70","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-CNS1-UCS2.bcmap","hash":"bee971d04cae79d791a52bf0d3d5e2e9deb1d1c8","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-GB1-0.bcmap","hash":"86edf145080d2fedba2f0a0b0ab1bc18d9a5af55","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-GB1-1.bcmap","hash":"83cc28efd5e778b9d37898f9b100b502bc442dc3","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-GB1-2.bcmap","hash":"a3ce0132af54173d30a4330314bc4cf273fc29c8","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-GB1-3.bcmap","hash":"c7b6cfbeac681010771d022d319913c798416d75","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-GB1-4.bcmap","hash":"cee3007bb41ed1bbe7fd22f054c0fb036a92c8cf","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-GB1-5.bcmap","hash":"a7d9440784d773507e3d83d0bf93fa8d93a3289f","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-GB1-UCS2.bcmap","hash":"23366624efa674e2493a18bf6b6e2c16929d68d3","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-Japan1-0.bcmap","hash":"ce5b494e809c30621968169d01d1136f3ad1ce3c","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-Japan1-1.bcmap","hash":"a766b29745a30aa3316cafc73d884c271cc12ff4","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-Japan1-2.bcmap","hash":"78c4e86cff8aa1c2f2bc18aaf83095a96f0bca50","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-Japan1-3.bcmap","hash":"5b520d2cf37e21b084bc9e6a21d006c53e4e552e","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-Japan1-5.bcmap","hash":"38970fd416a1c3ef4faa25009254347627d24964","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-Japan1-4.bcmap","hash":"4136c902f4715ed18b8b2390965d3621d2fda048","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-Japan1-6.bcmap","hash":"dfba7ab251b5ac07d7648c4e81e808ea096578c9","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-Korea1-0.bcmap","hash":"ca8e1774cdd2859ba0341e4474d07d6fb2f9395b","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-Korea1-2.bcmap","hash":"0b8d7fd848de3efa86f958c6e1cf5aece9bf1bf4","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-Korea1-1.bcmap","hash":"e9b783963160380ccfe33fa1dcdd9c79b1cf2934","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-Japan1-UCS2.bcmap","hash":"d99c0d908b8075afa69aa3c579a9393b13b29dd9","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Adobe-Korea1-UCS2.bcmap","hash":"15e4e07c96891a2bb2778b5df8dd0a131edeed52","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/B5-H.bcmap","hash":"771d71153bf652d1134b7d65beb8afc60c835ff6","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/B5-V.bcmap","hash":"dfc7362c157c24651761e5216ef0c46aba795488","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/B5pc-H.bcmap","hash":"29d5fd41dc8fc4f19b59949b9a7f410d63f4f3bd","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/B5pc-V.bcmap","hash":"f12ae6ed2320136959420e28b1b937001cdd4f0b","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/CNS1-H.bcmap","hash":"07f422b28ca4fedf2cdc6ccdf551eaecae40f60b","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/CNS-EUC-H.bcmap","hash":"1da78eb52781330148c95ccf64c78edd2072a991","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/CNS-EUC-V.bcmap","hash":"895fe039258dae00d7a8cea93b3b07d794543d2d","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/CNS1-V.bcmap","hash":"7455bd92e1a1f32bfd2cb5b80eb938aa665f6b8a","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/CNS2-V.bcmap","hash":"c0870c3fad8349e3391ff7cda29d1f3a917e27f1","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/ETHK-B5-H.bcmap","hash":"225205ad3aad58967faf23a2504731abebc6dccc","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/ETHK-B5-V.bcmap","hash":"03e35e7fc1b75495df5559a3f71c5f0cbd1517ba","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/CNS2-H.bcmap","hash":"0570a8186311bba4ad216250f805461220d41d0a","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/ETen-B5-H.bcmap","hash":"9c3b70700d7ae2b8c4cc6f658cdc98f4e65b3be4","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/ETen-B5-V.bcmap","hash":"5b637fa1b203754d98463053b38a2f694cde499b","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/ETenms-B5-H.bcmap","hash":"1207c931295ad5f57a430317d5014fb66d0eab7d","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Ext-H.bcmap","hash":"4b6a27e1125bb11bf9fd8fe9c5375f7781c95204","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/EUC-H.bcmap","hash":"f88729b6a413ae1365bafb5dc8076b465aa1fb87","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/ETenms-B5-V.bcmap","hash":"631c58a7f7a8094d44a858d26485ab65b499b59b","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/EUC-V.bcmap","hash":"c47c42d9099caf1447498e57fc1c8f3c7ff417b3","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Ext-RKSJ-H.bcmap","hash":"e1c2563a6d785aa5e30de423911d179fe79ec957","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/GB-EUC-H.bcmap","hash":"4231eab22968baa29ea4e6fdc4278b737067a7da","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Ext-RKSJ-V.bcmap","hash":"5443591823737ba98993537c4d4e8af70a37c92e","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Ext-V.bcmap","hash":"0d88a7517783f25ce1eee082a5ed12b0f96061c2","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/GB-EUC-V.bcmap","hash":"7d268732b300431fced1351b4bfd12b51299283e","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/GB-H.bcmap","hash":"3f1c2a68bdd13541e6a2cd6a7a393581e9444e1e","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/GB-V.bcmap","hash":"b70477a9738709f639adf6bc20e81363efcc9ed0","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/GBK-EUC-H.bcmap","hash":"08986b370ac27b60cf8cd7023c9e49f6b784b52b","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/GBK-EUC-V.bcmap","hash":"4f0e0cfffafa21b30f7a25e5161738faf2e265fe","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/GBK2K-H.bcmap","hash":"a36052b8b5d7dc1dde2b721437d6abc90ec7cefe","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/GBK2K-V.bcmap","hash":"d27b6916b7de1993464e5f33822f176fdc8e949f","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/GBKp-EUC-H.bcmap","hash":"a8785a44403f130097ee9a23c3923d5af252ac51","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/GBKp-EUC-V.bcmap","hash":"717f6d6585184bfebb894e59868886ab8f3c38f1","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/GBT-EUC-H.bcmap","hash":"e2dda44896a41f4fa817c5397f17894763b7623e","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/GBT-EUC-V.bcmap","hash":"9d6ef5fa295e3005d620904754d7cc16104be908","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/GBT-H.bcmap","hash":"62508bbc22bcd3795e4af2c7fa3cfddc71367813","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/GBTpc-EUC-H.bcmap","hash":"388eb76b53b008d90dfe68c1e3288314b21c3cdc","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/GBT-V.bcmap","hash":"2f0936e0bd4362f7c6f8c2b56642d6483366cd11","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/GBTpc-EUC-V.bcmap","hash":"ce125f52097c71fc83631577977ac267b8901c78","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/GBpc-EUC-H.bcmap","hash":"5c34efa7cca4e2f652f81f4498fdf41db1b7b1e6","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/GBpc-EUC-V.bcmap","hash":"36004a6bedae0edfaea620a7d8f61cfb875f9640","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/HKdla-B5-H.bcmap","hash":"57ba02cf438eba88d2071bd99d1beb816b438b9e","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/H.bcmap","hash":"149c08c0eadc405f6ba64adac9329fdb300d11ab","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/HKdla-B5-V.bcmap","hash":"035e4064559dd56ceb0f06c3ac1c2e766aeffe62","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/HKdlb-B5-V.bcmap","hash":"3dc79100304f82ec559b70d120100f6ebe6ab5c0","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/HKdlb-B5-H.bcmap","hash":"2be77ea4f4cd8a338ff7007d314773582f565efa","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/HKgccs-B5-H.bcmap","hash":"dbaa1026222370fa6e3275c98e3bdb5ef3d37709","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/HKgccs-B5-V.bcmap","hash":"6f22784990eb168bcf9192e7e36de18e08927dfb","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/HKm314-B5-H.bcmap","hash":"cbfb65ab0cae690e7679a1769de521ea20fb6602","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/HKm314-B5-V.bcmap","hash":"3ef5f7e35ebffe68dea8ea757cdceac5b8151372","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/HKm471-B5-V.bcmap","hash":"2a6f2cc4d105f464432187daeff7b81040c093e4","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/HKscs-B5-H.bcmap","hash":"45f1793e771de030af89938eed23fff4c7daca3a","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/HKm471-B5-H.bcmap","hash":"a75f2e32e5495d46e14b1d07ac124b3fc675ef1a","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/HKscs-B5-V.bcmap","hash":"fa5b3a1f0b3ab6bd614f8a39c9ab80b203daadf5","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Hankaku.bcmap","hash":"dfc2f635dd66602f9978ae3fe72695a02e512a6a","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Hiragana.bcmap","hash":"10e7a0f20cde8865a1dd3086a89f2e96e330d1a6","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/KSC-EUC-H.bcmap","hash":"bc349367bb60b06af5fdeeec05047f596ac71ab3","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/KSC-EUC-V.bcmap","hash":"4529ddac78c931d63411b6061b0af740b4c44ca5","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/KSC-V.bcmap","hash":"22b097fd376c21e40a0f9392961be74acc316343","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/KSC-H.bcmap","hash":"42e15fbce70bdec4f7bb5b2cbd02b0efd8bc65fc","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/KSC-Johab-H.bcmap","hash":"3585accc6e6957eda55302393fd9c3a563db6cbb","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/KSC-Johab-V.bcmap","hash":"e68b770b37b591884c459d6ce3bb43bc4556547b","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/KSCms-UHC-H.bcmap","hash":"4e0ed017a2a41ee7bf6eacf0f7e6b40ae60d223d","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/KSCms-UHC-HW-V.bcmap","hash":"6cfeb36f492702aef5ce5b7671342291010b29e1","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/KSCms-UHC-HW-H.bcmap","hash":"d410341b19a6f05e0c20ea4a1a77078a3084044e","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/KSCms-UHC-V.bcmap","hash":"3de7c5c70cf172ff560a62d5dfe84a9336b4f5ad","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/KSCpc-EUC-H.bcmap","hash":"3705fd3621117a7e5a3772c3849c5d69620ef08f","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/LICENSE","hash":"1afb5991fce0d60110b5092b68bf9ff76b0c73f6","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/KSCpc-EUC-V.bcmap","hash":"1d3a11932c44a5fa8fa22efd2bd3dba7db9a2c8e","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Katakana.bcmap","hash":"da100ad00f2a9ba196892bfb4d6644ec828a4fcf","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/NWP-H.bcmap","hash":"7d0f51c52d7a96bf289d0c6454d7e9dccf009c15","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/NWP-V.bcmap","hash":"891a866c52b46e7526123799a829db24ac6cda4f","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/RKSJ-H.bcmap","hash":"a4f7d5cdd13d3008cc42d82f69672d9e50a9d5b3","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/RKSJ-V.bcmap","hash":"16ae42a46e7eb92ca048fe24649b668c5103b4b2","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/Roman.bcmap","hash":"5755781c7e9c50cc8192426d8733a506382b5fdd","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniCNS-UCS2-V.bcmap","hash":"6b19ece5c921516431eb94d28d74080fdd7d35bc","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniCNS-UCS2-H.bcmap","hash":"7f289b94c643b7cc43d4936078143a2347ca0fc1","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniCNS-UTF16-H.bcmap","hash":"d73d55388c76932033915cea627bb628edad4f66","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniCNS-UTF16-V.bcmap","hash":"0f7152f2845cc2be4d3ce7e0e1530639ec4162e3","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniCNS-UTF32-V.bcmap","hash":"debaa98acaf13f341a5003856ef6a6a7df8f6e14","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniCNS-UTF8-V.bcmap","hash":"019bd0716b2aa80bc1bcabfd389d3d5e1065ba8e","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniCNS-UTF32-H.bcmap","hash":"a5872864e2b121c1df5068a54201ed166c69d5f1","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniCNS-UTF8-H.bcmap","hash":"734ad1a00033d70c195c81358b643c7cba1327b2","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniGB-UCS2-V.bcmap","hash":"f5853ca83c25b888c1d925e2a20ef44e064d064e","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniGB-UCS2-H.bcmap","hash":"868238e34cb9548c4d138af1adc1a4bea62dec37","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniGB-UTF16-V.bcmap","hash":"1771376eef979ad42c2b5c01a1af1d34f54580b7","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniGB-UTF16-H.bcmap","hash":"28963866dfb575b58b4370e60ebd9bfb6e56ac09","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniGB-UTF32-H.bcmap","hash":"b9ea278eb4c324d12a81e2d62479548d1e7126cb","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniGB-UTF32-V.bcmap","hash":"8167ba503aa8a6c805f39be0ca538b99898a967d","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniGB-UTF8-V.bcmap","hash":"e23616fa12132c73f52071b96e76d876430ececf","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniGB-UTF8-H.bcmap","hash":"09cc7750f69da77434093e4c94211394f5665eda","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniJIS-UCS2-H.bcmap","hash":"caf525125e29fa4de78088e5eb1785c1af1f9950","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniJIS-UCS2-HW-H.bcmap","hash":"97cbb8599cf62914885a8b2b47594865fff52099","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniJIS-UCS2-HW-V.bcmap","hash":"f36bad9c680f4bba6cbcf8ac57f53e7ce21c806b","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniJIS-UCS2-V.bcmap","hash":"45396576a6bd5468a84e2c2e4ae64c23fe7f2e85","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniJIS-UTF16-V.bcmap","hash":"44402b8f73e0b0160846b641e7cb2e75ab8c81bd","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniJIS-UTF16-H.bcmap","hash":"16499e93f0a447a94e1e44bfa9951401d290d89d","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniJIS-UTF32-H.bcmap","hash":"bc482114d214e2fffe85dd0b7422f48c3e282c17","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniJIS-UTF32-V.bcmap","hash":"2f5ec2584fd7c39f455161a857550fa7fea5f53a","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniJIS2004-UTF16-H.bcmap","hash":"b8b0cc6779d3960426899fc2e7cf2866ffc80167","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniJIS-UTF8-V.bcmap","hash":"b3ea8d2172a2f6f9e73cf62ae467aa84848df6d7","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniJIS2004-UTF16-V.bcmap","hash":"2872cb273dab9d0dbb7f331826045df18764a7b0","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniJIS2004-UTF32-H.bcmap","hash":"f48723212d1ad18c0b3c41168d6f630798e04160","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniJIS-UTF8-H.bcmap","hash":"f47956c1c7b2eadbda93aac25fe4546b413ec0a5","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniJIS2004-UTF32-V.bcmap","hash":"ef16ccb3102fc44c1d46f4cad40cfbdb020ee277","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniJIS2004-UTF8-H.bcmap","hash":"385ab762d03499d35539048176928e031e5340d1","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniJIS2004-UTF8-V.bcmap","hash":"565560a59d5174ac379a8d91f165c8ecdef54e06","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniJISPro-UCS2-HW-V.bcmap","hash":"3f0a364246717707db82913593304cb7bd37c378","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniJISPro-UCS2-V.bcmap","hash":"b1a47305fa79afa19ab696d33af5099d35570c56","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniJISPro-UTF8-V.bcmap","hash":"ed6b571aeed388d3b53b9e65824af3f0146a5857","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniJISX0213-UTF32-V.bcmap","hash":"dfbe3e295505977b4e1881ef30b80362d7406bbc","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniJISX0213-UTF32-H.bcmap","hash":"15c953c36436d32f748ec7468a95c3e5843d70bb","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniJISX02132004-UTF32-H.bcmap","hash":"c41dd50df01e3d3331f0acdb6da6c1b857a67cf7","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniJISX02132004-UTF32-V.bcmap","hash":"9c48a0c654acf4bcf51defde2f7d8b3ce52a063d","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniKS-UCS2-H.bcmap","hash":"50fcce1b2e3224791b480289e7c4c42938beb854","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniKS-UCS2-V.bcmap","hash":"6743b3e07370fd49962b97d97be77dae8d18aabb","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniKS-UTF16-H.bcmap","hash":"4f4603408966d9ac29a96c3a6755b9f23e7aa953","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniKS-UTF16-V.bcmap","hash":"cfdbfbf0b0e8ef98fef6236ea570c73465da1581","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniKS-UTF32-H.bcmap","hash":"6b0e98e16418fa5a86338b3fb361f1700971f649","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniKS-UTF32-V.bcmap","hash":"73bd343b188a80471eb156655f5b192903f86cbf","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniKS-UTF8-V.bcmap","hash":"586c64948a67e4cb12de64e221b0dc3d9e47dedf","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/UniKS-UTF8-H.bcmap","hash":"8117d31e498a8f0fb7c223c4172ba881c0496c6f","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/V.bcmap","hash":"99790f12ca21a196bc1d836ae5bf0ad7af95e079","modified":1630147840098},{"_id":"public/js/pdfjs/web/cmaps/WP-Symbol.bcmap","hash":"3a6417abad460a1a083be75636c014f3a73937b5","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/annotation-check.svg","hash":"015d03ffa6a0ce93b41ed93a262879e4f8cf72fd","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/annotation-help.svg","hash":"2f3d88f4e8cefafc2d76932104f6b2517034af2f","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/annotation-comment.svg","hash":"5ec875153d5046507050a3531422ca69b44680c7","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/locale.properties","hash":"ea87f38f31a6f65f6c44b371c0af47cbe264fa25","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/annotation-insert.svg","hash":"7a12af74ef20d5249a0c330d992bd1132308cbac","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/annotation-key.svg","hash":"d9224d3aef774d6ecc9735b440810ada4384be11","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/annotation-noicon.svg","hash":"5a5447e5c39cf7ca748853a15dbd835ddaa3b5df","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/annotation-newparagraph.svg","hash":"453ba47aa10b6fcf8459569e0a550b4f91260ec7","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/annotation-paragraph.svg","hash":"70591a3b26c56815c6e5ab2bae959e8a951c43fb","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/findbarButton-next.svg","hash":"b8694ebb1f7f2f3691d52645a74d5a50a9b22ff3","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/annotation-note.svg","hash":"6100deeb6121f98c7e024ec1a273171207c84c7f","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/findbarButton-previous.svg","hash":"585dd87195847bcce9b5b24450bf8c86d1248edb","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/grab.cur","hash":"fbd667e863c8278950e7761aee54b394cd93ea0c","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/grabbing.cur","hash":"f30d68405751e730ca94ada8628df45b4839931f","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/loading-dark.svg","hash":"6beecaf20132520e63af2f7729110627aa513f4b","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/loading-icon.gif","hash":"e043879d3ee94a3edf10260f21f44bfa4a6fc66e","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/loading.svg","hash":"eed9fc8e8c5aa8a579804d130c705df4acfc7559","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/secondaryToolbarButton-documentProperties.svg","hash":"d2f45686a4d7687a02aaeaad1e3362a6464b8f34","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/secondaryToolbarButton-firstPage.svg","hash":"401049e3f24dd7d23d20153b84621c346101cb1a","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/secondaryToolbarButton-handTool.svg","hash":"9b84882a6943b4e9d40cf85546099d1c5e13c5b7","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/secondaryToolbarButton-lastPage.svg","hash":"d4570550efe68c44e3a2e227d3254908e402f735","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/secondaryToolbarButton-rotateCcw.svg","hash":"29a312c7c98296b3b8c9fa4ef6a5669c49c7b2e8","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/secondaryToolbarButton-scrollHorizontal.svg","hash":"f12f76653b9d5a5b87857c16f87ba321918a2b70","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/secondaryToolbarButton-rotateCw.svg","hash":"23d341acd174c1864d35c7ce5e63dd83a331c74a","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/secondaryToolbarButton-scrollWrapped.svg","hash":"6f08b682673d936d697c86b043cde478c282a14c","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/secondaryToolbarButton-spreadEven.svg","hash":"09b8adc28babb563f880415fae270b75c601975b","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/secondaryToolbarButton-selectTool.svg","hash":"b22cd19d4eec18a106d35eb0629763f61e10bcd7","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/secondaryToolbarButton-scrollVertical.svg","hash":"e59336dafede013bf0dc2331c22841994638a61d","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/secondaryToolbarButton-spreadNone.svg","hash":"6b438647d978f50657d3324065776843b7249e15","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/secondaryToolbarButton-spreadOdd.svg","hash":"d58e18af4c5b47b05f1c37f3658f6370df95537f","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/shadow.png","hash":"b931e2de029146b2e1502ebd61c8160e72d6306c","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/toolbarButton-currentOutlineItem.svg","hash":"c4b02b9875a01992715305bf3b2e2ece3506cb85","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/toolbarButton-bookmark.svg","hash":"6c621d20fd62e2cab21e730606e41655bc90676e","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/toolbarButton-download.svg","hash":"63f4143020019df8d607f01e6b22da86e93dd326","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/toolbarButton-menuArrow.svg","hash":"49b82a1d7fc96cbe8793474c3c42ced5682cf50d","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/toolbarButton-openFile.svg","hash":"dc27ad6bc304f9256e1821e327187efe3adee5ea","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/toolbarButton-pageUp.svg","hash":"e521b0bbe583ef9ba858071e5af0e1def294ffb7","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/toolbarButton-pageDown.svg","hash":"22883f1872f39254dce4979b43f786872dec7cd5","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/toolbarButton-print.svg","hash":"c87e531fcafc7347b4c163b2923a10fa9d56a329","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/toolbarButton-search.svg","hash":"0ef58f82497562def0aec5ca59d8cf4a9d247070","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/toolbarButton-presentationMode.svg","hash":"f7a2416c2ba73a78b99ec3ab2ea546df86195a47","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/toolbarButton-secondaryToolbarToggle.svg","hash":"4fe70d9c98f2bf33b8ca096378e3037dd8f89fe1","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/toolbarButton-sidebarToggle.svg","hash":"36051f39c70897a381250c1a247523e128ce4f3a","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/toolbarButton-viewAttachments.svg","hash":"4fa65284ff8194045f100794e1d6cd0cb5e5fa84","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/toolbarButton-viewLayers.svg","hash":"3988264f3b30f0e402717954eabbc692f8cb6d98","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/toolbarButton-viewOutline.svg","hash":"fc1dbb0d6ca5a4bd5e51b64d61f35423d145ef9d","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/toolbarButton-zoomIn.svg","hash":"dfde15786e30d5e96cba282f3b67c0f7a3b24ae6","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/toolbarButton-viewThumbnail.svg","hash":"94d128518c79b50977f9a595c937702bb12df5e3","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/toolbarButton-zoomOut.svg","hash":"ebc21e5385e4636b3842ce8d629f31b8065dd17f","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/treeitem-collapsed.svg","hash":"5b10744cb6d843f08b492fd10328c9cdb521ec14","modified":1630147840098},{"_id":"public/js/pdfjs/web/images/treeitem-expanded.svg","hash":"f7791f5b8486039bfa9efbefe97de4ee4364a342","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/78-EUC-H.bcmap","hash":"c84a5fe05bb2a5e4e599329d0ebb3ed8fe1ebfdf","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/78-EUC-V.bcmap","hash":"678dcba8720226133150374f78493cc09c9b8d9e","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/78-H.bcmap","hash":"e77449427a5d5411c9da1c1a64e1e3ae362bbcdf","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/78-RKSJ-V.bcmap","hash":"3fa6830e3e5c6b0cc5d03402cfb6712a04c08d31","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/78-V.bcmap","hash":"c58a521bdfad6ffe30e292505992a396033d03c3","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/78-RKSJ-H.bcmap","hash":"5f0f202932865c38e7b0b06924e419c77f74be85","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/78ms-RKSJ-H.bcmap","hash":"ef37df685e4779722b34fcc026b196b224bfca13","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/83pv-RKSJ-H.bcmap","hash":"c4474f77d94be66d771ba68f18ff2fd606a3c820","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/78ms-RKSJ-V.bcmap","hash":"27d45708491107b2cf673c2cd584bf22ca27e4e4","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/90ms-RKSJ-H.bcmap","hash":"994ca6d6232d91be047c68e087e0951dcca4cba4","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/90ms-RKSJ-V.bcmap","hash":"c4ed8e0b82fc29ff6140c72ec8ab3acc3cd0578f","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/90msp-RKSJ-H.bcmap","hash":"d3f02d6724d9c91d077ed38545c9321dba65b624","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/90pv-RKSJ-H.bcmap","hash":"76218acded94b2d29f747735e7fb41f19cee84eb","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/90pv-RKSJ-V.bcmap","hash":"7296d339f5c1d843b823482fa2b3857c0559eb93","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/90msp-RKSJ-V.bcmap","hash":"ddfc0fdb34314f2d7116d707fa6dbb24bc9bf390","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Add-RKSJ-H.bcmap","hash":"9a17c268decf876dc35c5f20c660ee63563fa523","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Add-H.bcmap","hash":"cd55ec3d5627b80505d7dbea433e5702f8c05260","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Add-V.bcmap","hash":"02ca7b80b507640df998e9b5f6d25b346082d8c1","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-CNS1-0.bcmap","hash":"241cccfc85b5ef9ea4618f94a6341e02d1b03b98","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Add-RKSJ-V.bcmap","hash":"0e4ef11ed7f4e5ed3b2e32f267f4c3fb4359d08e","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-CNS1-2.bcmap","hash":"a568bee71b12ec4e79a2fa65c4eb9f865c505a5e","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-CNS1-3.bcmap","hash":"ef567b58254e03837d46e1fdff4fea5cce318a74","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-CNS1-1.bcmap","hash":"f37b5b68198690c8270322daa0ea522225a46127","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-CNS1-4.bcmap","hash":"5f81f4782a5f996649dc318c1587ae7728afd10b","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-CNS1-5.bcmap","hash":"b7de7cea41575c7933cffdb917ad1f918df76c70","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-CNS1-6.bcmap","hash":"4eaa2ec548df7cdbdece2eec227fdb9d4cb2f281","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-CNS1-UCS2.bcmap","hash":"bee971d04cae79d791a52bf0d3d5e2e9deb1d1c8","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-GB1-0.bcmap","hash":"86edf145080d2fedba2f0a0b0ab1bc18d9a5af55","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-GB1-2.bcmap","hash":"a3ce0132af54173d30a4330314bc4cf273fc29c8","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-GB1-1.bcmap","hash":"83cc28efd5e778b9d37898f9b100b502bc442dc3","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-GB1-3.bcmap","hash":"c7b6cfbeac681010771d022d319913c798416d75","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-GB1-4.bcmap","hash":"cee3007bb41ed1bbe7fd22f054c0fb036a92c8cf","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-GB1-5.bcmap","hash":"a7d9440784d773507e3d83d0bf93fa8d93a3289f","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-GB1-UCS2.bcmap","hash":"23366624efa674e2493a18bf6b6e2c16929d68d3","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-Japan1-1.bcmap","hash":"a766b29745a30aa3316cafc73d884c271cc12ff4","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-Japan1-0.bcmap","hash":"ce5b494e809c30621968169d01d1136f3ad1ce3c","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-Japan1-2.bcmap","hash":"78c4e86cff8aa1c2f2bc18aaf83095a96f0bca50","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-Japan1-3.bcmap","hash":"5b520d2cf37e21b084bc9e6a21d006c53e4e552e","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-Japan1-4.bcmap","hash":"4136c902f4715ed18b8b2390965d3621d2fda048","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-Japan1-5.bcmap","hash":"38970fd416a1c3ef4faa25009254347627d24964","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-Japan1-6.bcmap","hash":"dfba7ab251b5ac07d7648c4e81e808ea096578c9","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-Japan1-UCS2.bcmap","hash":"d99c0d908b8075afa69aa3c579a9393b13b29dd9","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-Korea1-0.bcmap","hash":"ca8e1774cdd2859ba0341e4474d07d6fb2f9395b","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-Korea1-1.bcmap","hash":"e9b783963160380ccfe33fa1dcdd9c79b1cf2934","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-Korea1-2.bcmap","hash":"0b8d7fd848de3efa86f958c6e1cf5aece9bf1bf4","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Adobe-Korea1-UCS2.bcmap","hash":"15e4e07c96891a2bb2778b5df8dd0a131edeed52","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/B5-H.bcmap","hash":"771d71153bf652d1134b7d65beb8afc60c835ff6","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/B5-V.bcmap","hash":"dfc7362c157c24651761e5216ef0c46aba795488","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/B5pc-H.bcmap","hash":"29d5fd41dc8fc4f19b59949b9a7f410d63f4f3bd","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/B5pc-V.bcmap","hash":"f12ae6ed2320136959420e28b1b937001cdd4f0b","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/CNS-EUC-H.bcmap","hash":"1da78eb52781330148c95ccf64c78edd2072a991","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/CNS1-H.bcmap","hash":"07f422b28ca4fedf2cdc6ccdf551eaecae40f60b","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/CNS-EUC-V.bcmap","hash":"895fe039258dae00d7a8cea93b3b07d794543d2d","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/CNS1-V.bcmap","hash":"7455bd92e1a1f32bfd2cb5b80eb938aa665f6b8a","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/CNS2-H.bcmap","hash":"0570a8186311bba4ad216250f805461220d41d0a","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/CNS2-V.bcmap","hash":"c0870c3fad8349e3391ff7cda29d1f3a917e27f1","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/ETHK-B5-H.bcmap","hash":"225205ad3aad58967faf23a2504731abebc6dccc","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/ETen-B5-H.bcmap","hash":"9c3b70700d7ae2b8c4cc6f658cdc98f4e65b3be4","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/ETenms-B5-H.bcmap","hash":"1207c931295ad5f57a430317d5014fb66d0eab7d","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/ETHK-B5-V.bcmap","hash":"03e35e7fc1b75495df5559a3f71c5f0cbd1517ba","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/ETen-B5-V.bcmap","hash":"5b637fa1b203754d98463053b38a2f694cde499b","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/ETenms-B5-V.bcmap","hash":"631c58a7f7a8094d44a858d26485ab65b499b59b","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/EUC-V.bcmap","hash":"c47c42d9099caf1447498e57fc1c8f3c7ff417b3","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/EUC-H.bcmap","hash":"f88729b6a413ae1365bafb5dc8076b465aa1fb87","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Ext-RKSJ-H.bcmap","hash":"e1c2563a6d785aa5e30de423911d179fe79ec957","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Ext-H.bcmap","hash":"4b6a27e1125bb11bf9fd8fe9c5375f7781c95204","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Ext-V.bcmap","hash":"0d88a7517783f25ce1eee082a5ed12b0f96061c2","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Ext-RKSJ-V.bcmap","hash":"5443591823737ba98993537c4d4e8af70a37c92e","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/GB-EUC-H.bcmap","hash":"4231eab22968baa29ea4e6fdc4278b737067a7da","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/GB-EUC-V.bcmap","hash":"7d268732b300431fced1351b4bfd12b51299283e","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/GB-V.bcmap","hash":"b70477a9738709f639adf6bc20e81363efcc9ed0","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/GB-H.bcmap","hash":"3f1c2a68bdd13541e6a2cd6a7a393581e9444e1e","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/GBK-EUC-H.bcmap","hash":"08986b370ac27b60cf8cd7023c9e49f6b784b52b","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/GBK-EUC-V.bcmap","hash":"4f0e0cfffafa21b30f7a25e5161738faf2e265fe","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/GBK2K-H.bcmap","hash":"a36052b8b5d7dc1dde2b721437d6abc90ec7cefe","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/GBK2K-V.bcmap","hash":"d27b6916b7de1993464e5f33822f176fdc8e949f","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/GBKp-EUC-H.bcmap","hash":"a8785a44403f130097ee9a23c3923d5af252ac51","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/GBKp-EUC-V.bcmap","hash":"717f6d6585184bfebb894e59868886ab8f3c38f1","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/GBT-EUC-V.bcmap","hash":"9d6ef5fa295e3005d620904754d7cc16104be908","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/GBT-EUC-H.bcmap","hash":"e2dda44896a41f4fa817c5397f17894763b7623e","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/GBT-V.bcmap","hash":"2f0936e0bd4362f7c6f8c2b56642d6483366cd11","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/GBT-H.bcmap","hash":"62508bbc22bcd3795e4af2c7fa3cfddc71367813","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/GBTpc-EUC-H.bcmap","hash":"388eb76b53b008d90dfe68c1e3288314b21c3cdc","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/GBTpc-EUC-V.bcmap","hash":"ce125f52097c71fc83631577977ac267b8901c78","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/GBpc-EUC-V.bcmap","hash":"36004a6bedae0edfaea620a7d8f61cfb875f9640","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/H.bcmap","hash":"149c08c0eadc405f6ba64adac9329fdb300d11ab","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/GBpc-EUC-H.bcmap","hash":"5c34efa7cca4e2f652f81f4498fdf41db1b7b1e6","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/HKdla-B5-H.bcmap","hash":"57ba02cf438eba88d2071bd99d1beb816b438b9e","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/HKdla-B5-V.bcmap","hash":"035e4064559dd56ceb0f06c3ac1c2e766aeffe62","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/HKdlb-B5-H.bcmap","hash":"2be77ea4f4cd8a338ff7007d314773582f565efa","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/HKdlb-B5-V.bcmap","hash":"3dc79100304f82ec559b70d120100f6ebe6ab5c0","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/HKgccs-B5-H.bcmap","hash":"dbaa1026222370fa6e3275c98e3bdb5ef3d37709","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/HKm314-B5-H.bcmap","hash":"cbfb65ab0cae690e7679a1769de521ea20fb6602","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/HKgccs-B5-V.bcmap","hash":"6f22784990eb168bcf9192e7e36de18e08927dfb","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/HKm314-B5-V.bcmap","hash":"3ef5f7e35ebffe68dea8ea757cdceac5b8151372","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/HKm471-B5-V.bcmap","hash":"2a6f2cc4d105f464432187daeff7b81040c093e4","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/HKm471-B5-H.bcmap","hash":"a75f2e32e5495d46e14b1d07ac124b3fc675ef1a","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/HKscs-B5-V.bcmap","hash":"fa5b3a1f0b3ab6bd614f8a39c9ab80b203daadf5","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/HKscs-B5-H.bcmap","hash":"45f1793e771de030af89938eed23fff4c7daca3a","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Hankaku.bcmap","hash":"dfc2f635dd66602f9978ae3fe72695a02e512a6a","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Hiragana.bcmap","hash":"10e7a0f20cde8865a1dd3086a89f2e96e330d1a6","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/KSC-EUC-V.bcmap","hash":"4529ddac78c931d63411b6061b0af740b4c44ca5","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/KSC-EUC-H.bcmap","hash":"bc349367bb60b06af5fdeeec05047f596ac71ab3","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/KSC-H.bcmap","hash":"42e15fbce70bdec4f7bb5b2cbd02b0efd8bc65fc","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/KSC-Johab-H.bcmap","hash":"3585accc6e6957eda55302393fd9c3a563db6cbb","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/KSC-Johab-V.bcmap","hash":"e68b770b37b591884c459d6ce3bb43bc4556547b","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/KSC-V.bcmap","hash":"22b097fd376c21e40a0f9392961be74acc316343","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/KSCms-UHC-H.bcmap","hash":"4e0ed017a2a41ee7bf6eacf0f7e6b40ae60d223d","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/KSCms-UHC-HW-H.bcmap","hash":"d410341b19a6f05e0c20ea4a1a77078a3084044e","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/KSCms-UHC-HW-V.bcmap","hash":"6cfeb36f492702aef5ce5b7671342291010b29e1","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/KSCms-UHC-V.bcmap","hash":"3de7c5c70cf172ff560a62d5dfe84a9336b4f5ad","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/KSCpc-EUC-H.bcmap","hash":"3705fd3621117a7e5a3772c3849c5d69620ef08f","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/KSCpc-EUC-V.bcmap","hash":"1d3a11932c44a5fa8fa22efd2bd3dba7db9a2c8e","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Katakana.bcmap","hash":"da100ad00f2a9ba196892bfb4d6644ec828a4fcf","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/LICENSE","hash":"1afb5991fce0d60110b5092b68bf9ff76b0c73f6","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/NWP-H.bcmap","hash":"7d0f51c52d7a96bf289d0c6454d7e9dccf009c15","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/NWP-V.bcmap","hash":"891a866c52b46e7526123799a829db24ac6cda4f","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/RKSJ-H.bcmap","hash":"a4f7d5cdd13d3008cc42d82f69672d9e50a9d5b3","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/RKSJ-V.bcmap","hash":"16ae42a46e7eb92ca048fe24649b668c5103b4b2","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/Roman.bcmap","hash":"5755781c7e9c50cc8192426d8733a506382b5fdd","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniCNS-UCS2-V.bcmap","hash":"6b19ece5c921516431eb94d28d74080fdd7d35bc","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniCNS-UCS2-H.bcmap","hash":"7f289b94c643b7cc43d4936078143a2347ca0fc1","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniCNS-UTF16-H.bcmap","hash":"d73d55388c76932033915cea627bb628edad4f66","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniCNS-UTF16-V.bcmap","hash":"0f7152f2845cc2be4d3ce7e0e1530639ec4162e3","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniCNS-UTF32-V.bcmap","hash":"debaa98acaf13f341a5003856ef6a6a7df8f6e14","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniCNS-UTF32-H.bcmap","hash":"a5872864e2b121c1df5068a54201ed166c69d5f1","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniCNS-UTF8-V.bcmap","hash":"019bd0716b2aa80bc1bcabfd389d3d5e1065ba8e","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniCNS-UTF8-H.bcmap","hash":"734ad1a00033d70c195c81358b643c7cba1327b2","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniGB-UCS2-V.bcmap","hash":"f5853ca83c25b888c1d925e2a20ef44e064d064e","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniGB-UCS2-H.bcmap","hash":"868238e34cb9548c4d138af1adc1a4bea62dec37","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniGB-UTF16-H.bcmap","hash":"28963866dfb575b58b4370e60ebd9bfb6e56ac09","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniGB-UTF16-V.bcmap","hash":"1771376eef979ad42c2b5c01a1af1d34f54580b7","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniGB-UTF32-V.bcmap","hash":"8167ba503aa8a6c805f39be0ca538b99898a967d","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniGB-UTF32-H.bcmap","hash":"b9ea278eb4c324d12a81e2d62479548d1e7126cb","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniGB-UTF8-V.bcmap","hash":"e23616fa12132c73f52071b96e76d876430ececf","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniGB-UTF8-H.bcmap","hash":"09cc7750f69da77434093e4c94211394f5665eda","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniJIS-UCS2-HW-H.bcmap","hash":"97cbb8599cf62914885a8b2b47594865fff52099","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniJIS-UCS2-H.bcmap","hash":"caf525125e29fa4de78088e5eb1785c1af1f9950","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniJIS-UCS2-HW-V.bcmap","hash":"f36bad9c680f4bba6cbcf8ac57f53e7ce21c806b","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniJIS-UCS2-V.bcmap","hash":"45396576a6bd5468a84e2c2e4ae64c23fe7f2e85","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniJIS-UTF16-H.bcmap","hash":"16499e93f0a447a94e1e44bfa9951401d290d89d","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniJIS-UTF16-V.bcmap","hash":"44402b8f73e0b0160846b641e7cb2e75ab8c81bd","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniJIS-UTF32-V.bcmap","hash":"2f5ec2584fd7c39f455161a857550fa7fea5f53a","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniJIS-UTF32-H.bcmap","hash":"bc482114d214e2fffe85dd0b7422f48c3e282c17","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniJIS-UTF8-V.bcmap","hash":"b3ea8d2172a2f6f9e73cf62ae467aa84848df6d7","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniJIS2004-UTF16-H.bcmap","hash":"b8b0cc6779d3960426899fc2e7cf2866ffc80167","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniJIS-UTF8-H.bcmap","hash":"f47956c1c7b2eadbda93aac25fe4546b413ec0a5","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniJIS2004-UTF16-V.bcmap","hash":"2872cb273dab9d0dbb7f331826045df18764a7b0","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniJIS2004-UTF32-H.bcmap","hash":"f48723212d1ad18c0b3c41168d6f630798e04160","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniJIS2004-UTF32-V.bcmap","hash":"ef16ccb3102fc44c1d46f4cad40cfbdb020ee277","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniJIS2004-UTF8-H.bcmap","hash":"385ab762d03499d35539048176928e031e5340d1","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniJIS2004-UTF8-V.bcmap","hash":"565560a59d5174ac379a8d91f165c8ecdef54e06","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniJISPro-UCS2-HW-V.bcmap","hash":"3f0a364246717707db82913593304cb7bd37c378","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniJISPro-UCS2-V.bcmap","hash":"b1a47305fa79afa19ab696d33af5099d35570c56","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniJISPro-UTF8-V.bcmap","hash":"ed6b571aeed388d3b53b9e65824af3f0146a5857","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniJISX0213-UTF32-H.bcmap","hash":"15c953c36436d32f748ec7468a95c3e5843d70bb","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniJISX0213-UTF32-V.bcmap","hash":"dfbe3e295505977b4e1881ef30b80362d7406bbc","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniJISX02132004-UTF32-H.bcmap","hash":"c41dd50df01e3d3331f0acdb6da6c1b857a67cf7","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniJISX02132004-UTF32-V.bcmap","hash":"9c48a0c654acf4bcf51defde2f7d8b3ce52a063d","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniKS-UCS2-H.bcmap","hash":"50fcce1b2e3224791b480289e7c4c42938beb854","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniKS-UCS2-V.bcmap","hash":"6743b3e07370fd49962b97d97be77dae8d18aabb","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniKS-UTF16-H.bcmap","hash":"4f4603408966d9ac29a96c3a6755b9f23e7aa953","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniKS-UTF16-V.bcmap","hash":"cfdbfbf0b0e8ef98fef6236ea570c73465da1581","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniKS-UTF32-H.bcmap","hash":"6b0e98e16418fa5a86338b3fb361f1700971f649","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniKS-UTF32-V.bcmap","hash":"73bd343b188a80471eb156655f5b192903f86cbf","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniKS-UTF8-H.bcmap","hash":"8117d31e498a8f0fb7c223c4172ba881c0496c6f","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/UniKS-UTF8-V.bcmap","hash":"586c64948a67e4cb12de64e221b0dc3d9e47dedf","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/V.bcmap","hash":"99790f12ca21a196bc1d836ae5bf0ad7af95e079","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/cmaps/WP-Symbol.bcmap","hash":"3a6417abad460a1a083be75636c014f3a73937b5","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/annotation-check.svg","hash":"015d03ffa6a0ce93b41ed93a262879e4f8cf72fd","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/annotation-comment.svg","hash":"5ec875153d5046507050a3531422ca69b44680c7","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/annotation-help.svg","hash":"2f3d88f4e8cefafc2d76932104f6b2517034af2f","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/annotation-key.svg","hash":"d9224d3aef774d6ecc9735b440810ada4384be11","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/annotation-insert.svg","hash":"7a12af74ef20d5249a0c330d992bd1132308cbac","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/annotation-noicon.svg","hash":"5a5447e5c39cf7ca748853a15dbd835ddaa3b5df","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/annotation-newparagraph.svg","hash":"453ba47aa10b6fcf8459569e0a550b4f91260ec7","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/annotation-note.svg","hash":"6100deeb6121f98c7e024ec1a273171207c84c7f","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/findbarButton-next.svg","hash":"b8694ebb1f7f2f3691d52645a74d5a50a9b22ff3","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/findbarButton-previous.svg","hash":"585dd87195847bcce9b5b24450bf8c86d1248edb","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/annotation-paragraph.svg","hash":"70591a3b26c56815c6e5ab2bae959e8a951c43fb","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/grabbing.cur","hash":"f30d68405751e730ca94ada8628df45b4839931f","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/loading-dark.svg","hash":"6beecaf20132520e63af2f7729110627aa513f4b","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/grab.cur","hash":"fbd667e863c8278950e7761aee54b394cd93ea0c","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/loading-icon.gif","hash":"e043879d3ee94a3edf10260f21f44bfa4a6fc66e","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/loading.svg","hash":"eed9fc8e8c5aa8a579804d130c705df4acfc7559","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/secondaryToolbarButton-firstPage.svg","hash":"401049e3f24dd7d23d20153b84621c346101cb1a","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/secondaryToolbarButton-documentProperties.svg","hash":"d2f45686a4d7687a02aaeaad1e3362a6464b8f34","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/secondaryToolbarButton-handTool.svg","hash":"9b84882a6943b4e9d40cf85546099d1c5e13c5b7","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/secondaryToolbarButton-lastPage.svg","hash":"d4570550efe68c44e3a2e227d3254908e402f735","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/secondaryToolbarButton-rotateCcw.svg","hash":"29a312c7c98296b3b8c9fa4ef6a5669c49c7b2e8","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/secondaryToolbarButton-rotateCw.svg","hash":"23d341acd174c1864d35c7ce5e63dd83a331c74a","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/secondaryToolbarButton-scrollHorizontal.svg","hash":"f12f76653b9d5a5b87857c16f87ba321918a2b70","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/secondaryToolbarButton-scrollVertical.svg","hash":"e59336dafede013bf0dc2331c22841994638a61d","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/secondaryToolbarButton-scrollWrapped.svg","hash":"6f08b682673d936d697c86b043cde478c282a14c","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/secondaryToolbarButton-selectTool.svg","hash":"b22cd19d4eec18a106d35eb0629763f61e10bcd7","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/secondaryToolbarButton-spreadEven.svg","hash":"09b8adc28babb563f880415fae270b75c601975b","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/secondaryToolbarButton-spreadNone.svg","hash":"6b438647d978f50657d3324065776843b7249e15","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/secondaryToolbarButton-spreadOdd.svg","hash":"d58e18af4c5b47b05f1c37f3658f6370df95537f","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/shadow.png","hash":"b931e2de029146b2e1502ebd61c8160e72d6306c","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/toolbarButton-bookmark.svg","hash":"6c621d20fd62e2cab21e730606e41655bc90676e","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/toolbarButton-currentOutlineItem.svg","hash":"c4b02b9875a01992715305bf3b2e2ece3506cb85","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/toolbarButton-menuArrow.svg","hash":"49b82a1d7fc96cbe8793474c3c42ced5682cf50d","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/toolbarButton-download.svg","hash":"63f4143020019df8d607f01e6b22da86e93dd326","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/toolbarButton-openFile.svg","hash":"dc27ad6bc304f9256e1821e327187efe3adee5ea","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/toolbarButton-pageDown.svg","hash":"22883f1872f39254dce4979b43f786872dec7cd5","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/toolbarButton-pageUp.svg","hash":"e521b0bbe583ef9ba858071e5af0e1def294ffb7","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/toolbarButton-presentationMode.svg","hash":"f7a2416c2ba73a78b99ec3ab2ea546df86195a47","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/toolbarButton-print.svg","hash":"c87e531fcafc7347b4c163b2923a10fa9d56a329","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/toolbarButton-search.svg","hash":"0ef58f82497562def0aec5ca59d8cf4a9d247070","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/toolbarButton-secondaryToolbarToggle.svg","hash":"4fe70d9c98f2bf33b8ca096378e3037dd8f89fe1","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/toolbarButton-sidebarToggle.svg","hash":"36051f39c70897a381250c1a247523e128ce4f3a","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/toolbarButton-viewAttachments.svg","hash":"4fa65284ff8194045f100794e1d6cd0cb5e5fa84","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/toolbarButton-viewLayers.svg","hash":"3988264f3b30f0e402717954eabbc692f8cb6d98","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/toolbarButton-viewThumbnail.svg","hash":"94d128518c79b50977f9a595c937702bb12df5e3","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/toolbarButton-viewOutline.svg","hash":"fc1dbb0d6ca5a4bd5e51b64d61f35423d145ef9d","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/toolbarButton-zoomIn.svg","hash":"dfde15786e30d5e96cba282f3b67c0f7a3b24ae6","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/toolbarButton-zoomOut.svg","hash":"ebc21e5385e4636b3842ce8d629f31b8065dd17f","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/treeitem-expanded.svg","hash":"f7791f5b8486039bfa9efbefe97de4ee4364a342","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/locale.properties","hash":"ea87f38f31a6f65f6c44b371c0af47cbe264fa25","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/images/treeitem-collapsed.svg","hash":"5b10744cb6d843f08b492fd10328c9cdb521ec14","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/licences/Knuth_License.txt","hash":"105c0c89c5cbea0a2f4a84551b2959ed08575a17","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/licences/License_for_dsrom.txt","hash":"88bd1ecb66367f374e0373c6daf8bb51108b46ed","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/licences/OFL.txt","hash":"023d12270653afe0d8706a063bfc47c1db8059f6","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/ach/viewer.properties","hash":"22233e0524c11bfa38d180ec5f89c9a8c97853c3","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/af/viewer.properties","hash":"cda8da0df120f83ef571bae3457650af9f845cae","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/an/viewer.properties","hash":"eec2f66fa37a6f3163fb7d06f51845fc58b51bea","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/az/viewer.properties","hash":"0fed4acef9407e9c832d0ae625a05301305add21","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/ar/viewer.properties","hash":"abef7a7c48fafd5fd12b72fb60322a45ca2d5ba5","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/be/viewer.properties","hash":"e357490fbfdf9e43e49fda1cea3e4c4121d622e8","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/ast/viewer.properties","hash":"00b445afc193df32c4fc13a75eaab6c44f6b3c42","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/bg/viewer.properties","hash":"16e1b4a830c2a91c6bbc86d1d51ae598c0a925c5","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/bn/viewer.properties","hash":"0084429d36c41b3dd530d7e5955fb1cf37dd2e40","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/bo/viewer.properties","hash":"0121edf8d19a64d07e8fbcba4999464eb8145768","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/br/viewer.properties","hash":"d7b1272ae65ca96638b7057c242b972190c7df14","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/brx/viewer.properties","hash":"df2505908f0a3892247578ff387f9c556abc2e46","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/bs/viewer.properties","hash":"7467e153a429f2e4862fde1ef94ba5a79aa7fe62","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/ca/viewer.properties","hash":"d615c145192c4b4e3be592a7a90ae9a6441c955d","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/cak/viewer.properties","hash":"693e3429a8b7a2600c890a4420cb980d481c021f","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/ckb/viewer.properties","hash":"fc076de69218a2f8f6dd074771ce82f9ca2c58de","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/cs/viewer.properties","hash":"c12b2316beef18cb50377f39216fffc8e3d3a8ba","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/cy/viewer.properties","hash":"e75641d670c4e014e014d7471c68fa6c99d201be","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/da/viewer.properties","hash":"94d157b33044a1ac0dc14b1d4214aceeeb94d704","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/de/viewer.properties","hash":"abcff6b79566782cd76b4102c11659f2c4211b42","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/el/viewer.properties","hash":"853bc05f83422f3c9f01137afc8718591b69593e","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/dsb/viewer.properties","hash":"0c98c92289b9004aa59471aa2c2a8173667fb9ed","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/en-US/viewer.properties","hash":"12b2108dd9eab08f4b900f948a9cc61b9dd78731","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/en-CA/viewer.properties","hash":"3eec6c9ec82635f3d4feb5a53cc96750a71b7743","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/eo/viewer.properties","hash":"41a51e90cddb8b25385ed66dff53f0ed7cb4ad86","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/es-AR/viewer.properties","hash":"3fc16c5b5817cfc7e3b97f259ca01217b7659df2","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/en-GB/viewer.properties","hash":"6e3565f14ab631f6c4d0a84f8e9f56177a45ec82","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/es-CL/viewer.properties","hash":"5b59c142d50d8827f3b959f8870e24a6b483079e","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/es-ES/viewer.properties","hash":"6dbfa750a62f297929f7ff778c215abadbfb77b2","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/es-MX/viewer.properties","hash":"eb26865ba31ef94f93df42ecb8d5bd9d1bc01265","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/et/viewer.properties","hash":"49c974e3498e5180e2e22818ce4bf5a118897587","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/eu/viewer.properties","hash":"18d429ecaa63043c625c94bf99e2521e9c90ddf8","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/fa/viewer.properties","hash":"126e5dc7e15392b4329755c7e2d8ed880fad3f0b","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/ff/viewer.properties","hash":"73938a6a494a6e6ac40dccc48e6e2b2bce8aa195","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/fi/viewer.properties","hash":"250abdfd721a6b5ed2d8ea5014e194db799f6eed","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/fr/viewer.properties","hash":"9bc0443f7525b32417fe0f8f6fb55db961e08109","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/fy-NL/viewer.properties","hash":"b3248fb5e2bd82454450f6f0858ba2266b9524f2","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/ga-IE/viewer.properties","hash":"ae15ad3dd8b97ae8ca3598f6e87d0b8e7a9215eb","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/gd/viewer.properties","hash":"3f419f18118f75c051712f66b1c5594581fafe9a","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/gn/viewer.properties","hash":"fc059bef988190d8833b4d8ff66d69e4831de64d","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/gl/viewer.properties","hash":"549eb46c7227121ba6ed43fc190f9a2c6b8d01b7","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/gu-IN/viewer.properties","hash":"f8e9a229dea000df970fe8e319f43265c48f6292","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/he/viewer.properties","hash":"c2cbd966f3cc61164b8c6d656425c8c01859b1a3","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/hi-IN/viewer.properties","hash":"6ce80e3fd59a5d11a7a313befc51a5470deaf20d","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/hr/viewer.properties","hash":"b1bbae09354ae972cfbfcfed6e17f2dd3766f2d2","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/hsb/viewer.properties","hash":"6df5120b7cb2c401c8964b04b3dcb983e9ee351d","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/hu/viewer.properties","hash":"d07257c6577cf489a88cfd25a14ea2b470f0ee60","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/hy-AM/viewer.properties","hash":"3a5d42645591b32642833b6c678c588f45918cbc","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/hye/viewer.properties","hash":"bc7746be7a9f2b8fa3e1adf883f6c45b65d79029","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/ia/viewer.properties","hash":"c574d325003bda9d96ab6df914ecb8631cfaf257","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/id/viewer.properties","hash":"681d0eaf73d8dead26fc8662fd805c5eaf685ca6","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/is/viewer.properties","hash":"00cf782347f4f205f259417240c0cfd3bc1014d5","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/it/viewer.properties","hash":"7a8552cb389c08e51f72b2501edf22dfe9a08d62","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/ja/viewer.properties","hash":"bbbb1a854d1d37faca5d11c69e2c39891da19f3b","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/ka/viewer.properties","hash":"9123b5a9d63d495c38a9f905c7d46bb9fada6475","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/kab/viewer.properties","hash":"6bda951e307e31ecc481f125d2457f81b39f51a9","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/kk/viewer.properties","hash":"61edd40dde6b907490f803533a4cbc368ecca15d","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/km/viewer.properties","hash":"a847274b304a9300cee5c6593164c3baef2aa3e2","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/kn/viewer.properties","hash":"668a2de23d6b4ea5afdfd43747705c8bdad1f7f4","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/ko/viewer.properties","hash":"59b829364bfdfec7c6964bf5181c0e2936416d68","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/lo/viewer.properties","hash":"625438b69b56a04f2e45464f8c113cac82c7e4af","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/lij/viewer.properties","hash":"24f627446177af986af909188d11e603bf250fb5","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/lt/viewer.properties","hash":"ed3d0af9105380fdd26e40381f2d54ed81ac9187","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/ltg/viewer.properties","hash":"f2ed2096794dcb0bbcded9ec3170f3321ee3c943","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/lv/viewer.properties","hash":"91af03141a3e19dca288bdbdc2fa71db67c5bf91","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/meh/viewer.properties","hash":"d472059016f2cfb00d40fbe87c4f9680ea364605","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/mk/viewer.properties","hash":"1c2a20a06f7fb4ba248c0651ef1694a50ebf18de","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/my/viewer.properties","hash":"68b5887c765c0c1d6ea03abbe14e3148d4434ad3","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/ms/viewer.properties","hash":"ff932b96820ceefc690339a0c9a3304682e394e2","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/mr/viewer.properties","hash":"d7aeb6b29a64066ea2201c1ae21f65922abe5b5a","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/nl/viewer.properties","hash":"9172d8f691147bd4882d691f250ebf0fc822df12","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/nb-NO/viewer.properties","hash":"3de1522e9e66e6afcb2f2dcfc5d3102f647f7203","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/nn-NO/viewer.properties","hash":"b4343c3ef823340027c3ce3e6f2da8cb85cc182d","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/ne-NP/viewer.properties","hash":"1829530b8f43127940aa86fde201f09e27285e53","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/pt-BR/viewer.properties","hash":"9a91e1bed06ef2b18ff122c8c52930fdc9026cf9","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/oc/viewer.properties","hash":"52d00fdaf1881c6c6cbcee2bd1be747012aa005b","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/pl/viewer.properties","hash":"528f2bb170a6997ac95755a175ba60cc54221f96","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/pa-IN/viewer.properties","hash":"0867bc6c3ec2a30c06a102526ff32a345e325aa0","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/pt-PT/viewer.properties","hash":"426cafa44d382ecdbaf4f0d4f4c870248c64e55c","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/rm/viewer.properties","hash":"cacbcdc8bc15296a07e024ad6fd2613cdc37e277","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/ro/viewer.properties","hash":"1c23d6911910801a04c2eab29bea07de243c3f79","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/ru/viewer.properties","hash":"bfa4e178c905d33189a7767efcdc23a0dac668a8","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/scn/viewer.properties","hash":"591b7ddd7a61c15d2bdeb04b1c1bf42120afd259","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/sco/viewer.properties","hash":"942df702b63317a007cf8d33a77a482bba7b81d4","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/si/viewer.properties","hash":"b1f41db0c4faebadb7bb91a44b265b50c6de0996","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/sk/viewer.properties","hash":"da713afcb684176d2ce9aa4dbc1d006c0ef5d543","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/sl/viewer.properties","hash":"e8a24ee56cc2c15d7642885cfd23147e94899684","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/son/viewer.properties","hash":"260d780bb7a9ffabd049a7a0ffbbd7877ae0946d","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/sq/viewer.properties","hash":"2263c496b47fb8bda695cb687682d19beefd907f","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/sr/viewer.properties","hash":"bfa745a3c454c50e57c2a89f129b412e1c9c63d7","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/sv-SE/viewer.properties","hash":"9af605df3b2bb40ded376c8cd3d58e9ed0c92eae","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/szl/viewer.properties","hash":"545827b6848c153a801aa3b63822ea4f8e12fe3c","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/ta/viewer.properties","hash":"5a62b0aea318c9e7cdc38fecc9b02bfb156a9011","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/te/viewer.properties","hash":"de0d4f0a497d3423724340343dff098d86c3cd2f","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/tg/viewer.properties","hash":"c33b9b80f34307a5f839ecedc731b5e71787a03f","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/th/viewer.properties","hash":"ab49a6e1babcfcaa7220ac9c6ef7b2914128a330","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/tl/viewer.properties","hash":"88634d2e212d7c0e0f67fba9c5b7430abe692e3c","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/tr/viewer.properties","hash":"e9395224d95c5d04c5dc295293e81f3e1f5f8272","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/trs/viewer.properties","hash":"c55ee335a9337a51b782a1d1dc3bd635338bc237","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/uk/viewer.properties","hash":"2e7e5eb34010429851f93b6430631f1533d9874f","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/ur/viewer.properties","hash":"3f9b6d2ebe51a7d30099c44f3473fcaec73ec81f","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/uz/viewer.properties","hash":"8ac52233d8269d523e64d77186268b86dc92f562","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/vi/viewer.properties","hash":"eae7ef3e8993b4bd09d2e051b4fed78365c5d048","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/wo/viewer.properties","hash":"1426459b8518b593673ac0b758407f2a228c89ba","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/xh/viewer.properties","hash":"d7281ebaa9e44e80ab8010d5c478bb091740e0a0","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/zh-CN/viewer.properties","hash":"fd941a56f549efa2a1acb3cd6caca69283283638","modified":1630147840098},{"_id":"public/js/pdfjs/web/locale/zh-TW/viewer.properties","hash":"e1db3a58598a64d62c1653fb6407bae54e9738bf","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/an/viewer.properties","hash":"eec2f66fa37a6f3163fb7d06f51845fc58b51bea","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/af/viewer.properties","hash":"cda8da0df120f83ef571bae3457650af9f845cae","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/ach/viewer.properties","hash":"22233e0524c11bfa38d180ec5f89c9a8c97853c3","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/ar/viewer.properties","hash":"abef7a7c48fafd5fd12b72fb60322a45ca2d5ba5","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/ast/viewer.properties","hash":"00b445afc193df32c4fc13a75eaab6c44f6b3c42","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/bg/viewer.properties","hash":"16e1b4a830c2a91c6bbc86d1d51ae598c0a925c5","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/az/viewer.properties","hash":"0fed4acef9407e9c832d0ae625a05301305add21","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/be/viewer.properties","hash":"e357490fbfdf9e43e49fda1cea3e4c4121d622e8","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/bn/viewer.properties","hash":"0084429d36c41b3dd530d7e5955fb1cf37dd2e40","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/bo/viewer.properties","hash":"0121edf8d19a64d07e8fbcba4999464eb8145768","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/br/viewer.properties","hash":"d7b1272ae65ca96638b7057c242b972190c7df14","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/brx/viewer.properties","hash":"df2505908f0a3892247578ff387f9c556abc2e46","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/ca/viewer.properties","hash":"d615c145192c4b4e3be592a7a90ae9a6441c955d","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/cak/viewer.properties","hash":"693e3429a8b7a2600c890a4420cb980d481c021f","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/bs/viewer.properties","hash":"7467e153a429f2e4862fde1ef94ba5a79aa7fe62","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/ckb/viewer.properties","hash":"fc076de69218a2f8f6dd074771ce82f9ca2c58de","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/cy/viewer.properties","hash":"e75641d670c4e014e014d7471c68fa6c99d201be","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/cs/viewer.properties","hash":"c12b2316beef18cb50377f39216fffc8e3d3a8ba","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/da/viewer.properties","hash":"94d157b33044a1ac0dc14b1d4214aceeeb94d704","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/de/viewer.properties","hash":"abcff6b79566782cd76b4102c11659f2c4211b42","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/dsb/viewer.properties","hash":"0c98c92289b9004aa59471aa2c2a8173667fb9ed","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/el/viewer.properties","hash":"853bc05f83422f3c9f01137afc8718591b69593e","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/en-CA/viewer.properties","hash":"3eec6c9ec82635f3d4feb5a53cc96750a71b7743","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/en-GB/viewer.properties","hash":"6e3565f14ab631f6c4d0a84f8e9f56177a45ec82","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/en-US/viewer.properties","hash":"12b2108dd9eab08f4b900f948a9cc61b9dd78731","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/eo/viewer.properties","hash":"41a51e90cddb8b25385ed66dff53f0ed7cb4ad86","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/es-CL/viewer.properties","hash":"5b59c142d50d8827f3b959f8870e24a6b483079e","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/es-AR/viewer.properties","hash":"3fc16c5b5817cfc7e3b97f259ca01217b7659df2","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/es-ES/viewer.properties","hash":"6dbfa750a62f297929f7ff778c215abadbfb77b2","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/es-MX/viewer.properties","hash":"eb26865ba31ef94f93df42ecb8d5bd9d1bc01265","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/eu/viewer.properties","hash":"18d429ecaa63043c625c94bf99e2521e9c90ddf8","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/et/viewer.properties","hash":"49c974e3498e5180e2e22818ce4bf5a118897587","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/ff/viewer.properties","hash":"73938a6a494a6e6ac40dccc48e6e2b2bce8aa195","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/fa/viewer.properties","hash":"126e5dc7e15392b4329755c7e2d8ed880fad3f0b","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/fi/viewer.properties","hash":"250abdfd721a6b5ed2d8ea5014e194db799f6eed","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/fr/viewer.properties","hash":"9bc0443f7525b32417fe0f8f6fb55db961e08109","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/fy-NL/viewer.properties","hash":"b3248fb5e2bd82454450f6f0858ba2266b9524f2","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/ga-IE/viewer.properties","hash":"ae15ad3dd8b97ae8ca3598f6e87d0b8e7a9215eb","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/gl/viewer.properties","hash":"549eb46c7227121ba6ed43fc190f9a2c6b8d01b7","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/gd/viewer.properties","hash":"3f419f18118f75c051712f66b1c5594581fafe9a","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/gn/viewer.properties","hash":"fc059bef988190d8833b4d8ff66d69e4831de64d","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/gu-IN/viewer.properties","hash":"f8e9a229dea000df970fe8e319f43265c48f6292","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/he/viewer.properties","hash":"c2cbd966f3cc61164b8c6d656425c8c01859b1a3","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/hi-IN/viewer.properties","hash":"6ce80e3fd59a5d11a7a313befc51a5470deaf20d","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/hr/viewer.properties","hash":"b1bbae09354ae972cfbfcfed6e17f2dd3766f2d2","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/hsb/viewer.properties","hash":"6df5120b7cb2c401c8964b04b3dcb983e9ee351d","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/hu/viewer.properties","hash":"d07257c6577cf489a88cfd25a14ea2b470f0ee60","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/hye/viewer.properties","hash":"bc7746be7a9f2b8fa3e1adf883f6c45b65d79029","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/hy-AM/viewer.properties","hash":"3a5d42645591b32642833b6c678c588f45918cbc","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/ia/viewer.properties","hash":"c574d325003bda9d96ab6df914ecb8631cfaf257","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/id/viewer.properties","hash":"681d0eaf73d8dead26fc8662fd805c5eaf685ca6","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/is/viewer.properties","hash":"00cf782347f4f205f259417240c0cfd3bc1014d5","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/it/viewer.properties","hash":"7a8552cb389c08e51f72b2501edf22dfe9a08d62","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/ja/viewer.properties","hash":"bbbb1a854d1d37faca5d11c69e2c39891da19f3b","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/ka/viewer.properties","hash":"9123b5a9d63d495c38a9f905c7d46bb9fada6475","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/kab/viewer.properties","hash":"6bda951e307e31ecc481f125d2457f81b39f51a9","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/kk/viewer.properties","hash":"61edd40dde6b907490f803533a4cbc368ecca15d","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/km/viewer.properties","hash":"a847274b304a9300cee5c6593164c3baef2aa3e2","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/kn/viewer.properties","hash":"668a2de23d6b4ea5afdfd43747705c8bdad1f7f4","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/ko/viewer.properties","hash":"59b829364bfdfec7c6964bf5181c0e2936416d68","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/lij/viewer.properties","hash":"24f627446177af986af909188d11e603bf250fb5","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/lo/viewer.properties","hash":"625438b69b56a04f2e45464f8c113cac82c7e4af","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/lt/viewer.properties","hash":"ed3d0af9105380fdd26e40381f2d54ed81ac9187","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/ltg/viewer.properties","hash":"f2ed2096794dcb0bbcded9ec3170f3321ee3c943","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/lv/viewer.properties","hash":"91af03141a3e19dca288bdbdc2fa71db67c5bf91","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/meh/viewer.properties","hash":"d472059016f2cfb00d40fbe87c4f9680ea364605","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/mk/viewer.properties","hash":"1c2a20a06f7fb4ba248c0651ef1694a50ebf18de","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/ms/viewer.properties","hash":"ff932b96820ceefc690339a0c9a3304682e394e2","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/mr/viewer.properties","hash":"d7aeb6b29a64066ea2201c1ae21f65922abe5b5a","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/my/viewer.properties","hash":"68b5887c765c0c1d6ea03abbe14e3148d4434ad3","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/nb-NO/viewer.properties","hash":"3de1522e9e66e6afcb2f2dcfc5d3102f647f7203","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/ne-NP/viewer.properties","hash":"1829530b8f43127940aa86fde201f09e27285e53","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/nl/viewer.properties","hash":"9172d8f691147bd4882d691f250ebf0fc822df12","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/nn-NO/viewer.properties","hash":"b4343c3ef823340027c3ce3e6f2da8cb85cc182d","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/oc/viewer.properties","hash":"52d00fdaf1881c6c6cbcee2bd1be747012aa005b","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/pa-IN/viewer.properties","hash":"0867bc6c3ec2a30c06a102526ff32a345e325aa0","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/pl/viewer.properties","hash":"528f2bb170a6997ac95755a175ba60cc54221f96","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/pt-BR/viewer.properties","hash":"9a91e1bed06ef2b18ff122c8c52930fdc9026cf9","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/pt-PT/viewer.properties","hash":"426cafa44d382ecdbaf4f0d4f4c870248c64e55c","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/rm/viewer.properties","hash":"cacbcdc8bc15296a07e024ad6fd2613cdc37e277","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/ro/viewer.properties","hash":"1c23d6911910801a04c2eab29bea07de243c3f79","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/ru/viewer.properties","hash":"bfa4e178c905d33189a7767efcdc23a0dac668a8","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/scn/viewer.properties","hash":"591b7ddd7a61c15d2bdeb04b1c1bf42120afd259","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/sco/viewer.properties","hash":"942df702b63317a007cf8d33a77a482bba7b81d4","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/si/viewer.properties","hash":"b1f41db0c4faebadb7bb91a44b265b50c6de0996","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/sk/viewer.properties","hash":"da713afcb684176d2ce9aa4dbc1d006c0ef5d543","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/sl/viewer.properties","hash":"e8a24ee56cc2c15d7642885cfd23147e94899684","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/son/viewer.properties","hash":"260d780bb7a9ffabd049a7a0ffbbd7877ae0946d","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/sr/viewer.properties","hash":"bfa745a3c454c50e57c2a89f129b412e1c9c63d7","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/sq/viewer.properties","hash":"2263c496b47fb8bda695cb687682d19beefd907f","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/sv-SE/viewer.properties","hash":"9af605df3b2bb40ded376c8cd3d58e9ed0c92eae","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/szl/viewer.properties","hash":"545827b6848c153a801aa3b63822ea4f8e12fe3c","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/ta/viewer.properties","hash":"5a62b0aea318c9e7cdc38fecc9b02bfb156a9011","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/te/viewer.properties","hash":"de0d4f0a497d3423724340343dff098d86c3cd2f","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/tg/viewer.properties","hash":"c33b9b80f34307a5f839ecedc731b5e71787a03f","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/th/viewer.properties","hash":"ab49a6e1babcfcaa7220ac9c6ef7b2914128a330","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/tl/viewer.properties","hash":"88634d2e212d7c0e0f67fba9c5b7430abe692e3c","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/tr/viewer.properties","hash":"e9395224d95c5d04c5dc295293e81f3e1f5f8272","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/trs/viewer.properties","hash":"c55ee335a9337a51b782a1d1dc3bd635338bc237","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/uk/viewer.properties","hash":"2e7e5eb34010429851f93b6430631f1533d9874f","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/ur/viewer.properties","hash":"3f9b6d2ebe51a7d30099c44f3473fcaec73ec81f","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/uz/viewer.properties","hash":"8ac52233d8269d523e64d77186268b86dc92f562","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/vi/viewer.properties","hash":"eae7ef3e8993b4bd09d2e051b4fed78365c5d048","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/wo/viewer.properties","hash":"1426459b8518b593673ac0b758407f2a228c89ba","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/xh/viewer.properties","hash":"d7281ebaa9e44e80ab8010d5c478bb091740e0a0","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/zh-CN/viewer.properties","hash":"fd941a56f549efa2a1acb3cd6caca69283283638","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/locale/zh-TW/viewer.properties","hash":"e1db3a58598a64d62c1653fb6407bae54e9738bf","modified":1630147840098},{"_id":"public/live2dw/assets/mtn/00_idle.mtn","hash":"b224c60e463b9f71ddbfc0c720e430496c175f4f","modified":1630147840098},{"_id":"public/live2dw/assets/mtn/01.mtn","hash":"fb550833ae22c9954c3e01df37ed29b2d61700f2","modified":1630147840098},{"_id":"public/live2dw/assets/mtn/02.mtn","hash":"7eafc52edc73b7cb80ae70d34b43c6ac778fa47b","modified":1630147840098},{"_id":"public/live2dw/assets/mtn/03.mtn","hash":"f900737c7a98441cbb2e05255427e6260e19ae68","modified":1630147840098},{"_id":"public/live2dw/assets/mtn/04.mtn","hash":"c7a25d3c5d783639bae18db2f3cd284b819c3c85","modified":1630147840098},{"_id":"public/live2dw/assets/mtn/06.mtn","hash":"ad404bd852d276cdd3d054c953e23f90e4e45ae1","modified":1630147840098},{"_id":"public/live2dw/assets/mtn/05.mtn","hash":"dd20ad24b5d1830a5d44b9bccb28f922eea5e0e5","modified":1630147840098},{"_id":"public/live2dw/assets/mtn/07.mtn","hash":"b7f2e3a9fa4f3ffbb6e64a08f8d9f45ca1868ffb","modified":1630147840098},{"_id":"public/live2dw/assets/mtn/08.mtn","hash":"4411c7651ff65195b113d95e7d5ebef8a59a37d9","modified":1630147840098},{"_id":"public/live2dw/assets/tororo.model.json","hash":"3b96ea33460642d288c98327444966d93a0c11ba","modified":1630147840098},{"_id":"public/live2dw/assets/tororo.pose.json","hash":"81438bf69b32c7c11e311b4fe043730cdc7b7ec2","modified":1630147840098},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"5f1a807437cc723bcadc3791d37add5ceed566a2","modified":1630147840098},{"_id":"public/img/meicon.png","hash":"9232364c346db7d635804d69e1e2d5ecda6007f3","modified":1630147840098},{"_id":"public/img/bg/9884183b3b1e1b50e1d68c69d97b38d6_4.jpg","hash":"a0159bcf7c7ab5b2cbe2e4fdb7307b7ac8e0d061","modified":1630147840098},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"3290fe2df45f065b51a1cd7b24ec325cbf9bb5ce","modified":1630147840098},{"_id":"public/img/meiconbali.jpg","hash":"251240f4833515e6df48cdec4b17f4c0313c0784","modified":1630147840098},{"_id":"public/img/bg/36e6c0d304d7a672d6d828e164f2c48b_1.jpg","hash":"ca1ad49f059e26019a7df2904a7bc22a5b10d09c","modified":1630147840098},{"_id":"public/img/bg/7fb86b41c8bb0d7bff7a3142c83d8348_1.jpg","hash":"084e16156fa67e0d090663ed15ad64b2104a67a6","modified":1630147840098},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"35bb5b588b6de25c9be2dd51d3fd331feafac02d","modified":1630147840098},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1630147840098},{"_id":"public/js/boot.js","hash":"3de344ee619da989f6dccf7c2ae459fe91075983","modified":1630147840098},{"_id":"public/js/color-schema.js","hash":"cc712fc71bf33d561e1ba74fe1d52d2353092171","modified":1630147840098},{"_id":"public/js/events.js","hash":"4b9d2676c9544db9cc40a8c7d18456792299ba86","modified":1630147840098},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1630147840098},{"_id":"public/js/leancloud.js","hash":"b7985ac3cff9ee2722db43ee6b32b5484c43f5f2","modified":1630147840098},{"_id":"public/js/plugins.js","hash":"342b1fbc30d1465687ce389a4e07f967266d5d86","modified":1630147840098},{"_id":"public/js/local-search.js","hash":"bf00f5786bb8de7241f635455b67243d26656222","modified":1630147840098},{"_id":"public/js/utils.js","hash":"9d492fab9c26311ad0ab553c890e09b9575a76f2","modified":1630147840098},{"_id":"public/js/video_url.json","hash":"4183cde3d6560e7a34d78d79846d8732732f49d7","modified":1630147840098},{"_id":"public/lib/hint/hint.min.css","hash":"b38df228460ebfb4c0b6085336ee2878fe85aafe","modified":1630147840098},{"_id":"public/js/5.0/web3d/sworker-locked.js","hash":"442e8de1f4591455368b3fdf6fd349851e89c50f","modified":1630147840098},{"_id":"public/js/5.0/web3d/sworker.js","hash":"8c8a6e175629f92f1565bc99ff416e553d9c61c8","modified":1630147840098},{"_id":"public/js/5.0/web3d/web3d.nocache.js","hash":"fd06fb4ba3f37e7b3fd4fd6854a770d3b32edba2","modified":1630147840098},{"_id":"public/js/5.0/web3d/html/opener.html","hash":"a8844181acd2930d92fd1548cc6f954cc3f23642","modified":1630147840098},{"_id":"public/js/5.0/web3d/html/ggtcallback.html","hash":"21a2e9ace6f47d8900b95f774910b9e57778cbd2","modified":1630147840098},{"_id":"public/js/5.0/web3d/html/windowslive.html","hash":"db5dcdc1f7ac9b1a1cd692badd9384f7c194c107","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/workercheck.js","hash":"d745965e9a81fb7a35f11695f5ecc00bbe089995","modified":1630147840098},{"_id":"public/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/14.cache.js","hash":"aa631dedd1388bef750012e41b3a99d844dc4c23","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/latin/jlm_jlmbi10.js","hash":"ed885eca2df1a7dd206829563efce81cc84afa48","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/latin/jlm_jlmbx10.js","hash":"8f1109703b7a681323ecca9940373b1c476732b3","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/latin/jlm_jlmi10.js","hash":"731d0e8e9d6ddb21fbdc935b6a0e50a39ad9b249","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/latin/jlm_jlmr10.js","hash":"b5f7a0e6f58a77d87fb14b936edd70ed2bb43f75","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/latin/jlm_jlmsb10.js","hash":"9b194e98611a290144d1fa19e6508fa3ae805a74","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/latin/jlm_jlmsbi10.js","hash":"21f4825489fedb466ca194f6dc16031ee76c896d","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/latin/jlm_jlmsi10.js","hash":"9b0b8870e74abb4da139d403704e9b3f39f1e062","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/latin/jlm_jlmss10.js","hash":"44199254053d1763e9c15df658050532b2269862","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/latin/jlm_jlmtt10.js","hash":"7116f20b590a0435fa1232a3532b6771d36e1079","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/maths/jlm_special.js","hash":"04b260a0de703f2813d402b60216b2dd9e8f129a","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/zipjs/codecs.js","hash":"f8f8e7c547e2b097d43a9e8c5bad02b8f7c8c54c","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/zipjs/z-worker.js","hash":"127c5a3479f70f5ca07996d2cd195d6bbcb401f5","modified":1630147840098},{"_id":"public/css/main.css","hash":"bf7b61acb0f60f43cf343fed01575b3ce40b2138","modified":1630147840098},{"_id":"public/live2dw/assets/moc/tororo.moc","hash":"44289e62545a7046e0f5231103a851750b78524e","modified":1630147840098},{"_id":"public/js/pdfjs/web/debugger.js","hash":"4ab7d76ffdf3b79b54ca8f985ffc556852a9c4c7","modified":1630147840098},{"_id":"public/js/pdfjs/web/viewer.html","hash":"985d4fd837f3aa8824f7982382b8a3213789e163","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/debugger.js","hash":"4ab7d76ffdf3b79b54ca8f985ffc556852a9c4c7","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/viewer.html","hash":"985d4fd837f3aa8824f7982382b8a3213789e163","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/webfont.js","hash":"721539eaac2ebd488a80a6e4b8d472fafd520e2b","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/zSpace.js","hash":"1a96254f17b7ecdb4f5e6506666fa0cf8141488a","modified":1630147840098},{"_id":"public/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/10.cache.js","hash":"278456389654606e2b610244dd40430f057c34a8","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/maths/jlm_rsfs10.js","hash":"ada13973e6e968c9bc34651edd29bffc55b22dbb","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/maths/optional/jlm_dsrom10.js","hash":"afa082c6fb7042909663d89d6206d2350fd8974c","modified":1630147840098},{"_id":"public/img/bg/7cc417b7ace4b99c19d3034179926555_3.jpg","hash":"36304bc7d6ed3f6d8a9330d843c92d105c506f28","modified":1630147840098},{"_id":"public/img/bg/b7fb479d6dbb4525a0393f9934aceab3_1.jpg","hash":"e5ba3a056b042b7411776311840140e17a51529c","modified":1630147840098},{"_id":"public/img/bg/c65f7b13787572d4f5d33f66d627df71_2.jpg","hash":"ce37c68377e3d277d432507ec33e4d02c458d569","modified":1630147840098},{"_id":"public/img/bg/e7050bc333ebfc01afce3b434f95e7b0_2.jpg","hash":"b56be4c6838c5b1e98c50468b5efab86c006cdb0","modified":1630147840098},{"_id":"public/live2dw/assets/moc/tororo.2048/texture_00.png","hash":"98af764b541083e87fc2f8e85f02d2db38c898cc","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/zipjs/pako1.0.6_min.js","hash":"ee0538024b2dcc7670909693ec3cd3543dcfaf69","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/latin/optional/jlm_cmssi10.js","hash":"3e300470950026f5763ae50e4c3fa8698378655e","modified":1630147840098},{"_id":"public/js/pdfjs/web/viewer.css","hash":"ab1d93a7410542b1f93745de47c5ce4e88e821f4","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/viewer.css","hash":"ab1d93a7410542b1f93745de47c5ce4e88e821f4","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/gl-matrix-min.js","hash":"866e8cada09cb002ce43303d2802312cc45f6248","modified":1630147840098},{"_id":"public/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/6.cache.js","hash":"af61d1b6297f3f4a112561ebf6b4e7b35fcaec67","modified":1630147840098},{"_id":"public/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/4.cache.js","hash":"5ed2b2a63d0896bef4004419a28555a14c2feebd","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/cyrillic/jlm_wnss10.js","hash":"07a1ce77f22a2563e586900b6e8caca766978aa0","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/euler/jlm_eufm10.js","hash":"4b5ae0e5e1da729b0859e9a7224bbefa9fb5cbcf","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/euler/jlm_eufb10.js","hash":"1d3c3c567457a150f27f8c2bea6f2c6a99c6fa2a","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/latin/jlm_cmr10.js","hash":"077dac4ac5f0511034c9ba7e9d51862c8a8bd58a","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/maths/jlm_cmbsy10.js","hash":"2520d7ccfb0cd61d10d634f97ff9303786ff63a3","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/maths/jlm_msam10.js","hash":"011f9f9f7bd9d578bdd2723b7daf97089a12f7c2","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/maths/jlm_stmary10.js","hash":"dc979dd704addbc796ca198dadf874c023b7f989","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/latin/optional/jlm_cmssbx10.js","hash":"f2999dc67503d4d6892fcf60f108c631991a3700","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/latin/optional/jlm_cmbx10.js","hash":"a0e89ebb45a12f9233883b8a737c9a4a24c633dc","modified":1630147840098},{"_id":"public/js/deployggb.js","hash":"fe4ff1e4b14177d3b675a01fe4fef4fcd9cf9322","modified":1630147840098},{"_id":"public/img/bg/bd643dc0ad68f830b3a0eeae50ceba5f_4.jpg","hash":"2b0eb78d531d1aa4ea559d18efc9068deda95d20","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/base/jlm_cmmi10.js","hash":"05b260820869b1d18f6c61509f59123764acd092","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/cyrillic/jlm_wnssi10.js","hash":"1ca4e11415505e21fc38f5c17dc0978e846167a0","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/maths/jlm_msbm10.js","hash":"2f2fff6b5f6ff1fce31edbc8dc22ed26c55b9911","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/latin/optional/jlm_cmtt10.js","hash":"c3fbab7f56b27ab40dc615210fb8d087e98660b9","modified":1630147840098},{"_id":"public/js/jquery.js","hash":"d2cc8d43ce1c854b1172e42b1209502ad563db83","modified":1630147840098},{"_id":"public/img/bg/4cb90122eb95819122b32d17e238ee1b_1.jpg","hash":"7df7f85fa28588cd468bb4ccc46d788be62f468d","modified":1630147840098},{"_id":"public/img/bg/c989b7d72a5a30f48a3544a7cec9562b_1.jpg","hash":"3de36db1282675551f69ffe9c4932800a712b4ee","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/base/jlm_cmmib10.js","hash":"2e4455930cfba2c7bb99ac7f8fa5f326d09de514","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/cyrillic/jlm_wnbx10.js","hash":"da6f0f87603d713cee58242e60c4ac91b7cbbc5b","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/cyrillic/jlm_wnssbx10.js","hash":"a5bf88d9813b83ea2834d93a80fd4244a4032f73","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/cyrillic/jlm_wntt10.js","hash":"9d7229b45e02f659596c831ec3cac9666ab8bb42","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/latin/optional/jlm_cmti10.js","hash":"95339af0bc2b62348cbb98e8b796981309a71980","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/latin/optional/jlm_cmbxti10.js","hash":"5f842daf04d00c1789e332b64d41de51f76e3387","modified":1630147840098},{"_id":"public/img/bg/5afd5a558c69261be00db0024ce0ccdf_1.jpg","hash":"9f21bac1d0ae6664b50b799880d7f6ffb16b0ac4","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/cyrillic/jlm_wnr10.js","hash":"88446b429371e7eee03852efe0c9fae5b8176566","modified":1630147840098},{"_id":"public/js/pdfjs/build/pdf.sandbox.js.map","hash":"e64b166e70fe85d3ebe795256b6e830e66e40e6f","modified":1630147840098},{"_id":"public/js/pdfjs_old/build/pdf.sandbox.js.map","hash":"24019cb18989fa44e76077b03d67a8b1cfc43e96","modified":1630147840098},{"_id":"public/img/bg/a9564f5c58411c94f3d83feeb0647643_1.jpg","hash":"2909b72df883e07a59e4d77f783dfbb7adce0774","modified":1630147840098},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"35e71cc2a130199efb167b9a06939576602f0d75","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_af.js","hash":"d498a7f286145d07f917e7c8b472531cff02ff76","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_en-AU.js","hash":"83fba757db880b5014064f9cf62abf5fdf5a6a8b","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_en-GB.js","hash":"ee0243a40a741b8ff2444a5e8cce46a83ca84acc","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_eo.js","hash":"2ec0867650108eb5d29548ee1c5e79064abcbd64","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_en.js","hash":"7f1840dcc6009eddc1f3703825bd3acacdd50bd5","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_zh-TW.js","hash":"f597199b838c6986e9267c73ced422b56e9afbac","modified":1630147840098},{"_id":"public/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/2.cache.js","hash":"5a481031daf899e04806fad2229f53912c6394fd","modified":1630147840098},{"_id":"public/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/5.cache.js","hash":"c623f80692ab4b6e7419ecca36259f24c664d395","modified":1630147840098},{"_id":"public/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/7.cache.js","hash":"e111a411de07019e4815de95fd28c296a38e1ec9","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/greek/jlm_fcsbpg.js","hash":"8aff085490b314c5e8004addf71534b1c5fbf2fa","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/greek/jlm_fcsrpg.js","hash":"d639e486892af309e8f53f7cfea0e97095d774aa","modified":1630147840098},{"_id":"public/img/bg/03990bbe091d5cca73421ac40bacfc46_1.jpg","hash":"79cb7b38f7f28ccdc9cdb8fa498fbf772036ba2c","modified":1630147840098},{"_id":"public/img/bg/b4f8a6143ef84a1ef177b4bde3f8d805_1.jpg","hash":"c431e3f86fd73aa25221d1dc7001a9caee5b6e16","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_az.js","hash":"93526a888c0812eda3f9b98a9d5ee9529ad98de4","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_bn.js","hash":"9c2cb08fe7c8e0556203a9ba89e89fe86970886c","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_bs.js","hash":"c50f8486f047a00510fcbe1ebb8e55c859820b50","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_ca.js","hash":"f7cfc6a968e87a53cb16a7c9d142b2d9a3059f9c","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_cs.js","hash":"941da981453596efbc166119f81c7c0c72417cd6","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_cy.js","hash":"692bdf24cabb67d90bc22a885db2ac830b2616c8","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_da.js","hash":"69e9225f535c8f5a1e08890793ce27d580e823d0","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_de-AT.js","hash":"40ac135b5d0d1c5b35d64e0b4688fd16686f9ffa","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_de.js","hash":"3b4b531bc42a7d6ddd8a5566206ab0e9695b487c","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_ca-XV.js","hash":"fda9e3063c5e5334a101d3864b3a33bad03efbda","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_es-UY.js","hash":"aea291dba0012ba0a1a3f15d0977d8796328cf57","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_et.js","hash":"a05db12d7f2c46751929f6303aaf2cc2fa2e23ac","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_es.js","hash":"3c4f411ba0c6cda16bc3a136f30ddba60022235f","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_fi.js","hash":"490cda1008d6b9edfcf0746e179cf2402dd1349f","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_fr.js","hash":"e6e1ce60e6b859557bef70dd9e62a59fa6ca660f","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_es-ES.js","hash":"19cf2225e03dc4645d8b428aa1fc6696ab8957e7","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_fil.js","hash":"2aef4b985e47fcca035d7d57d75c214f2c8b898c","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_gl.js","hash":"b437ac7246de7439c4a4e77640c6804dd0c383c4","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_eu.js","hash":"daa1f345d53e80ae64286d3684f99bf8d3366f29","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_hu.js","hash":"189642d62216579b734850ae0fa1ee563e503d06","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_hr.js","hash":"5e3dc314e8634d31cc9891a457c66dfe9abf58c7","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_id.js","hash":"4251bd250ede2c2f17cb638472a86205153b10a8","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_is.js","hash":"65ad4b02985d2f3dbd793a6bb4209d486d750ef6","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_it.js","hash":"4a7a099ac38cf6d4292e0f2e7e2a455a9f4282f9","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_ja.js","hash":"0789288569ed7a2c1fd64c7b246c6ce1a1511eec","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_km.js","hash":"aa44350f130e0714beb4047df4219b689098bcb0","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_ko.js","hash":"67433c0023afdc32f187fa8ae8cd261dc14ecbba","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_lt.js","hash":"f60b9179a920892938b95fe4397470fb7ff5add0","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_ml.js","hash":"61c06cb43ef349fea863c8489b66acec03dffe84","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_lv.js","hash":"2ad082b399af3897dca56747deb638bee7a81834","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_ms.js","hash":"e56a7cac61240eb5b4df1111170252a178e4ca1f","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_nb.js","hash":"012689dce5efb43bbbef386f091745103b029c54","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_pl.js","hash":"387b308ab2e07aac9915d83ea067c8d730be958d","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_nl-NL.js","hash":"189dd1de885a1f483aef887f11e26ba21e9039e1","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_nn.js","hash":"1c6b8fa792b5642598cac77cf347765882b05182","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_pt-PT.js","hash":"74b7d32a3a144c5a09714a232ce35713fa956540","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_nl.js","hash":"e35d4ca5c28bb286c57aac4f24fa85cdb9cb15d2","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_pt.js","hash":"bdf27a59b921b245907a51819d7b1eb03e56d474","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_ro.js","hash":"bc7dba2881a68df810dbf13a1e979e0978ae8507","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_sq.js","hash":"5cf5edcbc12a6593d5016123e5469127aeea4603","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_sv.js","hash":"85f8ff1e85d929f2955daa91cd179974ae3970d6","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_sk.js","hash":"65822513376d69d2068bd88fd174460812de646e","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_sr.js","hash":"b936050fb908e52c28d091f4b83c5f4b4cd7df13","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_sl.js","hash":"e22e366bb7830bb18b1837ced295fab121f4b4c6","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_tg.js","hash":"80caab4970d2ab418edd115315903a54ab2a6292","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_tr.js","hash":"e4b497b3b94ad0957a198601ce2b6c1a21b80193","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_xh.js","hash":"7cb84d5b17aab6f0f24ea734adf3c036aaf169e6","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_zh-CN.js","hash":"f6e2eb6332efdb8b53f7d7a51898b475d8319476","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_uz.js","hash":"878595399f2a88805819df01d80d877074a63968","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/cyrillic/jlm_wnbxti10.js","hash":"329db1d249f54083f42bf9312e098687127f29fb","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/cyrillic/jlm_wnti10.js","hash":"66da069276b8a75d6db83d61032474616f81e054","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/greek/jlm_fcsropg.js","hash":"fedd13adb544ab5f100bec147e46e53d495c90bd","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_am.js","hash":"f6e9e7a7fc15f6ce0c669154684262c661779f05","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_ar-TN.js","hash":"8806d01286ab3085789338156977734e04ca1743","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_ar.js","hash":"886f615e9eccc0d051e2738c2b739877f8f1979a","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_ar-MA.js","hash":"166dad5b40dca8cf8cca649d8bf206682d95a9db","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_fa.js","hash":"41ec0f05ce51a582fb9035eba9434a3d5d2bb68b","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_he.js","hash":"b627ac36425f5f28b56b78408d88df36e4037369","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_mr.js","hash":"5379c7cbe0fa2bc39c58b7cfb018d87c55de383d","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_vi.js","hash":"d62dd87fd1fded522202e8ffbc6d93405999d636","modified":1630147840098},{"_id":"public/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/8.cache.js","hash":"c39a285af7fa1ff060b648096c7edf3c1c734eae","modified":1630147840098},{"_id":"public/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/9.cache.js","hash":"a5a10d642fe8c429d5f80adc7988e888aea071df","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/greek/jlm_fctrpg.js","hash":"58843194ff1fae4c6a122e1aa2b10bc1880fb609","modified":1630147840098},{"_id":"public/js/pdfjs/build/pdf.js.map","hash":"a7d0e9bf335bb0ec4b4e1b17db92af19daffd813","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_yi.js","hash":"8ce39b2e1ca422c52a4ca2240887796187322382","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/greek/jlm_fcmbpg.js","hash":"b12e48b042c80d5f6f379e1d8abbc5950d6295f7","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/greek/jlm_fcmrpg.js","hash":"0b3c611253a7c6b04d51edb3943e4b2357474b0d","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/greek/jlm_fcmbipg.js","hash":"9a2d9698df3b1ccb2120f1bd65db31b4390f145f","modified":1630147840098},{"_id":"public/js/pdfjs/web/viewer.js.map","hash":"b378d4b37e8bce789f7174ef2c0c1f86955aa1db","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_hy.js","hash":"a41a9672ecf6dc755ea7954c2f03352a4527a084","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_kk.js","hash":"3e9ba0fdd9a1b6c6e2be0d93006a2a11561da672","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_mk.js","hash":"ec0d2848665337c28a5ba87686a50a739f7d40f8","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_ru.js","hash":"8abba2d4a7209f32e08848ef82b544abef957767","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_si.js","hash":"bfe548e1b966695fddbe4fff2826af16792e8848","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_ta.js","hash":"0710cb3992c162a91925d08505ac572e192ff54b","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_uk.js","hash":"ef3343f3a29a9ae544da5c885547441cadffbd56","modified":1630147840098},{"_id":"public/js/5.0/web3d/fonts/greek/jlm_fcmripg.js","hash":"7b4738526fa5c6efb98e58db276e8a957814f8c4","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/viewer.js.map","hash":"685034e892b4a205ac8710ba08586aacd248905b","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_bg.js","hash":"c283208e01623dbe78768003cc7bcdb3897f0f1b","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_el.js","hash":"048d6f9571a4210a14cbe2d38d6f5bbfe60c42c5","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_kn.js","hash":"9c73006a01b7499e0b40be1b6abb41ca13342d7d","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_mn.js","hash":"7b0038110e346faf975205046720a9d4a835d825","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_ne.js","hash":"c0b913c294ad220c87f46d4eb7db896d8d37e1bc","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_ug.js","hash":"74e1f2912d3503181197eba0081037cc9ad47de0","modified":1630147840098},{"_id":"public/img/bg/a8d2b7b118107c8a8446ca81691d20ee_1.jpg","hash":"8a53d60923c984efe760eeadfed04d468a7b04e9","modified":1630147840098},{"_id":"public/img/bg/wm2.mp4","hash":"b6fdb4962f2efe2ba593c786af557ab04e01942a","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_hi.js","hash":"6f7e26bac41db803ee3bff2bc01443aaa9f1da4f","modified":1630147840098},{"_id":"public/img/test.jpg","hash":"6bdc058ef177dd8521b85e19d4e805d5b8f94cad","modified":1630147840098},{"_id":"public/js/pdfjs/web/compressed.tracemonkey-pldi-09.pdf","hash":"0d281938d3ff2377541704cab6ba1c4408420733","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/compressed.tracemonkey-pldi-09.pdf","hash":"0d281938d3ff2377541704cab6ba1c4408420733","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_th.js","hash":"df4713647267da3b6fc341e77bb7473ca195d320","modified":1630147840098},{"_id":"public/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/1.cache.js","hash":"9b363a0e1476027b80ba8c525f58e5df67470ef5","modified":1630147840098},{"_id":"public/js/5.0/web3d/js/properties_keys_ka.js","hash":"4feff31ead6176a5d67b14c116d64721da95bc35","modified":1630147840098},{"_id":"public/img/bg/girl.png","hash":"bb2aa45e869a12640a9c38f54dbc0fab32b9e692","modified":1630147840098},{"_id":"public/img/bg/wm10.mp4","hash":"b870f16f79786e1fd956bef8b14e1e3659356025","modified":1630147840098},{"_id":"public/js/pdfjs/build/pdf.js","hash":"2386e91a5e005936c3b534f04f6e5f902229d97b","modified":1630147840098},{"_id":"public/js/pdfjs/web/viewer.js","hash":"5926d26fa4c8cbfe1254c9ef42b13c18ed4fcdef","modified":1630147840098},{"_id":"public/js/pdfjs_old/build/pdf.js.map","hash":"cd608142b8821db284574b0712d9e12f631555c1","modified":1630147840098},{"_id":"public/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/3.cache.js","hash":"29266c1c6d6b5285abc91c3e0b8f8ca5d32cee10","modified":1630147840098},{"_id":"public/js/pdfjs/build/pdf.sandbox.js","hash":"a65f6a0106fa2ef340f3d0b62fc990cc93ab24f3","modified":1630147840098},{"_id":"public/js/pdfjs_old/web/viewer.js","hash":"945a23ef4641c92064af6e8c346042c29262cc21","modified":1630147840098},{"_id":"public/img/bg/wm1.mp4","hash":"b5ff1c5af1be3edba17807f0c75540a078eff6af","modified":1630147840098},{"_id":"public/img/bg/wm9.mp4","hash":"7333f9649921c5e94c6e081939bd7cda1dec6964","modified":1630147840098},{"_id":"public/js/pdfjs_old/build/pdf.sandbox.js","hash":"958eb03227b04e327e44cfae489bd79a660309a5","modified":1630147840098},{"_id":"public/img/bg/wm11.mp4","hash":"d4bde698732e28c122f421e604be1654796a7034","modified":1630147840098},{"_id":"public/js/pdfjs_old/build/pdf.js","hash":"c82259c253905677358b76ae4b2dd3e6323ef9ac","modified":1630147840098},{"_id":"public/js/pdfjs/build/pdf.worker.js.map","hash":"866d8b477edce9f524f1e8493d07c110ce30dc5e","modified":1630147840098},{"_id":"public/js/pdfjs_old/build/pdf.worker.js.map","hash":"598197f21e6e441dabf888ebef5ec71ddb4972f7","modified":1630147840098},{"_id":"public/js/pdfjs/build/pdf.worker.js","hash":"276782b5763a7c8eeceb915d75f0c512327843a4","modified":1630147840098},{"_id":"public/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/11.cache.js","hash":"f805327b99d8da194944daf1772da0151a297e99","modified":1630147840098},{"_id":"public/js/pdfjs_old/build/pdf.worker.js","hash":"aa66273bf7d111676fb260d1db6d14a62dc36464","modified":1630147840098},{"_id":"public/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/12.cache.js","hash":"e367d315d54764835418fb66aaaf48e51dd7777b","modified":1630147840098},{"_id":"public/js/5.0/web3d/18EBAFF235EE31DFDA1EE52C35151A34.cache.js","hash":"9321184d1ade1f26d8b3720b4b18f22cf9750c8a","modified":1630147840098},{"_id":"public/js/5.0/web3d/deferredjs/18EBAFF235EE31DFDA1EE52C35151A34/13.cache.js","hash":"70a70ad83dff7b2dfd0b850d6b75f6d39b962e75","modified":1630147840098}],"Category":[{"name":"配置","_id":"cksvnxoc20004ugx4biosapea"},{"name":"git","_id":"cksvnxoc6000cugx4hcn34klu"},{"name":"hexo","parent":"cksvnxoc20004ugx4biosapea","_id":"cksvnxocc000nugx443vcdem0"},{"name":"docker","_id":"cksvnxoci000yugx4fego4l1i"},{"name":"深度学习","_id":"cksvnxocl001bugx470i4evv5"},{"name":"dvc","_id":"cksvnxocw0026ugx4b4uv7tjr"},{"name":"英语","_id":"cksvnxocx002bugx45rldgfxt"},{"name":"图像处理","_id":"cksvnxocz002iugx42r6wfyjt"},{"name":"剑指","_id":"cksvnxod4002uugx43prg7tru"},{"name":"目标检测","parent":"cksvnxocl001bugx470i4evv5","_id":"cksvnxodk0040ugx4hd25c0sj"},{"name":"链表","parent":"cksvnxod4002uugx43prg7tru","_id":"cksvnxodx0058ugx44uvsc00d"},{"name":"数组","parent":"cksvnxod4002uugx43prg7tru","_id":"cksvnxody005bugx4d5bh66tz"},{"name":"树","parent":"cksvnxod4002uugx43prg7tru","_id":"cksvnxody005gugx40bd2cqaz"},{"name":"字符串","parent":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoe10063ugx48j5tg25w"},{"name":"快速排序","parent":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoe20069ugx4dzf1cnd6"},{"name":"math","_id":"cksvnxoe3006dugx48g2pgvfp"},{"name":"文献","_id":"cksvnxoe60071ugx4bhim6qm0"},{"name":"栈","parent":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoe70076ugx42cvyfa67"},{"name":"动态规划","parent":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoe7007bugx4cuuicxd4"},{"name":"DFS","parent":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoea007ougx41olra4l8"},{"name":"变量","parent":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoed0089ugx4gl4g6gbe"},{"name":"快速幂","parent":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoed008eugx41lwf42w5"},{"name":"大数","parent":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoee008lugx449ma0rsu"},{"name":"有限状态机","parent":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoeg008yugx4758360c1"},{"name":"线性代数","parent":"cksvnxoe3006dugx48g2pgvfp","_id":"cksvnxoej009jugx40vdddfc7"},{"name":"概率论","parent":"cksvnxoe3006dugx48g2pgvfp","_id":"cksvnxoek009ougx48dfd120k"},{"name":"网络架构","parent":"cksvnxocl001bugx470i4evv5","_id":"cksvnxoew00brugx48jex3yas"}],"Data":[{"_id":"friends","data":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}],"Page":[{"title":"404","date":"2021-08-04T07:56:32.000Z","type":"404","layout":"404","description":"Oops～，我崩溃了！找不到你想要的页面 :(","_content":"","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2021-08-04 15:56:32\ntype: \"404\"\nlayout: \"404\"\ndescription: \"Oops～，我崩溃了！找不到你想要的页面 :(\"\n---\n","updated":"2021-08-14T10:08:10.535Z","path":"404/index.html","comments":1,"_id":"cksvnxobw0000ugx42ykhdy1g","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"小站自述","date":"2021-08-03T11:39:55.000Z","type":"about","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: 小站自述\ndate: 2021-08-03 19:39:55\ntype: \"about\"\nlayout: \"about\"\n---\n","updated":"2021-08-14T10:08:10.543Z","path":"about/index.html","comments":1,"_id":"cksvnxoc00002ugx45ext5cay","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"文章类别","date":"2021-08-03T11:38:47.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 文章类别\ndate: 2021-08-03 19:38:47\ntype: \"categories\"\nlayout: \"categories\"\n---\n","updated":"2021-08-14T10:08:10.544Z","path":"categories/index.html","comments":1,"_id":"cksvnxoc30006ugx48hyz0gq5","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"contact","date":"2021-08-04T07:52:31.000Z","type":"contact","layout":"contact","_content":"","source":"contact/index.md","raw":"---\ntitle: contact\ndate: 2021-08-04 15:52:31\ntype: \"contact\"\nlayout: \"contact\"\n---\n","updated":"2021-08-14T10:08:10.544Z","path":"contact/index.html","comments":1,"_id":"cksvnxoc40008ugx4c46m0epi","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"article","date":"2021-08-03T11:33:47.000Z","type":"tags","layout":"tags","_content":"\n","source":"tags/index.md","raw":"---\ntitle: article\ndate: 2021-08-03 19:33:47\ntype: \"tags\"\nlayout: \"tags\"\n---\n\n","updated":"2021-08-14T10:08:10.545Z","path":"tags/index.html","comments":1,"_id":"cksvnxoc5000augx4f59y6ocs","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"friends","date":"2021-08-04T07:59:30.000Z","type":"friends","layout":"friends","_content":"\n","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2021-08-04 15:59:30\ntype: \"friends\"\nlayout: \"friends\"\n---\n\n","updated":"2021-08-14T10:08:10.545Z","path":"friends/index.html","comments":1,"_id":"cksvnxoc7000fugx4akb15te4","content":"","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":""}],"Post":[{"title":"博客中的emoji","date":"2021-08-24T07:00:26.000Z","_content":"\n> 在博客中使用emoji，可可爱爱小表情:heart_eyes:\n\n> 相关配置参见这个博客哟 [Hexo -19- 添加emoji表情](https://www.zywvvd.com/2021/08/23/hexo/19%20hexo-emoji/hexo-emoji/)\n> 可以在这两个网站看看有哪些小表情\n> https://www.webfx.com/tools/emoji-cheat-sheet/\n> https://www.zywvvd.com/2021/08/13/git/git-emoji/git-emoji/\n\n## 安装渲染器\n\n```\nnpm un hexo-renderer-marked --save\nnpm i hexo-renderer-markdown-it --save\n```\n\n## 修改配置文件\n\n在_config.yml文件尾部添加下段代码\n\n```\n# Markdown-it config\n## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki\nmarkdown:\n  render:\n    html: true\n    xhtmlOut: false\n    breaks: true\n    linkify: true\n    typographer: true\n    quotes: '“”‘’'\n  plugins:\n    - markdown-it-abbr\n    - markdown-it-footnote\n    - markdown-it-ins\n    - markdown-it-sub\n    - markdown-it-sup\n    - markdown-it-emoji  # add emoji\n```\n\n使用的时候就直接在md文件中用两个引号中间填写emoji的名称即可啦 :happy:\n\n","source":"_posts/config/hexo-emoji.md","raw":"---\ntitle: 博客中的emoji\ntags: emoji\ncategories: [配置,hexo]\ndate: 2021-08-24 15:00:26\n---\n\n> 在博客中使用emoji，可可爱爱小表情:heart_eyes:\n\n> 相关配置参见这个博客哟 [Hexo -19- 添加emoji表情](https://www.zywvvd.com/2021/08/23/hexo/19%20hexo-emoji/hexo-emoji/)\n> 可以在这两个网站看看有哪些小表情\n> https://www.webfx.com/tools/emoji-cheat-sheet/\n> https://www.zywvvd.com/2021/08/13/git/git-emoji/git-emoji/\n\n## 安装渲染器\n\n```\nnpm un hexo-renderer-marked --save\nnpm i hexo-renderer-markdown-it --save\n```\n\n## 修改配置文件\n\n在_config.yml文件尾部添加下段代码\n\n```\n# Markdown-it config\n## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki\nmarkdown:\n  render:\n    html: true\n    xhtmlOut: false\n    breaks: true\n    linkify: true\n    typographer: true\n    quotes: '“”‘’'\n  plugins:\n    - markdown-it-abbr\n    - markdown-it-footnote\n    - markdown-it-ins\n    - markdown-it-sub\n    - markdown-it-sup\n    - markdown-it-emoji  # add emoji\n```\n\n使用的时候就直接在md文件中用两个引号中间填写emoji的名称即可啦 :happy:\n\n","slug":"config/hexo-emoji","published":1,"updated":"2021-08-24T08:22:45.814Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxoby0001ugx4acy53i5r","content":"<blockquote>\n<p>在博客中使用emoji，可可爱爱小表情😍</p>\n</blockquote>\n<blockquote>\n<p>相关配置参见这个博客哟 <a href=\"https://www.zywvvd.com/2021/08/23/hexo/19%20hexo-emoji/hexo-emoji/\">Hexo -19- 添加emoji表情</a><br>\n可以在这两个网站看看有哪些小表情<br>\n<a href=\"https://www.webfx.com/tools/emoji-cheat-sheet/\">https://www.webfx.com/tools/emoji-cheat-sheet/</a><br>\n<a href=\"https://www.zywvvd.com/2021/08/13/git/git-emoji/git-emoji/\">https://www.zywvvd.com/2021/08/13/git/git-emoji/git-emoji/</a></p>\n</blockquote>\n<h2 id=\"安装渲染器\">安装渲染器</h2>\n<figure class=\"highlight applescript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs applescript\">npm un hexo-renderer-marked <span class=\"hljs-comment\">--save</span><br>npm i hexo-renderer-markdown-<span class=\"hljs-keyword\">it</span> <span class=\"hljs-comment\">--save</span><br></code></pre></td></tr></tbody></table></figure>\n<h2 id=\"修改配置文件\">修改配置文件</h2>\n<p>在_config.yml文件尾部添加下段代码</p>\n<figure class=\"highlight yaml\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-comment\"># Markdown-it config</span><br><span class=\"hljs-comment\">## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki</span><br><span class=\"hljs-attr\">markdown:</span><br>  <span class=\"hljs-attr\">render:</span><br>    <span class=\"hljs-attr\">html:</span> <span class=\"hljs-literal\">true</span><br>    <span class=\"hljs-attr\">xhtmlOut:</span> <span class=\"hljs-literal\">false</span><br>    <span class=\"hljs-attr\">breaks:</span> <span class=\"hljs-literal\">true</span><br>    <span class=\"hljs-attr\">linkify:</span> <span class=\"hljs-literal\">true</span><br>    <span class=\"hljs-attr\">typographer:</span> <span class=\"hljs-literal\">true</span><br>    <span class=\"hljs-attr\">quotes:</span> <span class=\"hljs-string\">'“”‘’'</span><br>  <span class=\"hljs-attr\">plugins:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">markdown-it-abbr</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">markdown-it-footnote</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">markdown-it-ins</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">markdown-it-sub</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">markdown-it-sup</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">markdown-it-emoji</span>  <span class=\"hljs-comment\"># add emoji</span><br></code></pre></td></tr></tbody></table></figure>\n<p>使用的时候就直接在md文件中用两个引号中间填写emoji的名称即可啦 :happy:</p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>在博客中使用emoji，可可爱爱小表情😍</p>\n</blockquote>\n<blockquote>\n<p>相关配置参见这个博客哟 <a href=\"https://www.zywvvd.com/2021/08/23/hexo/19%20hexo-emoji/hexo-emoji/\">Hexo -19- 添加emoji表情</a><br>\n可以在这两个网站看看有哪些小表情<br>\n<a href=\"https://www.webfx.com/tools/emoji-cheat-sheet/\">https://www.webfx.com/tools/emoji-cheat-sheet/</a><br>\n<a href=\"https://www.zywvvd.com/2021/08/13/git/git-emoji/git-emoji/\">https://www.zywvvd.com/2021/08/13/git/git-emoji/git-emoji/</a></p>\n</blockquote>\n<h2 id=\"安装渲染器\">安装渲染器</h2>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs applescript\">npm un hexo-renderer-marked <span class=\"hljs-comment\">--save</span><br>npm i hexo-renderer-markdown-<span class=\"hljs-keyword\">it</span> <span class=\"hljs-comment\">--save</span><br></code></pre></td></tr></table></figure>\n<h2 id=\"修改配置文件\">修改配置文件</h2>\n<p>在_config.yml文件尾部添加下段代码</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-comment\"># Markdown-it config</span><br><span class=\"hljs-comment\">## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki</span><br><span class=\"hljs-attr\">markdown:</span><br>  <span class=\"hljs-attr\">render:</span><br>    <span class=\"hljs-attr\">html:</span> <span class=\"hljs-literal\">true</span><br>    <span class=\"hljs-attr\">xhtmlOut:</span> <span class=\"hljs-literal\">false</span><br>    <span class=\"hljs-attr\">breaks:</span> <span class=\"hljs-literal\">true</span><br>    <span class=\"hljs-attr\">linkify:</span> <span class=\"hljs-literal\">true</span><br>    <span class=\"hljs-attr\">typographer:</span> <span class=\"hljs-literal\">true</span><br>    <span class=\"hljs-attr\">quotes:</span> <span class=\"hljs-string\">&#x27;“”‘’&#x27;</span><br>  <span class=\"hljs-attr\">plugins:</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">markdown-it-abbr</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">markdown-it-footnote</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">markdown-it-ins</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">markdown-it-sub</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">markdown-it-sup</span><br>    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">markdown-it-emoji</span>  <span class=\"hljs-comment\"># add emoji</span><br></code></pre></td></tr></table></figure>\n<p>使用的时候就直接在md文件中用两个引号中间填写emoji的名称即可啦 :happy:</p>\n"},{"title":"子模块为空的解决方案","date":"2021-08-05T18:09:00.000Z","_content":"\n> 针对子模块文件夹为空的情况，采取下列解决方案。\n>\n> 当一个 git 项目包含子模块（submodule) 时，直接克隆下来的子模块目录里面是空的。\n\n**有两种方法解决**：\n\n### 方法一\n\n如果项目已经克隆到了本地，执行下面的步骤：\n\n1. 初始化本地子模块配置文件\n\n   ```\n   git submodule init\n   ```\n   \n2. 更新项目，抓取子模块内容。\n\n   ```\n   git submodule update\n   ```\n\n3. 进入对应子模块目录，执行\n\n   ```\n   git submodule update --init --recursive\n   ```\n\n### 方法二\n\n另外一种更简单的方法，就是在执行 `git clone` 时加上 `--recursive` 参数。它会自动初始化并更新每一个子模块。例如：\n\n```\ngit clone --recursive https://github.com/example/example.git\n```\n\n","source":"_posts/config/git-submodule.md","raw":"---\ntitle: 子模块为空的解决方案\ndate: 2021-08-06 02:09:00\ntags: git\ncategories: git\n---\n\n> 针对子模块文件夹为空的情况，采取下列解决方案。\n>\n> 当一个 git 项目包含子模块（submodule) 时，直接克隆下来的子模块目录里面是空的。\n\n**有两种方法解决**：\n\n### 方法一\n\n如果项目已经克隆到了本地，执行下面的步骤：\n\n1. 初始化本地子模块配置文件\n\n   ```\n   git submodule init\n   ```\n   \n2. 更新项目，抓取子模块内容。\n\n   ```\n   git submodule update\n   ```\n\n3. 进入对应子模块目录，执行\n\n   ```\n   git submodule update --init --recursive\n   ```\n\n### 方法二\n\n另外一种更简单的方法，就是在执行 `git clone` 时加上 `--recursive` 参数。它会自动初始化并更新每一个子模块。例如：\n\n```\ngit clone --recursive https://github.com/example/example.git\n```\n\n","slug":"config/git-submodule","published":1,"updated":"2021-08-18T02:12:44.811Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxoc10003ugx434uf6xfg","content":"<blockquote>\n<p>针对子模块文件夹为空的情况，采取下列解决方案。</p>\n<p>当一个 git 项目包含子模块（submodule) 时，直接克隆下来的子模块目录里面是空的。</p>\n</blockquote>\n<p><strong>有两种方法解决</strong>：</p>\n<h3 id=\"方法一\">方法一</h3>\n<p>如果项目已经克隆到了本地，执行下面的步骤：</p>\n<ol>\n<li>\n<p>初始化本地子模块配置文件</p>\n<figure class=\"highlight csharp\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\">git submodule <span class=\"hljs-keyword\">init</span><br></code></pre></td></tr></tbody></table></figure>\n</li>\n<li>\n<p>更新项目，抓取子模块内容。</p>\n<figure class=\"highlight ebnf\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">git submodule update</span><br></code></pre></td></tr></tbody></table></figure>\n</li>\n<li>\n<p>进入对应子模块目录，执行</p>\n<figure class=\"highlight brainfuck\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs brainfuck\"><span class=\"hljs-comment\">git</span> <span class=\"hljs-comment\">submodule</span> <span class=\"hljs-comment\">update</span> --<span class=\"hljs-comment\">init</span> --<span class=\"hljs-comment\">recursive</span><br></code></pre></td></tr></tbody></table></figure>\n</li>\n</ol>\n<h3 id=\"方法二\">方法二</h3>\n<p>另外一种更简单的方法，就是在执行 <code>git clone</code> 时加上 <code>--recursive</code> 参数。它会自动初始化并更新每一个子模块。例如：</p>\n<figure class=\"highlight awk\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">git clone --recursive https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/example/</span>example.git<br></code></pre></td></tr></tbody></table></figure>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>针对子模块文件夹为空的情况，采取下列解决方案。</p>\n<p>当一个 git 项目包含子模块（submodule) 时，直接克隆下来的子模块目录里面是空的。</p>\n</blockquote>\n<p><strong>有两种方法解决</strong>：</p>\n<h3 id=\"方法一\">方法一</h3>\n<p>如果项目已经克隆到了本地，执行下面的步骤：</p>\n<ol>\n<li>\n<p>初始化本地子模块配置文件</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\">git submodule <span class=\"hljs-keyword\">init</span><br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>更新项目，抓取子模块内容。</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">git submodule update</span><br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>进入对应子模块目录，执行</p>\n<figure class=\"highlight brainfuck\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs brainfuck\"><span class=\"hljs-comment\">git</span> <span class=\"hljs-comment\">submodule</span> <span class=\"hljs-comment\">update</span> --<span class=\"hljs-comment\">init</span> --<span class=\"hljs-comment\">recursive</span><br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"方法二\">方法二</h3>\n<p>另外一种更简单的方法，就是在执行 <code>git clone</code> 时加上 <code>--recursive</code> 参数。它会自动初始化并更新每一个子模块。例如：</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">git clone --recursive https:<span class=\"hljs-regexp\">//gi</span>thub.com<span class=\"hljs-regexp\">/example/</span>example.git<br></code></pre></td></tr></table></figure>\n"},{"title":"在博客中显示pdf&折叠","date":"2021-08-25T08:29:58.000Z","_content":"\n> 参考师兄的方法配置\n> https://www.zywvvd.com/2021/08/15/hexo-theme/fluid/fluid-pdf/fluid-pdf/\n\n## 配置\n\npdf.js 是用于解析和呈现 PDF 的基于 Web 标准平台的通用解决方案，功能强大。\n\n官方网站：https://mozilla.github.io/pdf.js/\n\n由于我的浏览器的版本可能不高，考虑到兼容性下载旧版的文件。然后按师兄的步骤配置即可。\n\n## 使用\n\n```\n<iframe src='/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/An%20Isotropic%203x3%20Image%20Gradient%20Operator.pdf' width=100% height=450></iframe>\n```\n\nfile设置为文件的地址，宽高可以自己设置。\n\n## 效果\n\n<iframe src='/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/An%20Isotropic%203x3%20Image%20Gradient%20Operator.pdf' width=100% height=450></iframe>\n\n\n\n## 折叠\n\n通过html的details元素可以折叠隐藏的内容。\n\n```\n使用 <details> </details> 标签包裹需要隐藏的内容\n在其中使用<summary> </summary>标签包裹需要隐藏内容的标题\n```\n\n这样如果需要阅读pdf就可以展开，不需要就隐藏，真是炒鸡便利！:wink:\n\n<details>\n<summary>展开pdf</summary>\n<iframe src='/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/An%20Isotropic%203x3%20Image%20Gradient%20Operator.pdf' width=100% height=650></iframe>\n</details>\n","source":"_posts/config/pdf-config.md","raw":"---\ntitle: 在博客中显示pdf&折叠\ntags: [配置,pdf]\ncategories: [配置]\ndate: 2021-08-25 16:29:58\n---\n\n> 参考师兄的方法配置\n> https://www.zywvvd.com/2021/08/15/hexo-theme/fluid/fluid-pdf/fluid-pdf/\n\n## 配置\n\npdf.js 是用于解析和呈现 PDF 的基于 Web 标准平台的通用解决方案，功能强大。\n\n官方网站：https://mozilla.github.io/pdf.js/\n\n由于我的浏览器的版本可能不高，考虑到兼容性下载旧版的文件。然后按师兄的步骤配置即可。\n\n## 使用\n\n```\n<iframe src='/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/An%20Isotropic%203x3%20Image%20Gradient%20Operator.pdf' width=100% height=450></iframe>\n```\n\nfile设置为文件的地址，宽高可以自己设置。\n\n## 效果\n\n<iframe src='/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/An%20Isotropic%203x3%20Image%20Gradient%20Operator.pdf' width=100% height=450></iframe>\n\n\n\n## 折叠\n\n通过html的details元素可以折叠隐藏的内容。\n\n```\n使用 <details> </details> 标签包裹需要隐藏的内容\n在其中使用<summary> </summary>标签包裹需要隐藏内容的标题\n```\n\n这样如果需要阅读pdf就可以展开，不需要就隐藏，真是炒鸡便利！:wink:\n\n<details>\n<summary>展开pdf</summary>\n<iframe src='/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/An%20Isotropic%203x3%20Image%20Gradient%20Operator.pdf' width=100% height=650></iframe>\n</details>\n","slug":"config/pdf-config","published":1,"updated":"2021-08-27T02:55:53.672Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxoc40007ugx4c2lig1lp","content":"<blockquote>\n<p>参考师兄的方法配置<br>\n<a href=\"https://www.zywvvd.com/2021/08/15/hexo-theme/fluid/fluid-pdf/fluid-pdf/\">https://www.zywvvd.com/2021/08/15/hexo-theme/fluid/fluid-pdf/fluid-pdf/</a></p>\n</blockquote>\n<h2 id=\"配置\">配置</h2>\n<p>pdf.js 是用于解析和呈现 PDF 的基于 Web 标准平台的通用解决方案，功能强大。</p>\n<p>官方网站：<a href=\"https://mozilla.github.io/pdf.js/\">https://mozilla.github.io/pdf.js/</a></p>\n<p>由于我的浏览器的版本可能不高，考虑到兼容性下载旧版的文件。然后按师兄的步骤配置即可。</p>\n<h2 id=\"使用\">使用</h2>\n<figure class=\"highlight llvm\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs llvm\">&lt;iframe src<span class=\"hljs-operator\">=</span>'/js/pdfjs_old/web/viewer.html?file<span class=\"hljs-operator\">=</span>https://paper.mulindya.com/An<span class=\"hljs-variable\">%20</span>Isotropic<span class=\"hljs-variable\">%203</span><span class=\"hljs-keyword\">x</span><span class=\"hljs-number\">3</span><span class=\"hljs-variable\">%20</span>Image<span class=\"hljs-variable\">%20</span>Gradient<span class=\"hljs-variable\">%20</span>Operator.pdf' width<span class=\"hljs-operator\">=</span><span class=\"hljs-number\">100</span>% height<span class=\"hljs-operator\">=</span><span class=\"hljs-number\">450</span>&gt;&lt;/iframe&gt;<br></code></pre></td></tr></tbody></table></figure>\n<p>file设置为文件的地址，宽高可以自己设置。</p>\n<h2 id=\"效果\">效果</h2>\n<iframe src=\"/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/An%20Isotropic%203x3%20Image%20Gradient%20Operator.pdf\" width=\"100%\" height=\"450\"></iframe>\n<h2 id=\"折叠\">折叠</h2>\n<p>通过html的details元素可以折叠隐藏的内容。</p>\n<figure class=\"highlight xml\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\">使用 <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">details</span>&gt;</span> <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">details</span>&gt;</span> 标签包裹需要隐藏的内容<br>在其中使用<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">summary</span>&gt;</span> <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">summary</span>&gt;</span>标签包裹需要隐藏内容的标题<br></code></pre></td></tr></tbody></table></figure>\n<p>这样如果需要阅读pdf就可以展开，不需要就隐藏，真是炒鸡便利！😉</p>\n<details>\n<summary>展开pdf</summary>\n<iframe src=\"/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/An%20Isotropic%203x3%20Image%20Gradient%20Operator.pdf\" width=\"100%\" height=\"650\"></iframe>\n</details>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>参考师兄的方法配置<br>\n<a href=\"https://www.zywvvd.com/2021/08/15/hexo-theme/fluid/fluid-pdf/fluid-pdf/\">https://www.zywvvd.com/2021/08/15/hexo-theme/fluid/fluid-pdf/fluid-pdf/</a></p>\n</blockquote>\n<h2 id=\"配置\">配置</h2>\n<p>pdf.js 是用于解析和呈现 PDF 的基于 Web 标准平台的通用解决方案，功能强大。</p>\n<p>官方网站：<a href=\"https://mozilla.github.io/pdf.js/\">https://mozilla.github.io/pdf.js/</a></p>\n<p>由于我的浏览器的版本可能不高，考虑到兼容性下载旧版的文件。然后按师兄的步骤配置即可。</p>\n<h2 id=\"使用\">使用</h2>\n<figure class=\"highlight llvm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs llvm\">&lt;iframe src<span class=\"hljs-operator\">=</span>&#x27;/js/pdfjs_old/web/viewer.html?file<span class=\"hljs-operator\">=</span>https://paper.mulindya.com/An<span class=\"hljs-variable\">%20</span>Isotropic<span class=\"hljs-variable\">%203</span><span class=\"hljs-keyword\">x</span><span class=\"hljs-number\">3</span><span class=\"hljs-variable\">%20</span>Image<span class=\"hljs-variable\">%20</span>Gradient<span class=\"hljs-variable\">%20</span>Operator.pdf&#x27; width<span class=\"hljs-operator\">=</span><span class=\"hljs-number\">100</span>% height<span class=\"hljs-operator\">=</span><span class=\"hljs-number\">450</span>&gt;&lt;/iframe&gt;<br></code></pre></td></tr></table></figure>\n<p>file设置为文件的地址，宽高可以自己设置。</p>\n<h2 id=\"效果\">效果</h2>\n<iframe src='/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/An%20Isotropic%203x3%20Image%20Gradient%20Operator.pdf' width=100% height=450></iframe>\n<h2 id=\"折叠\">折叠</h2>\n<p>通过html的details元素可以折叠隐藏的内容。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\">使用 <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">details</span>&gt;</span> <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">details</span>&gt;</span> 标签包裹需要隐藏的内容<br>在其中使用<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">summary</span>&gt;</span> <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">summary</span>&gt;</span>标签包裹需要隐藏内容的标题<br></code></pre></td></tr></table></figure>\n<p>这样如果需要阅读pdf就可以展开，不需要就隐藏，真是炒鸡便利！😉</p>\n<details>\n<summary>展开pdf</summary>\n<iframe src='/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/An%20Isotropic%203x3%20Image%20Gradient%20Operator.pdf' width=100% height=650></iframe>\n</details>\n"},{"title":"hexo中公式显示","date":"2021-08-05T12:38:51.000Z","math":true,"_content":"\n> 公式的显示问题。Hexo中Mathjax是用于显示公式的插件，但是多行显示会出现问题，有时还会出现乱码的情况。\n\n### 配置\n\n在根目录下的config\\_fluid.yml​文件中打开math的相关配置。\n\n```yaml\n  # 数学公式，开启之前需要更换 Markdown 渲染器，否则复杂公式会有兼容问题，具体请见：https://hexo.fluid-dev.com/docs/guide/##latex-数学公式\n  # Mathematical formula. If enable, you need to change the Markdown renderer, see: https://hexo.fluid-dev.com/docs/en/guide/#math\n  math:\n    # 开启后文章默认可用，自定义页面如需使用，需在 Front-matter 中指定 `math: true`\n    # If you want to use math on the custom page, you need to set `math: true` in Front-matter\n    enable: true\n\n    # 开启后，只有在文章 Front-matter 里指定 `math: true` 才会在文章页启动公式转换，以便在页面不包含公式时提高加载速度\n    # If true, only set `math: true` in Front-matter will enable math, to load faster when the page does not contain math\n    specific: true\n\n    # Options: mathjax | katex\n    engine: mathjax\n\n```\n\n### 出现的问题\n\n#### 问题1\n\n- 由于hexo解码时关注{{，}}，%% 等连续字符，会将这部分代码解读为其他带有特殊含义的内容\n- 如果公式中恰巧出现了此类字符，会报出上述错误\n\n#### 问题2\n\n- 由于hexo在公式中的`\\\\`错会成了转义符，也就是说他只看见了一个反斜杠，不会执行换行命令，导致公式堆成一行\n\n### 解决方案\n\n#### 临时方案\n\n##### 针对问题1\n\n- 可以在连续的 `{` `}` `%`中间插入空格，分开就没事了\n\n##### 针对问题2\n\n- 可以将`\\\\`换成`\\\\\\\\`，可以实现公式的多行正确显示\n\n#### 终极方案\n\n- 在官方文档中提到了可以为hexo提供标记，阻止其按照自己的规则解释我们的字符串，显示其原本的含义\n\n- 标记为\n\n  ```\n  {% raw %}\n  $$\n  ...\n  $$\n  {% endraw %}\n  ```\n\n### 多行显示和对齐\n- 默认是显示为一行要实现公式多行和对齐可以使用{aligned}模式，使用\"&\"来标记对齐位置。\"\\\\\\\\\"表示换行\n\n    ```\n    $$\n    \\begin{aligned}\n    \\boldsymbol{x}^{\\mathrm{T}}C\\boldsymbol{x}\t&=\\boldsymbol{x}^{\\mathrm{T}}\\mathrm{E}\\left[\\left(X-\\mu\\right)\\left(X-\\mu\\right)^{\\mathrm{T}}\\right]\\boldsymbol{x} \t\n    \\\\&=\\mathrm{E}\\left[\\boldsymbol{x}^{\\mathrm{T}}\\left(X-\\mu\\right)\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right] \t\\\\&=\\mathrm{E}\\left[\\left(\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right)^{\\mathrm{T}}\\left(\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right)\\right] \t\n    \\\\&=\\mathrm{E}\\left(\\left\\Vert \\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right\\Vert ^{2}\\right) \t\n    \\\\&=\\sigma_{X}^{2}\n    \\end{aligned}\n    $$\n    ```\n\n- 显示为\n\n{% raw %}\n$$\n\\begin{aligned}\n\\boldsymbol{x}^{\\mathrm{T}}C\\boldsymbol{x}\t&=\\boldsymbol{x}^{\\mathrm{T}}\\mathrm{E}\\left[\\left(X-\\mu\\right)\\left(X-\\mu\\right)^{\\mathrm{T}}\\right]\\boldsymbol{x} \t\n\\\\&=\\mathrm{E}\\left[\\boldsymbol{x}^{\\mathrm{T}}\\left(X-\\mu\\right)\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right] \t\\\\&=\\mathrm{E}\\left[\\left(\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right)^{\\mathrm{T}}\\left(\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right)\\right] \t\n\\\\&=\\mathrm{E}\\left(\\left\\Vert \\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right\\Vert ^{2}\\right) \t\n\\\\&=\\sigma_{X}^{2}\n\\end{aligned}\n$$\n{% endraw %}\n\n","source":"_posts/config/hexo-math-config.md","raw":"---\ntitle: hexo中公式显示\ndate: 2021-08-05 20:38:51\ntags: [hexo,fluid,配置]\ncategories: [配置,hexo]\nmath: true\n---\n\n> 公式的显示问题。Hexo中Mathjax是用于显示公式的插件，但是多行显示会出现问题，有时还会出现乱码的情况。\n\n### 配置\n\n在根目录下的config\\_fluid.yml​文件中打开math的相关配置。\n\n```yaml\n  # 数学公式，开启之前需要更换 Markdown 渲染器，否则复杂公式会有兼容问题，具体请见：https://hexo.fluid-dev.com/docs/guide/##latex-数学公式\n  # Mathematical formula. If enable, you need to change the Markdown renderer, see: https://hexo.fluid-dev.com/docs/en/guide/#math\n  math:\n    # 开启后文章默认可用，自定义页面如需使用，需在 Front-matter 中指定 `math: true`\n    # If you want to use math on the custom page, you need to set `math: true` in Front-matter\n    enable: true\n\n    # 开启后，只有在文章 Front-matter 里指定 `math: true` 才会在文章页启动公式转换，以便在页面不包含公式时提高加载速度\n    # If true, only set `math: true` in Front-matter will enable math, to load faster when the page does not contain math\n    specific: true\n\n    # Options: mathjax | katex\n    engine: mathjax\n\n```\n\n### 出现的问题\n\n#### 问题1\n\n- 由于hexo解码时关注{{，}}，%% 等连续字符，会将这部分代码解读为其他带有特殊含义的内容\n- 如果公式中恰巧出现了此类字符，会报出上述错误\n\n#### 问题2\n\n- 由于hexo在公式中的`\\\\`错会成了转义符，也就是说他只看见了一个反斜杠，不会执行换行命令，导致公式堆成一行\n\n### 解决方案\n\n#### 临时方案\n\n##### 针对问题1\n\n- 可以在连续的 `{` `}` `%`中间插入空格，分开就没事了\n\n##### 针对问题2\n\n- 可以将`\\\\`换成`\\\\\\\\`，可以实现公式的多行正确显示\n\n#### 终极方案\n\n- 在官方文档中提到了可以为hexo提供标记，阻止其按照自己的规则解释我们的字符串，显示其原本的含义\n\n- 标记为\n\n  ```\n  {% raw %}\n  $$\n  ...\n  $$\n  {% endraw %}\n  ```\n\n### 多行显示和对齐\n- 默认是显示为一行要实现公式多行和对齐可以使用{aligned}模式，使用\"&\"来标记对齐位置。\"\\\\\\\\\"表示换行\n\n    ```\n    $$\n    \\begin{aligned}\n    \\boldsymbol{x}^{\\mathrm{T}}C\\boldsymbol{x}\t&=\\boldsymbol{x}^{\\mathrm{T}}\\mathrm{E}\\left[\\left(X-\\mu\\right)\\left(X-\\mu\\right)^{\\mathrm{T}}\\right]\\boldsymbol{x} \t\n    \\\\&=\\mathrm{E}\\left[\\boldsymbol{x}^{\\mathrm{T}}\\left(X-\\mu\\right)\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right] \t\\\\&=\\mathrm{E}\\left[\\left(\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right)^{\\mathrm{T}}\\left(\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right)\\right] \t\n    \\\\&=\\mathrm{E}\\left(\\left\\Vert \\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right\\Vert ^{2}\\right) \t\n    \\\\&=\\sigma_{X}^{2}\n    \\end{aligned}\n    $$\n    ```\n\n- 显示为\n\n{% raw %}\n$$\n\\begin{aligned}\n\\boldsymbol{x}^{\\mathrm{T}}C\\boldsymbol{x}\t&=\\boldsymbol{x}^{\\mathrm{T}}\\mathrm{E}\\left[\\left(X-\\mu\\right)\\left(X-\\mu\\right)^{\\mathrm{T}}\\right]\\boldsymbol{x} \t\n\\\\&=\\mathrm{E}\\left[\\boldsymbol{x}^{\\mathrm{T}}\\left(X-\\mu\\right)\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right] \t\\\\&=\\mathrm{E}\\left[\\left(\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right)^{\\mathrm{T}}\\left(\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right)\\right] \t\n\\\\&=\\mathrm{E}\\left(\\left\\Vert \\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right\\Vert ^{2}\\right) \t\n\\\\&=\\sigma_{X}^{2}\n\\end{aligned}\n$$\n{% endraw %}\n\n","slug":"config/hexo-math-config","published":1,"updated":"2021-08-14T10:08:10.538Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxoc50009ugx46o5l2qmv","content":"<blockquote>\n<p>公式的显示问题。Hexo中Mathjax是用于显示公式的插件，但是多行显示会出现问题，有时还会出现乱码的情况。</p>\n</blockquote>\n<h3 id=\"配置\">配置</h3>\n<p>在根目录下的config_fluid.yml​文件中打开math的相关配置。</p>\n<figure class=\"highlight yaml\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-comment\"># 数学公式，开启之前需要更换 Markdown 渲染器，否则复杂公式会有兼容问题，具体请见：https://hexo.fluid-dev.com/docs/guide/##latex-数学公式</span><br><span class=\"hljs-comment\"># Mathematical formula. If enable, you need to change the Markdown renderer, see: https://hexo.fluid-dev.com/docs/en/guide/#math</span><br><span class=\"hljs-attr\">math:</span><br>  <span class=\"hljs-comment\"># 开启后文章默认可用，自定义页面如需使用，需在 Front-matter 中指定 `math: true`</span><br>  <span class=\"hljs-comment\"># If you want to use math on the custom page, you need to set `math: true` in Front-matter</span><br>  <span class=\"hljs-attr\">enable:</span> <span class=\"hljs-literal\">true</span><br><br>  <span class=\"hljs-comment\"># 开启后，只有在文章 Front-matter 里指定 `math: true` 才会在文章页启动公式转换，以便在页面不包含公式时提高加载速度</span><br>  <span class=\"hljs-comment\"># If true, only set `math: true` in Front-matter will enable math, to load faster when the page does not contain math</span><br>  <span class=\"hljs-attr\">specific:</span> <span class=\"hljs-literal\">true</span><br><br>  <span class=\"hljs-comment\"># Options: mathjax | katex</span><br>  <span class=\"hljs-attr\">engine:</span> <span class=\"hljs-string\">mathjax</span><br><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"出现的问题\">出现的问题</h3>\n<h4 id=\"问题1\">问题1</h4>\n<ul>\n<li>由于hexo解码时关注，%% 等连续字符，会将这部分代码解读为其他带有特殊含义的内容</li>\n<li>如果公式中恰巧出现了此类字符，会报出上述错误</li>\n</ul>\n<h4 id=\"问题2\">问题2</h4>\n<ul>\n<li>由于hexo在公式中的<code>\\\\</code>错会成了转义符，也就是说他只看见了一个反斜杠，不会执行换行命令，导致公式堆成一行</li>\n</ul>\n<h3 id=\"解决方案\">解决方案</h3>\n<h4 id=\"临时方案\">临时方案</h4>\n<h5 id=\"针对问题1\">针对问题1</h5>\n<ul>\n<li>可以在连续的 <code>{</code> <code>}</code> <code>%</code>中间插入空格，分开就没事了</li>\n</ul>\n<h5 id=\"针对问题2\">针对问题2</h5>\n<ul>\n<li>可以将<code>\\\\</code>换成<code>\\\\\\\\</code>，可以实现公式的多行正确显示</li>\n</ul>\n<h4 id=\"终极方案\">终极方案</h4>\n<ul>\n<li>\n<p>在官方文档中提到了可以为hexo提供标记，阻止其按照自己的规则解释我们的字符串，显示其原本的含义</p>\n</li>\n<li>\n<p>标记为</p>\n<figure class=\"highlight django\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs django\"><span class=\"hljs-template-tag\">{% <span class=\"hljs-name\">raw</span> %}</span><span class=\"xml\"></span><br><span class=\"xml\">$$</span><br><span class=\"xml\">...</span><br><span class=\"xml\">$$</span><br><span class=\"xml\"></span><span class=\"hljs-template-tag\">{% <span class=\"hljs-name\">endraw</span> %}</span><br></code></pre></td></tr></tbody></table></figure>\n</li>\n</ul>\n<h3 id=\"多行显示和对齐\">多行显示和对齐</h3>\n<ul>\n<li>\n<p>默认是显示为一行要实现公式多行和对齐可以使用{aligned}模式，使用\"&amp;“来标记对齐位置。”\\\\\"表示换行</p>\n  <figure class=\"highlight taggerscript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs taggerscript\">$$<br><span class=\"hljs-symbol\">\\b</span>egin{aligned}<br><span class=\"hljs-symbol\">\\b</span>oldsymbol{x}^{<span class=\"hljs-symbol\">\\m</span>athrm{T}}C<span class=\"hljs-symbol\">\\b</span>oldsymbol{x}\t&amp;=<span class=\"hljs-symbol\">\\b</span>oldsymbol{x}^{<span class=\"hljs-symbol\">\\m</span>athrm{T}}<span class=\"hljs-symbol\">\\m</span>athrm{E}<span class=\"hljs-symbol\">\\l</span>eft[<span class=\"hljs-symbol\">\\l</span>eft(X-<span class=\"hljs-symbol\">\\m</span>u<span class=\"hljs-symbol\">\\r</span>ight)<span class=\"hljs-symbol\">\\l</span>eft(X-<span class=\"hljs-symbol\">\\m</span>u<span class=\"hljs-symbol\">\\r</span>ight)^{<span class=\"hljs-symbol\">\\m</span>athrm{T}}<span class=\"hljs-symbol\">\\r</span>ight]<span class=\"hljs-symbol\">\\b</span>oldsymbol{x} \t<br><span class=\"hljs-symbol\">\\\\</span>&amp;=<span class=\"hljs-symbol\">\\m</span>athrm{E}<span class=\"hljs-symbol\">\\l</span>eft[<span class=\"hljs-symbol\">\\b</span>oldsymbol{x}^{<span class=\"hljs-symbol\">\\m</span>athrm{T}}<span class=\"hljs-symbol\">\\l</span>eft(X-<span class=\"hljs-symbol\">\\m</span>u<span class=\"hljs-symbol\">\\r</span>ight)<span class=\"hljs-symbol\">\\l</span>eft(X-<span class=\"hljs-symbol\">\\m</span>u<span class=\"hljs-symbol\">\\r</span>ight)^{<span class=\"hljs-symbol\">\\m</span>athrm{T}}<span class=\"hljs-symbol\">\\b</span>oldsymbol{x}<span class=\"hljs-symbol\">\\r</span>ight] \t<span class=\"hljs-symbol\">\\\\</span>&amp;=<span class=\"hljs-symbol\">\\m</span>athrm{E}<span class=\"hljs-symbol\">\\l</span>eft[<span class=\"hljs-symbol\">\\l</span>eft(<span class=\"hljs-symbol\">\\l</span>eft(X-<span class=\"hljs-symbol\">\\m</span>u<span class=\"hljs-symbol\">\\r</span>ight)^{<span class=\"hljs-symbol\">\\m</span>athrm{T}}<span class=\"hljs-symbol\">\\b</span>oldsymbol{x}<span class=\"hljs-symbol\">\\r</span>ight)^{<span class=\"hljs-symbol\">\\m</span>athrm{T}}<span class=\"hljs-symbol\">\\l</span>eft(<span class=\"hljs-symbol\">\\l</span>eft(X-<span class=\"hljs-symbol\">\\m</span>u<span class=\"hljs-symbol\">\\r</span>ight)^{<span class=\"hljs-symbol\">\\m</span>athrm{T}}<span class=\"hljs-symbol\">\\b</span>oldsymbol{x}<span class=\"hljs-symbol\">\\r</span>ight)<span class=\"hljs-symbol\">\\r</span>ight] \t<br><span class=\"hljs-symbol\">\\\\</span>&amp;=<span class=\"hljs-symbol\">\\m</span>athrm{E}<span class=\"hljs-symbol\">\\l</span>eft(<span class=\"hljs-symbol\">\\l</span>eft<span class=\"hljs-symbol\">\\V</span>ert <span class=\"hljs-symbol\">\\l</span>eft(X-<span class=\"hljs-symbol\">\\m</span>u<span class=\"hljs-symbol\">\\r</span>ight)^{<span class=\"hljs-symbol\">\\m</span>athrm{T}}<span class=\"hljs-symbol\">\\b</span>oldsymbol{x}<span class=\"hljs-symbol\">\\r</span>ight<span class=\"hljs-symbol\">\\V</span>ert ^{2}<span class=\"hljs-symbol\">\\r</span>ight) \t<br><span class=\"hljs-symbol\">\\\\</span>&amp;=<span class=\"hljs-symbol\">\\s</span>igma_{X}^{2}<br><span class=\"hljs-symbol\">\\e</span>nd{aligned}<br>$$<br></code></pre></td></tr></tbody></table></figure>\n</li>\n<li>\n<p>显示为</p>\n</li>\n</ul>\n\n$$\n\\begin{aligned}\n\\boldsymbol{x}^{\\mathrm{T}}C\\boldsymbol{x}\t&amp;=\\boldsymbol{x}^{\\mathrm{T}}\\mathrm{E}\\left[\\left(X-\\mu\\right)\\left(X-\\mu\\right)^{\\mathrm{T}}\\right]\\boldsymbol{x} \t\n\\\\&amp;=\\mathrm{E}\\left[\\boldsymbol{x}^{\\mathrm{T}}\\left(X-\\mu\\right)\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right] \t\\\\&amp;=\\mathrm{E}\\left[\\left(\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right)^{\\mathrm{T}}\\left(\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right)\\right] \t\n\\\\&amp;=\\mathrm{E}\\left(\\left\\Vert \\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right\\Vert ^{2}\\right) \t\n\\\\&amp;=\\sigma_{X}^{2}\n\\end{aligned}\n$$\n\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>公式的显示问题。Hexo中Mathjax是用于显示公式的插件，但是多行显示会出现问题，有时还会出现乱码的情况。</p>\n</blockquote>\n<h3 id=\"配置\">配置</h3>\n<p>在根目录下的config_fluid.yml​文件中打开math的相关配置。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-comment\"># 数学公式，开启之前需要更换 Markdown 渲染器，否则复杂公式会有兼容问题，具体请见：https://hexo.fluid-dev.com/docs/guide/##latex-数学公式</span><br><span class=\"hljs-comment\"># Mathematical formula. If enable, you need to change the Markdown renderer, see: https://hexo.fluid-dev.com/docs/en/guide/#math</span><br><span class=\"hljs-attr\">math:</span><br>  <span class=\"hljs-comment\"># 开启后文章默认可用，自定义页面如需使用，需在 Front-matter 中指定 `math: true`</span><br>  <span class=\"hljs-comment\"># If you want to use math on the custom page, you need to set `math: true` in Front-matter</span><br>  <span class=\"hljs-attr\">enable:</span> <span class=\"hljs-literal\">true</span><br><br>  <span class=\"hljs-comment\"># 开启后，只有在文章 Front-matter 里指定 `math: true` 才会在文章页启动公式转换，以便在页面不包含公式时提高加载速度</span><br>  <span class=\"hljs-comment\"># If true, only set `math: true` in Front-matter will enable math, to load faster when the page does not contain math</span><br>  <span class=\"hljs-attr\">specific:</span> <span class=\"hljs-literal\">true</span><br><br>  <span class=\"hljs-comment\"># Options: mathjax | katex</span><br>  <span class=\"hljs-attr\">engine:</span> <span class=\"hljs-string\">mathjax</span><br><br></code></pre></td></tr></table></figure>\n<h3 id=\"出现的问题\">出现的问题</h3>\n<h4 id=\"问题1\">问题1</h4>\n<ul>\n<li>由于hexo解码时关注，%% 等连续字符，会将这部分代码解读为其他带有特殊含义的内容</li>\n<li>如果公式中恰巧出现了此类字符，会报出上述错误</li>\n</ul>\n<h4 id=\"问题2\">问题2</h4>\n<ul>\n<li>由于hexo在公式中的<code>\\\\</code>错会成了转义符，也就是说他只看见了一个反斜杠，不会执行换行命令，导致公式堆成一行</li>\n</ul>\n<h3 id=\"解决方案\">解决方案</h3>\n<h4 id=\"临时方案\">临时方案</h4>\n<h5 id=\"针对问题1\">针对问题1</h5>\n<ul>\n<li>可以在连续的 <code>&#123;</code> <code>&#125;</code> <code>%</code>中间插入空格，分开就没事了</li>\n</ul>\n<h5 id=\"针对问题2\">针对问题2</h5>\n<ul>\n<li>可以将<code>\\\\</code>换成<code>\\\\\\\\</code>，可以实现公式的多行正确显示</li>\n</ul>\n<h4 id=\"终极方案\">终极方案</h4>\n<ul>\n<li>\n<p>在官方文档中提到了可以为hexo提供标记，阻止其按照自己的规则解释我们的字符串，显示其原本的含义</p>\n</li>\n<li>\n<p>标记为</p>\n<figure class=\"highlight django\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs django\"><span class=\"hljs-template-tag\">&#123;% <span class=\"hljs-name\">raw</span> %&#125;</span><span class=\"xml\"></span><br><span class=\"xml\">$$</span><br><span class=\"xml\">...</span><br><span class=\"xml\">$$</span><br><span class=\"xml\"></span><span class=\"hljs-template-tag\">&#123;% <span class=\"hljs-name\">endraw</span> %&#125;</span><br></code></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"多行显示和对齐\">多行显示和对齐</h3>\n<ul>\n<li>\n<p>默认是显示为一行要实现公式多行和对齐可以使用{aligned}模式，使用&quot;&amp;“来标记对齐位置。”\\\\&quot;表示换行</p>\n  <figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs taggerscript\">$$<br><span class=\"hljs-symbol\">\\b</span>egin&#123;aligned&#125;<br><span class=\"hljs-symbol\">\\b</span>oldsymbol&#123;x&#125;^&#123;<span class=\"hljs-symbol\">\\m</span>athrm&#123;T&#125;&#125;C<span class=\"hljs-symbol\">\\b</span>oldsymbol&#123;x&#125;\t&amp;=<span class=\"hljs-symbol\">\\b</span>oldsymbol&#123;x&#125;^&#123;<span class=\"hljs-symbol\">\\m</span>athrm&#123;T&#125;&#125;<span class=\"hljs-symbol\">\\m</span>athrm&#123;E&#125;<span class=\"hljs-symbol\">\\l</span>eft[<span class=\"hljs-symbol\">\\l</span>eft(X-<span class=\"hljs-symbol\">\\m</span>u<span class=\"hljs-symbol\">\\r</span>ight)<span class=\"hljs-symbol\">\\l</span>eft(X-<span class=\"hljs-symbol\">\\m</span>u<span class=\"hljs-symbol\">\\r</span>ight)^&#123;<span class=\"hljs-symbol\">\\m</span>athrm&#123;T&#125;&#125;<span class=\"hljs-symbol\">\\r</span>ight]<span class=\"hljs-symbol\">\\b</span>oldsymbol&#123;x&#125; \t<br><span class=\"hljs-symbol\">\\\\</span>&amp;=<span class=\"hljs-symbol\">\\m</span>athrm&#123;E&#125;<span class=\"hljs-symbol\">\\l</span>eft[<span class=\"hljs-symbol\">\\b</span>oldsymbol&#123;x&#125;^&#123;<span class=\"hljs-symbol\">\\m</span>athrm&#123;T&#125;&#125;<span class=\"hljs-symbol\">\\l</span>eft(X-<span class=\"hljs-symbol\">\\m</span>u<span class=\"hljs-symbol\">\\r</span>ight)<span class=\"hljs-symbol\">\\l</span>eft(X-<span class=\"hljs-symbol\">\\m</span>u<span class=\"hljs-symbol\">\\r</span>ight)^&#123;<span class=\"hljs-symbol\">\\m</span>athrm&#123;T&#125;&#125;<span class=\"hljs-symbol\">\\b</span>oldsymbol&#123;x&#125;<span class=\"hljs-symbol\">\\r</span>ight] \t<span class=\"hljs-symbol\">\\\\</span>&amp;=<span class=\"hljs-symbol\">\\m</span>athrm&#123;E&#125;<span class=\"hljs-symbol\">\\l</span>eft[<span class=\"hljs-symbol\">\\l</span>eft(<span class=\"hljs-symbol\">\\l</span>eft(X-<span class=\"hljs-symbol\">\\m</span>u<span class=\"hljs-symbol\">\\r</span>ight)^&#123;<span class=\"hljs-symbol\">\\m</span>athrm&#123;T&#125;&#125;<span class=\"hljs-symbol\">\\b</span>oldsymbol&#123;x&#125;<span class=\"hljs-symbol\">\\r</span>ight)^&#123;<span class=\"hljs-symbol\">\\m</span>athrm&#123;T&#125;&#125;<span class=\"hljs-symbol\">\\l</span>eft(<span class=\"hljs-symbol\">\\l</span>eft(X-<span class=\"hljs-symbol\">\\m</span>u<span class=\"hljs-symbol\">\\r</span>ight)^&#123;<span class=\"hljs-symbol\">\\m</span>athrm&#123;T&#125;&#125;<span class=\"hljs-symbol\">\\b</span>oldsymbol&#123;x&#125;<span class=\"hljs-symbol\">\\r</span>ight)<span class=\"hljs-symbol\">\\r</span>ight] \t<br><span class=\"hljs-symbol\">\\\\</span>&amp;=<span class=\"hljs-symbol\">\\m</span>athrm&#123;E&#125;<span class=\"hljs-symbol\">\\l</span>eft(<span class=\"hljs-symbol\">\\l</span>eft<span class=\"hljs-symbol\">\\V</span>ert <span class=\"hljs-symbol\">\\l</span>eft(X-<span class=\"hljs-symbol\">\\m</span>u<span class=\"hljs-symbol\">\\r</span>ight)^&#123;<span class=\"hljs-symbol\">\\m</span>athrm&#123;T&#125;&#125;<span class=\"hljs-symbol\">\\b</span>oldsymbol&#123;x&#125;<span class=\"hljs-symbol\">\\r</span>ight<span class=\"hljs-symbol\">\\V</span>ert ^&#123;2&#125;<span class=\"hljs-symbol\">\\r</span>ight) \t<br><span class=\"hljs-symbol\">\\\\</span>&amp;=<span class=\"hljs-symbol\">\\s</span>igma_&#123;X&#125;^&#123;2&#125;<br><span class=\"hljs-symbol\">\\e</span>nd&#123;aligned&#125;<br>$$<br></code></pre></td></tr></table></figure>\n</li>\n<li>\n<p>显示为</p>\n</li>\n</ul>\n\n$$\n\\begin{aligned}\n\\boldsymbol{x}^{\\mathrm{T}}C\\boldsymbol{x}\t&=\\boldsymbol{x}^{\\mathrm{T}}\\mathrm{E}\\left[\\left(X-\\mu\\right)\\left(X-\\mu\\right)^{\\mathrm{T}}\\right]\\boldsymbol{x} \t\n\\\\&=\\mathrm{E}\\left[\\boldsymbol{x}^{\\mathrm{T}}\\left(X-\\mu\\right)\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right] \t\\\\&=\\mathrm{E}\\left[\\left(\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right)^{\\mathrm{T}}\\left(\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right)\\right] \t\n\\\\&=\\mathrm{E}\\left(\\left\\Vert \\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right\\Vert ^{2}\\right) \t\n\\\\&=\\sigma_{X}^{2}\n\\end{aligned}\n$$\n\n"},{"title":"docker相关命令","date":"2021-08-10T07:15:16.000Z","_content":"\n>简要介绍Docker，记录Docker常用命令使用方法。\n>\n>搬运自师兄的博客 又见苍岚 ：https://www.zywvvd.com/2020/05/06/docker/docker_usage/\n\n### Docker 简介\n\n> **Docker 属于 Linux 容器的一种封装，提供简单易用的容器使用接口。**Docker 将应用程序与该程序的依赖，打包在一个文件里面。运行这个文件，就会生成一个虚拟容器。程序在这个虚拟容器里运行，就好像在真实的物理机上运行一样。有了 Docker，就不用担心环境问题。\n\n### Docker 使用流程\n\n- [安装docker](https://docs.docker.com/desktop/)\n- 创建Image\n- 从Image创建Container\n- 在Container中工作\n- 将在Container中做的修改提交给Image\n- 销毁Container\n\n### 命令介绍\n\n- 拉取 image\n\n```\ndocker image pull [docker-url]\n```\n\n- 获取docker images 列表\n\n```\ndocker images\n或\ndocker image ls\n```\n\n- 建立container （nvidia docker)\n\n```\nNV_GPU=[gpu_num] nvidia-docker run -it --name [container_name] --shm-size=[shm_size] --rm -v [current_dir]:[container_dir] -p [current_port]:[container_port] [image_name]:[image_tag]  [command] \n```\n实例：\n```\nnvidia-docker run -it --name mlfan --shm-size=10g -v /disk/fanmeilin:/workspace/fanmeilin -p 12345:22 -p 12346:8080 -p 12347:5678 tf-1.14-2.0-2.1:1.0 bash\n```\n<font color=SlateBlue size=4>注意不要加 --rm  否则载在container stop之后会自动删除此容器</font>\n\n> NV_GPU: container中可见的GPU，如果不设置可见所有GPU\n>\n> -it: 将容器的 Shell 映射到当前的 Shell，然后你在本机窗口输入的命令，就会传入容器\n>\n> –name: 容器名称，如果不设置会随机分配一个名字\n>\n> –shm-size: 容器共享内存大小设置。如果不设置默认大小64M，对于需要使用共享内存的情况往往是不够用的，如果设置为10g，这样配置： `--ssh-size=\"10g\"`\n>\n> –rm: 容器关闭后自动删除，如果不设置容器不会自动删除\n>\n> -v: 驱动器映射，将本机的目录映射到容器的指定文件夹中；需要说明的是，在主机文件夹中的挂载目录在容器中是可见的；需要再说明的是容器启动时主机挂载的目录容器是见不到的；最后说明，容器关闭再打开就可以看到主机挂载的所有文件夹了。\n>\n> -p: 暴漏容器的端口到本机的端口上，例如用于ssh连接容器时需要将容器的22端口暴露到主机的端口上(比如3721)，则可以设置 `-p 3721:22`\n>\n> image_name, image_tag: 这是docker镜像的名称与标记，如果使用本机镜像可以在docker images列表中查询到\n>\n> command: 启动容器后内部执行的第一个命令，一般为 `/bin/bash`\n\n- 查询container列表\n\n```\ndocker container ls --all\n```\n\n> –all: 加上该参数会显示没有在运行的容器，不加的话仅显示运行中的容器\n\n- 停止指定的容器运行\n\n```\ndocker container kill [containerID]\ndocker stop [containerID]\n```\n\n> `docker container kill`命令终止容器运行，相当于向容器里面的主进程发出 SIGKILL 信号。`docker container stop`命令相当于向容器里面的主进程发出 SIGTERM 信号，然后过一段时间再发出 SIGKILL 信号。\n\n- 启动停止的容器\n\n```\ndocker start [containerID]\n```\n\n- 重启运行的容器\n\n```\ndocker restart [containerID]\n```\n\n- 删除指定的容器文件（仅在停止运行时可用）\n\n```\ndocker container rm [containerID]\n```\n\n- 查看容器输出\n\n```\ndocker container logs [containerID]\n```\n\n- 启动容器的一个终端\n\n```\ndocker exec -it [containerID] /bin/bash\n```\n\n> 此种方法启动的终端，即使退出也不会关闭容器\n>\n> 相反 - 如果直接通过端口映射连接 docker 建立的ssh链接，窗口退出后该终端的工作也会一同停止\n\n- 进入容器的主终端\n\n```\ndocker attach [containerID]\n```\n\n> 连接到容器的主终端，该终端退出后容器关闭。\n>\n> 如果不希望退出后关闭，可以加入选项 `--sig-proxy=false`\n\n- 退出终端\n\n```\nctrl p + ctrl q\n```\n\n> 可以在退出终端的同时保持终端继续工作\n\n- 退出容器\n\n```\nexit\n```\n\n> 在容器中运行此命令\n\n- 拷贝容器里的文件到本机\n\n```\ndocker container cp [containerID]:[/path/to/file]\n```\n\n- 提交容器修改到镜像\n\n```\ndocker commit -a [name] -m [comments] -p  [containerID[:TAG]]\n```\n\n> -a: 提交的镜像作者\n>\n> -m: 提交时的说明文字\n>\n> -p: 在commit时，将容器暂停\n\n- 删除镜像\n\n```\ndocker rmi [image]\n```\n\n> 或\n\n```\ndocker image rm [image]\n```\n\n> 支持的子命令如下：\n\n- `-f, -force`: 强制删除镜像，即便有容器引用该镜像；\n- `-no-prune`: 不要删除未带标签的父镜像；\n\n### 参考资料\n\n- http://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html\n- https://www.runoob.com/docker/docker-tutorial.html\n","source":"_posts/docker/docker-intro.md","raw":"---\ntitle: docker相关命令\ndate: 2021-08-10 15:15:16\ntags: [docker,远程配置]\ncategories: docker\n---\n\n>简要介绍Docker，记录Docker常用命令使用方法。\n>\n>搬运自师兄的博客 又见苍岚 ：https://www.zywvvd.com/2020/05/06/docker/docker_usage/\n\n### Docker 简介\n\n> **Docker 属于 Linux 容器的一种封装，提供简单易用的容器使用接口。**Docker 将应用程序与该程序的依赖，打包在一个文件里面。运行这个文件，就会生成一个虚拟容器。程序在这个虚拟容器里运行，就好像在真实的物理机上运行一样。有了 Docker，就不用担心环境问题。\n\n### Docker 使用流程\n\n- [安装docker](https://docs.docker.com/desktop/)\n- 创建Image\n- 从Image创建Container\n- 在Container中工作\n- 将在Container中做的修改提交给Image\n- 销毁Container\n\n### 命令介绍\n\n- 拉取 image\n\n```\ndocker image pull [docker-url]\n```\n\n- 获取docker images 列表\n\n```\ndocker images\n或\ndocker image ls\n```\n\n- 建立container （nvidia docker)\n\n```\nNV_GPU=[gpu_num] nvidia-docker run -it --name [container_name] --shm-size=[shm_size] --rm -v [current_dir]:[container_dir] -p [current_port]:[container_port] [image_name]:[image_tag]  [command] \n```\n实例：\n```\nnvidia-docker run -it --name mlfan --shm-size=10g -v /disk/fanmeilin:/workspace/fanmeilin -p 12345:22 -p 12346:8080 -p 12347:5678 tf-1.14-2.0-2.1:1.0 bash\n```\n<font color=SlateBlue size=4>注意不要加 --rm  否则载在container stop之后会自动删除此容器</font>\n\n> NV_GPU: container中可见的GPU，如果不设置可见所有GPU\n>\n> -it: 将容器的 Shell 映射到当前的 Shell，然后你在本机窗口输入的命令，就会传入容器\n>\n> –name: 容器名称，如果不设置会随机分配一个名字\n>\n> –shm-size: 容器共享内存大小设置。如果不设置默认大小64M，对于需要使用共享内存的情况往往是不够用的，如果设置为10g，这样配置： `--ssh-size=\"10g\"`\n>\n> –rm: 容器关闭后自动删除，如果不设置容器不会自动删除\n>\n> -v: 驱动器映射，将本机的目录映射到容器的指定文件夹中；需要说明的是，在主机文件夹中的挂载目录在容器中是可见的；需要再说明的是容器启动时主机挂载的目录容器是见不到的；最后说明，容器关闭再打开就可以看到主机挂载的所有文件夹了。\n>\n> -p: 暴漏容器的端口到本机的端口上，例如用于ssh连接容器时需要将容器的22端口暴露到主机的端口上(比如3721)，则可以设置 `-p 3721:22`\n>\n> image_name, image_tag: 这是docker镜像的名称与标记，如果使用本机镜像可以在docker images列表中查询到\n>\n> command: 启动容器后内部执行的第一个命令，一般为 `/bin/bash`\n\n- 查询container列表\n\n```\ndocker container ls --all\n```\n\n> –all: 加上该参数会显示没有在运行的容器，不加的话仅显示运行中的容器\n\n- 停止指定的容器运行\n\n```\ndocker container kill [containerID]\ndocker stop [containerID]\n```\n\n> `docker container kill`命令终止容器运行，相当于向容器里面的主进程发出 SIGKILL 信号。`docker container stop`命令相当于向容器里面的主进程发出 SIGTERM 信号，然后过一段时间再发出 SIGKILL 信号。\n\n- 启动停止的容器\n\n```\ndocker start [containerID]\n```\n\n- 重启运行的容器\n\n```\ndocker restart [containerID]\n```\n\n- 删除指定的容器文件（仅在停止运行时可用）\n\n```\ndocker container rm [containerID]\n```\n\n- 查看容器输出\n\n```\ndocker container logs [containerID]\n```\n\n- 启动容器的一个终端\n\n```\ndocker exec -it [containerID] /bin/bash\n```\n\n> 此种方法启动的终端，即使退出也不会关闭容器\n>\n> 相反 - 如果直接通过端口映射连接 docker 建立的ssh链接，窗口退出后该终端的工作也会一同停止\n\n- 进入容器的主终端\n\n```\ndocker attach [containerID]\n```\n\n> 连接到容器的主终端，该终端退出后容器关闭。\n>\n> 如果不希望退出后关闭，可以加入选项 `--sig-proxy=false`\n\n- 退出终端\n\n```\nctrl p + ctrl q\n```\n\n> 可以在退出终端的同时保持终端继续工作\n\n- 退出容器\n\n```\nexit\n```\n\n> 在容器中运行此命令\n\n- 拷贝容器里的文件到本机\n\n```\ndocker container cp [containerID]:[/path/to/file]\n```\n\n- 提交容器修改到镜像\n\n```\ndocker commit -a [name] -m [comments] -p  [containerID[:TAG]]\n```\n\n> -a: 提交的镜像作者\n>\n> -m: 提交时的说明文字\n>\n> -p: 在commit时，将容器暂停\n\n- 删除镜像\n\n```\ndocker rmi [image]\n```\n\n> 或\n\n```\ndocker image rm [image]\n```\n\n> 支持的子命令如下：\n\n- `-f, -force`: 强制删除镜像，即便有容器引用该镜像；\n- `-no-prune`: 不要删除未带标签的父镜像；\n\n### 参考资料\n\n- http://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html\n- https://www.runoob.com/docker/docker-tutorial.html\n","slug":"docker/docker-intro","published":1,"updated":"2021-08-14T10:08:10.536Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxoc6000bugx441l531cf","content":"<blockquote>\n<p>简要介绍Docker，记录Docker常用命令使用方法。</p>\n<p>搬运自师兄的博客 又见苍岚 ：<a href=\"https://www.zywvvd.com/2020/05/06/docker/docker_usage/\">https://www.zywvvd.com/2020/05/06/docker/docker_usage/</a></p>\n</blockquote>\n<h3 id=\"Docker-简介\">Docker 简介</h3>\n<blockquote>\n<p>**Docker 属于 Linux 容器的一种封装，提供简单易用的容器使用接口。**Docker 将应用程序与该程序的依赖，打包在一个文件里面。运行这个文件，就会生成一个虚拟容器。程序在这个虚拟容器里运行，就好像在真实的物理机上运行一样。有了 Docker，就不用担心环境问题。</p>\n</blockquote>\n<h3 id=\"Docker-使用流程\">Docker 使用流程</h3>\n<ul>\n<li><a href=\"https://docs.docker.com/desktop/\">安装docker</a></li>\n<li>创建Image</li>\n<li>从Image创建Container</li>\n<li>在Container中工作</li>\n<li>将在Container中做的修改提交给Image</li>\n<li>销毁Container</li>\n</ul>\n<h3 id=\"命令介绍\">命令介绍</h3>\n<ul>\n<li>拉取 image</li>\n</ul>\n<figure class=\"highlight apache\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">docker</span> image pull<span class=\"hljs-meta\"> [docker-url]</span><br></code></pre></td></tr></tbody></table></figure>\n<ul>\n<li>获取docker images 列表</li>\n</ul>\n<figure class=\"highlight mel\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mel\">docker images<br>或<br>docker <span class=\"hljs-keyword\">image</span> <span class=\"hljs-keyword\">ls</span><br></code></pre></td></tr></tbody></table></figure>\n<ul>\n<li>建立container （nvidia docker)</li>\n</ul>\n<figure class=\"highlight stylus\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\">NV_GPU=<span class=\"hljs-selector-attr\">[gpu_num]</span> nvidia-docker run -it --name <span class=\"hljs-selector-attr\">[container_name]</span> --shm-size=<span class=\"hljs-selector-attr\">[shm_size]</span> --rm -v <span class=\"hljs-selector-attr\">[current_dir]</span>:<span class=\"hljs-selector-attr\">[container_dir]</span> -<span class=\"hljs-selector-tag\">p</span> <span class=\"hljs-selector-attr\">[current_port]</span>:<span class=\"hljs-selector-attr\">[container_port]</span> <span class=\"hljs-selector-attr\">[image_name]</span>:<span class=\"hljs-selector-attr\">[image_tag]</span>  <span class=\"hljs-selector-attr\">[command]</span> <br></code></pre></td></tr></tbody></table></figure>\n<p>实例：</p>\n<figure class=\"highlight apache\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">nvidia</span>-docker run -it --name mlfan --shm-size=<span class=\"hljs-number\">10</span>g -v /disk/fanmeilin:/workspace/fanmeilin -p <span class=\"hljs-number\">12345</span>:<span class=\"hljs-number\">22</span> -p <span class=\"hljs-number\">12346</span>:<span class=\"hljs-number\">8080</span> -p <span class=\"hljs-number\">12347</span>:<span class=\"hljs-number\">5678</span> tf-<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">14</span>-<span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">1</span>:<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">0</span> bash<br></code></pre></td></tr></tbody></table></figure>\n<p><font color=\"SlateBlue\" size=\"4\">注意不要加 --rm&nbsp; 否则载在container stop之后会自动删除此容器</font></p>\n<blockquote>\n<p>NV_GPU: container中可见的GPU，如果不设置可见所有GPU</p>\n<p>-it: 将容器的 Shell 映射到当前的 Shell，然后你在本机窗口输入的命令，就会传入容器</p>\n<p>–name: 容器名称，如果不设置会随机分配一个名字</p>\n<p>–shm-size: 容器共享内存大小设置。如果不设置默认大小64M，对于需要使用共享内存的情况往往是不够用的，如果设置为10g，这样配置： <code>--ssh-size=\"10g\"</code></p>\n<p>–rm: 容器关闭后自动删除，如果不设置容器不会自动删除</p>\n<p>-v: 驱动器映射，将本机的目录映射到容器的指定文件夹中；需要说明的是，在主机文件夹中的挂载目录在容器中是可见的；需要再说明的是容器启动时主机挂载的目录容器是见不到的；最后说明，容器关闭再打开就可以看到主机挂载的所有文件夹了。</p>\n<p>-p: 暴漏容器的端口到本机的端口上，例如用于ssh连接容器时需要将容器的22端口暴露到主机的端口上(比如3721)，则可以设置 <code>-p 3721:22</code></p>\n<p>image_name, image_tag: 这是docker镜像的名称与标记，如果使用本机镜像可以在docker images列表中查询到</p>\n<p>command: 启动容器后内部执行的第一个命令，一般为 <code>/bin/bash</code></p>\n</blockquote>\n<ul>\n<li>查询container列表</li>\n</ul>\n<figure class=\"highlight jboss-cli\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs jboss-cli\">docker container <span class=\"hljs-keyword\">ls</span> <span class=\"hljs-params\">--all</span><br></code></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>–all: 加上该参数会显示没有在运行的容器，不加的话仅显示运行中的容器</p>\n</blockquote>\n<ul>\n<li>停止指定的容器运行</li>\n</ul>\n<figure class=\"highlight inform7\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs inform7\">docker <span class=\"hljs-keyword\">container</span> kill <span class=\"hljs-comment\">[containerID]</span><br>docker stop <span class=\"hljs-comment\">[containerID]</span><br></code></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p><code>docker container kill</code>命令终止容器运行，相当于向容器里面的主进程发出 SIGKILL 信号。<code>docker container stop</code>命令相当于向容器里面的主进程发出 SIGTERM 信号，然后过一段时间再发出 SIGKILL 信号。</p>\n</blockquote>\n<ul>\n<li>启动停止的容器</li>\n</ul>\n<figure class=\"highlight apache\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">docker</span> start<span class=\"hljs-meta\"> [containerID]</span><br></code></pre></td></tr></tbody></table></figure>\n<ul>\n<li>重启运行的容器</li>\n</ul>\n<figure class=\"highlight apache\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">docker</span> restart<span class=\"hljs-meta\"> [containerID]</span><br></code></pre></td></tr></tbody></table></figure>\n<ul>\n<li>删除指定的容器文件（仅在停止运行时可用）</li>\n</ul>\n<figure class=\"highlight inform7\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs inform7\">docker <span class=\"hljs-keyword\">container</span> rm <span class=\"hljs-comment\">[containerID]</span><br></code></pre></td></tr></tbody></table></figure>\n<ul>\n<li>查看容器输出</li>\n</ul>\n<figure class=\"highlight inform7\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs inform7\">docker <span class=\"hljs-keyword\">container</span> logs <span class=\"hljs-comment\">[containerID]</span><br></code></pre></td></tr></tbody></table></figure>\n<ul>\n<li>启动容器的一个终端</li>\n</ul>\n<figure class=\"highlight awk\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">docker exec -it [containerID] <span class=\"hljs-regexp\">/bin/</span>bash<br></code></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>此种方法启动的终端，即使退出也不会关闭容器</p>\n<p>相反 - 如果直接通过端口映射连接 docker 建立的ssh链接，窗口退出后该终端的工作也会一同停止</p>\n</blockquote>\n<ul>\n<li>进入容器的主终端</li>\n</ul>\n<figure class=\"highlight apache\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">docker</span> attach<span class=\"hljs-meta\"> [containerID]</span><br></code></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>连接到容器的主终端，该终端退出后容器关闭。</p>\n<p>如果不希望退出后关闭，可以加入选项 <code>--sig-proxy=false</code></p>\n</blockquote>\n<ul>\n<li>退出终端</li>\n</ul>\n<figure class=\"highlight css\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">ctrl <span class=\"hljs-selector-tag\">p</span> + ctrl <span class=\"hljs-selector-tag\">q</span><br></code></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>可以在退出终端的同时保持终端继续工作</p>\n</blockquote>\n<ul>\n<li>退出容器</li>\n</ul>\n<figure class=\"highlight awk\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-keyword\">exit</span><br></code></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>在容器中运行此命令</p>\n</blockquote>\n<ul>\n<li>拷贝容器里的文件到本机</li>\n</ul>\n<figure class=\"highlight gradle\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gradle\">docker container cp [containerID]:[<span class=\"hljs-regexp\">/path/</span>to/<span class=\"hljs-keyword\">file</span>]<br></code></pre></td></tr></tbody></table></figure>\n<ul>\n<li>提交容器修改到镜像</li>\n</ul>\n<figure class=\"highlight css\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">docker commit -<span class=\"hljs-selector-tag\">a</span> <span class=\"hljs-selector-attr\">[name]</span> -m <span class=\"hljs-selector-attr\">[comments]</span> -<span class=\"hljs-selector-tag\">p</span>  <span class=\"hljs-selector-attr\">[containerID[:TAG]</span>]<br></code></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>-a: 提交的镜像作者</p>\n<p>-m: 提交时的说明文字</p>\n<p>-p: 在commit时，将容器暂停</p>\n</blockquote>\n<ul>\n<li>删除镜像</li>\n</ul>\n<figure class=\"highlight apache\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">docker</span> rmi<span class=\"hljs-meta\"> [image]</span><br></code></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>或</p>\n</blockquote>\n<figure class=\"highlight arduino\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs arduino\">docker image rm [image]<br></code></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>支持的子命令如下：</p>\n</blockquote>\n<ul>\n<li><code>-f, -force</code>: 强制删除镜像，即便有容器引用该镜像；</li>\n<li><code>-no-prune</code>: 不要删除未带标签的父镜像；</li>\n</ul>\n<h3 id=\"参考资料\">参考资料</h3>\n<ul>\n<li><a href=\"http://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html\">http://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html</a></li>\n<li><a href=\"https://www.runoob.com/docker/docker-tutorial.html\">https://www.runoob.com/docker/docker-tutorial.html</a></li>\n</ul>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>简要介绍Docker，记录Docker常用命令使用方法。</p>\n<p>搬运自师兄的博客 又见苍岚 ：<a href=\"https://www.zywvvd.com/2020/05/06/docker/docker_usage/\">https://www.zywvvd.com/2020/05/06/docker/docker_usage/</a></p>\n</blockquote>\n<h3 id=\"Docker-简介\">Docker 简介</h3>\n<blockquote>\n<p>**Docker 属于 Linux 容器的一种封装，提供简单易用的容器使用接口。**Docker 将应用程序与该程序的依赖，打包在一个文件里面。运行这个文件，就会生成一个虚拟容器。程序在这个虚拟容器里运行，就好像在真实的物理机上运行一样。有了 Docker，就不用担心环境问题。</p>\n</blockquote>\n<h3 id=\"Docker-使用流程\">Docker 使用流程</h3>\n<ul>\n<li><a href=\"https://docs.docker.com/desktop/\">安装docker</a></li>\n<li>创建Image</li>\n<li>从Image创建Container</li>\n<li>在Container中工作</li>\n<li>将在Container中做的修改提交给Image</li>\n<li>销毁Container</li>\n</ul>\n<h3 id=\"命令介绍\">命令介绍</h3>\n<ul>\n<li>拉取 image</li>\n</ul>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">docker</span> image pull<span class=\"hljs-meta\"> [docker-url]</span><br></code></pre></td></tr></table></figure>\n<ul>\n<li>获取docker images 列表</li>\n</ul>\n<figure class=\"highlight mel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mel\">docker images<br>或<br>docker <span class=\"hljs-keyword\">image</span> <span class=\"hljs-keyword\">ls</span><br></code></pre></td></tr></table></figure>\n<ul>\n<li>建立container （nvidia docker)</li>\n</ul>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\">NV_GPU=<span class=\"hljs-selector-attr\">[gpu_num]</span> nvidia-docker run -it --name <span class=\"hljs-selector-attr\">[container_name]</span> --shm-size=<span class=\"hljs-selector-attr\">[shm_size]</span> --rm -v <span class=\"hljs-selector-attr\">[current_dir]</span>:<span class=\"hljs-selector-attr\">[container_dir]</span> -<span class=\"hljs-selector-tag\">p</span> <span class=\"hljs-selector-attr\">[current_port]</span>:<span class=\"hljs-selector-attr\">[container_port]</span> <span class=\"hljs-selector-attr\">[image_name]</span>:<span class=\"hljs-selector-attr\">[image_tag]</span>  <span class=\"hljs-selector-attr\">[command]</span> <br></code></pre></td></tr></table></figure>\n<p>实例：</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">nvidia</span>-docker run -it --name mlfan --shm-size=<span class=\"hljs-number\">10</span>g -v /disk/fanmeilin:/workspace/fanmeilin -p <span class=\"hljs-number\">12345</span>:<span class=\"hljs-number\">22</span> -p <span class=\"hljs-number\">12346</span>:<span class=\"hljs-number\">8080</span> -p <span class=\"hljs-number\">12347</span>:<span class=\"hljs-number\">5678</span> tf-<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">14</span>-<span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">1</span>:<span class=\"hljs-number\">1</span>.<span class=\"hljs-number\">0</span> bash<br></code></pre></td></tr></table></figure>\n<p><font color=SlateBlue size=4>注意不要加 --rm  否则载在container stop之后会自动删除此容器</font></p>\n<blockquote>\n<p>NV_GPU: container中可见的GPU，如果不设置可见所有GPU</p>\n<p>-it: 将容器的 Shell 映射到当前的 Shell，然后你在本机窗口输入的命令，就会传入容器</p>\n<p>–name: 容器名称，如果不设置会随机分配一个名字</p>\n<p>–shm-size: 容器共享内存大小设置。如果不设置默认大小64M，对于需要使用共享内存的情况往往是不够用的，如果设置为10g，这样配置： <code>--ssh-size=&quot;10g&quot;</code></p>\n<p>–rm: 容器关闭后自动删除，如果不设置容器不会自动删除</p>\n<p>-v: 驱动器映射，将本机的目录映射到容器的指定文件夹中；需要说明的是，在主机文件夹中的挂载目录在容器中是可见的；需要再说明的是容器启动时主机挂载的目录容器是见不到的；最后说明，容器关闭再打开就可以看到主机挂载的所有文件夹了。</p>\n<p>-p: 暴漏容器的端口到本机的端口上，例如用于ssh连接容器时需要将容器的22端口暴露到主机的端口上(比如3721)，则可以设置 <code>-p 3721:22</code></p>\n<p>image_name, image_tag: 这是docker镜像的名称与标记，如果使用本机镜像可以在docker images列表中查询到</p>\n<p>command: 启动容器后内部执行的第一个命令，一般为 <code>/bin/bash</code></p>\n</blockquote>\n<ul>\n<li>查询container列表</li>\n</ul>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs jboss-cli\">docker container <span class=\"hljs-keyword\">ls</span> <span class=\"hljs-params\">--all</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>–all: 加上该参数会显示没有在运行的容器，不加的话仅显示运行中的容器</p>\n</blockquote>\n<ul>\n<li>停止指定的容器运行</li>\n</ul>\n<figure class=\"highlight inform7\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs inform7\">docker <span class=\"hljs-keyword\">container</span> kill <span class=\"hljs-comment\">[containerID]</span><br>docker stop <span class=\"hljs-comment\">[containerID]</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<p><code>docker container kill</code>命令终止容器运行，相当于向容器里面的主进程发出 SIGKILL 信号。<code>docker container stop</code>命令相当于向容器里面的主进程发出 SIGTERM 信号，然后过一段时间再发出 SIGKILL 信号。</p>\n</blockquote>\n<ul>\n<li>启动停止的容器</li>\n</ul>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">docker</span> start<span class=\"hljs-meta\"> [containerID]</span><br></code></pre></td></tr></table></figure>\n<ul>\n<li>重启运行的容器</li>\n</ul>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">docker</span> restart<span class=\"hljs-meta\"> [containerID]</span><br></code></pre></td></tr></table></figure>\n<ul>\n<li>删除指定的容器文件（仅在停止运行时可用）</li>\n</ul>\n<figure class=\"highlight inform7\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs inform7\">docker <span class=\"hljs-keyword\">container</span> rm <span class=\"hljs-comment\">[containerID]</span><br></code></pre></td></tr></table></figure>\n<ul>\n<li>查看容器输出</li>\n</ul>\n<figure class=\"highlight inform7\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs inform7\">docker <span class=\"hljs-keyword\">container</span> logs <span class=\"hljs-comment\">[containerID]</span><br></code></pre></td></tr></table></figure>\n<ul>\n<li>启动容器的一个终端</li>\n</ul>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">docker exec -it [containerID] <span class=\"hljs-regexp\">/bin/</span>bash<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>此种方法启动的终端，即使退出也不会关闭容器</p>\n<p>相反 - 如果直接通过端口映射连接 docker 建立的ssh链接，窗口退出后该终端的工作也会一同停止</p>\n</blockquote>\n<ul>\n<li>进入容器的主终端</li>\n</ul>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">docker</span> attach<span class=\"hljs-meta\"> [containerID]</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>连接到容器的主终端，该终端退出后容器关闭。</p>\n<p>如果不希望退出后关闭，可以加入选项 <code>--sig-proxy=false</code></p>\n</blockquote>\n<ul>\n<li>退出终端</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">ctrl <span class=\"hljs-selector-tag\">p</span> + ctrl <span class=\"hljs-selector-tag\">q</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>可以在退出终端的同时保持终端继续工作</p>\n</blockquote>\n<ul>\n<li>退出容器</li>\n</ul>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-keyword\">exit</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>在容器中运行此命令</p>\n</blockquote>\n<ul>\n<li>拷贝容器里的文件到本机</li>\n</ul>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gradle\">docker container cp [containerID]:[<span class=\"hljs-regexp\">/path/</span>to/<span class=\"hljs-keyword\">file</span>]<br></code></pre></td></tr></table></figure>\n<ul>\n<li>提交容器修改到镜像</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">docker commit -<span class=\"hljs-selector-tag\">a</span> <span class=\"hljs-selector-attr\">[name]</span> -m <span class=\"hljs-selector-attr\">[comments]</span> -<span class=\"hljs-selector-tag\">p</span>  <span class=\"hljs-selector-attr\">[containerID[:TAG]</span>]<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>-a: 提交的镜像作者</p>\n<p>-m: 提交时的说明文字</p>\n<p>-p: 在commit时，将容器暂停</p>\n</blockquote>\n<ul>\n<li>删除镜像</li>\n</ul>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">docker</span> rmi<span class=\"hljs-meta\"> [image]</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>或</p>\n</blockquote>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs arduino\">docker image rm [image]<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>支持的子命令如下：</p>\n</blockquote>\n<ul>\n<li><code>-f, -force</code>: 强制删除镜像，即便有容器引用该镜像；</li>\n<li><code>-no-prune</code>: 不要删除未带标签的父镜像；</li>\n</ul>\n<h3 id=\"参考资料\">参考资料</h3>\n<ul>\n<li><a href=\"http://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html\">http://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html</a></li>\n<li><a href=\"https://www.runoob.com/docker/docker-tutorial.html\">https://www.runoob.com/docker/docker-tutorial.html</a></li>\n</ul>\n"},{"title":"docker的ssh相关配置","date":"2021-08-10T09:07:14.000Z","_content":"\n>参考师兄博客：https://www.zywvvd.com/2020/11/02/windows/win_ssh_linux_docker/win_ssh_linux_docker/\n\n> ssh是较可靠，专为远程登录会话和其他网络服务提供安全性的协议，广泛用于远程登录的场景，也是远程调试代码的神兵利器。在开发中经常会在服务器启动自己的 docker 容器进行开发，又需要调试代码，vim的调试环境配置起来门槛又太高。于是就有了使用Windows直接ssh打通docker进行调试的需求。本文记录Windows远程登录Linux服务器docker容器的方法。\n\n## 环境说明\n\n- 登录主机操作系统 Win 10\n- 被登录主机操作系统 docker container in Linux\n- 主机与被登录主机（此处指服务器，不是docker）网络联通，IP在同一网段\n- 服务器与docker的IP在同一网段\n\n## 配置方法\n\n### 建立docker与Linux服务器的端口映射\n\n> ssh协议链接时默认使用22端口，Windows与docker的端口往往不能直接进行映射（很可能不在一个网段），因此需要将docker的22端口映射到Linux服务器的某个端口，此时需要在建立docker容器时进行[配置](https://www.zywvvd.com/2020/05/14/coding/environment/wingide-remote-docker/wingide-remote-docker/#docker配置)：\n\n```\n$ docker run -it --name vvd -p 3721:22 -v /root/tmp:/root/tmp my_docker bash\n```\n\n- 其中 `-p` 的部分表示将本机（服务器）的3721端口映射到容器的22端口。\n\n### 容器内部安装ssh服务\n\n> 需要在被登录的容器内部建立并启动ssh服务。\n\n- 首先需要安装：\n\n```\napt-get update\napt-get install openssh-server\napt-get install openssh-client\n```\n\n- 安装完成后需要容器每次启动时自动运行相关服务，可以在 `~/.bashrc`中加入：\n\n```\n/etc/init.d/ssh start\n```\n\n> 这样就保证了docker容器自动启动该服务。\n\n- 查看ssh运行状态\n\n```\n/etc/init.d/ssh status\n```\n\n> 如果是 `* sshd is running` 说明ssh正常运行\n\n### 修改容器内root用户登录设置\n\n> 有的容器默认不支持root用户远程使用ssh协议进行密码登录的，此时需要更改设置。\n\n- 打开 `/etc/ssh/sshd_config`文件：\n\n```\n# PermitRootLogin prohibit-password # 默认打开 禁止root用户使用密码登陆，需要将其注释\nRSAAuthentication yes #启用 RSA 认证\nPubkeyAuthentication yes #启用公钥私钥配对认证方式\nPermitRootLogin yes #允许root用户使用ssh登录\n```\n\n- 将 `PermitRootLogin` 设置为 yes\n\n### 修改root密码\n\n> 远程登录时需要使用系统的用户密码，我们就直接使用root用户登录好了，需要设置新建容器的密码：\n\n```\npasswd root\n```\n\n### 设置SSH\n\n- [本地生成ssh key](https://www.zywvvd.com/2020/02/23/git/link_github/Git-connect-remote-pos/#创建SSH密钥)\n- 将.pub 内容复制粘贴加入到远程 ~/.ssh/authorized_keys\n\n### SSH连接服务器\n\n> 需要用户名（被登录端用户）与被登录的主机ip和端口号\n>\n> 例如： 用户名- root ip：192.168.10.12 端口映射为 3721\n\n- linux\n\n```\nssh root@192.168.10.12:3721\n```\n\n- Windows\n\n```\nssh -p 3721 root@192.168.10.12\n```\n\n![](https://photos.zywvvd.com/images_matrixtime/20201102200256.png)\n\n- 如果不清楚Linux系统端口映射配置情况：\n\n```\niptables -t nat -L -n\n```\n\n### X-shell配置\n\n> 命令行ssh登录成功后就可以在X-shell中建立配置信息方便地连接了。\n\n- 新建会话，填写名称、IP、端口号（我们刚刚配置过的）：\n\n![](https://photos.zywvvd.com/images_matrixtime/20201102200522.png)\n\n- 用户身份认证，填入用户名密码（刚刚配置过的）：\n\n![](https://photos.zywvvd.com/images_matrixtime/20201102200640.png)\n\n- 随后就可以使用该会话直接登录docker容器了，为远程调试打下了坚实的基础：\n\n![](https://photos.zywvvd.com/images_matrixtime/20201102200804.png)\n\n### 填坑\n\n- ssh: Could not resolve hostname 192.168.10.12:3721: Name or service not known\n\n  > 这是在Windows中使用了Linux格式的SSH登录命令导致的解析错误\n  >\n  > 将命令语法更换为Windows的格式即可\n\n- root 用户无论如何密码不被接受\n\n  > 需要在被登录主机 /etc/ssh/sshd_config 中设置：\n  >\n  > ```\n  > # PermitRootLogin prohibit-password # 默认打开 禁止root用户使用密码登陆，需要将其注释\n  > RSAAuthentication yes #启用 RSA 认证\n  > PubkeyAuthentication yes #启用公钥私钥配对认证方式\n  > PermitRootLogin yes #允许root用户使用ssh登录\n  > ```\n  >\n  > - 重点：**PermitRootLogin yes**\n\n- Connection to 192.168.10.12 closed.\n\n- 或\n\n- Connection closed by foreign host.\n\n  > 意思是 断开主机链接了，出现这种问题，跟你的IPTABLES，防火墙什么的都没关系。\n  >\n  > 造成这个原 因是因为原来连接到SSHD服务器进程的22端口，当你的客户端突然断开时，服务器端的TCP连接就处于一个半打开状态。当下一次同一客户机再次建立 TCP连接时，服务器检测到这个半打开的TCP连接，并向客户机回传一个置位RST的TCP报文，客户机就会显示connection closed by foreign host。\n  > 这是TCP协议本身的一个保护措施，并不是什么错误，你只要再重新连接服务器就能连上。\n  >\n  > ——— http://www.pooy.net/connection-closed-foreign-host.html\n  >\n  > 总结一下解决方案： **关机重启**\n\n### 关于ssh的相关配置\n\n#### 修改配置文件\n\n```\ncd /etc/ssh\nvi ssh_config #可设置ssh的默认端口（22）\nvi sshd_config\n```\n\nssh_config和sshd_config都是ssh服务器的配置文件，二者区别在于，前者是针对客户端的配置文件，后者则是针对服务端的配置文件。两个配置文件都允许你通过设置不同的选项来改变客户端程序的运行方式。\n\n#### 重启ssh服务\n\n```\nservice sshd restart\n```\n\n如果报错 sshd: unrecognized service 则需要开启ssh服务。\n\n```\n/etc/init.d/ssh start\n```\n\n## vscode连接远程服务器\n\n- 正确的ssh服务\n\n- 密码设置完成（passwd root）\n\n### 安装插件\n\n- 安装 Remote Development 插件\n\n  > 会自动安装 Remote-WSL / Containers / SSH 等插件。\n\n![](https://photos.zywvvd.com/images_matrixtime/20201028143530.png)\n\n### 配置主机信息\n\n> ctrl + shift + p\n\n![](https://photos.zywvvd.com/images_matrixtime/20201028174129.png)\n\n![](https://photos.zywvvd.com/images_matrixtime/20201028175152.png)\n\n```\nHost Enter\n  HostName 192.168.10.15\n  Port 12345\n  User root\n  IdentityFile ~\\.ssh\\id_rsa\n  IdentitiesOnly yes\n```\n\n### vs code 连接远程主机\n\n![](https://photos.zywvvd.com/images_matrixtime/20201028175324.png)\n\n> 之后选择目标主机的操作系统。\n\n- 成功连接到远程主机：\n\n- 打开文件夹运行程序时，选择使用的Python环境：\n\n#### 相对路径的设置\n\n在读取文件时，可能使用相对路径出现错误。\n\n> python 插件设置中没有设置`终端执行命令时使用文件的路径代替现在打开的目录`。\n\n### 解决方案\n\n- 搜索配置 `execute in file`：\n\n![](https://photos.zywvvd.com/win11-mt/20210717114300.png)\n","source":"_posts/docker/docker-ssh.md","raw":"---\ntitle: docker的ssh相关配置\ntags: [docker,远程配置,ssh]\ncategories: docker\ndate: 2021-08-10 17:07:14\n---\n\n>参考师兄博客：https://www.zywvvd.com/2020/11/02/windows/win_ssh_linux_docker/win_ssh_linux_docker/\n\n> ssh是较可靠，专为远程登录会话和其他网络服务提供安全性的协议，广泛用于远程登录的场景，也是远程调试代码的神兵利器。在开发中经常会在服务器启动自己的 docker 容器进行开发，又需要调试代码，vim的调试环境配置起来门槛又太高。于是就有了使用Windows直接ssh打通docker进行调试的需求。本文记录Windows远程登录Linux服务器docker容器的方法。\n\n## 环境说明\n\n- 登录主机操作系统 Win 10\n- 被登录主机操作系统 docker container in Linux\n- 主机与被登录主机（此处指服务器，不是docker）网络联通，IP在同一网段\n- 服务器与docker的IP在同一网段\n\n## 配置方法\n\n### 建立docker与Linux服务器的端口映射\n\n> ssh协议链接时默认使用22端口，Windows与docker的端口往往不能直接进行映射（很可能不在一个网段），因此需要将docker的22端口映射到Linux服务器的某个端口，此时需要在建立docker容器时进行[配置](https://www.zywvvd.com/2020/05/14/coding/environment/wingide-remote-docker/wingide-remote-docker/#docker配置)：\n\n```\n$ docker run -it --name vvd -p 3721:22 -v /root/tmp:/root/tmp my_docker bash\n```\n\n- 其中 `-p` 的部分表示将本机（服务器）的3721端口映射到容器的22端口。\n\n### 容器内部安装ssh服务\n\n> 需要在被登录的容器内部建立并启动ssh服务。\n\n- 首先需要安装：\n\n```\napt-get update\napt-get install openssh-server\napt-get install openssh-client\n```\n\n- 安装完成后需要容器每次启动时自动运行相关服务，可以在 `~/.bashrc`中加入：\n\n```\n/etc/init.d/ssh start\n```\n\n> 这样就保证了docker容器自动启动该服务。\n\n- 查看ssh运行状态\n\n```\n/etc/init.d/ssh status\n```\n\n> 如果是 `* sshd is running` 说明ssh正常运行\n\n### 修改容器内root用户登录设置\n\n> 有的容器默认不支持root用户远程使用ssh协议进行密码登录的，此时需要更改设置。\n\n- 打开 `/etc/ssh/sshd_config`文件：\n\n```\n# PermitRootLogin prohibit-password # 默认打开 禁止root用户使用密码登陆，需要将其注释\nRSAAuthentication yes #启用 RSA 认证\nPubkeyAuthentication yes #启用公钥私钥配对认证方式\nPermitRootLogin yes #允许root用户使用ssh登录\n```\n\n- 将 `PermitRootLogin` 设置为 yes\n\n### 修改root密码\n\n> 远程登录时需要使用系统的用户密码，我们就直接使用root用户登录好了，需要设置新建容器的密码：\n\n```\npasswd root\n```\n\n### 设置SSH\n\n- [本地生成ssh key](https://www.zywvvd.com/2020/02/23/git/link_github/Git-connect-remote-pos/#创建SSH密钥)\n- 将.pub 内容复制粘贴加入到远程 ~/.ssh/authorized_keys\n\n### SSH连接服务器\n\n> 需要用户名（被登录端用户）与被登录的主机ip和端口号\n>\n> 例如： 用户名- root ip：192.168.10.12 端口映射为 3721\n\n- linux\n\n```\nssh root@192.168.10.12:3721\n```\n\n- Windows\n\n```\nssh -p 3721 root@192.168.10.12\n```\n\n![](https://photos.zywvvd.com/images_matrixtime/20201102200256.png)\n\n- 如果不清楚Linux系统端口映射配置情况：\n\n```\niptables -t nat -L -n\n```\n\n### X-shell配置\n\n> 命令行ssh登录成功后就可以在X-shell中建立配置信息方便地连接了。\n\n- 新建会话，填写名称、IP、端口号（我们刚刚配置过的）：\n\n![](https://photos.zywvvd.com/images_matrixtime/20201102200522.png)\n\n- 用户身份认证，填入用户名密码（刚刚配置过的）：\n\n![](https://photos.zywvvd.com/images_matrixtime/20201102200640.png)\n\n- 随后就可以使用该会话直接登录docker容器了，为远程调试打下了坚实的基础：\n\n![](https://photos.zywvvd.com/images_matrixtime/20201102200804.png)\n\n### 填坑\n\n- ssh: Could not resolve hostname 192.168.10.12:3721: Name or service not known\n\n  > 这是在Windows中使用了Linux格式的SSH登录命令导致的解析错误\n  >\n  > 将命令语法更换为Windows的格式即可\n\n- root 用户无论如何密码不被接受\n\n  > 需要在被登录主机 /etc/ssh/sshd_config 中设置：\n  >\n  > ```\n  > # PermitRootLogin prohibit-password # 默认打开 禁止root用户使用密码登陆，需要将其注释\n  > RSAAuthentication yes #启用 RSA 认证\n  > PubkeyAuthentication yes #启用公钥私钥配对认证方式\n  > PermitRootLogin yes #允许root用户使用ssh登录\n  > ```\n  >\n  > - 重点：**PermitRootLogin yes**\n\n- Connection to 192.168.10.12 closed.\n\n- 或\n\n- Connection closed by foreign host.\n\n  > 意思是 断开主机链接了，出现这种问题，跟你的IPTABLES，防火墙什么的都没关系。\n  >\n  > 造成这个原 因是因为原来连接到SSHD服务器进程的22端口，当你的客户端突然断开时，服务器端的TCP连接就处于一个半打开状态。当下一次同一客户机再次建立 TCP连接时，服务器检测到这个半打开的TCP连接，并向客户机回传一个置位RST的TCP报文，客户机就会显示connection closed by foreign host。\n  > 这是TCP协议本身的一个保护措施，并不是什么错误，你只要再重新连接服务器就能连上。\n  >\n  > ——— http://www.pooy.net/connection-closed-foreign-host.html\n  >\n  > 总结一下解决方案： **关机重启**\n\n### 关于ssh的相关配置\n\n#### 修改配置文件\n\n```\ncd /etc/ssh\nvi ssh_config #可设置ssh的默认端口（22）\nvi sshd_config\n```\n\nssh_config和sshd_config都是ssh服务器的配置文件，二者区别在于，前者是针对客户端的配置文件，后者则是针对服务端的配置文件。两个配置文件都允许你通过设置不同的选项来改变客户端程序的运行方式。\n\n#### 重启ssh服务\n\n```\nservice sshd restart\n```\n\n如果报错 sshd: unrecognized service 则需要开启ssh服务。\n\n```\n/etc/init.d/ssh start\n```\n\n## vscode连接远程服务器\n\n- 正确的ssh服务\n\n- 密码设置完成（passwd root）\n\n### 安装插件\n\n- 安装 Remote Development 插件\n\n  > 会自动安装 Remote-WSL / Containers / SSH 等插件。\n\n![](https://photos.zywvvd.com/images_matrixtime/20201028143530.png)\n\n### 配置主机信息\n\n> ctrl + shift + p\n\n![](https://photos.zywvvd.com/images_matrixtime/20201028174129.png)\n\n![](https://photos.zywvvd.com/images_matrixtime/20201028175152.png)\n\n```\nHost Enter\n  HostName 192.168.10.15\n  Port 12345\n  User root\n  IdentityFile ~\\.ssh\\id_rsa\n  IdentitiesOnly yes\n```\n\n### vs code 连接远程主机\n\n![](https://photos.zywvvd.com/images_matrixtime/20201028175324.png)\n\n> 之后选择目标主机的操作系统。\n\n- 成功连接到远程主机：\n\n- 打开文件夹运行程序时，选择使用的Python环境：\n\n#### 相对路径的设置\n\n在读取文件时，可能使用相对路径出现错误。\n\n> python 插件设置中没有设置`终端执行命令时使用文件的路径代替现在打开的目录`。\n\n### 解决方案\n\n- 搜索配置 `execute in file`：\n\n![](https://photos.zywvvd.com/win11-mt/20210717114300.png)\n","slug":"docker/docker-ssh","published":1,"updated":"2021-08-19T08:15:36.413Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxoc7000gugx4hhgv7a6i","content":"<blockquote>\n<p>参考师兄博客：<a href=\"https://www.zywvvd.com/2020/11/02/windows/win_ssh_linux_docker/win_ssh_linux_docker/\">https://www.zywvvd.com/2020/11/02/windows/win_ssh_linux_docker/win_ssh_linux_docker/</a></p>\n</blockquote>\n<blockquote>\n<p>ssh是较可靠，专为远程登录会话和其他网络服务提供安全性的协议，广泛用于远程登录的场景，也是远程调试代码的神兵利器。在开发中经常会在服务器启动自己的 docker 容器进行开发，又需要调试代码，vim的调试环境配置起来门槛又太高。于是就有了使用Windows直接ssh打通docker进行调试的需求。本文记录Windows远程登录Linux服务器docker容器的方法。</p>\n</blockquote>\n<h2 id=\"环境说明\">环境说明</h2>\n<ul>\n<li>登录主机操作系统 Win 10</li>\n<li>被登录主机操作系统 docker container in Linux</li>\n<li>主机与被登录主机（此处指服务器，不是docker）网络联通，IP在同一网段</li>\n<li>服务器与docker的IP在同一网段</li>\n</ul>\n<h2 id=\"配置方法\">配置方法</h2>\n<h3 id=\"建立docker与Linux服务器的端口映射\">建立docker与Linux服务器的端口映射</h3>\n<blockquote>\n<p>ssh协议链接时默认使用22端口，Windows与docker的端口往往不能直接进行映射（很可能不在一个网段），因此需要将docker的22端口映射到Linux服务器的某个端口，此时需要在建立docker容器时进行<a href=\"https://www.zywvvd.com/2020/05/14/coding/environment/wingide-remote-docker/wingide-remote-docker/#docker%E9%85%8D%E7%BD%AE\">配置</a>：</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">$ docker run -it --name vvd -p <span class=\"hljs-number\">3721</span>:<span class=\"hljs-number\">22</span> -v <span class=\"hljs-regexp\">/root/</span>tmp:<span class=\"hljs-regexp\">/root/</span>tmp my_docker bash<br></code></pre></td></tr></tbody></table></figure>\n<ul>\n<li>其中 <code>-p</code> 的部分表示将本机（服务器）的3721端口映射到容器的22端口。</li>\n</ul>\n<h3 id=\"容器内部安装ssh服务\">容器内部安装ssh服务</h3>\n<blockquote>\n<p>需要在被登录的容器内部建立并启动ssh服务。</p>\n</blockquote>\n<ul>\n<li>首先需要安装：</li>\n</ul>\n<figure class=\"highlight routeros\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">apt-<span class=\"hljs-builtin-name\">get</span> update<br>apt-<span class=\"hljs-builtin-name\">get</span> install openssh-server<br>apt-<span class=\"hljs-builtin-name\">get</span> install openssh-client<br></code></pre></td></tr></tbody></table></figure>\n<ul>\n<li>安装完成后需要容器每次启动时自动运行相关服务，可以在 <code>~/.bashrc</code>中加入：</li>\n</ul>\n<figure class=\"highlight awk\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-regexp\">/etc/i</span>nit.d/ssh start<br></code></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>这样就保证了docker容器自动启动该服务。</p>\n</blockquote>\n<ul>\n<li>查看ssh运行状态</li>\n</ul>\n<figure class=\"highlight awk\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-regexp\">/etc/i</span>nit.d/ssh status<br></code></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>如果是 <code>* sshd is running</code> 说明ssh正常运行</p>\n</blockquote>\n<h3 id=\"修改容器内root用户登录设置\">修改容器内root用户登录设置</h3>\n<blockquote>\n<p>有的容器默认不支持root用户远程使用ssh协议进行密码登录的，此时需要更改设置。</p>\n</blockquote>\n<ul>\n<li>打开 <code>/etc/ssh/sshd_config</code>文件：</li>\n</ul>\n<figure class=\"highlight nginx\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-comment\"># PermitRootLogin prohibit-password # 默认打开 禁止root用户使用密码登陆，需要将其注释</span><br><span class=\"hljs-attribute\">RSAAuthentication</span> <span class=\"hljs-literal\">yes</span> <span class=\"hljs-comment\">#启用 RSA 认证</span><br>PubkeyAuthentication <span class=\"hljs-literal\">yes</span> <span class=\"hljs-comment\">#启用公钥私钥配对认证方式</span><br>PermitRootLogin <span class=\"hljs-literal\">yes</span> <span class=\"hljs-comment\">#允许root用户使用ssh登录</span><br></code></pre></td></tr></tbody></table></figure>\n<ul>\n<li>将 <code>PermitRootLogin</code> 设置为 yes</li>\n</ul>\n<h3 id=\"修改root密码\">修改root密码</h3>\n<blockquote>\n<p>远程登录时需要使用系统的用户密码，我们就直接使用root用户登录好了，需要设置新建容器的密码：</p>\n</blockquote>\n<figure class=\"highlight ebnf\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">passwd root</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"设置SSH\">设置SSH</h3>\n<ul>\n<li><a href=\"https://www.zywvvd.com/2020/02/23/git/link_github/Git-connect-remote-pos/#%E5%88%9B%E5%BB%BASSH%E5%AF%86%E9%92%A5\">本地生成ssh key</a></li>\n<li>将.pub 内容复制粘贴加入到远程 ~/.ssh/authorized_keys</li>\n</ul>\n<h3 id=\"SSH连接服务器\">SSH连接服务器</h3>\n<blockquote>\n<p>需要用户名（被登录端用户）与被登录的主机ip和端口号</p>\n<p>例如： 用户名- root ip：192.168.10.12 端口映射为 3721</p>\n</blockquote>\n<ul>\n<li>linux</li>\n</ul>\n<figure class=\"highlight nginx\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">ssh</span> root@<span class=\"hljs-number\">192.168.10.12:3721</span><br></code></pre></td></tr></tbody></table></figure>\n<ul>\n<li>Windows</li>\n</ul>\n<figure class=\"highlight apache\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">ssh</span> -p <span class=\"hljs-number\">3721</span> root@<span class=\"hljs-number\">192.168.10.12</span><br></code></pre></td></tr></tbody></table></figure>\n<p><img src=\"https://photos.zywvvd.com/images_matrixtime/20201102200256.png\" alt=\"\"></p>\n<ul>\n<li>如果不清楚Linux系统端口映射配置情况：</li>\n</ul>\n<figure class=\"highlight excel\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs excel\">iptables -<span class=\"hljs-built_in\">t</span> nat -L -<span class=\"hljs-built_in\">n</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"X-shell配置\">X-shell配置</h3>\n<blockquote>\n<p>命令行ssh登录成功后就可以在X-shell中建立配置信息方便地连接了。</p>\n</blockquote>\n<ul>\n<li>新建会话，填写名称、IP、端口号（我们刚刚配置过的）：</li>\n</ul>\n<p><img src=\"https://photos.zywvvd.com/images_matrixtime/20201102200522.png\" alt=\"\"></p>\n<ul>\n<li>用户身份认证，填入用户名密码（刚刚配置过的）：</li>\n</ul>\n<p><img src=\"https://photos.zywvvd.com/images_matrixtime/20201102200640.png\" alt=\"\"></p>\n<ul>\n<li>随后就可以使用该会话直接登录docker容器了，为远程调试打下了坚实的基础：</li>\n</ul>\n<p><img src=\"https://photos.zywvvd.com/images_matrixtime/20201102200804.png\" alt=\"\"></p>\n<h3 id=\"填坑\">填坑</h3>\n<ul>\n<li>\n<p>ssh: Could not resolve hostname 192.168.10.12:3721: Name or service not known</p>\n<blockquote>\n<p>这是在Windows中使用了Linux格式的SSH登录命令导致的解析错误</p>\n<p>将命令语法更换为Windows的格式即可</p>\n</blockquote>\n</li>\n<li>\n<p>root 用户无论如何密码不被接受</p>\n<blockquote>\n<p>需要在被登录主机 /etc/ssh/sshd_config 中设置：</p>\n<figure class=\"highlight nginx\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-comment\"># PermitRootLogin prohibit-password # 默认打开 禁止root用户使用密码登陆，需要将其注释</span><br><span class=\"hljs-attribute\">RSAAuthentication</span> <span class=\"hljs-literal\">yes</span> <span class=\"hljs-comment\">#启用 RSA 认证</span><br>PubkeyAuthentication <span class=\"hljs-literal\">yes</span> <span class=\"hljs-comment\">#启用公钥私钥配对认证方式</span><br>PermitRootLogin <span class=\"hljs-literal\">yes</span> <span class=\"hljs-comment\">#允许root用户使用ssh登录</span><br></code></pre></td></tr></tbody></table></figure>\n<ul>\n<li>重点：<strong>PermitRootLogin yes</strong></li>\n</ul>\n</blockquote>\n</li>\n<li>\n<p>Connection to 192.168.10.12 closed.</p>\n</li>\n<li>\n<p>或</p>\n</li>\n<li>\n<p>Connection closed by foreign host.</p>\n<blockquote>\n<p>意思是 断开主机链接了，出现这种问题，跟你的IPTABLES，防火墙什么的都没关系。</p>\n<p>造成这个原 因是因为原来连接到SSHD服务器进程的22端口，当你的客户端突然断开时，服务器端的TCP连接就处于一个半打开状态。当下一次同一客户机再次建立 TCP连接时，服务器检测到这个半打开的TCP连接，并向客户机回传一个置位RST的TCP报文，客户机就会显示connection closed by foreign host。<br>\n这是TCP协议本身的一个保护措施，并不是什么错误，你只要再重新连接服务器就能连上。</p>\n<p>——— <a href=\"http://www.pooy.net/connection-closed-foreign-host.html\">http://www.pooy.net/connection-closed-foreign-host.html</a></p>\n<p>总结一下解决方案： <strong>关机重启</strong></p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"关于ssh的相关配置\">关于ssh的相关配置</h3>\n<h4 id=\"修改配置文件\">修改配置文件</h4>\n<figure class=\"highlight awk\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">cd <span class=\"hljs-regexp\">/etc/</span>ssh<br>vi ssh_config <span class=\"hljs-comment\">#可设置ssh的默认端口（22）</span><br>vi sshd_config<br></code></pre></td></tr></tbody></table></figure>\n<p>ssh_config和sshd_config都是ssh服务器的配置文件，二者区别在于，前者是针对客户端的配置文件，后者则是针对服务端的配置文件。两个配置文件都允许你通过设置不同的选项来改变客户端程序的运行方式。</p>\n<h4 id=\"重启ssh服务\">重启ssh服务</h4>\n<figure class=\"highlight ebnf\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">service sshd restart</span><br></code></pre></td></tr></tbody></table></figure>\n<p>如果报错 sshd: unrecognized service 则需要开启ssh服务。</p>\n<figure class=\"highlight awk\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-regexp\">/etc/i</span>nit.d/ssh start<br></code></pre></td></tr></tbody></table></figure>\n<h2 id=\"vscode连接远程服务器\">vscode连接远程服务器</h2>\n<ul>\n<li>\n<p>正确的ssh服务</p>\n</li>\n<li>\n<p>密码设置完成（passwd root）</p>\n</li>\n</ul>\n<h3 id=\"安装插件\">安装插件</h3>\n<ul>\n<li>\n<p>安装 Remote Development 插件</p>\n<blockquote>\n<p>会自动安装 Remote-WSL / Containers / SSH 等插件。</p>\n</blockquote>\n</li>\n</ul>\n<p><img src=\"https://photos.zywvvd.com/images_matrixtime/20201028143530.png\" alt=\"\"></p>\n<h3 id=\"配置主机信息\">配置主机信息</h3>\n<blockquote>\n<p>ctrl + shift + p</p>\n</blockquote>\n<p><img src=\"https://photos.zywvvd.com/images_matrixtime/20201028174129.png\" alt=\"\"></p>\n<p><img src=\"https://photos.zywvvd.com/images_matrixtime/20201028175152.png\" alt=\"\"></p>\n<figure class=\"highlight crmsh\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\">Host Enter<br>  HostName <span class=\"hljs-number\">192.168</span>.<span class=\"hljs-number\">10.15</span><br>  Port <span class=\"hljs-number\">12345</span><br>  <span class=\"hljs-keyword\">User</span> <span class=\"hljs-title\">root</span><br>  IdentityFile ~\\.ssh\\id_rsa<br>  IdentitiesOnly yes<br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"vs-code-连接远程主机\">vs code 连接远程主机</h3>\n<p><img src=\"https://photos.zywvvd.com/images_matrixtime/20201028175324.png\" alt=\"\"></p>\n<blockquote>\n<p>之后选择目标主机的操作系统。</p>\n</blockquote>\n<ul>\n<li>\n<p>成功连接到远程主机：</p>\n</li>\n<li>\n<p>打开文件夹运行程序时，选择使用的Python环境：</p>\n</li>\n</ul>\n<h4 id=\"相对路径的设置\">相对路径的设置</h4>\n<p>在读取文件时，可能使用相对路径出现错误。</p>\n<blockquote>\n<p>python 插件设置中没有设置<code>终端执行命令时使用文件的路径代替现在打开的目录</code>。</p>\n</blockquote>\n<h3 id=\"解决方案\">解决方案</h3>\n<ul>\n<li>搜索配置 <code>execute in file</code>：</li>\n</ul>\n<p><img src=\"https://photos.zywvvd.com/win11-mt/20210717114300.png\" alt=\"\"></p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>参考师兄博客：<a href=\"https://www.zywvvd.com/2020/11/02/windows/win_ssh_linux_docker/win_ssh_linux_docker/\">https://www.zywvvd.com/2020/11/02/windows/win_ssh_linux_docker/win_ssh_linux_docker/</a></p>\n</blockquote>\n<blockquote>\n<p>ssh是较可靠，专为远程登录会话和其他网络服务提供安全性的协议，广泛用于远程登录的场景，也是远程调试代码的神兵利器。在开发中经常会在服务器启动自己的 docker 容器进行开发，又需要调试代码，vim的调试环境配置起来门槛又太高。于是就有了使用Windows直接ssh打通docker进行调试的需求。本文记录Windows远程登录Linux服务器docker容器的方法。</p>\n</blockquote>\n<h2 id=\"环境说明\">环境说明</h2>\n<ul>\n<li>登录主机操作系统 Win 10</li>\n<li>被登录主机操作系统 docker container in Linux</li>\n<li>主机与被登录主机（此处指服务器，不是docker）网络联通，IP在同一网段</li>\n<li>服务器与docker的IP在同一网段</li>\n</ul>\n<h2 id=\"配置方法\">配置方法</h2>\n<h3 id=\"建立docker与Linux服务器的端口映射\">建立docker与Linux服务器的端口映射</h3>\n<blockquote>\n<p>ssh协议链接时默认使用22端口，Windows与docker的端口往往不能直接进行映射（很可能不在一个网段），因此需要将docker的22端口映射到Linux服务器的某个端口，此时需要在建立docker容器时进行<a href=\"https://www.zywvvd.com/2020/05/14/coding/environment/wingide-remote-docker/wingide-remote-docker/#docker%E9%85%8D%E7%BD%AE\">配置</a>：</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">$ docker run -it --name vvd -p <span class=\"hljs-number\">3721</span>:<span class=\"hljs-number\">22</span> -v <span class=\"hljs-regexp\">/root/</span>tmp:<span class=\"hljs-regexp\">/root/</span>tmp my_docker bash<br></code></pre></td></tr></table></figure>\n<ul>\n<li>其中 <code>-p</code> 的部分表示将本机（服务器）的3721端口映射到容器的22端口。</li>\n</ul>\n<h3 id=\"容器内部安装ssh服务\">容器内部安装ssh服务</h3>\n<blockquote>\n<p>需要在被登录的容器内部建立并启动ssh服务。</p>\n</blockquote>\n<ul>\n<li>首先需要安装：</li>\n</ul>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">apt-<span class=\"hljs-builtin-name\">get</span> update<br>apt-<span class=\"hljs-builtin-name\">get</span> install openssh-server<br>apt-<span class=\"hljs-builtin-name\">get</span> install openssh-client<br></code></pre></td></tr></table></figure>\n<ul>\n<li>安装完成后需要容器每次启动时自动运行相关服务，可以在 <code>~/.bashrc</code>中加入：</li>\n</ul>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-regexp\">/etc/i</span>nit.d/ssh start<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>这样就保证了docker容器自动启动该服务。</p>\n</blockquote>\n<ul>\n<li>查看ssh运行状态</li>\n</ul>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-regexp\">/etc/i</span>nit.d/ssh status<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>如果是 <code>* sshd is running</code> 说明ssh正常运行</p>\n</blockquote>\n<h3 id=\"修改容器内root用户登录设置\">修改容器内root用户登录设置</h3>\n<blockquote>\n<p>有的容器默认不支持root用户远程使用ssh协议进行密码登录的，此时需要更改设置。</p>\n</blockquote>\n<ul>\n<li>打开 <code>/etc/ssh/sshd_config</code>文件：</li>\n</ul>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-comment\"># PermitRootLogin prohibit-password # 默认打开 禁止root用户使用密码登陆，需要将其注释</span><br><span class=\"hljs-attribute\">RSAAuthentication</span> <span class=\"hljs-literal\">yes</span> <span class=\"hljs-comment\">#启用 RSA 认证</span><br>PubkeyAuthentication <span class=\"hljs-literal\">yes</span> <span class=\"hljs-comment\">#启用公钥私钥配对认证方式</span><br>PermitRootLogin <span class=\"hljs-literal\">yes</span> <span class=\"hljs-comment\">#允许root用户使用ssh登录</span><br></code></pre></td></tr></table></figure>\n<ul>\n<li>将 <code>PermitRootLogin</code> 设置为 yes</li>\n</ul>\n<h3 id=\"修改root密码\">修改root密码</h3>\n<blockquote>\n<p>远程登录时需要使用系统的用户密码，我们就直接使用root用户登录好了，需要设置新建容器的密码：</p>\n</blockquote>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">passwd root</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"设置SSH\">设置SSH</h3>\n<ul>\n<li><a href=\"https://www.zywvvd.com/2020/02/23/git/link_github/Git-connect-remote-pos/#%E5%88%9B%E5%BB%BASSH%E5%AF%86%E9%92%A5\">本地生成ssh key</a></li>\n<li>将.pub 内容复制粘贴加入到远程 ~/.ssh/authorized_keys</li>\n</ul>\n<h3 id=\"SSH连接服务器\">SSH连接服务器</h3>\n<blockquote>\n<p>需要用户名（被登录端用户）与被登录的主机ip和端口号</p>\n<p>例如： 用户名- root ip：192.168.10.12 端口映射为 3721</p>\n</blockquote>\n<ul>\n<li>linux</li>\n</ul>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">ssh</span> root@<span class=\"hljs-number\">192.168.10.12:3721</span><br></code></pre></td></tr></table></figure>\n<ul>\n<li>Windows</li>\n</ul>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">ssh</span> -p <span class=\"hljs-number\">3721</span> root@<span class=\"hljs-number\">192.168.10.12</span><br></code></pre></td></tr></table></figure>\n<p><img src=\"https://photos.zywvvd.com/images_matrixtime/20201102200256.png\" alt=\"\"></p>\n<ul>\n<li>如果不清楚Linux系统端口映射配置情况：</li>\n</ul>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs excel\">iptables -<span class=\"hljs-built_in\">t</span> nat -L -<span class=\"hljs-built_in\">n</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"X-shell配置\">X-shell配置</h3>\n<blockquote>\n<p>命令行ssh登录成功后就可以在X-shell中建立配置信息方便地连接了。</p>\n</blockquote>\n<ul>\n<li>新建会话，填写名称、IP、端口号（我们刚刚配置过的）：</li>\n</ul>\n<p><img src=\"https://photos.zywvvd.com/images_matrixtime/20201102200522.png\" alt=\"\"></p>\n<ul>\n<li>用户身份认证，填入用户名密码（刚刚配置过的）：</li>\n</ul>\n<p><img src=\"https://photos.zywvvd.com/images_matrixtime/20201102200640.png\" alt=\"\"></p>\n<ul>\n<li>随后就可以使用该会话直接登录docker容器了，为远程调试打下了坚实的基础：</li>\n</ul>\n<p><img src=\"https://photos.zywvvd.com/images_matrixtime/20201102200804.png\" alt=\"\"></p>\n<h3 id=\"填坑\">填坑</h3>\n<ul>\n<li>\n<p>ssh: Could not resolve hostname 192.168.10.12:3721: Name or service not known</p>\n<blockquote>\n<p>这是在Windows中使用了Linux格式的SSH登录命令导致的解析错误</p>\n<p>将命令语法更换为Windows的格式即可</p>\n</blockquote>\n</li>\n<li>\n<p>root 用户无论如何密码不被接受</p>\n<blockquote>\n<p>需要在被登录主机 /etc/ssh/sshd_config 中设置：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-comment\"># PermitRootLogin prohibit-password # 默认打开 禁止root用户使用密码登陆，需要将其注释</span><br><span class=\"hljs-attribute\">RSAAuthentication</span> <span class=\"hljs-literal\">yes</span> <span class=\"hljs-comment\">#启用 RSA 认证</span><br>PubkeyAuthentication <span class=\"hljs-literal\">yes</span> <span class=\"hljs-comment\">#启用公钥私钥配对认证方式</span><br>PermitRootLogin <span class=\"hljs-literal\">yes</span> <span class=\"hljs-comment\">#允许root用户使用ssh登录</span><br></code></pre></td></tr></table></figure>\n<ul>\n<li>重点：<strong>PermitRootLogin yes</strong></li>\n</ul>\n</blockquote>\n</li>\n<li>\n<p>Connection to 192.168.10.12 closed.</p>\n</li>\n<li>\n<p>或</p>\n</li>\n<li>\n<p>Connection closed by foreign host.</p>\n<blockquote>\n<p>意思是 断开主机链接了，出现这种问题，跟你的IPTABLES，防火墙什么的都没关系。</p>\n<p>造成这个原 因是因为原来连接到SSHD服务器进程的22端口，当你的客户端突然断开时，服务器端的TCP连接就处于一个半打开状态。当下一次同一客户机再次建立 TCP连接时，服务器检测到这个半打开的TCP连接，并向客户机回传一个置位RST的TCP报文，客户机就会显示connection closed by foreign host。<br>\n这是TCP协议本身的一个保护措施，并不是什么错误，你只要再重新连接服务器就能连上。</p>\n<p>——— <a href=\"http://www.pooy.net/connection-closed-foreign-host.html\">http://www.pooy.net/connection-closed-foreign-host.html</a></p>\n<p>总结一下解决方案： <strong>关机重启</strong></p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"关于ssh的相关配置\">关于ssh的相关配置</h3>\n<h4 id=\"修改配置文件\">修改配置文件</h4>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\">cd <span class=\"hljs-regexp\">/etc/</span>ssh<br>vi ssh_config <span class=\"hljs-comment\">#可设置ssh的默认端口（22）</span><br>vi sshd_config<br></code></pre></td></tr></table></figure>\n<p>ssh_config和sshd_config都是ssh服务器的配置文件，二者区别在于，前者是针对客户端的配置文件，后者则是针对服务端的配置文件。两个配置文件都允许你通过设置不同的选项来改变客户端程序的运行方式。</p>\n<h4 id=\"重启ssh服务\">重启ssh服务</h4>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">service sshd restart</span><br></code></pre></td></tr></table></figure>\n<p>如果报错 sshd: unrecognized service 则需要开启ssh服务。</p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-regexp\">/etc/i</span>nit.d/ssh start<br></code></pre></td></tr></table></figure>\n<h2 id=\"vscode连接远程服务器\">vscode连接远程服务器</h2>\n<ul>\n<li>\n<p>正确的ssh服务</p>\n</li>\n<li>\n<p>密码设置完成（passwd root）</p>\n</li>\n</ul>\n<h3 id=\"安装插件\">安装插件</h3>\n<ul>\n<li>\n<p>安装 Remote Development 插件</p>\n<blockquote>\n<p>会自动安装 Remote-WSL / Containers / SSH 等插件。</p>\n</blockquote>\n</li>\n</ul>\n<p><img src=\"https://photos.zywvvd.com/images_matrixtime/20201028143530.png\" alt=\"\"></p>\n<h3 id=\"配置主机信息\">配置主机信息</h3>\n<blockquote>\n<p>ctrl + shift + p</p>\n</blockquote>\n<p><img src=\"https://photos.zywvvd.com/images_matrixtime/20201028174129.png\" alt=\"\"></p>\n<p><img src=\"https://photos.zywvvd.com/images_matrixtime/20201028175152.png\" alt=\"\"></p>\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\">Host Enter<br>  HostName <span class=\"hljs-number\">192.168</span>.<span class=\"hljs-number\">10.15</span><br>  Port <span class=\"hljs-number\">12345</span><br>  <span class=\"hljs-keyword\">User</span> <span class=\"hljs-title\">root</span><br>  IdentityFile ~\\.ssh\\id_rsa<br>  IdentitiesOnly yes<br></code></pre></td></tr></table></figure>\n<h3 id=\"vs-code-连接远程主机\">vs code 连接远程主机</h3>\n<p><img src=\"https://photos.zywvvd.com/images_matrixtime/20201028175324.png\" alt=\"\"></p>\n<blockquote>\n<p>之后选择目标主机的操作系统。</p>\n</blockquote>\n<ul>\n<li>\n<p>成功连接到远程主机：</p>\n</li>\n<li>\n<p>打开文件夹运行程序时，选择使用的Python环境：</p>\n</li>\n</ul>\n<h4 id=\"相对路径的设置\">相对路径的设置</h4>\n<p>在读取文件时，可能使用相对路径出现错误。</p>\n<blockquote>\n<p>python 插件设置中没有设置<code>终端执行命令时使用文件的路径代替现在打开的目录</code>。</p>\n</blockquote>\n<h3 id=\"解决方案\">解决方案</h3>\n<ul>\n<li>搜索配置 <code>execute in file</code>：</li>\n</ul>\n<p><img src=\"https://photos.zywvvd.com/win11-mt/20210717114300.png\" alt=\"\"></p>\n"},{"title":"fine-tuning的方法","date":"2021-08-13T06:28:24.000Z","_content":"\n>收集关于深度学习的调参的相关笔记，主要用于网络训练的微调。\n\n### **训练技巧**\n\n1.要做**梯度归一化**,即算出来的梯度除以minibatch size\n\n2.clip c(梯度裁剪): 限制最大梯度,其实是value = sqrt(w1^2 +w2^2….),如果value超过了阈值,就算一个衰减系数,让value的值等于阈值: 5,10,15\n\n**3.防止过拟合**\n\n​\t一般常用的防止过拟合方法有使用**L1正则项、L2正则项、dropout、提前终止、数据集扩充等**。如果模型在训练集上表现比较好但在测试集上表现欠佳可以选择增大L1或L2正则的惩罚力度（**L2正则经验上首选1.0**，超过10很少见），或**增大dropout的随机失活概率**（经验首选0.5）；或者当随着训练的持续在测试集上不增反降时，使用提前终止训练的方法。当然**最有效的还是增大训练集的规模**，实在难以获得新数据也可以使用数据集增强的方法，比如CV任务可以对数据集进行裁剪、翻转、平移等方法进行数据集增强，这种方法往往都会提高最后模型的测试精度。\n \tdropout对小数据防止过拟合有很好的效果,值一般设为0.5,小数据上dropout+sgd。在大部分实验中，效果提升都非常明显.**建议尝试**。 dropout的位置比较有讲究, 对于RNN,建议放到输入->RNN与RNN->输出的位置.关于RNN如何用dropout,可以参考:[http://arxiv.org/abs/1409.2329](https://link.zhihu.com/?target=http%3A//arxiv.org/abs/1409.2329)(Captain Jack令言:(不仅仅可以防止过拟合, 其实这相当于做人力成本最低的Ensemble, 当然, 训练起来会比没有Dropout的要慢一点, 同时网络参数你最好相应加一点, 对, 这会再慢一点).)\n\n**4.超参** \n\n​\tlearning rate 最重要**，推荐了解 cosine learning rate 和 cyclic learning rate，其次是 **batchsize 和 weight decay**。当你的模型还不错的时候，可以试着做数据增广和改损失函数锦上添花了。(罗浩ZJU令言：随着网络训练的进行，学习率要逐渐降下来；网络性能越好，学习率要越小（即越需要微调而非粗调)；batchsize通常影响没那么大，塞满卡就行，除了特殊的算法需要batch大一点)\n​\tadam,adadelta等,在小数据上,我这里实验的效果不如sgd, sgd收敛速度会慢一些，但是最终收敛后的结果，一般都比较好。**如果使用sgd的话,可以选择从1.0或者0.1的学习率开始,隔一段时间,在验证集上检查一下,如果cost没有下降,就对**学习率减半**. 我看过很多论文都这么搞,我自己实验的结果也很好. 当然,也可以先用ada系列先跑,最后快收敛的时候,更换成sgd继续训练.同样也会有提升.据说adadelta一般在分类问题上效果比较好，adam在生成问题上效果比较好。(Captain Jack令言：sgd adam 这些选择上, 看你个人选择. 一般对网络不是决定性的. 反正我无脑用sgd + momentum. ）\n\n5.**激活函数**\n\t除了gate之类的地方,需要把输出限制成0-1之外,**尽量不要用sigmoid**,可以用tanh或者relu之类的激活函数.1. sigmoid函数在-4到4之外的区间梯度接近0，很容易造成梯度消失问题。2. 输入0均值，sigmoid函数的输出不是0均值的。（hzwer令言:虽然有至少十种激活函数，但在 Relu 外只推荐试一下 Swish。)\n\n6.BN层具有加速训练速度，有效防止梯度消失与梯度爆炸，具有防止过拟合的效果，所以构建网络时最好要加上这个组件。(Captain Jack令言：batch normalization我一直没用, 虽然我知道这个很好, 我不用仅仅是因为我懒. 所以要鼓励使用batch normalization.）\n\n7.如果你的模型包含全连接层（MLP），并且输入和输出大小一样，可以考虑将MLP替换成**Highway Network**,我尝试对结果有一点提升，建议作为最后提升模型的手段，原理很简单，就是给**输出加了一个gate来控制信息的流动**，详细介绍请参考论文: [http://arxiv.org/abs/1505.00387](https://link.zhihu.com/?target=http%3A//arxiv.org/abs/1505.00387)\n\n8.来自@张馨宇的技巧：**一轮加正则，一轮不加正则，反复进行。**\n\n**9.Ensemble**\nEnsemble是论文刷结果的终极核武器,深度学习中一般有以下几种方式\n同样的参数,不同的初始化方式\n不同的参数,通过cross-validation,选取最好的几组\n同样的参数,模型训练的不同阶段，即不同迭代次数的模型。\n不同的模型,进行线性融合. 例如RNN和传统模型.\n\n**10.自动调参方法**\n（1）Grid Search：其原理就像是在数组里找最大值。缺点是太费时间了，特别像神经网络，一般尝试不了太多的参数组合。\n（2）Random Search：经验上，Random Search比Gird Search更有效。实际操作的时候，一般也是先用Gird Search的方法，得到所有候选参数，然后每次从中随机选择进行训练。另外Random Search往往会和由粗到细的调参策略结合使用，即在效果比较好的参数附近进行更加精细的搜索。\n（3）Bayesian Optimization：贝叶斯优化，考虑到了不同参数对应的 实验结果值，因此更节省时间，贝叶斯调参比Grid Search迭代次数少， 速度快；而且其针对非凸问题依然稳健。\n\n**11.Loss设计**\n\\+ 一般来说分类就是Softmax, 回归就是L2的loss. 但是要注意loss的错误范围(主要是回归), 你预测一个label是10000的值, 模型输出0, 你算算这loss多大, 这还是单变量的情况下. 一般结果都是nan. 所以不仅仅输入要做normalization, 输出也要.\n\\+ 多任务情况下, 各loss想法限制在一个量级上, 或者最终限制在一个量级上, 初期可以着重一个任务的loss。\n\n### **网络结构设计（关于SE)**\n\nSE在分类上是个涨点必备的工具，换言之，堆最高精度是一定要给每个block都加上它的，但是如果需要考虑时间，参数量和精度等的trade-off，无脑堆就没有意义了，这个时候应该要选择在合适的地方使用合适的模块。这个时候，**推荐在block数量和添加SE上做权衡**，即**给部分blcok加上SE，同时砍掉一些block来加速**，这样可以在精度差不多的情况下减少一些参数量。当然inference时间这个事需要看具体的应用平台对SE的实现，就是GAP和FC的速度，这就具体问题具体分析了。**有余力有卡的人，可以迁移某种NAS方法来做这个的搜索。**\n参考自：\n你有哪些deep learning（rnn、cnn）调参的经验？ - 萧瑟的回答 - 知乎 https://www.zhihu.com/question/41631631/answer/94816420\n你有哪些deep learning（rnn、cnn）调参的经验？ - Towser的回答 - 知乎 https://www.zhihu.com/question/41631631/answer/862075836\n你有哪些deep learning（rnn、cnn）调参的经验？ - 罗浩.ZJU的回答 - 知乎 https://www.zhihu.com/question/41631631/answer/216788968\n你有哪些deep learning（rnn、cnn）调参的经验？ - 京东白条的回答 - 知乎 [https://www.zhihu.com/question/4163](https://www.zhihu.com/question/41631631/answer/776852832)\n\n> 所谓SE：SENet是Squeeze-and-Excitation Networks的简称，拿到了ImageNet2017分类比赛冠军，其效果得到了认可，其提出的SE模块思想简单，易于实现，并且很容易可以加载到现有的网络模型框架中。*<u>SENet主要是学习了channel之间的相关性，筛选出了针对通道的注意力</u>*，稍微增加了一点计算量，但是效果比较好。\n\n对于CNN网络来说，其核心计算是卷积算子，其通过卷积核从输入特征图学习到新特征图。从本质上讲，卷积是对一个局部区域进行特征融合，这包括空间上（H和W维度）以及通道间（C维度）的特征融合。\n\n\n![](https://picture.mulindya.com/fine-tuning-pic1.png)\n\n卷积实际上是对<u>局部区域</u>进行的特征融合。 这也导致了普通卷积神经网络的感受野不大，当然你也可以设计出更多的通道特征来增加这个，但是这样做导致了计算量大大的增加。因此为了空间上融合更多特征融合，或者是提取多尺度空间信息。也提出了许多不同的方法如Inception网络的多分支结构。对于channel维度的特征融合，卷积操作基本上默认对输入特征图的所有channel进行融合。<u>而SENet网络的创新点在于关注channel之间的关系，希望模型可以自动学习到不同channel特征的重要程度</u>。为此，SENet提出了Squeeze-and-Excitation (SE)模块，如下图所示：\n\n\n![](https://picture.mulindya.com/fine-tuning-pic2.png)\n\n### 反面训诫\n\n1.1、一上来就自己动手写模型。\n建议首先用**成熟的开源项目及其默认配置**（例如 Gluon 对经典模型的各种复现、各个著名模型作者自己放出来的代码仓库）在自己的数据集上跑一遍，在等程序运行结束的时间里仔细研究一下代码里的各种细节，最后再自己写或者改代码。\n\n1.2、**不推荐做人肉模型设计**，比如把某层卷积改大一点，或者微调一下通道数。除非有特别 insight，不要自己乱设计新组件。\n\n2、训 RNN 不加 gradient clipping，导致训练一段时间以后 loss 突然变成 Nan。\n\n3、tying input & output embedding（就是词向量层和输出 softmax 前的矩阵共享参数，在语言模型或机器翻译中常用）时学习率需要设置得非常小，不然容易 Nan。\n\n4.1、在数据集很大的情况下，一上来就跑全量数据。建议先用 1/100、1/10 的数据跑一跑，对模型性能和训练时间有个底。\n\n4.2认为网络层数越大越好。参数量什么的都不是大问题，在性能不丢的情况下，网络层数减到最小.（Captain Jack令言：你有95%概率不会使用超过40层的模型. ）\n\n5、只喜欢漂亮的模型结构，瞧不起调参数的论文/实验报告，**看论文时经常不看超参数设置等细节**。殊不知在自己没有太多资源实验的情况下，实验报告类文章简直是业界良心！\nNLP 领域主要推荐以下几篇：\nRegularizing and Optimizing LSTM Language Models（LSTM 的训练技巧）\nMassive Exploration of Neural Machine Translation Architectures（NMT 里各个超参的影响）\nTraining Tips for the Transformer Model（训练 Transformer 时会发生的各种现象）\nRoBERTa: A Robustly Optimized BERT Pretraining Approach（BERT 预训练技巧，虽然跟大部分人没啥关系）\nCV 我不算太熟，不过也可以勉强推荐几篇：\n\n[Training ImageNet in 1 Hour（大批量训练技巧）](https://arxiv.org/pdf/1706.02677.pdf)\n[Bag of Tricks for Image Classification with Convolutional Neural Networks（各种训练技巧集大成）](https://openaccess.thecvf.com/content_CVPR_2019/papers/He_Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks_CVPR_2019_paper.pdf)\n[EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks（当前对参数利用最有效的 CNN）](https://arxiv.org/pdf/1905.11946.pdf)\n\n6、对于loss这种受 batch size、sequence length 各种因素影响的数字，人是没有数感的，建议首先计算一下 per token loss（如果是多任务，可以每个任务单独算；类似地，某些 CV 任务可以计算 per pixel loss），心里有点感觉。**脱离损失函数的形式谈学习率没有意义**（例如单是对 batch size 求和或者取平均这个差异就会使梯度差成百上千倍）。\n在确定初始学习率的时候，从一个很小的值（例如 1e-7）开始，然后**每一步指数增大学习率（例如扩大1.05 倍）进行训练。**训练几百步应该能观察到损失函数随训练步数呈对勾形，选择损失下降最快那一段的学习率即可。\n(Captain Jack令言：**观察loss胜于观察准确率**\n准确率虽然是评测指标, 但是训练过程中还是要注意loss的. 你会发现有些情况下, 准确率是突变的, 原来一直是0, 可能保持上千迭代, 然后突然变1. 要是因为这个你提前中断训练了, 只有老天替你惋惜了. 而loss是不会有这么诡异的情况发生的, 毕竟优化目标是loss.\n给NN一点时间, 要根据任务留给NN的学习一定空间. 不能说前面一段时间没起色就不管了. 有些情况下就是前面一段时间看不出起色, 然后开始稳定学习.）\n\n7.1、优化器**只推荐** Momentum 和 Adam。在这些方面做尝试意义不大，如果性能提升反倒可能说明模型不成熟。\n\n7.2、**Adam 可以解决一堆奇奇怪怪的问题**（有时 loss 降不下去，换 Adam 瞬间就好了），**也可以带来一堆奇奇怪怪的问题**（比如单词词频差异很大，当前 batch 没有的单词的词向量也被更新；再比如Adam和L2正则结合产生的复杂效果）。用的时候要胆大心细，万一遇到问题找各种魔改 Adam（比如 [MaskedAdam](https://www.zhihu.com/question/265357659/answer/580469438), AdamW 啥的）抢救。\n\n8、subword 总是会很稳定地涨点，只管用就对了。\n\n9、**GPU 上报错时尽量放在 CPU 上重跑**，错误信息更友好。例如 \"ERROR:tensorflow:Model diverged with loss = NaN\" 其实很有可能是输入 ID 超出了 softmax 词表的范围。\n\n**10、别没耐心**！\n**有些指标是有滞后性的，需要等训练一段时间才开始动。**很多人训练几步看没什么效果就把程序停掉开始 debug 了，但其实代码毫无问题。如此反复好几天甚至一两周都在原地踏步，其实需要做的仅仅是让程序自个儿安安静静地跑上几个小时或者一天……\n\n### 相关trick\n\n-  fine-tuning: 通常来说，直接把预训练模型来用效果不一定足够好，因此需要进行fine-tuning（微调）。fine-tuning需要冻结网络的前几层参数，只更新网络结构的后面几层和最后的全连接层，这样效果会更好。\n\n-   Learning rate:在迁移学习的微调过程中一般不建议使用过大的学习率，通常来说1e-5是比较合适的选择。\n\n  #### 迁移学习往往还和你的任务中的数据关系密切，可以考虑以下几种情况。\n\n  - ##### 新的数据集较小，并且和pre-trained model所使用的训练数据集相似度较高\n\n    由于数据集较小，在进行finetune存在overfit的风险，又由于数据集和原始数据集相似度较高，因此二者不论是local feature还是global feature都比较相   近，所以此时最佳的方法是把CNN网络当做特征提取器然后训练一个分类器进行分类  \n\n  - ##### 新的数据集较大，并且和pre-trained model所使用的训练数据集相似度较高：\n\n    很明显，此时我们不用担心overfit，因此对全部网络结构进行fine-tune是较好的。\n\n  - ##### 新的数据集较小，并且和pre-trained model所使用的训练数据集差异很大： \n\n    由于数据集较小，不适合进行fine-tune，由于数据集差异大，应该在单独训练网络结构中较高的层，前面几层local的就不用训练了，直接固定权值。在实际中，这种问题下较好的解决方案一般是从网络的某层开始取出特征，然后训练SVM分类器。 \n\n  - ##### 新的数据集较大，并且和pre-trained model所使用的训练数据集差异很大：  \n\n    本来由于数据集较大，可以从头开始训练的，但是在实际中更偏向于训练整个pre-trained model的网络。\n\n  \n\n  ​    \n","source":"_posts/deep_learning/fine-tuning.md","raw":"---\ntitle: fine-tuning的方法\ntags: [深度学习,微调]\ncategories: [深度学习]\ndate: 2021-08-13 14:28:24\n---\n\n>收集关于深度学习的调参的相关笔记，主要用于网络训练的微调。\n\n### **训练技巧**\n\n1.要做**梯度归一化**,即算出来的梯度除以minibatch size\n\n2.clip c(梯度裁剪): 限制最大梯度,其实是value = sqrt(w1^2 +w2^2….),如果value超过了阈值,就算一个衰减系数,让value的值等于阈值: 5,10,15\n\n**3.防止过拟合**\n\n​\t一般常用的防止过拟合方法有使用**L1正则项、L2正则项、dropout、提前终止、数据集扩充等**。如果模型在训练集上表现比较好但在测试集上表现欠佳可以选择增大L1或L2正则的惩罚力度（**L2正则经验上首选1.0**，超过10很少见），或**增大dropout的随机失活概率**（经验首选0.5）；或者当随着训练的持续在测试集上不增反降时，使用提前终止训练的方法。当然**最有效的还是增大训练集的规模**，实在难以获得新数据也可以使用数据集增强的方法，比如CV任务可以对数据集进行裁剪、翻转、平移等方法进行数据集增强，这种方法往往都会提高最后模型的测试精度。\n \tdropout对小数据防止过拟合有很好的效果,值一般设为0.5,小数据上dropout+sgd。在大部分实验中，效果提升都非常明显.**建议尝试**。 dropout的位置比较有讲究, 对于RNN,建议放到输入->RNN与RNN->输出的位置.关于RNN如何用dropout,可以参考:[http://arxiv.org/abs/1409.2329](https://link.zhihu.com/?target=http%3A//arxiv.org/abs/1409.2329)(Captain Jack令言:(不仅仅可以防止过拟合, 其实这相当于做人力成本最低的Ensemble, 当然, 训练起来会比没有Dropout的要慢一点, 同时网络参数你最好相应加一点, 对, 这会再慢一点).)\n\n**4.超参** \n\n​\tlearning rate 最重要**，推荐了解 cosine learning rate 和 cyclic learning rate，其次是 **batchsize 和 weight decay**。当你的模型还不错的时候，可以试着做数据增广和改损失函数锦上添花了。(罗浩ZJU令言：随着网络训练的进行，学习率要逐渐降下来；网络性能越好，学习率要越小（即越需要微调而非粗调)；batchsize通常影响没那么大，塞满卡就行，除了特殊的算法需要batch大一点)\n​\tadam,adadelta等,在小数据上,我这里实验的效果不如sgd, sgd收敛速度会慢一些，但是最终收敛后的结果，一般都比较好。**如果使用sgd的话,可以选择从1.0或者0.1的学习率开始,隔一段时间,在验证集上检查一下,如果cost没有下降,就对**学习率减半**. 我看过很多论文都这么搞,我自己实验的结果也很好. 当然,也可以先用ada系列先跑,最后快收敛的时候,更换成sgd继续训练.同样也会有提升.据说adadelta一般在分类问题上效果比较好，adam在生成问题上效果比较好。(Captain Jack令言：sgd adam 这些选择上, 看你个人选择. 一般对网络不是决定性的. 反正我无脑用sgd + momentum. ）\n\n5.**激活函数**\n\t除了gate之类的地方,需要把输出限制成0-1之外,**尽量不要用sigmoid**,可以用tanh或者relu之类的激活函数.1. sigmoid函数在-4到4之外的区间梯度接近0，很容易造成梯度消失问题。2. 输入0均值，sigmoid函数的输出不是0均值的。（hzwer令言:虽然有至少十种激活函数，但在 Relu 外只推荐试一下 Swish。)\n\n6.BN层具有加速训练速度，有效防止梯度消失与梯度爆炸，具有防止过拟合的效果，所以构建网络时最好要加上这个组件。(Captain Jack令言：batch normalization我一直没用, 虽然我知道这个很好, 我不用仅仅是因为我懒. 所以要鼓励使用batch normalization.）\n\n7.如果你的模型包含全连接层（MLP），并且输入和输出大小一样，可以考虑将MLP替换成**Highway Network**,我尝试对结果有一点提升，建议作为最后提升模型的手段，原理很简单，就是给**输出加了一个gate来控制信息的流动**，详细介绍请参考论文: [http://arxiv.org/abs/1505.00387](https://link.zhihu.com/?target=http%3A//arxiv.org/abs/1505.00387)\n\n8.来自@张馨宇的技巧：**一轮加正则，一轮不加正则，反复进行。**\n\n**9.Ensemble**\nEnsemble是论文刷结果的终极核武器,深度学习中一般有以下几种方式\n同样的参数,不同的初始化方式\n不同的参数,通过cross-validation,选取最好的几组\n同样的参数,模型训练的不同阶段，即不同迭代次数的模型。\n不同的模型,进行线性融合. 例如RNN和传统模型.\n\n**10.自动调参方法**\n（1）Grid Search：其原理就像是在数组里找最大值。缺点是太费时间了，特别像神经网络，一般尝试不了太多的参数组合。\n（2）Random Search：经验上，Random Search比Gird Search更有效。实际操作的时候，一般也是先用Gird Search的方法，得到所有候选参数，然后每次从中随机选择进行训练。另外Random Search往往会和由粗到细的调参策略结合使用，即在效果比较好的参数附近进行更加精细的搜索。\n（3）Bayesian Optimization：贝叶斯优化，考虑到了不同参数对应的 实验结果值，因此更节省时间，贝叶斯调参比Grid Search迭代次数少， 速度快；而且其针对非凸问题依然稳健。\n\n**11.Loss设计**\n\\+ 一般来说分类就是Softmax, 回归就是L2的loss. 但是要注意loss的错误范围(主要是回归), 你预测一个label是10000的值, 模型输出0, 你算算这loss多大, 这还是单变量的情况下. 一般结果都是nan. 所以不仅仅输入要做normalization, 输出也要.\n\\+ 多任务情况下, 各loss想法限制在一个量级上, 或者最终限制在一个量级上, 初期可以着重一个任务的loss。\n\n### **网络结构设计（关于SE)**\n\nSE在分类上是个涨点必备的工具，换言之，堆最高精度是一定要给每个block都加上它的，但是如果需要考虑时间，参数量和精度等的trade-off，无脑堆就没有意义了，这个时候应该要选择在合适的地方使用合适的模块。这个时候，**推荐在block数量和添加SE上做权衡**，即**给部分blcok加上SE，同时砍掉一些block来加速**，这样可以在精度差不多的情况下减少一些参数量。当然inference时间这个事需要看具体的应用平台对SE的实现，就是GAP和FC的速度，这就具体问题具体分析了。**有余力有卡的人，可以迁移某种NAS方法来做这个的搜索。**\n参考自：\n你有哪些deep learning（rnn、cnn）调参的经验？ - 萧瑟的回答 - 知乎 https://www.zhihu.com/question/41631631/answer/94816420\n你有哪些deep learning（rnn、cnn）调参的经验？ - Towser的回答 - 知乎 https://www.zhihu.com/question/41631631/answer/862075836\n你有哪些deep learning（rnn、cnn）调参的经验？ - 罗浩.ZJU的回答 - 知乎 https://www.zhihu.com/question/41631631/answer/216788968\n你有哪些deep learning（rnn、cnn）调参的经验？ - 京东白条的回答 - 知乎 [https://www.zhihu.com/question/4163](https://www.zhihu.com/question/41631631/answer/776852832)\n\n> 所谓SE：SENet是Squeeze-and-Excitation Networks的简称，拿到了ImageNet2017分类比赛冠军，其效果得到了认可，其提出的SE模块思想简单，易于实现，并且很容易可以加载到现有的网络模型框架中。*<u>SENet主要是学习了channel之间的相关性，筛选出了针对通道的注意力</u>*，稍微增加了一点计算量，但是效果比较好。\n\n对于CNN网络来说，其核心计算是卷积算子，其通过卷积核从输入特征图学习到新特征图。从本质上讲，卷积是对一个局部区域进行特征融合，这包括空间上（H和W维度）以及通道间（C维度）的特征融合。\n\n\n![](https://picture.mulindya.com/fine-tuning-pic1.png)\n\n卷积实际上是对<u>局部区域</u>进行的特征融合。 这也导致了普通卷积神经网络的感受野不大，当然你也可以设计出更多的通道特征来增加这个，但是这样做导致了计算量大大的增加。因此为了空间上融合更多特征融合，或者是提取多尺度空间信息。也提出了许多不同的方法如Inception网络的多分支结构。对于channel维度的特征融合，卷积操作基本上默认对输入特征图的所有channel进行融合。<u>而SENet网络的创新点在于关注channel之间的关系，希望模型可以自动学习到不同channel特征的重要程度</u>。为此，SENet提出了Squeeze-and-Excitation (SE)模块，如下图所示：\n\n\n![](https://picture.mulindya.com/fine-tuning-pic2.png)\n\n### 反面训诫\n\n1.1、一上来就自己动手写模型。\n建议首先用**成熟的开源项目及其默认配置**（例如 Gluon 对经典模型的各种复现、各个著名模型作者自己放出来的代码仓库）在自己的数据集上跑一遍，在等程序运行结束的时间里仔细研究一下代码里的各种细节，最后再自己写或者改代码。\n\n1.2、**不推荐做人肉模型设计**，比如把某层卷积改大一点，或者微调一下通道数。除非有特别 insight，不要自己乱设计新组件。\n\n2、训 RNN 不加 gradient clipping，导致训练一段时间以后 loss 突然变成 Nan。\n\n3、tying input & output embedding（就是词向量层和输出 softmax 前的矩阵共享参数，在语言模型或机器翻译中常用）时学习率需要设置得非常小，不然容易 Nan。\n\n4.1、在数据集很大的情况下，一上来就跑全量数据。建议先用 1/100、1/10 的数据跑一跑，对模型性能和训练时间有个底。\n\n4.2认为网络层数越大越好。参数量什么的都不是大问题，在性能不丢的情况下，网络层数减到最小.（Captain Jack令言：你有95%概率不会使用超过40层的模型. ）\n\n5、只喜欢漂亮的模型结构，瞧不起调参数的论文/实验报告，**看论文时经常不看超参数设置等细节**。殊不知在自己没有太多资源实验的情况下，实验报告类文章简直是业界良心！\nNLP 领域主要推荐以下几篇：\nRegularizing and Optimizing LSTM Language Models（LSTM 的训练技巧）\nMassive Exploration of Neural Machine Translation Architectures（NMT 里各个超参的影响）\nTraining Tips for the Transformer Model（训练 Transformer 时会发生的各种现象）\nRoBERTa: A Robustly Optimized BERT Pretraining Approach（BERT 预训练技巧，虽然跟大部分人没啥关系）\nCV 我不算太熟，不过也可以勉强推荐几篇：\n\n[Training ImageNet in 1 Hour（大批量训练技巧）](https://arxiv.org/pdf/1706.02677.pdf)\n[Bag of Tricks for Image Classification with Convolutional Neural Networks（各种训练技巧集大成）](https://openaccess.thecvf.com/content_CVPR_2019/papers/He_Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks_CVPR_2019_paper.pdf)\n[EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks（当前对参数利用最有效的 CNN）](https://arxiv.org/pdf/1905.11946.pdf)\n\n6、对于loss这种受 batch size、sequence length 各种因素影响的数字，人是没有数感的，建议首先计算一下 per token loss（如果是多任务，可以每个任务单独算；类似地，某些 CV 任务可以计算 per pixel loss），心里有点感觉。**脱离损失函数的形式谈学习率没有意义**（例如单是对 batch size 求和或者取平均这个差异就会使梯度差成百上千倍）。\n在确定初始学习率的时候，从一个很小的值（例如 1e-7）开始，然后**每一步指数增大学习率（例如扩大1.05 倍）进行训练。**训练几百步应该能观察到损失函数随训练步数呈对勾形，选择损失下降最快那一段的学习率即可。\n(Captain Jack令言：**观察loss胜于观察准确率**\n准确率虽然是评测指标, 但是训练过程中还是要注意loss的. 你会发现有些情况下, 准确率是突变的, 原来一直是0, 可能保持上千迭代, 然后突然变1. 要是因为这个你提前中断训练了, 只有老天替你惋惜了. 而loss是不会有这么诡异的情况发生的, 毕竟优化目标是loss.\n给NN一点时间, 要根据任务留给NN的学习一定空间. 不能说前面一段时间没起色就不管了. 有些情况下就是前面一段时间看不出起色, 然后开始稳定学习.）\n\n7.1、优化器**只推荐** Momentum 和 Adam。在这些方面做尝试意义不大，如果性能提升反倒可能说明模型不成熟。\n\n7.2、**Adam 可以解决一堆奇奇怪怪的问题**（有时 loss 降不下去，换 Adam 瞬间就好了），**也可以带来一堆奇奇怪怪的问题**（比如单词词频差异很大，当前 batch 没有的单词的词向量也被更新；再比如Adam和L2正则结合产生的复杂效果）。用的时候要胆大心细，万一遇到问题找各种魔改 Adam（比如 [MaskedAdam](https://www.zhihu.com/question/265357659/answer/580469438), AdamW 啥的）抢救。\n\n8、subword 总是会很稳定地涨点，只管用就对了。\n\n9、**GPU 上报错时尽量放在 CPU 上重跑**，错误信息更友好。例如 \"ERROR:tensorflow:Model diverged with loss = NaN\" 其实很有可能是输入 ID 超出了 softmax 词表的范围。\n\n**10、别没耐心**！\n**有些指标是有滞后性的，需要等训练一段时间才开始动。**很多人训练几步看没什么效果就把程序停掉开始 debug 了，但其实代码毫无问题。如此反复好几天甚至一两周都在原地踏步，其实需要做的仅仅是让程序自个儿安安静静地跑上几个小时或者一天……\n\n### 相关trick\n\n-  fine-tuning: 通常来说，直接把预训练模型来用效果不一定足够好，因此需要进行fine-tuning（微调）。fine-tuning需要冻结网络的前几层参数，只更新网络结构的后面几层和最后的全连接层，这样效果会更好。\n\n-   Learning rate:在迁移学习的微调过程中一般不建议使用过大的学习率，通常来说1e-5是比较合适的选择。\n\n  #### 迁移学习往往还和你的任务中的数据关系密切，可以考虑以下几种情况。\n\n  - ##### 新的数据集较小，并且和pre-trained model所使用的训练数据集相似度较高\n\n    由于数据集较小，在进行finetune存在overfit的风险，又由于数据集和原始数据集相似度较高，因此二者不论是local feature还是global feature都比较相   近，所以此时最佳的方法是把CNN网络当做特征提取器然后训练一个分类器进行分类  \n\n  - ##### 新的数据集较大，并且和pre-trained model所使用的训练数据集相似度较高：\n\n    很明显，此时我们不用担心overfit，因此对全部网络结构进行fine-tune是较好的。\n\n  - ##### 新的数据集较小，并且和pre-trained model所使用的训练数据集差异很大： \n\n    由于数据集较小，不适合进行fine-tune，由于数据集差异大，应该在单独训练网络结构中较高的层，前面几层local的就不用训练了，直接固定权值。在实际中，这种问题下较好的解决方案一般是从网络的某层开始取出特征，然后训练SVM分类器。 \n\n  - ##### 新的数据集较大，并且和pre-trained model所使用的训练数据集差异很大：  \n\n    本来由于数据集较大，可以从头开始训练的，但是在实际中更偏向于训练整个pre-trained model的网络。\n\n  \n\n  ​    \n","slug":"deep_learning/fine-tuning","published":1,"updated":"2021-08-19T08:13:38.101Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxoc8000hugx4h6a0gl6h","content":"<blockquote>\n<p>收集关于深度学习的调参的相关笔记，主要用于网络训练的微调。</p>\n</blockquote>\n<h3 id=\"训练技巧\"><strong>训练技巧</strong></h3>\n<p>1.要做<strong>梯度归一化</strong>,即算出来的梯度除以minibatch size</p>\n<p>2.clip c(梯度裁剪): 限制最大梯度,其实是value = sqrt(w1^2 +w2^2….),如果value超过了阈值,就算一个衰减系数,让value的值等于阈值: 5,10,15</p>\n<p><strong>3.防止过拟合</strong></p>\n<p>​\t一般常用的防止过拟合方法有使用<strong>L1正则项、L2正则项、dropout、提前终止、数据集扩充等</strong>。如果模型在训练集上表现比较好但在测试集上表现欠佳可以选择增大L1或L2正则的惩罚力度（<strong>L2正则经验上首选1.0</strong>，超过10很少见），或<strong>增大dropout的随机失活概率</strong>（经验首选0.5）；或者当随着训练的持续在测试集上不增反降时，使用提前终止训练的方法。当然<strong>最有效的还是增大训练集的规模</strong>，实在难以获得新数据也可以使用数据集增强的方法，比如CV任务可以对数据集进行裁剪、翻转、平移等方法进行数据集增强，这种方法往往都会提高最后模型的测试精度。<br>\ndropout对小数据防止过拟合有很好的效果,值一般设为0.5,小数据上dropout+sgd。在大部分实验中，效果提升都非常明显.<strong>建议尝试</strong>。 dropout的位置比较有讲究, 对于RNN,建议放到输入-&gt;RNN与RNN-&gt;输出的位置.关于RNN如何用dropout,可以参考:<a href=\"https://link.zhihu.com/?target=http%3A//arxiv.org/abs/1409.2329\">http://arxiv.org/abs/1409.2329</a>(Captain Jack令言:(不仅仅可以防止过拟合, 其实这相当于做人力成本最低的Ensemble, 当然, 训练起来会比没有Dropout的要慢一点, 同时网络参数你最好相应加一点, 对, 这会再慢一点).)</p>\n<p><strong>4.超参</strong></p>\n<p>​\tlearning rate 最重要**，推荐了解 cosine learning rate 和 cyclic learning rate，其次是 <strong>batchsize 和 weight decay</strong>。当你的模型还不错的时候，可以试着做数据增广和改损失函数锦上添花了。(罗浩ZJU令言：随着网络训练的进行，学习率要逐渐降下来；网络性能越好，学习率要越小（即越需要微调而非粗调)；batchsize通常影响没那么大，塞满卡就行，除了特殊的算法需要batch大一点)<br>\n​\tadam,adadelta等,在小数据上,我这里实验的效果不如sgd, sgd收敛速度会慢一些，但是最终收敛后的结果，一般都比较好。<strong>如果使用sgd的话,可以选择从1.0或者0.1的学习率开始,隔一段时间,在验证集上检查一下,如果cost没有下降,就对</strong>学习率减半**. 我看过很多论文都这么搞,我自己实验的结果也很好. 当然,也可以先用ada系列先跑,最后快收敛的时候,更换成sgd继续训练.同样也会有提升.据说adadelta一般在分类问题上效果比较好，adam在生成问题上效果比较好。(Captain Jack令言：sgd adam 这些选择上, 看你个人选择. 一般对网络不是决定性的. 反正我无脑用sgd + momentum. ）</p>\n<p>5.<strong>激活函数</strong><br>\n除了gate之类的地方,需要把输出限制成0-1之外,<strong>尽量不要用sigmoid</strong>,可以用tanh或者relu之类的激活函数.1. sigmoid函数在-4到4之外的区间梯度接近0，很容易造成梯度消失问题。2. 输入0均值，sigmoid函数的输出不是0均值的。（hzwer令言:虽然有至少十种激活函数，但在 Relu 外只推荐试一下 Swish。)</p>\n<p>6.BN层具有加速训练速度，有效防止梯度消失与梯度爆炸，具有防止过拟合的效果，所以构建网络时最好要加上这个组件。(Captain Jack令言：batch normalization我一直没用, 虽然我知道这个很好, 我不用仅仅是因为我懒. 所以要鼓励使用batch normalization.）</p>\n<p>7.如果你的模型包含全连接层（MLP），并且输入和输出大小一样，可以考虑将MLP替换成<strong>Highway Network</strong>,我尝试对结果有一点提升，建议作为最后提升模型的手段，原理很简单，就是给<strong>输出加了一个gate来控制信息的流动</strong>，详细介绍请参考论文: <a href=\"https://link.zhihu.com/?target=http%3A//arxiv.org/abs/1505.00387\">http://arxiv.org/abs/1505.00387</a></p>\n<p>8.来自@张馨宇的技巧：<strong>一轮加正则，一轮不加正则，反复进行。</strong></p>\n<p><strong>9.Ensemble</strong><br>\nEnsemble是论文刷结果的终极核武器,深度学习中一般有以下几种方式<br>\n同样的参数,不同的初始化方式<br>\n不同的参数,通过cross-validation,选取最好的几组<br>\n同样的参数,模型训练的不同阶段，即不同迭代次数的模型。<br>\n不同的模型,进行线性融合. 例如RNN和传统模型.</p>\n<p><strong>10.自动调参方法</strong><br>\n（1）Grid Search：其原理就像是在数组里找最大值。缺点是太费时间了，特别像神经网络，一般尝试不了太多的参数组合。<br>\n（2）Random Search：经验上，Random Search比Gird Search更有效。实际操作的时候，一般也是先用Gird Search的方法，得到所有候选参数，然后每次从中随机选择进行训练。另外Random Search往往会和由粗到细的调参策略结合使用，即在效果比较好的参数附近进行更加精细的搜索。<br>\n（3）Bayesian Optimization：贝叶斯优化，考虑到了不同参数对应的 实验结果值，因此更节省时间，贝叶斯调参比Grid Search迭代次数少， 速度快；而且其针对非凸问题依然稳健。</p>\n<p><strong>11.Loss设计</strong><br>\n+ 一般来说分类就是Softmax, 回归就是L2的loss. 但是要注意loss的错误范围(主要是回归), 你预测一个label是10000的值, 模型输出0, 你算算这loss多大, 这还是单变量的情况下. 一般结果都是nan. 所以不仅仅输入要做normalization, 输出也要.<br>\n+ 多任务情况下, 各loss想法限制在一个量级上, 或者最终限制在一个量级上, 初期可以着重一个任务的loss。</p>\n<h3 id=\"网络结构设计（关于SE\"><strong>网络结构设计（关于SE)</strong></h3>\n<p>SE在分类上是个涨点必备的工具，换言之，堆最高精度是一定要给每个block都加上它的，但是如果需要考虑时间，参数量和精度等的trade-off，无脑堆就没有意义了，这个时候应该要选择在合适的地方使用合适的模块。这个时候，<strong>推荐在block数量和添加SE上做权衡</strong>，即<strong>给部分blcok加上SE，同时砍掉一些block来加速</strong>，这样可以在精度差不多的情况下减少一些参数量。当然inference时间这个事需要看具体的应用平台对SE的实现，就是GAP和FC的速度，这就具体问题具体分析了。<strong>有余力有卡的人，可以迁移某种NAS方法来做这个的搜索。</strong><br>\n参考自：<br>\n你有哪些deep learning（rnn、cnn）调参的经验？ - 萧瑟的回答 - 知乎 <a href=\"https://www.zhihu.com/question/41631631/answer/94816420\">https://www.zhihu.com/question/41631631/answer/94816420</a><br>\n你有哪些deep learning（rnn、cnn）调参的经验？ - Towser的回答 - 知乎 <a href=\"https://www.zhihu.com/question/41631631/answer/862075836\">https://www.zhihu.com/question/41631631/answer/862075836</a><br>\n你有哪些deep learning（rnn、cnn）调参的经验？ - 罗浩.ZJU的回答 - 知乎 <a href=\"https://www.zhihu.com/question/41631631/answer/216788968\">https://www.zhihu.com/question/41631631/answer/216788968</a><br>\n你有哪些deep learning（rnn、cnn）调参的经验？ - 京东白条的回答 - 知乎 <a href=\"https://www.zhihu.com/question/41631631/answer/776852832\">https://www.zhihu.com/question/4163</a></p>\n<blockquote>\n<p>所谓SE：SENet是Squeeze-and-Excitation Networks的简称，拿到了ImageNet2017分类比赛冠军，其效果得到了认可，其提出的SE模块思想简单，易于实现，并且很容易可以加载到现有的网络模型框架中。<em><u>SENet主要是学习了channel之间的相关性，筛选出了针对通道的注意力</u></em>，稍微增加了一点计算量，但是效果比较好。</p>\n</blockquote>\n<p>对于CNN网络来说，其核心计算是卷积算子，其通过卷积核从输入特征图学习到新特征图。从本质上讲，卷积是对一个局部区域进行特征融合，这包括空间上（H和W维度）以及通道间（C维度）的特征融合。</p>\n<p><img src=\"https://picture.mulindya.com/fine-tuning-pic1.png\" alt=\"\"></p>\n<p>卷积实际上是对<u>局部区域</u>进行的特征融合。 这也导致了普通卷积神经网络的感受野不大，当然你也可以设计出更多的通道特征来增加这个，但是这样做导致了计算量大大的增加。因此为了空间上融合更多特征融合，或者是提取多尺度空间信息。也提出了许多不同的方法如Inception网络的多分支结构。对于channel维度的特征融合，卷积操作基本上默认对输入特征图的所有channel进行融合。<u>而SENet网络的创新点在于关注channel之间的关系，希望模型可以自动学习到不同channel特征的重要程度</u>。为此，SENet提出了Squeeze-and-Excitation (SE)模块，如下图所示：</p>\n<p><img src=\"https://picture.mulindya.com/fine-tuning-pic2.png\" alt=\"\"></p>\n<h3 id=\"反面训诫\">反面训诫</h3>\n<p>1.1、一上来就自己动手写模型。<br>\n建议首先用<strong>成熟的开源项目及其默认配置</strong>（例如 Gluon 对经典模型的各种复现、各个著名模型作者自己放出来的代码仓库）在自己的数据集上跑一遍，在等程序运行结束的时间里仔细研究一下代码里的各种细节，最后再自己写或者改代码。</p>\n<p>1.2、<strong>不推荐做人肉模型设计</strong>，比如把某层卷积改大一点，或者微调一下通道数。除非有特别 insight，不要自己乱设计新组件。</p>\n<p>2、训 RNN 不加 gradient clipping，导致训练一段时间以后 loss 突然变成 Nan。</p>\n<p>3、tying input &amp; output embedding（就是词向量层和输出 softmax 前的矩阵共享参数，在语言模型或机器翻译中常用）时学习率需要设置得非常小，不然容易 Nan。</p>\n<p>4.1、在数据集很大的情况下，一上来就跑全量数据。建议先用 1/100、1/10 的数据跑一跑，对模型性能和训练时间有个底。</p>\n<p>4.2认为网络层数越大越好。参数量什么的都不是大问题，在性能不丢的情况下，网络层数减到最小.（Captain Jack令言：你有95%概率不会使用超过40层的模型. ）</p>\n<p>5、只喜欢漂亮的模型结构，瞧不起调参数的论文/实验报告，<strong>看论文时经常不看超参数设置等细节</strong>。殊不知在自己没有太多资源实验的情况下，实验报告类文章简直是业界良心！<br>\nNLP 领域主要推荐以下几篇：<br>\nRegularizing and Optimizing LSTM Language Models（LSTM 的训练技巧）<br>\nMassive Exploration of Neural Machine Translation Architectures（NMT 里各个超参的影响）<br>\nTraining Tips for the Transformer Model（训练 Transformer 时会发生的各种现象）<br>\nRoBERTa: A Robustly Optimized BERT Pretraining Approach（BERT 预训练技巧，虽然跟大部分人没啥关系）<br>\nCV 我不算太熟，不过也可以勉强推荐几篇：</p>\n<p><a href=\"https://arxiv.org/pdf/1706.02677.pdf\">Training ImageNet in 1 Hour（大批量训练技巧）</a><br>\n<a href=\"https://openaccess.thecvf.com/content_CVPR_2019/papers/He_Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks_CVPR_2019_paper.pdf\">Bag of Tricks for Image Classification with Convolutional Neural Networks（各种训练技巧集大成）</a><br>\n<a href=\"https://arxiv.org/pdf/1905.11946.pdf\">EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks（当前对参数利用最有效的 CNN）</a></p>\n<p>6、对于loss这种受 batch size、sequence length 各种因素影响的数字，人是没有数感的，建议首先计算一下 per token loss（如果是多任务，可以每个任务单独算；类似地，某些 CV 任务可以计算 per pixel loss），心里有点感觉。<strong>脱离损失函数的形式谈学习率没有意义</strong>（例如单是对 batch size 求和或者取平均这个差异就会使梯度差成百上千倍）。<br>\n在确定初始学习率的时候，从一个很小的值（例如 1e-7）开始，然后**每一步指数增大学习率（例如扩大1.05 倍）进行训练。**训练几百步应该能观察到损失函数随训练步数呈对勾形，选择损失下降最快那一段的学习率即可。<br>\n(Captain Jack令言：<strong>观察loss胜于观察准确率</strong><br>\n准确率虽然是评测指标, 但是训练过程中还是要注意loss的. 你会发现有些情况下, 准确率是突变的, 原来一直是0, 可能保持上千迭代, 然后突然变1. 要是因为这个你提前中断训练了, 只有老天替你惋惜了. 而loss是不会有这么诡异的情况发生的, 毕竟优化目标是loss.<br>\n给NN一点时间, 要根据任务留给NN的学习一定空间. 不能说前面一段时间没起色就不管了. 有些情况下就是前面一段时间看不出起色, 然后开始稳定学习.）</p>\n<p>7.1、优化器<strong>只推荐</strong> Momentum 和 Adam。在这些方面做尝试意义不大，如果性能提升反倒可能说明模型不成熟。</p>\n<p>7.2、<strong>Adam 可以解决一堆奇奇怪怪的问题</strong>（有时 loss 降不下去，换 Adam 瞬间就好了），<strong>也可以带来一堆奇奇怪怪的问题</strong>（比如单词词频差异很大，当前 batch 没有的单词的词向量也被更新；再比如Adam和L2正则结合产生的复杂效果）。用的时候要胆大心细，万一遇到问题找各种魔改 Adam（比如 <a href=\"https://www.zhihu.com/question/265357659/answer/580469438\">MaskedAdam</a>, AdamW 啥的）抢救。</p>\n<p>8、subword 总是会很稳定地涨点，只管用就对了。</p>\n<p>9、<strong>GPU 上报错时尽量放在 CPU 上重跑</strong>，错误信息更友好。例如 “ERROR:tensorflow:Model diverged with loss = NaN” 其实很有可能是输入 ID 超出了 softmax 词表的范围。</p>\n<p><strong>10、别没耐心</strong>！<br>\n**有些指标是有滞后性的，需要等训练一段时间才开始动。**很多人训练几步看没什么效果就把程序停掉开始 debug 了，但其实代码毫无问题。如此反复好几天甚至一两周都在原地踏步，其实需要做的仅仅是让程序自个儿安安静静地跑上几个小时或者一天……</p>\n<h3 id=\"相关trick\">相关trick</h3>\n<ul>\n<li>\n<p>fine-tuning: 通常来说，直接把预训练模型来用效果不一定足够好，因此需要进行fine-tuning（微调）。fine-tuning需要冻结网络的前几层参数，只更新网络结构的后面几层和最后的全连接层，这样效果会更好。</p>\n</li>\n<li>\n<p>Learning rate:在迁移学习的微调过程中一般不建议使用过大的学习率，通常来说1e-5是比较合适的选择。</p>\n</li>\n</ul>\n<h4 id=\"迁移学习往往还和你的任务中的数据关系密切，可以考虑以下几种情况。\">迁移学习往往还和你的任务中的数据关系密切，可以考虑以下几种情况。</h4>\n<ul>\n<li>\n<h5 id=\"新的数据集较小，并且和pre-trained-model所使用的训练数据集相似度较高\">新的数据集较小，并且和pre-trained model所使用的训练数据集相似度较高</h5>\n<p>由于数据集较小，在进行finetune存在overfit的风险，又由于数据集和原始数据集相似度较高，因此二者不论是local feature还是global feature都比较相   近，所以此时最佳的方法是把CNN网络当做特征提取器然后训练一个分类器进行分类</p>\n</li>\n<li>\n<h5 id=\"新的数据集较大，并且和pre-trained-model所使用的训练数据集相似度较高：\">新的数据集较大，并且和pre-trained model所使用的训练数据集相似度较高：</h5>\n<p>很明显，此时我们不用担心overfit，因此对全部网络结构进行fine-tune是较好的。</p>\n</li>\n<li>\n<h5 id=\"新的数据集较小，并且和pre-trained-model所使用的训练数据集差异很大：\">新的数据集较小，并且和pre-trained model所使用的训练数据集差异很大：</h5>\n<p>由于数据集较小，不适合进行fine-tune，由于数据集差异大，应该在单独训练网络结构中较高的层，前面几层local的就不用训练了，直接固定权值。在实际中，这种问题下较好的解决方案一般是从网络的某层开始取出特征，然后训练SVM分类器。</p>\n</li>\n<li>\n<h5 id=\"新的数据集较大，并且和pre-trained-model所使用的训练数据集差异很大：\">新的数据集较大，并且和pre-trained model所使用的训练数据集差异很大：</h5>\n<p>本来由于数据集较大，可以从头开始训练的，但是在实际中更偏向于训练整个pre-trained model的网络。</p>\n</li>\n</ul>\n<p>​</p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>收集关于深度学习的调参的相关笔记，主要用于网络训练的微调。</p>\n</blockquote>\n<h3 id=\"训练技巧\"><strong>训练技巧</strong></h3>\n<p>1.要做<strong>梯度归一化</strong>,即算出来的梯度除以minibatch size</p>\n<p>2.clip c(梯度裁剪): 限制最大梯度,其实是value = sqrt(w1^2 +w2^2….),如果value超过了阈值,就算一个衰减系数,让value的值等于阈值: 5,10,15</p>\n<p><strong>3.防止过拟合</strong></p>\n<p>​\t一般常用的防止过拟合方法有使用<strong>L1正则项、L2正则项、dropout、提前终止、数据集扩充等</strong>。如果模型在训练集上表现比较好但在测试集上表现欠佳可以选择增大L1或L2正则的惩罚力度（<strong>L2正则经验上首选1.0</strong>，超过10很少见），或<strong>增大dropout的随机失活概率</strong>（经验首选0.5）；或者当随着训练的持续在测试集上不增反降时，使用提前终止训练的方法。当然<strong>最有效的还是增大训练集的规模</strong>，实在难以获得新数据也可以使用数据集增强的方法，比如CV任务可以对数据集进行裁剪、翻转、平移等方法进行数据集增强，这种方法往往都会提高最后模型的测试精度。<br>\ndropout对小数据防止过拟合有很好的效果,值一般设为0.5,小数据上dropout+sgd。在大部分实验中，效果提升都非常明显.<strong>建议尝试</strong>。 dropout的位置比较有讲究, 对于RNN,建议放到输入-&gt;RNN与RNN-&gt;输出的位置.关于RNN如何用dropout,可以参考:<a href=\"https://link.zhihu.com/?target=http%3A//arxiv.org/abs/1409.2329\">http://arxiv.org/abs/1409.2329</a>(Captain Jack令言:(不仅仅可以防止过拟合, 其实这相当于做人力成本最低的Ensemble, 当然, 训练起来会比没有Dropout的要慢一点, 同时网络参数你最好相应加一点, 对, 这会再慢一点).)</p>\n<p><strong>4.超参</strong></p>\n<p>​\tlearning rate 最重要**，推荐了解 cosine learning rate 和 cyclic learning rate，其次是 <strong>batchsize 和 weight decay</strong>。当你的模型还不错的时候，可以试着做数据增广和改损失函数锦上添花了。(罗浩ZJU令言：随着网络训练的进行，学习率要逐渐降下来；网络性能越好，学习率要越小（即越需要微调而非粗调)；batchsize通常影响没那么大，塞满卡就行，除了特殊的算法需要batch大一点)<br>\n​\tadam,adadelta等,在小数据上,我这里实验的效果不如sgd, sgd收敛速度会慢一些，但是最终收敛后的结果，一般都比较好。<strong>如果使用sgd的话,可以选择从1.0或者0.1的学习率开始,隔一段时间,在验证集上检查一下,如果cost没有下降,就对</strong>学习率减半**. 我看过很多论文都这么搞,我自己实验的结果也很好. 当然,也可以先用ada系列先跑,最后快收敛的时候,更换成sgd继续训练.同样也会有提升.据说adadelta一般在分类问题上效果比较好，adam在生成问题上效果比较好。(Captain Jack令言：sgd adam 这些选择上, 看你个人选择. 一般对网络不是决定性的. 反正我无脑用sgd + momentum. ）</p>\n<p>5.<strong>激活函数</strong><br>\n除了gate之类的地方,需要把输出限制成0-1之外,<strong>尽量不要用sigmoid</strong>,可以用tanh或者relu之类的激活函数.1. sigmoid函数在-4到4之外的区间梯度接近0，很容易造成梯度消失问题。2. 输入0均值，sigmoid函数的输出不是0均值的。（hzwer令言:虽然有至少十种激活函数，但在 Relu 外只推荐试一下 Swish。)</p>\n<p>6.BN层具有加速训练速度，有效防止梯度消失与梯度爆炸，具有防止过拟合的效果，所以构建网络时最好要加上这个组件。(Captain Jack令言：batch normalization我一直没用, 虽然我知道这个很好, 我不用仅仅是因为我懒. 所以要鼓励使用batch normalization.）</p>\n<p>7.如果你的模型包含全连接层（MLP），并且输入和输出大小一样，可以考虑将MLP替换成<strong>Highway Network</strong>,我尝试对结果有一点提升，建议作为最后提升模型的手段，原理很简单，就是给<strong>输出加了一个gate来控制信息的流动</strong>，详细介绍请参考论文: <a href=\"https://link.zhihu.com/?target=http%3A//arxiv.org/abs/1505.00387\">http://arxiv.org/abs/1505.00387</a></p>\n<p>8.来自@张馨宇的技巧：<strong>一轮加正则，一轮不加正则，反复进行。</strong></p>\n<p><strong>9.Ensemble</strong><br>\nEnsemble是论文刷结果的终极核武器,深度学习中一般有以下几种方式<br>\n同样的参数,不同的初始化方式<br>\n不同的参数,通过cross-validation,选取最好的几组<br>\n同样的参数,模型训练的不同阶段，即不同迭代次数的模型。<br>\n不同的模型,进行线性融合. 例如RNN和传统模型.</p>\n<p><strong>10.自动调参方法</strong><br>\n（1）Grid Search：其原理就像是在数组里找最大值。缺点是太费时间了，特别像神经网络，一般尝试不了太多的参数组合。<br>\n（2）Random Search：经验上，Random Search比Gird Search更有效。实际操作的时候，一般也是先用Gird Search的方法，得到所有候选参数，然后每次从中随机选择进行训练。另外Random Search往往会和由粗到细的调参策略结合使用，即在效果比较好的参数附近进行更加精细的搜索。<br>\n（3）Bayesian Optimization：贝叶斯优化，考虑到了不同参数对应的 实验结果值，因此更节省时间，贝叶斯调参比Grid Search迭代次数少， 速度快；而且其针对非凸问题依然稳健。</p>\n<p><strong>11.Loss设计</strong><br>\n+ 一般来说分类就是Softmax, 回归就是L2的loss. 但是要注意loss的错误范围(主要是回归), 你预测一个label是10000的值, 模型输出0, 你算算这loss多大, 这还是单变量的情况下. 一般结果都是nan. 所以不仅仅输入要做normalization, 输出也要.<br>\n+ 多任务情况下, 各loss想法限制在一个量级上, 或者最终限制在一个量级上, 初期可以着重一个任务的loss。</p>\n<h3 id=\"网络结构设计（关于SE\"><strong>网络结构设计（关于SE)</strong></h3>\n<p>SE在分类上是个涨点必备的工具，换言之，堆最高精度是一定要给每个block都加上它的，但是如果需要考虑时间，参数量和精度等的trade-off，无脑堆就没有意义了，这个时候应该要选择在合适的地方使用合适的模块。这个时候，<strong>推荐在block数量和添加SE上做权衡</strong>，即<strong>给部分blcok加上SE，同时砍掉一些block来加速</strong>，这样可以在精度差不多的情况下减少一些参数量。当然inference时间这个事需要看具体的应用平台对SE的实现，就是GAP和FC的速度，这就具体问题具体分析了。<strong>有余力有卡的人，可以迁移某种NAS方法来做这个的搜索。</strong><br>\n参考自：<br>\n你有哪些deep learning（rnn、cnn）调参的经验？ - 萧瑟的回答 - 知乎 <a href=\"https://www.zhihu.com/question/41631631/answer/94816420\">https://www.zhihu.com/question/41631631/answer/94816420</a><br>\n你有哪些deep learning（rnn、cnn）调参的经验？ - Towser的回答 - 知乎 <a href=\"https://www.zhihu.com/question/41631631/answer/862075836\">https://www.zhihu.com/question/41631631/answer/862075836</a><br>\n你有哪些deep learning（rnn、cnn）调参的经验？ - 罗浩.ZJU的回答 - 知乎 <a href=\"https://www.zhihu.com/question/41631631/answer/216788968\">https://www.zhihu.com/question/41631631/answer/216788968</a><br>\n你有哪些deep learning（rnn、cnn）调参的经验？ - 京东白条的回答 - 知乎 <a href=\"https://www.zhihu.com/question/41631631/answer/776852832\">https://www.zhihu.com/question/4163</a></p>\n<blockquote>\n<p>所谓SE：SENet是Squeeze-and-Excitation Networks的简称，拿到了ImageNet2017分类比赛冠军，其效果得到了认可，其提出的SE模块思想简单，易于实现，并且很容易可以加载到现有的网络模型框架中。<em><u>SENet主要是学习了channel之间的相关性，筛选出了针对通道的注意力</u></em>，稍微增加了一点计算量，但是效果比较好。</p>\n</blockquote>\n<p>对于CNN网络来说，其核心计算是卷积算子，其通过卷积核从输入特征图学习到新特征图。从本质上讲，卷积是对一个局部区域进行特征融合，这包括空间上（H和W维度）以及通道间（C维度）的特征融合。</p>\n<p><img src=\"https://picture.mulindya.com/fine-tuning-pic1.png\" alt=\"\"></p>\n<p>卷积实际上是对<u>局部区域</u>进行的特征融合。 这也导致了普通卷积神经网络的感受野不大，当然你也可以设计出更多的通道特征来增加这个，但是这样做导致了计算量大大的增加。因此为了空间上融合更多特征融合，或者是提取多尺度空间信息。也提出了许多不同的方法如Inception网络的多分支结构。对于channel维度的特征融合，卷积操作基本上默认对输入特征图的所有channel进行融合。<u>而SENet网络的创新点在于关注channel之间的关系，希望模型可以自动学习到不同channel特征的重要程度</u>。为此，SENet提出了Squeeze-and-Excitation (SE)模块，如下图所示：</p>\n<p><img src=\"https://picture.mulindya.com/fine-tuning-pic2.png\" alt=\"\"></p>\n<h3 id=\"反面训诫\">反面训诫</h3>\n<p>1.1、一上来就自己动手写模型。<br>\n建议首先用<strong>成熟的开源项目及其默认配置</strong>（例如 Gluon 对经典模型的各种复现、各个著名模型作者自己放出来的代码仓库）在自己的数据集上跑一遍，在等程序运行结束的时间里仔细研究一下代码里的各种细节，最后再自己写或者改代码。</p>\n<p>1.2、<strong>不推荐做人肉模型设计</strong>，比如把某层卷积改大一点，或者微调一下通道数。除非有特别 insight，不要自己乱设计新组件。</p>\n<p>2、训 RNN 不加 gradient clipping，导致训练一段时间以后 loss 突然变成 Nan。</p>\n<p>3、tying input &amp; output embedding（就是词向量层和输出 softmax 前的矩阵共享参数，在语言模型或机器翻译中常用）时学习率需要设置得非常小，不然容易 Nan。</p>\n<p>4.1、在数据集很大的情况下，一上来就跑全量数据。建议先用 1/100、1/10 的数据跑一跑，对模型性能和训练时间有个底。</p>\n<p>4.2认为网络层数越大越好。参数量什么的都不是大问题，在性能不丢的情况下，网络层数减到最小.（Captain Jack令言：你有95%概率不会使用超过40层的模型. ）</p>\n<p>5、只喜欢漂亮的模型结构，瞧不起调参数的论文/实验报告，<strong>看论文时经常不看超参数设置等细节</strong>。殊不知在自己没有太多资源实验的情况下，实验报告类文章简直是业界良心！<br>\nNLP 领域主要推荐以下几篇：<br>\nRegularizing and Optimizing LSTM Language Models（LSTM 的训练技巧）<br>\nMassive Exploration of Neural Machine Translation Architectures（NMT 里各个超参的影响）<br>\nTraining Tips for the Transformer Model（训练 Transformer 时会发生的各种现象）<br>\nRoBERTa: A Robustly Optimized BERT Pretraining Approach（BERT 预训练技巧，虽然跟大部分人没啥关系）<br>\nCV 我不算太熟，不过也可以勉强推荐几篇：</p>\n<p><a href=\"https://arxiv.org/pdf/1706.02677.pdf\">Training ImageNet in 1 Hour（大批量训练技巧）</a><br>\n<a href=\"https://openaccess.thecvf.com/content_CVPR_2019/papers/He_Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks_CVPR_2019_paper.pdf\">Bag of Tricks for Image Classification with Convolutional Neural Networks（各种训练技巧集大成）</a><br>\n<a href=\"https://arxiv.org/pdf/1905.11946.pdf\">EfficientNet: Rethinking Model Scaling for Convolutional Neural Networks（当前对参数利用最有效的 CNN）</a></p>\n<p>6、对于loss这种受 batch size、sequence length 各种因素影响的数字，人是没有数感的，建议首先计算一下 per token loss（如果是多任务，可以每个任务单独算；类似地，某些 CV 任务可以计算 per pixel loss），心里有点感觉。<strong>脱离损失函数的形式谈学习率没有意义</strong>（例如单是对 batch size 求和或者取平均这个差异就会使梯度差成百上千倍）。<br>\n在确定初始学习率的时候，从一个很小的值（例如 1e-7）开始，然后**每一步指数增大学习率（例如扩大1.05 倍）进行训练。**训练几百步应该能观察到损失函数随训练步数呈对勾形，选择损失下降最快那一段的学习率即可。<br>\n(Captain Jack令言：<strong>观察loss胜于观察准确率</strong><br>\n准确率虽然是评测指标, 但是训练过程中还是要注意loss的. 你会发现有些情况下, 准确率是突变的, 原来一直是0, 可能保持上千迭代, 然后突然变1. 要是因为这个你提前中断训练了, 只有老天替你惋惜了. 而loss是不会有这么诡异的情况发生的, 毕竟优化目标是loss.<br>\n给NN一点时间, 要根据任务留给NN的学习一定空间. 不能说前面一段时间没起色就不管了. 有些情况下就是前面一段时间看不出起色, 然后开始稳定学习.）</p>\n<p>7.1、优化器<strong>只推荐</strong> Momentum 和 Adam。在这些方面做尝试意义不大，如果性能提升反倒可能说明模型不成熟。</p>\n<p>7.2、<strong>Adam 可以解决一堆奇奇怪怪的问题</strong>（有时 loss 降不下去，换 Adam 瞬间就好了），<strong>也可以带来一堆奇奇怪怪的问题</strong>（比如单词词频差异很大，当前 batch 没有的单词的词向量也被更新；再比如Adam和L2正则结合产生的复杂效果）。用的时候要胆大心细，万一遇到问题找各种魔改 Adam（比如 <a href=\"https://www.zhihu.com/question/265357659/answer/580469438\">MaskedAdam</a>, AdamW 啥的）抢救。</p>\n<p>8、subword 总是会很稳定地涨点，只管用就对了。</p>\n<p>9、<strong>GPU 上报错时尽量放在 CPU 上重跑</strong>，错误信息更友好。例如 “ERROR:tensorflow:Model diverged with loss = NaN” 其实很有可能是输入 ID 超出了 softmax 词表的范围。</p>\n<p><strong>10、别没耐心</strong>！<br>\n**有些指标是有滞后性的，需要等训练一段时间才开始动。**很多人训练几步看没什么效果就把程序停掉开始 debug 了，但其实代码毫无问题。如此反复好几天甚至一两周都在原地踏步，其实需要做的仅仅是让程序自个儿安安静静地跑上几个小时或者一天……</p>\n<h3 id=\"相关trick\">相关trick</h3>\n<ul>\n<li>\n<p>fine-tuning: 通常来说，直接把预训练模型来用效果不一定足够好，因此需要进行fine-tuning（微调）。fine-tuning需要冻结网络的前几层参数，只更新网络结构的后面几层和最后的全连接层，这样效果会更好。</p>\n</li>\n<li>\n<p>Learning rate:在迁移学习的微调过程中一般不建议使用过大的学习率，通常来说1e-5是比较合适的选择。</p>\n</li>\n</ul>\n<h4 id=\"迁移学习往往还和你的任务中的数据关系密切，可以考虑以下几种情况。\">迁移学习往往还和你的任务中的数据关系密切，可以考虑以下几种情况。</h4>\n<ul>\n<li>\n<h5 id=\"新的数据集较小，并且和pre-trained-model所使用的训练数据集相似度较高\">新的数据集较小，并且和pre-trained model所使用的训练数据集相似度较高</h5>\n<p>由于数据集较小，在进行finetune存在overfit的风险，又由于数据集和原始数据集相似度较高，因此二者不论是local feature还是global feature都比较相   近，所以此时最佳的方法是把CNN网络当做特征提取器然后训练一个分类器进行分类</p>\n</li>\n<li>\n<h5 id=\"新的数据集较大，并且和pre-trained-model所使用的训练数据集相似度较高：\">新的数据集较大，并且和pre-trained model所使用的训练数据集相似度较高：</h5>\n<p>很明显，此时我们不用担心overfit，因此对全部网络结构进行fine-tune是较好的。</p>\n</li>\n<li>\n<h5 id=\"新的数据集较小，并且和pre-trained-model所使用的训练数据集差异很大：\">新的数据集较小，并且和pre-trained model所使用的训练数据集差异很大：</h5>\n<p>由于数据集较小，不适合进行fine-tune，由于数据集差异大，应该在单独训练网络结构中较高的层，前面几层local的就不用训练了，直接固定权值。在实际中，这种问题下较好的解决方案一般是从网络的某层开始取出特征，然后训练SVM分类器。</p>\n</li>\n<li>\n<h5 id=\"新的数据集较大，并且和pre-trained-model所使用的训练数据集差异很大：\">新的数据集较大，并且和pre-trained model所使用的训练数据集差异很大：</h5>\n<p>本来由于数据集较大，可以从头开始训练的，但是在实际中更偏向于训练整个pre-trained model的网络。</p>\n</li>\n</ul>\n<p>​</p>\n"},{"title":"梯度裁剪","date":"2021-08-12T02:20:29.000Z","math":true,"_content":"\n>阅读代码 optimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))，就此探究一下grap_clip。他的作用是梯度裁剪，为了防止梯度爆炸。其中max_norm是最大梯度阈值，norm_type是指定的范数类型。\n\n## 梯度爆炸\n\n梯度爆炸就是在梯度更新的时候偏导数很大，导致更新参数无法收敛到最值（总是跳到其他不好的地方）。\n\n$$\nw_1=w_1− \\alpha \\frac{∂J(w)}{∂w1} \n$$\n\n$$\nw_2=w_2− \\alpha \\frac{∂J(w)}{∂w2}\n$$\n\n![](https://picture.mulindya.com/gradient-exp-pic1.png)\n\n## 梯度裁剪\n\n梯度裁剪是解决**梯度爆炸**的一种高效的方法，这里介绍梯度裁剪（Gradient Clipping）的方法，对梯度进行裁剪，论文提出对梯度的L2范数进行裁剪，也就是所有参数偏导数的平方和再开方。\n$$\ng_1=\\frac{∂J(w)}{∂w1} \n$$\n\n$$\ng_2=\\frac{∂J(w)}{∂w2}\n$$\n\n设定裁剪阈值为 C = max_norm，$\\Vert g\\Vert_2= \\sqrt{g^2_1+g^2_2}$\n\n当$\\Vert g\\Vert_2$大于c时：\n\n$$\ng = \\frac{c}{\\Vert g \\Vert_2} \\cdot g\n$$\n当$\\Vert g\\Vert_2$小于等于C时：g不变。其中，$\\frac{c}{\\Vert g \\Vert_2}$是一个标量\n\n## 总结\n\n训练模型出现Loss值出现跳动，一直不收敛时，除了设小学习率之外，梯度裁剪也是一个好方法。\n\n然而效果不佳时，那这就跟学习率和梯度爆炸没啥关系了。因此，**学习率**的设定和**梯度裁剪**的阈值并不能提高模型的准确率\n\n","source":"_posts/deep_learning/gradient-clip.md","raw":"---\ntitle: 梯度裁剪\ntags: [深度学习，梯度]\ncategories: 深度学习\ndate: 2021-08-12 10:20:29\nmath: true\n---\n\n>阅读代码 optimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))，就此探究一下grap_clip。他的作用是梯度裁剪，为了防止梯度爆炸。其中max_norm是最大梯度阈值，norm_type是指定的范数类型。\n\n## 梯度爆炸\n\n梯度爆炸就是在梯度更新的时候偏导数很大，导致更新参数无法收敛到最值（总是跳到其他不好的地方）。\n\n$$\nw_1=w_1− \\alpha \\frac{∂J(w)}{∂w1} \n$$\n\n$$\nw_2=w_2− \\alpha \\frac{∂J(w)}{∂w2}\n$$\n\n![](https://picture.mulindya.com/gradient-exp-pic1.png)\n\n## 梯度裁剪\n\n梯度裁剪是解决**梯度爆炸**的一种高效的方法，这里介绍梯度裁剪（Gradient Clipping）的方法，对梯度进行裁剪，论文提出对梯度的L2范数进行裁剪，也就是所有参数偏导数的平方和再开方。\n$$\ng_1=\\frac{∂J(w)}{∂w1} \n$$\n\n$$\ng_2=\\frac{∂J(w)}{∂w2}\n$$\n\n设定裁剪阈值为 C = max_norm，$\\Vert g\\Vert_2= \\sqrt{g^2_1+g^2_2}$\n\n当$\\Vert g\\Vert_2$大于c时：\n\n$$\ng = \\frac{c}{\\Vert g \\Vert_2} \\cdot g\n$$\n当$\\Vert g\\Vert_2$小于等于C时：g不变。其中，$\\frac{c}{\\Vert g \\Vert_2}$是一个标量\n\n## 总结\n\n训练模型出现Loss值出现跳动，一直不收敛时，除了设小学习率之外，梯度裁剪也是一个好方法。\n\n然而效果不佳时，那这就跟学习率和梯度爆炸没啥关系了。因此，**学习率**的设定和**梯度裁剪**的阈值并不能提高模型的准确率\n\n","slug":"deep_learning/gradient-clip","published":1,"updated":"2021-08-19T07:58:55.159Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxoca000kugx4hlu2fium","content":"<blockquote>\n<p>阅读代码 optimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))，就此探究一下grap_clip。他的作用是梯度裁剪，为了防止梯度爆炸。其中max_norm是最大梯度阈值，norm_type是指定的范数类型。</p>\n</blockquote>\n<h2 id=\"梯度爆炸\">梯度爆炸</h2>\n<p>梯度爆炸就是在梯度更新的时候偏导数很大，导致更新参数无法收敛到最值（总是跳到其他不好的地方）。</p>\n<p>$$<br>\nw_1=w_1− \\alpha \\frac{∂J(w)}{∂w1}<br>\n$$</p>\n<p>$$<br>\nw_2=w_2− \\alpha \\frac{∂J(w)}{∂w2}<br>\n$$</p>\n<p><img src=\"https://picture.mulindya.com/gradient-exp-pic1.png\" alt=\"\"></p>\n<h2 id=\"梯度裁剪\">梯度裁剪</h2>\n<p>梯度裁剪是解决<strong>梯度爆炸</strong>的一种高效的方法，这里介绍梯度裁剪（Gradient Clipping）的方法，对梯度进行裁剪，论文提出对梯度的L2范数进行裁剪，也就是所有参数偏导数的平方和再开方。<br>\n$$<br>\ng_1=\\frac{∂J(w)}{∂w1}<br>\n$$</p>\n<p>$$<br>\ng_2=\\frac{∂J(w)}{∂w2}<br>\n$$</p>\n<p>设定裁剪阈值为 C = max_norm，$\\Vert g\\Vert_2= \\sqrt{g<sup>2_1+g</sup>2_2}$</p>\n<p>当$\\Vert g\\Vert_2$大于c时：</p>\n<p>$$<br>\ng = \\frac{c}{\\Vert g \\Vert_2} \\cdot g<br>\n$$<br>\n当$\\Vert g\\Vert_2$小于等于C时：g不变。其中，$\\frac{c}{\\Vert g \\Vert_2}$是一个标量</p>\n<h2 id=\"总结\">总结</h2>\n<p>训练模型出现Loss值出现跳动，一直不收敛时，除了设小学习率之外，梯度裁剪也是一个好方法。</p>\n<p>然而效果不佳时，那这就跟学习率和梯度爆炸没啥关系了。因此，<strong>学习率</strong>的设定和<strong>梯度裁剪</strong>的阈值并不能提高模型的准确率</p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>阅读代码 optimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))，就此探究一下grap_clip。他的作用是梯度裁剪，为了防止梯度爆炸。其中max_norm是最大梯度阈值，norm_type是指定的范数类型。</p>\n</blockquote>\n<h2 id=\"梯度爆炸\">梯度爆炸</h2>\n<p>梯度爆炸就是在梯度更新的时候偏导数很大，导致更新参数无法收敛到最值（总是跳到其他不好的地方）。</p>\n<p>$$<br>\nw_1=w_1− \\alpha \\frac{∂J(w)}{∂w1}<br>\n$$</p>\n<p>$$<br>\nw_2=w_2− \\alpha \\frac{∂J(w)}{∂w2}<br>\n$$</p>\n<p><img src=\"https://picture.mulindya.com/gradient-exp-pic1.png\" alt=\"\"></p>\n<h2 id=\"梯度裁剪\">梯度裁剪</h2>\n<p>梯度裁剪是解决<strong>梯度爆炸</strong>的一种高效的方法，这里介绍梯度裁剪（Gradient Clipping）的方法，对梯度进行裁剪，论文提出对梯度的L2范数进行裁剪，也就是所有参数偏导数的平方和再开方。<br>\n$$<br>\ng_1=\\frac{∂J(w)}{∂w1}<br>\n$$</p>\n<p>$$<br>\ng_2=\\frac{∂J(w)}{∂w2}<br>\n$$</p>\n<p>设定裁剪阈值为 C = max_norm，$\\Vert g\\Vert_2= \\sqrt{g<sup>2_1+g</sup>2_2}$</p>\n<p>当$\\Vert g\\Vert_2$大于c时：</p>\n<p>$$<br>\ng = \\frac{c}{\\Vert g \\Vert_2} \\cdot g<br>\n$$<br>\n当$\\Vert g\\Vert_2$小于等于C时：g不变。其中，$\\frac{c}{\\Vert g \\Vert_2}$是一个标量</p>\n<h2 id=\"总结\">总结</h2>\n<p>训练模型出现Loss值出现跳动，一直不收敛时，除了设小学习率之外，梯度裁剪也是一个好方法。</p>\n<p>然而效果不佳时，那这就跟学习率和梯度爆炸没啥关系了。因此，<strong>学习率</strong>的设定和<strong>梯度裁剪</strong>的阈值并不能提高模型的准确率</p>\n"},{"title":"梯度消失&梯度爆炸","date":"2021-08-17T02:42:10.000Z","math":true,"_content":"\n> 本文探讨深度学习中经常提到的概念--梯度消失和梯度爆炸 。他们是影响模型收敛，学习好坏的重要因素。对此现象也提出了很多对应的解决方案。我们来大致做一个总结，对其概念，原因和相关的解决方案进行探讨叭~~\n\n## 梯度爆炸&梯度消失\n\n梯度爆炸就是在梯度更新的时候偏导数很大，导致更新参数无法收敛到最值（总是跳到其他不好的地方）。\n\n梯度消失就是在梯度更新的时候偏导数很小，导致更新参数无法收敛到最值（动不了）。\n$$\nw_1=w_1− \\alpha \\frac{∂J(w)}{∂w1} \n$$\n\n$$\nw_2=w_2− \\alpha \\frac{∂J(w)}{∂w2}\n$$\n\n![](https://picture.mulindya.com/gradient-exp-pic1.png)\n\n## 梯度消失和梯度爆炸原因\n\n- 训练方式：网络训练时采用反向传播的方式，会使用链式求导法则，因此对激活函数求导时，如果权重乘以激活函数导数此部分大于1，那么当层数很多时，求出的梯度更新将以指数的形式增加，则会梯度爆炸。如果此部分小于1，则随着层数增多，求出的梯度会指数衰减，则会梯度消失。\n\n- 激活函数：如果选用sigmoid，$S(x) = \\frac{1}{1+e^{-x}}$ ，而其导数 $S'(x) = \\frac{e^{-x}}{(1+e^{-x})^2}=S(x)(1-S(x))$ ，其梯度不会超过0.25。\n\n- 权重初始值：因此一个均值为0标准差为1的高斯分布初始化参数很容易发生梯度消失，因为权重集中在-1到1之间。如果初始化比较大的值\n\n- 根据链式求导和反向传播，我们很容易得出，其中C是代价函数\n\n  ![](https://picture.mulindya.com/gradient-exp-pic2.png)\n\n  ![](https://picture.mulindya.com/gradient-exp-pic3.png)\n\n## 解决方案\n\n### 1，采用好的参数初始化方法。比如[He方法](https://blog.csdn.net/u010505915/article/details/106608922/?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0.base&spm=1001.2101.3001.4242)\n\n1. 前向传播的时候, 每一层的卷积计算结果的方差为1.\n2. 反向传播的时候, 每一 层的继续往前传的梯度方差为1(因为每层会有两个梯度的计算, 一个用来更新当前层的权重, 一个继续传播, 用于前面层的梯度的计算.)\n\n### 2，梯度剪切--梯度爆炸\n\n梯度裁剪是解决**梯度爆炸**的一种高效的方法，这里介绍梯度裁剪（Gradient Clipping）的方法，对梯度进行裁剪，论文提出对梯度的L2范数进行裁剪，也就是所有参数偏导数的平方和再开方。\n$$\ng_1=\\frac{∂J(w)}{∂w1} \n$$\n\n$$\ng_2=\\frac{∂J(w)}{∂w2}\n$$\n\n设定裁剪阈值为 C = max_norm，$\\Vert g\\Vert_2= \\sqrt{g^2_1+g^2_2}$\n\n当$\\Vert g\\Vert_2$大于c时：\n\n$$\ng = \\frac{c}{\\Vert g \\Vert_2} \\cdot g\n$$\n当$\\Vert g\\Vert_2$小于等于C时：g不变。其中，$\\frac{c}{\\Vert g \\Vert_2}$是一个标量\n\n### 3，正则化--梯度爆炸\n\n​\t\t采用权重正则化，主要是通过对网络权重做正则来限制过拟合，同时，如果发生梯度爆炸，那么权值的范数就会变的非常大，反过来，通过限制正则化项的大小，也可以在一定程度上限制梯度爆炸的发生。比较常见的是l1正则，和l2正则，在各个深度框架中都有相应的API可以使用正则化，比如在pytorch中，若搭建网络的时候已经设置了正则化参数，则调用以下代码可以直接计算出正则损失。\n​\t\ttorch.optim集成了很多优化器，如SGD，Adadelta，Adam，Adagrad，RMSprop等，这些优化器自带的一个参数weight_decay，用于指定权值衰减率，相当于L2正则化中的λ参数，注意torch.optim集成的优化器只有L2正则化方法，你可以查看注释，参数weight_decay 的解析是：\n\n```python\n weight_decay (float, optional): weight decay (L2 penalty) (default: 0)\n optimizer = optim.Adam(model.parameters(),lr=learning_rate,weight_decay=0.01)\n```\n\nloss计算公式\n$$\nLoss = (y-W^Tx)^2+\\alpha {\\Vert W \\Vert}^2\n$$\n\n### 4，激活函数\n\n#### 1.ReLU函数：\n\n如果激活函数的导数为1，那么就不存在梯度消失爆炸的问题了，每层的网络都可以得到相同的更新速度，ReLU就这样应运而生。\n\nReLU的主要贡献在于：\n\n![](https://picture.mulindya.com/gradient-exp-pic4.png)\n\n##### 优点\n\n解决了梯度消失、爆炸的问题。\n计算方便，计算速度快。\n加速了网络的训练。\n\n##### 缺点：\n\n由于负数部分恒为0，会导致一些神经元无法激活（可通过设置小学习率部分解决）。\n输出不是以0为中心的。\n\n#### 2.LeakyReLU函数：\n\nLeakyReLU就是为了解决ReLU的0区间带来的影响，该函数输出对负值输入有很小的坡度，由于导数总是不为零，这能减少静默神经元的出现，允许基于梯度的学习（虽然会很慢），解决了ReLU函数进入负区间后，导致神经元不学习的问题。\n\n![](https://picture.mulindya.com/gradient-exp-pic5.png)\n\n#### 3.ELU函数：\n\n![](https://picture.mulindya.com/gradient-exp-pic6.png)\n\n- 融合了sigmoid和ReLU，**左侧具有软饱和性，右侧无饱和性**。\n\n- 右侧线性部分使得ELU能够缓解梯度消失，而左侧软饱能够让ELU对输入变化或噪声更鲁棒。\n\n- ELU的输出均值接近于零，所以收敛速度更快，但相对于LeakyReLU来说，计算要更耗时间一些。\n\n<font size=3 color=BlueViolet>小知识：</font>\n\n> 梯度饱和常常是和激活函数相关的，比如sigmod和tanh就属于典型容易进入梯度饱和区的函数，即自变量进入某个区间后，梯度变化会非常小，表现在图上就是函数曲线进入某些区域后，越来越趋近一条直线，梯度变化很小，梯度饱和会导致训练过程中梯度变化缓慢，从而造成模型训练缓慢\n\n### 4，Batch Normalization\n\nBN是深度学习发展以来提出的最重要的成果之一了，目前已经被广泛的应用到了各大网络中，具有加速网络收敛速度，提升训练稳定性的效果，**BN本质上是解决反向传播过程中的梯度问题。**BN全名是Batch Normalization，简称BN，即批规范化，**通过规范化操作将输出信号x规范化保证网络的稳定性。**\n反向传播式子中有w的存在，所以w的大小影响了梯度的消失和爆炸，**BN就是通过对每一层的输出规范为均值和方差一致的方法**，消除了w带来的放大缩小的影响，进而解决梯度消失和爆炸的问题，或者可以理解为BN将输出从饱和区拉倒了非饱和区。\n有关Batch Normalization详细的内容可以参考这篇博客： [Batch Normalization](http://blog.csdn.net/qq_25737169/article/details/79048516)\n\n### 5,残差结构\n\n事实上，就是残差网络的出现导致了image net比赛的终结，自从残差提出后，几乎所有的深度网络都离不开残差的身影，相比较之前的几层，几十层的深度网络，在残差网络面前都不值一提，残差可以很轻松的构建几百层，一千多层的网络而不用担心梯度消失过快的问题，原因就在于残差的捷径（shortcut）部分。原理可参见：[残差结构](https://zhuanlan.zhihu.com/p/42706477)\n\n### 6，LSTM网络\n\nLSTM是循环神经网络RNN的变体，全称是长短期记忆网络（long-short term memory networks），它是不那么容易发生梯度消失的，主要原因在于LSTM内部复杂的“门”结构，**LSTM通过它内部的“门”可以接下来更新的时候“记住”前几次训练的“残留记忆”**，因此，经常用于生成文本中。关于LSTM的原理详解后续再分析。[LSTM](https://zhuanlan.zhihu.com/p/32085405)\n\n\n![](https://picture.mulindya.com/gradient-exp-pic7.png)\n","source":"_posts/deep_learning/gradient-exp.md","raw":"---\ntitle: 梯度消失&梯度爆炸\ntags: 深度学习\ncategories: 深度学习\ndate: 2021-08-17 10:42:10\nmath: true\n---\n\n> 本文探讨深度学习中经常提到的概念--梯度消失和梯度爆炸 。他们是影响模型收敛，学习好坏的重要因素。对此现象也提出了很多对应的解决方案。我们来大致做一个总结，对其概念，原因和相关的解决方案进行探讨叭~~\n\n## 梯度爆炸&梯度消失\n\n梯度爆炸就是在梯度更新的时候偏导数很大，导致更新参数无法收敛到最值（总是跳到其他不好的地方）。\n\n梯度消失就是在梯度更新的时候偏导数很小，导致更新参数无法收敛到最值（动不了）。\n$$\nw_1=w_1− \\alpha \\frac{∂J(w)}{∂w1} \n$$\n\n$$\nw_2=w_2− \\alpha \\frac{∂J(w)}{∂w2}\n$$\n\n![](https://picture.mulindya.com/gradient-exp-pic1.png)\n\n## 梯度消失和梯度爆炸原因\n\n- 训练方式：网络训练时采用反向传播的方式，会使用链式求导法则，因此对激活函数求导时，如果权重乘以激活函数导数此部分大于1，那么当层数很多时，求出的梯度更新将以指数的形式增加，则会梯度爆炸。如果此部分小于1，则随着层数增多，求出的梯度会指数衰减，则会梯度消失。\n\n- 激活函数：如果选用sigmoid，$S(x) = \\frac{1}{1+e^{-x}}$ ，而其导数 $S'(x) = \\frac{e^{-x}}{(1+e^{-x})^2}=S(x)(1-S(x))$ ，其梯度不会超过0.25。\n\n- 权重初始值：因此一个均值为0标准差为1的高斯分布初始化参数很容易发生梯度消失，因为权重集中在-1到1之间。如果初始化比较大的值\n\n- 根据链式求导和反向传播，我们很容易得出，其中C是代价函数\n\n  ![](https://picture.mulindya.com/gradient-exp-pic2.png)\n\n  ![](https://picture.mulindya.com/gradient-exp-pic3.png)\n\n## 解决方案\n\n### 1，采用好的参数初始化方法。比如[He方法](https://blog.csdn.net/u010505915/article/details/106608922/?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0.base&spm=1001.2101.3001.4242)\n\n1. 前向传播的时候, 每一层的卷积计算结果的方差为1.\n2. 反向传播的时候, 每一 层的继续往前传的梯度方差为1(因为每层会有两个梯度的计算, 一个用来更新当前层的权重, 一个继续传播, 用于前面层的梯度的计算.)\n\n### 2，梯度剪切--梯度爆炸\n\n梯度裁剪是解决**梯度爆炸**的一种高效的方法，这里介绍梯度裁剪（Gradient Clipping）的方法，对梯度进行裁剪，论文提出对梯度的L2范数进行裁剪，也就是所有参数偏导数的平方和再开方。\n$$\ng_1=\\frac{∂J(w)}{∂w1} \n$$\n\n$$\ng_2=\\frac{∂J(w)}{∂w2}\n$$\n\n设定裁剪阈值为 C = max_norm，$\\Vert g\\Vert_2= \\sqrt{g^2_1+g^2_2}$\n\n当$\\Vert g\\Vert_2$大于c时：\n\n$$\ng = \\frac{c}{\\Vert g \\Vert_2} \\cdot g\n$$\n当$\\Vert g\\Vert_2$小于等于C时：g不变。其中，$\\frac{c}{\\Vert g \\Vert_2}$是一个标量\n\n### 3，正则化--梯度爆炸\n\n​\t\t采用权重正则化，主要是通过对网络权重做正则来限制过拟合，同时，如果发生梯度爆炸，那么权值的范数就会变的非常大，反过来，通过限制正则化项的大小，也可以在一定程度上限制梯度爆炸的发生。比较常见的是l1正则，和l2正则，在各个深度框架中都有相应的API可以使用正则化，比如在pytorch中，若搭建网络的时候已经设置了正则化参数，则调用以下代码可以直接计算出正则损失。\n​\t\ttorch.optim集成了很多优化器，如SGD，Adadelta，Adam，Adagrad，RMSprop等，这些优化器自带的一个参数weight_decay，用于指定权值衰减率，相当于L2正则化中的λ参数，注意torch.optim集成的优化器只有L2正则化方法，你可以查看注释，参数weight_decay 的解析是：\n\n```python\n weight_decay (float, optional): weight decay (L2 penalty) (default: 0)\n optimizer = optim.Adam(model.parameters(),lr=learning_rate,weight_decay=0.01)\n```\n\nloss计算公式\n$$\nLoss = (y-W^Tx)^2+\\alpha {\\Vert W \\Vert}^2\n$$\n\n### 4，激活函数\n\n#### 1.ReLU函数：\n\n如果激活函数的导数为1，那么就不存在梯度消失爆炸的问题了，每层的网络都可以得到相同的更新速度，ReLU就这样应运而生。\n\nReLU的主要贡献在于：\n\n![](https://picture.mulindya.com/gradient-exp-pic4.png)\n\n##### 优点\n\n解决了梯度消失、爆炸的问题。\n计算方便，计算速度快。\n加速了网络的训练。\n\n##### 缺点：\n\n由于负数部分恒为0，会导致一些神经元无法激活（可通过设置小学习率部分解决）。\n输出不是以0为中心的。\n\n#### 2.LeakyReLU函数：\n\nLeakyReLU就是为了解决ReLU的0区间带来的影响，该函数输出对负值输入有很小的坡度，由于导数总是不为零，这能减少静默神经元的出现，允许基于梯度的学习（虽然会很慢），解决了ReLU函数进入负区间后，导致神经元不学习的问题。\n\n![](https://picture.mulindya.com/gradient-exp-pic5.png)\n\n#### 3.ELU函数：\n\n![](https://picture.mulindya.com/gradient-exp-pic6.png)\n\n- 融合了sigmoid和ReLU，**左侧具有软饱和性，右侧无饱和性**。\n\n- 右侧线性部分使得ELU能够缓解梯度消失，而左侧软饱能够让ELU对输入变化或噪声更鲁棒。\n\n- ELU的输出均值接近于零，所以收敛速度更快，但相对于LeakyReLU来说，计算要更耗时间一些。\n\n<font size=3 color=BlueViolet>小知识：</font>\n\n> 梯度饱和常常是和激活函数相关的，比如sigmod和tanh就属于典型容易进入梯度饱和区的函数，即自变量进入某个区间后，梯度变化会非常小，表现在图上就是函数曲线进入某些区域后，越来越趋近一条直线，梯度变化很小，梯度饱和会导致训练过程中梯度变化缓慢，从而造成模型训练缓慢\n\n### 4，Batch Normalization\n\nBN是深度学习发展以来提出的最重要的成果之一了，目前已经被广泛的应用到了各大网络中，具有加速网络收敛速度，提升训练稳定性的效果，**BN本质上是解决反向传播过程中的梯度问题。**BN全名是Batch Normalization，简称BN，即批规范化，**通过规范化操作将输出信号x规范化保证网络的稳定性。**\n反向传播式子中有w的存在，所以w的大小影响了梯度的消失和爆炸，**BN就是通过对每一层的输出规范为均值和方差一致的方法**，消除了w带来的放大缩小的影响，进而解决梯度消失和爆炸的问题，或者可以理解为BN将输出从饱和区拉倒了非饱和区。\n有关Batch Normalization详细的内容可以参考这篇博客： [Batch Normalization](http://blog.csdn.net/qq_25737169/article/details/79048516)\n\n### 5,残差结构\n\n事实上，就是残差网络的出现导致了image net比赛的终结，自从残差提出后，几乎所有的深度网络都离不开残差的身影，相比较之前的几层，几十层的深度网络，在残差网络面前都不值一提，残差可以很轻松的构建几百层，一千多层的网络而不用担心梯度消失过快的问题，原因就在于残差的捷径（shortcut）部分。原理可参见：[残差结构](https://zhuanlan.zhihu.com/p/42706477)\n\n### 6，LSTM网络\n\nLSTM是循环神经网络RNN的变体，全称是长短期记忆网络（long-short term memory networks），它是不那么容易发生梯度消失的，主要原因在于LSTM内部复杂的“门”结构，**LSTM通过它内部的“门”可以接下来更新的时候“记住”前几次训练的“残留记忆”**，因此，经常用于生成文本中。关于LSTM的原理详解后续再分析。[LSTM](https://zhuanlan.zhihu.com/p/32085405)\n\n\n![](https://picture.mulindya.com/gradient-exp-pic7.png)\n","slug":"deep_learning/gradient-exp","published":1,"updated":"2021-08-19T08:00:21.333Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxocb000mugx4gxfhcpcf","content":"<blockquote>\n<p>本文探讨深度学习中经常提到的概念–梯度消失和梯度爆炸 。他们是影响模型收敛，学习好坏的重要因素。对此现象也提出了很多对应的解决方案。我们来大致做一个总结，对其概念，原因和相关的解决方案进行探讨叭~~</p>\n</blockquote>\n<h2 id=\"梯度爆炸-梯度消失\">梯度爆炸&amp;梯度消失</h2>\n<p>梯度爆炸就是在梯度更新的时候偏导数很大，导致更新参数无法收敛到最值（总是跳到其他不好的地方）。</p>\n<p>梯度消失就是在梯度更新的时候偏导数很小，导致更新参数无法收敛到最值（动不了）。<br>\n$$<br>\nw_1=w_1− \\alpha \\frac{∂J(w)}{∂w1}<br>\n$$</p>\n<p>$$<br>\nw_2=w_2− \\alpha \\frac{∂J(w)}{∂w2}<br>\n$$</p>\n<p><img src=\"https://picture.mulindya.com/gradient-exp-pic1.png\" alt=\"\"></p>\n<h2 id=\"梯度消失和梯度爆炸原因\">梯度消失和梯度爆炸原因</h2>\n<ul>\n<li>\n<p>训练方式：网络训练时采用反向传播的方式，会使用链式求导法则，因此对激活函数求导时，如果权重乘以激活函数导数此部分大于1，那么当层数很多时，求出的梯度更新将以指数的形式增加，则会梯度爆炸。如果此部分小于1，则随着层数增多，求出的梯度会指数衰减，则会梯度消失。</p>\n</li>\n<li>\n<p>激活函数：如果选用sigmoid，$S(x) = \\frac{1}{1+e^{-x}}$ ，而其导数 $S’(x) = \\frac{e<sup>{-x}}{(1+e</sup>{-x})^2}=S(x)(1-S(x))$ ，其梯度不会超过0.25。</p>\n</li>\n<li>\n<p>权重初始值：因此一个均值为0标准差为1的高斯分布初始化参数很容易发生梯度消失，因为权重集中在-1到1之间。如果初始化比较大的值</p>\n</li>\n<li>\n<p>根据链式求导和反向传播，我们很容易得出，其中C是代价函数</p>\n<p><img src=\"https://picture.mulindya.com/gradient-exp-pic2.png\" alt=\"\"></p>\n<p><img src=\"https://picture.mulindya.com/gradient-exp-pic3.png\" alt=\"\"></p>\n</li>\n</ul>\n<h2 id=\"解决方案\">解决方案</h2>\n<h3 id=\"1，采用好的参数初始化方法。比如He方法\">1，采用好的参数初始化方法。比如<a href=\"https://blog.csdn.net/u010505915/article/details/106608922/?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0.base&amp;spm=1001.2101.3001.4242\">He方法</a></h3>\n<ol>\n<li>前向传播的时候, 每一层的卷积计算结果的方差为1.</li>\n<li>反向传播的时候, 每一 层的继续往前传的梯度方差为1(因为每层会有两个梯度的计算, 一个用来更新当前层的权重, 一个继续传播, 用于前面层的梯度的计算.)</li>\n</ol>\n<h3 id=\"2，梯度剪切–梯度爆炸\">2，梯度剪切–梯度爆炸</h3>\n<p>梯度裁剪是解决<strong>梯度爆炸</strong>的一种高效的方法，这里介绍梯度裁剪（Gradient Clipping）的方法，对梯度进行裁剪，论文提出对梯度的L2范数进行裁剪，也就是所有参数偏导数的平方和再开方。<br>\n$$<br>\ng_1=\\frac{∂J(w)}{∂w1}<br>\n$$</p>\n<p>$$<br>\ng_2=\\frac{∂J(w)}{∂w2}<br>\n$$</p>\n<p>设定裁剪阈值为 C = max_norm，$\\Vert g\\Vert_2= \\sqrt{g<sup>2_1+g</sup>2_2}$</p>\n<p>当$\\Vert g\\Vert_2$大于c时：</p>\n<p>$$<br>\ng = \\frac{c}{\\Vert g \\Vert_2} \\cdot g<br>\n$$<br>\n当$\\Vert g\\Vert_2$小于等于C时：g不变。其中，$\\frac{c}{\\Vert g \\Vert_2}$是一个标量</p>\n<h3 id=\"3，正则化–梯度爆炸\">3，正则化–梯度爆炸</h3>\n<p>​\t\t采用权重正则化，主要是通过对网络权重做正则来限制过拟合，同时，如果发生梯度爆炸，那么权值的范数就会变的非常大，反过来，通过限制正则化项的大小，也可以在一定程度上限制梯度爆炸的发生。比较常见的是l1正则，和l2正则，在各个深度框架中都有相应的API可以使用正则化，比如在pytorch中，若搭建网络的时候已经设置了正则化参数，则调用以下代码可以直接计算出正则损失。<br>\n​\t\ttorch.optim集成了很多优化器，如SGD，Adadelta，Adam，Adagrad，RMSprop等，这些优化器自带的一个参数weight_decay，用于指定权值衰减率，相当于L2正则化中的λ参数，注意torch.optim集成的优化器只有L2正则化方法，你可以查看注释，参数weight_decay 的解析是：</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\">weight_decay (<span class=\"hljs-built_in\">float</span>, optional): weight decay (L2 penalty) (default: <span class=\"hljs-number\">0</span>)<br>optimizer = optim.Adam(model.parameters(),lr=learning_rate,weight_decay=<span class=\"hljs-number\">0.01</span>)<br></code></pre></td></tr></tbody></table></figure>\n<p>loss计算公式<br>\n$$<br>\nLoss = (y-W<sup>Tx)</sup>2+\\alpha {\\Vert W \\Vert}^2<br>\n$$</p>\n<h3 id=\"4，激活函数\">4，激活函数</h3>\n<h4 id=\"1-ReLU函数：\">1.ReLU函数：</h4>\n<p>如果激活函数的导数为1，那么就不存在梯度消失爆炸的问题了，每层的网络都可以得到相同的更新速度，ReLU就这样应运而生。</p>\n<p>ReLU的主要贡献在于：</p>\n<p><img src=\"https://picture.mulindya.com/gradient-exp-pic4.png\" alt=\"\"></p>\n<h5 id=\"优点\">优点</h5>\n<p>解决了梯度消失、爆炸的问题。<br>\n计算方便，计算速度快。<br>\n加速了网络的训练。</p>\n<h5 id=\"缺点：\">缺点：</h5>\n<p>由于负数部分恒为0，会导致一些神经元无法激活（可通过设置小学习率部分解决）。<br>\n输出不是以0为中心的。</p>\n<h4 id=\"2-LeakyReLU函数：\">2.LeakyReLU函数：</h4>\n<p>LeakyReLU就是为了解决ReLU的0区间带来的影响，该函数输出对负值输入有很小的坡度，由于导数总是不为零，这能减少静默神经元的出现，允许基于梯度的学习（虽然会很慢），解决了ReLU函数进入负区间后，导致神经元不学习的问题。</p>\n<p><img src=\"https://picture.mulindya.com/gradient-exp-pic5.png\" alt=\"\"></p>\n<h4 id=\"3-ELU函数：\">3.ELU函数：</h4>\n<p><img src=\"https://picture.mulindya.com/gradient-exp-pic6.png\" alt=\"\"></p>\n<ul>\n<li>\n<p>融合了sigmoid和ReLU，<strong>左侧具有软饱和性，右侧无饱和性</strong>。</p>\n</li>\n<li>\n<p>右侧线性部分使得ELU能够缓解梯度消失，而左侧软饱能够让ELU对输入变化或噪声更鲁棒。</p>\n</li>\n<li>\n<p>ELU的输出均值接近于零，所以收敛速度更快，但相对于LeakyReLU来说，计算要更耗时间一些。</p>\n</li>\n</ul>\n<p><font size=\"3\" color=\"BlueViolet\">小知识：</font></p>\n<blockquote>\n<p>梯度饱和常常是和激活函数相关的，比如sigmod和tanh就属于典型容易进入梯度饱和区的函数，即自变量进入某个区间后，梯度变化会非常小，表现在图上就是函数曲线进入某些区域后，越来越趋近一条直线，梯度变化很小，梯度饱和会导致训练过程中梯度变化缓慢，从而造成模型训练缓慢</p>\n</blockquote>\n<h3 id=\"4，Batch-Normalization\">4，Batch Normalization</h3>\n<p>BN是深度学习发展以来提出的最重要的成果之一了，目前已经被广泛的应用到了各大网络中，具有加速网络收敛速度，提升训练稳定性的效果，**BN本质上是解决反向传播过程中的梯度问题。**BN全名是Batch Normalization，简称BN，即批规范化，<strong>通过规范化操作将输出信号x规范化保证网络的稳定性。</strong><br>\n反向传播式子中有w的存在，所以w的大小影响了梯度的消失和爆炸，<strong>BN就是通过对每一层的输出规范为均值和方差一致的方法</strong>，消除了w带来的放大缩小的影响，进而解决梯度消失和爆炸的问题，或者可以理解为BN将输出从饱和区拉倒了非饱和区。<br>\n有关Batch Normalization详细的内容可以参考这篇博客： <a href=\"http://blog.csdn.net/qq_25737169/article/details/79048516\">Batch Normalization</a></p>\n<h3 id=\"5-残差结构\">5,残差结构</h3>\n<p>事实上，就是残差网络的出现导致了image net比赛的终结，自从残差提出后，几乎所有的深度网络都离不开残差的身影，相比较之前的几层，几十层的深度网络，在残差网络面前都不值一提，残差可以很轻松的构建几百层，一千多层的网络而不用担心梯度消失过快的问题，原因就在于残差的捷径（shortcut）部分。原理可参见：<a href=\"https://zhuanlan.zhihu.com/p/42706477\">残差结构</a></p>\n<h3 id=\"6，LSTM网络\">6，LSTM网络</h3>\n<p>LSTM是循环神经网络RNN的变体，全称是长短期记忆网络（long-short term memory networks），它是不那么容易发生梯度消失的，主要原因在于LSTM内部复杂的“门”结构，<strong>LSTM通过它内部的“门”可以接下来更新的时候“记住”前几次训练的“残留记忆”</strong>，因此，经常用于生成文本中。关于LSTM的原理详解后续再分析。<a href=\"https://zhuanlan.zhihu.com/p/32085405\">LSTM</a></p>\n<p><img src=\"https://picture.mulindya.com/gradient-exp-pic7.png\" alt=\"\"></p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>本文探讨深度学习中经常提到的概念–梯度消失和梯度爆炸 。他们是影响模型收敛，学习好坏的重要因素。对此现象也提出了很多对应的解决方案。我们来大致做一个总结，对其概念，原因和相关的解决方案进行探讨叭~~</p>\n</blockquote>\n<h2 id=\"梯度爆炸-梯度消失\">梯度爆炸&amp;梯度消失</h2>\n<p>梯度爆炸就是在梯度更新的时候偏导数很大，导致更新参数无法收敛到最值（总是跳到其他不好的地方）。</p>\n<p>梯度消失就是在梯度更新的时候偏导数很小，导致更新参数无法收敛到最值（动不了）。<br>\n$$<br>\nw_1=w_1− \\alpha \\frac{∂J(w)}{∂w1}<br>\n$$</p>\n<p>$$<br>\nw_2=w_2− \\alpha \\frac{∂J(w)}{∂w2}<br>\n$$</p>\n<p><img src=\"https://picture.mulindya.com/gradient-exp-pic1.png\" alt=\"\"></p>\n<h2 id=\"梯度消失和梯度爆炸原因\">梯度消失和梯度爆炸原因</h2>\n<ul>\n<li>\n<p>训练方式：网络训练时采用反向传播的方式，会使用链式求导法则，因此对激活函数求导时，如果权重乘以激活函数导数此部分大于1，那么当层数很多时，求出的梯度更新将以指数的形式增加，则会梯度爆炸。如果此部分小于1，则随着层数增多，求出的梯度会指数衰减，则会梯度消失。</p>\n</li>\n<li>\n<p>激活函数：如果选用sigmoid，$S(x) = \\frac{1}{1+e^{-x}}$ ，而其导数 $S’(x) = \\frac{e<sup>{-x}}{(1+e</sup>{-x})^2}=S(x)(1-S(x))$ ，其梯度不会超过0.25。</p>\n</li>\n<li>\n<p>权重初始值：因此一个均值为0标准差为1的高斯分布初始化参数很容易发生梯度消失，因为权重集中在-1到1之间。如果初始化比较大的值</p>\n</li>\n<li>\n<p>根据链式求导和反向传播，我们很容易得出，其中C是代价函数</p>\n<p><img src=\"https://picture.mulindya.com/gradient-exp-pic2.png\" alt=\"\"></p>\n<p><img src=\"https://picture.mulindya.com/gradient-exp-pic3.png\" alt=\"\"></p>\n</li>\n</ul>\n<h2 id=\"解决方案\">解决方案</h2>\n<h3 id=\"1，采用好的参数初始化方法。比如He方法\">1，采用好的参数初始化方法。比如<a href=\"https://blog.csdn.net/u010505915/article/details/106608922/?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0.base&amp;spm=1001.2101.3001.4242\">He方法</a></h3>\n<ol>\n<li>前向传播的时候, 每一层的卷积计算结果的方差为1.</li>\n<li>反向传播的时候, 每一 层的继续往前传的梯度方差为1(因为每层会有两个梯度的计算, 一个用来更新当前层的权重, 一个继续传播, 用于前面层的梯度的计算.)</li>\n</ol>\n<h3 id=\"2，梯度剪切–梯度爆炸\">2，梯度剪切–梯度爆炸</h3>\n<p>梯度裁剪是解决<strong>梯度爆炸</strong>的一种高效的方法，这里介绍梯度裁剪（Gradient Clipping）的方法，对梯度进行裁剪，论文提出对梯度的L2范数进行裁剪，也就是所有参数偏导数的平方和再开方。<br>\n$$<br>\ng_1=\\frac{∂J(w)}{∂w1}<br>\n$$</p>\n<p>$$<br>\ng_2=\\frac{∂J(w)}{∂w2}<br>\n$$</p>\n<p>设定裁剪阈值为 C = max_norm，$\\Vert g\\Vert_2= \\sqrt{g<sup>2_1+g</sup>2_2}$</p>\n<p>当$\\Vert g\\Vert_2$大于c时：</p>\n<p>$$<br>\ng = \\frac{c}{\\Vert g \\Vert_2} \\cdot g<br>\n$$<br>\n当$\\Vert g\\Vert_2$小于等于C时：g不变。其中，$\\frac{c}{\\Vert g \\Vert_2}$是一个标量</p>\n<h3 id=\"3，正则化–梯度爆炸\">3，正则化–梯度爆炸</h3>\n<p>​\t\t采用权重正则化，主要是通过对网络权重做正则来限制过拟合，同时，如果发生梯度爆炸，那么权值的范数就会变的非常大，反过来，通过限制正则化项的大小，也可以在一定程度上限制梯度爆炸的发生。比较常见的是l1正则，和l2正则，在各个深度框架中都有相应的API可以使用正则化，比如在pytorch中，若搭建网络的时候已经设置了正则化参数，则调用以下代码可以直接计算出正则损失。<br>\n​\t\ttorch.optim集成了很多优化器，如SGD，Adadelta，Adam，Adagrad，RMSprop等，这些优化器自带的一个参数weight_decay，用于指定权值衰减率，相当于L2正则化中的λ参数，注意torch.optim集成的优化器只有L2正则化方法，你可以查看注释，参数weight_decay 的解析是：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\">weight_decay (<span class=\"hljs-built_in\">float</span>, optional): weight decay (L2 penalty) (default: <span class=\"hljs-number\">0</span>)<br>optimizer = optim.Adam(model.parameters(),lr=learning_rate,weight_decay=<span class=\"hljs-number\">0.01</span>)<br></code></pre></td></tr></table></figure>\n<p>loss计算公式<br>\n$$<br>\nLoss = (y-W<sup>Tx)</sup>2+\\alpha {\\Vert W \\Vert}^2<br>\n$$</p>\n<h3 id=\"4，激活函数\">4，激活函数</h3>\n<h4 id=\"1-ReLU函数：\">1.ReLU函数：</h4>\n<p>如果激活函数的导数为1，那么就不存在梯度消失爆炸的问题了，每层的网络都可以得到相同的更新速度，ReLU就这样应运而生。</p>\n<p>ReLU的主要贡献在于：</p>\n<p><img src=\"https://picture.mulindya.com/gradient-exp-pic4.png\" alt=\"\"></p>\n<h5 id=\"优点\">优点</h5>\n<p>解决了梯度消失、爆炸的问题。<br>\n计算方便，计算速度快。<br>\n加速了网络的训练。</p>\n<h5 id=\"缺点：\">缺点：</h5>\n<p>由于负数部分恒为0，会导致一些神经元无法激活（可通过设置小学习率部分解决）。<br>\n输出不是以0为中心的。</p>\n<h4 id=\"2-LeakyReLU函数：\">2.LeakyReLU函数：</h4>\n<p>LeakyReLU就是为了解决ReLU的0区间带来的影响，该函数输出对负值输入有很小的坡度，由于导数总是不为零，这能减少静默神经元的出现，允许基于梯度的学习（虽然会很慢），解决了ReLU函数进入负区间后，导致神经元不学习的问题。</p>\n<p><img src=\"https://picture.mulindya.com/gradient-exp-pic5.png\" alt=\"\"></p>\n<h4 id=\"3-ELU函数：\">3.ELU函数：</h4>\n<p><img src=\"https://picture.mulindya.com/gradient-exp-pic6.png\" alt=\"\"></p>\n<ul>\n<li>\n<p>融合了sigmoid和ReLU，<strong>左侧具有软饱和性，右侧无饱和性</strong>。</p>\n</li>\n<li>\n<p>右侧线性部分使得ELU能够缓解梯度消失，而左侧软饱能够让ELU对输入变化或噪声更鲁棒。</p>\n</li>\n<li>\n<p>ELU的输出均值接近于零，所以收敛速度更快，但相对于LeakyReLU来说，计算要更耗时间一些。</p>\n</li>\n</ul>\n<p><font size=3 color=BlueViolet>小知识：</font></p>\n<blockquote>\n<p>梯度饱和常常是和激活函数相关的，比如sigmod和tanh就属于典型容易进入梯度饱和区的函数，即自变量进入某个区间后，梯度变化会非常小，表现在图上就是函数曲线进入某些区域后，越来越趋近一条直线，梯度变化很小，梯度饱和会导致训练过程中梯度变化缓慢，从而造成模型训练缓慢</p>\n</blockquote>\n<h3 id=\"4，Batch-Normalization\">4，Batch Normalization</h3>\n<p>BN是深度学习发展以来提出的最重要的成果之一了，目前已经被广泛的应用到了各大网络中，具有加速网络收敛速度，提升训练稳定性的效果，**BN本质上是解决反向传播过程中的梯度问题。**BN全名是Batch Normalization，简称BN，即批规范化，<strong>通过规范化操作将输出信号x规范化保证网络的稳定性。</strong><br>\n反向传播式子中有w的存在，所以w的大小影响了梯度的消失和爆炸，<strong>BN就是通过对每一层的输出规范为均值和方差一致的方法</strong>，消除了w带来的放大缩小的影响，进而解决梯度消失和爆炸的问题，或者可以理解为BN将输出从饱和区拉倒了非饱和区。<br>\n有关Batch Normalization详细的内容可以参考这篇博客： <a href=\"http://blog.csdn.net/qq_25737169/article/details/79048516\">Batch Normalization</a></p>\n<h3 id=\"5-残差结构\">5,残差结构</h3>\n<p>事实上，就是残差网络的出现导致了image net比赛的终结，自从残差提出后，几乎所有的深度网络都离不开残差的身影，相比较之前的几层，几十层的深度网络，在残差网络面前都不值一提，残差可以很轻松的构建几百层，一千多层的网络而不用担心梯度消失过快的问题，原因就在于残差的捷径（shortcut）部分。原理可参见：<a href=\"https://zhuanlan.zhihu.com/p/42706477\">残差结构</a></p>\n<h3 id=\"6，LSTM网络\">6，LSTM网络</h3>\n<p>LSTM是循环神经网络RNN的变体，全称是长短期记忆网络（long-short term memory networks），它是不那么容易发生梯度消失的，主要原因在于LSTM内部复杂的“门”结构，<strong>LSTM通过它内部的“门”可以接下来更新的时候“记住”前几次训练的“残留记忆”</strong>，因此，经常用于生成文本中。关于LSTM的原理详解后续再分析。<a href=\"https://zhuanlan.zhihu.com/p/32085405\">LSTM</a></p>\n<p><img src=\"https://picture.mulindya.com/gradient-exp-pic7.png\" alt=\"\"></p>\n"},{"title":"YOLOv2","date":"2021-08-27T02:57:37.000Z","math":true,"_content":"\n## YOLOv2\n\n### 综述\n\n**论文地址**：https://arxiv.org/abs/1612.08242\n\nYolov2与Yolov1在保持速度的基础上，对预测效果的准确度，耗费时间，鲁棒性三个方面进行了改进，检测能力提高到9000种不同对象。文章提出了一种新的**训练方法--联合训练**方法。这种算法可以将两种数据集混合到一起，使用一种分层的观点进行分类，用大型的分类数据集扩充检测的数据集。也成为YOLO9000.\n\n联合训练的思路：**在检测数据集和分类数据集上训练物体检测器（Object Detectors），用检测数据集学习物体的准确位置，用分类数据集来增加分类的类别两。提升健壮性。**\n\nYolo9000就是使用联合训练的算法，拥有来自于Imagenet的9000种分类信息，物体检测的部分来自于CoCo的检测数据集。\n\n### 论文\n\n\n<details>\n<summary> yolov2 论文：YOLO9000: Better, Faster, Stronger</summary>\n<iframe src='/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/YOLOv2.pdf' width=100% height=650></iframe>\n</details>\n\n\n### 改进点\n\n#### BN(batch normalization) 批量归一化\n\nBN层有助于解决反向传播过程的**梯度消失和梯度爆炸**的问题，**降低**对超参数的**敏感性**，同时对batch归一化时，起到了一定的**正则化**的效果（去掉的dropout层）。通常，在网络的线性变换与激活函数之前增加一个BN层，BN层可以将其特征量归一化使得变换后的特征均值为0，方差为1，从而每一批训练样本都有类似的分布。同时还有修正的参数$\\gamma,\\beta$可以恢复原有信息。实验结果mAP提升2.4%\n\n一般的归一化公式：\n\n{% raw %}\n$$\n\\widehat x^{(k)} = \\frac{x^{(k)}-E[x^{(k)}]}{\\sqrt {Var[x^{(k)}]}} \\\\\n$$\n{% endraw %}\n\n![](https://picture.mulindya.com/yolov2-pic1.png)\n\n#### High resolution classifier（高分辨率图像分类器）\n\n由于对象检测的样本相对图像分类的训练样本要少得多，在对象检测时模型通常时先用图像分类的样本训练卷积层提取图像特征（训练backbone）。但是图像分类样本的分辨率不高，比如在yolov1中，训练集是224\\*224的图片来训练卷积层，但是在训练对象检测的模型使用的是448\\*448的图片，这样的切换对模型性能有一定影响。所以Yolo2在采用**224\\*224图像分类模型预训练之后再采用448\\*448的高分辨率样本对分类模型进行微调**(10个epoch)，这样再训练对象检测模型之前，网络特征就逐渐适应448\\*448的分辨率，然后再使用448\\*448的检测样本进行对象检测模型的训练，以缓解了分辨率突然切换造成的影响。通过这种方式，mAP提升了3.7%。\n\n#### Convolution with anchor boxes(使用先验框)\n\nYolov1是使用全连接层直接预测BBox的坐标值（每个grid预测k个Bbox），Faster R-CNN的方法是只用卷积层和region proposal network来预测锚框的偏移度和置信度。但是作者发现采用Faster R-CNN的方法比Yolov1的方法更加简便，让神经网络学习起来更加容易。\n\n因此，Yolov2也尝试了先验框（anchor），在每个grid预先设定一组不同大小不同宽高比的边框，来覆盖整个图像的不同位置和多种尺度，这些先验框作为预定义的候选区检测框内是否有目标，以及微调边框的位置。之前yolov1并没有采用先验框，并且每个grid只预测两个bounding box，整个图像有98个，yolov2入轨每个grid采用9个先验框，收缩网络运行在416\\*416的图片，一个grid有32像素，那么总共有13\\*13\\*9=1521个先验框，最终去掉了全连接层，采用anchor boxes来预测bounding boxes。由于图片中的物体都倾向于出现在图片的中心位置，特别是那种比较大的物体，所以有一个单独位于物体中心的位置用于预测这些物体。YOLO的卷积层采用32这个值来下采样图片，所以通过选择416\\*416用作输入尺寸最终能输出一个13\\*13的Feature Map。使用Anchor Box会让精确度稍微下降，但用了它能让YOLO能预测出大于一千个框，同时recall达到88%，mAP达到69.2%。\n\n#### Dimension clusters（聚类提取先验框的尺度信息）\n\n之前Anchor Box的尺寸是手动选择的，所以尺寸还有优化的余地。YOLO2尝试统计出更符合样本中对象尺寸的先验框，这样就可以减少网络微调先验框到实际位置的难度。YOLO2的做法是对训练集中标注的边框进行K-mean聚类分析，以寻找尽可能匹配样本的边框尺寸。\n\n在使用Kmeans聚类分析时，并不是直接采用的欧氏距离度量，因为这样大边框的距离会相对小边框大，这样误差就很大，因此我们采用IOU的形式。\n$$\nd(box,centroid) = 1-IOU(box,centroid)\n$$\ncentroid是聚类时被选作中心的边框，box就是其它边框，d就是两者间的“距离”。IOU越大，“距离”越近。YOLO2给出的聚类分析结果如下图所示：\n\n![](https://picture.mulindya.com/yolov2-pic2.png)\n\n通过分析实验结果，在model复杂性与high recall之间权衡之后，选择聚类分类数K=5。\n\n![](https://picture.mulindya.com/yolov2-pic3.png)\n\n说明用K-means选择Anchor Boxes时，选择值为5时，AVG IOU的值是61，这个值要比不用聚类的方法的60.9要高。选择值为9的时候，AVG IOU更有显著提高。总之就是说明用聚类的方法是有效果的。\n\n#### Direct location prediction（约束预测边框的位置）\n\n借鉴于Faster RCNN的先验框方法，在训练的早期阶段，其位置预测容易不稳定。其位置预测公式为：\n\n{% raw %}\n$$\nx = (t_x*w_a)+x_a \\\\\ny = (t_y*h_a)+y_a\n$$\n{% endraw %}\n\n其中， 是预测边框的中心， $x_a,y_a$是先验框（anchor）的中心点坐标， $w_a,h_a$是先验框（anchor）的宽和高，$t_x,t_y$ 是要学习的参数。注意，YOLO论文中写的是$x = (t_x*w_a)-x_a$ ，根据Faster RCNN，应该是\"+\"。\n\n但是$t_x,t_y$ 不加约束的这种方式，会导致预测边框中心会出现在任意位置，因此在早期训练阶段不稳定，文章将边框的中心约束在grid网格当中。\n\n![](https://picture.mulindya.com/yolov2-pic4.png)\n\n其中， $b_x,b_y,b_w,b_h$是预测边框的中心和宽高。 $Pr(object)*IOU(b,object)$是预测边框的置信度，在YOLO1是直接预测置信度的值，这里对预测参数$t_o$进行σ变换后作为置信度的值。 $c_x,c_y$是当前网格左上角到图像左上角的距离，要先将网格大小归一化，即令一个网格的宽=1，高=1。 $p_w,p_h$是先验框的宽和高($t_w,t_h$会对初始的设置进行调整)。σ是sigmoid函数。 $t_x,t_y,t_w,t_h,t_o$是要学习的参数($t_o$也可以学习的嘛，学到某种规律用以表示置信度:question:)，分别用于预测边框的中心和宽高，以及置信度。\n\n![](https://picture.mulindya.com/yolov2-pic5.png)\n\n这种方式可以让数值更幅度稳定，也让网络更容易学习。\n\n#### Fine-Grained Features(passthrough层检测细粒度特征)\n\n对象检测面临一个问题：即目标检测的对象有大有小，输入图像经过多层网络提取特征，最后输出的特征图中（比如YOLO2中输入416*416经过卷积网络下采样最后输出是13*13），较小的对象可能特征已经不明显甚至被忽略掉了。为了更好的检测出一些比较小的对象，最后输出的特征图需要保留一些更细节的信息。\n\nYOLO2引入一种称为passthrough层的方法在特征图中保留一些细节信息。具体来说，就是在最后一个pooling之前，特征图的大小是26\\*26\\*512，将其1拆4，直接传递（passthrough）到pooling后（并且又经过一组卷积）的特征图，两者叠加到一起作为输出的特征图。\n![](https://mmbiz.qpic.cn/sz_mmbiz_png/gYUsOT36vfrVPO5dCS8SFFLceGUMkGDWjLDkibibfuO5LIGloXSRnzrichTTuS9FezhwDY4LiavUiaJO3QtDEwgIXRQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n具体怎样1拆4，下面借用一副图看的很清楚。图中示例的是1个4\\*4拆成4个2\\*2。另外，根据YOLO2的代码，特征图先用1\\*1卷积从 26\\*26\\*512 降维到 26\\*26\\*64，再做1拆4并passthrough。\n\n```python\nut = tf.extract_image_patches(in, [1, stride, stride, 1], [1, stride, stride, 1], [1,1,1,1], padding=\"VALID\")\n# or use tf.space_to_depth\n# out = tf.space_to_depth(in, 2)\n```\n\n```python\ntf.extract_image_patches(\n    images,\n    ksizes,\n    strides,\n    rates,\n    padding,\n    name=None\n)\n#images：必须是shape为[batch, in_rows, in_cols, depth]的tensor；\n#ksize：长度大于等于4的list，滑动窗的大小\n#strides:每块patch区域之间中心点之间的距离，必须是: [1, stride_rows, stride_cols, 1].\n    #具体点说就是用来计算每次选取patch的初始点位置\n#rates: 在每次提取的patch中，对应dim像素点位置之间的差距，必须是[1, rate_rows, rate_cols, 1]；「或者理解为 提取出来的每个框里面的像素不是都选择的 根据rate的不同 隔几个选一个 默认是1也就是的都选择 若为2 那么就是隔一个来选择」\n#padding:有两个取值，“VALID”或者“SAME”，“VALID”表示所取的patch区域必须完全包含在原始图像中.\"SAME\"表示可以取超出原始图像的部分，这一部分进行0填充。\n```\n\n#### Multi-scale Training（多尺度图像训练）\n\n作者希望YOLOv2能健壮的运行于不同尺寸的图片之上，所以把这一想法用于训练model中。\n\n区别于之前的补全图片的尺寸的方法，YOLOv2每迭代几次都会改变网络参数。每10个Batch，网络会**随机地选择一个新的图片尺寸**，由于使用了下采样参数是32，所以不同的尺寸大小也选择为32的倍数{320，352…..608}，最小320\\*320，最大608\\*608，网络会自动改变尺寸，并继续训练的过程。\n\n这一方法让网络在不同的输入尺寸上都能达到一个很好的预测效果，同一网络能在不同分辨率上进行检测。当输入图片尺寸比较小的精度高，输入图片尺寸比较大的时候精度相对低，所以你可以在YOLOv2的速度和精度上进行权衡。\n<center class=\"half\">\n<img src = \"https://picture.mulindya.com/yolov2-pic6.png\">\n<img src = \"https://picture.mulindya.com/yolov2-pic7.png\">\n</center>\n\n\n#### hi-res-detect(高分辨率图像的对象检测)\n\n上面左图表格中最后一行是使用高分辨l率的图像hi-res detector，因为YOLO2调整网络结构后能够支持多种尺寸的输入图像。通常是使用416\\*416的输入图像，如果用较高分辨率的输入图像，比如544\\*544，则mAP可以达到78.6，有1.8的提升。\n\n#### Hierarchical classification(分层分类)\n\n作者提出了一种在分类数据集和检测数据集上联合训练的机制。使用检测数据集的图片去学习检测相关的信息，例如bounding box 坐标预测，是否包含物体以及属于各个物体的概率。使用仅有类别标签的分类数据集图片去扩展可以检测的种类。作者通过ImageNet训练分类、COCO和VOC数据集来训练检测，这是一个很有价值的思路，可以让我们达到比较优的效果。通过将两个数据集混合训练，**如果遇到来自分类集的图片则只计算分类的Loss，遇到来自检测集的图片则计算完整的Loss**。\n\n但是ImageNet对应分类有9000种，而COCO则只提供80种目标检测，作者使用multi-label模型，即假定一张图片可以有多个label，并且不要求label间独立。因为作者选择在COCO和ImageNet数据集上进行联合训练，遇到的第一问题是两者的类别并不是完全互斥的，比如\"Norfolk terrier\"明显属于\"dog\"，所以作者提出了一种层级分类方法（Hierarchical classification），主要思路是根据各个类别之间的从属关系（根据WordNet）建立一种树结构WordTree，结合COCO和ImageNet建立的WordTree如下图所示：\n\n![](https://picture.mulindya.com/yolov2-pic8.png)\n\n1. 遍历Imagenet的label，然后在WordNet中寻找该label到根节点(指向一个物理对象)的路径；\n2. 如果路径只有一条，那么就将该路径直接加入到分层树结构中；\n3. 否则，从剩余的路径中选择一条最短路径，加入到分层树。\n\n这个分层树我们称之为 WordTree，作用就在于将两种数据集按照层级进行结合。(感觉就是为了扩充数据集同时简便计算)\n\n分类时的概率计算借用了**决策树思想**，**某个节点的概率值等于该节点到根节点的所有条件概率之积**。最终结果是一颗 WordTree （视觉名词组成的层次结构模型）。用WordTree执行分类时，预测每个节点的条件概率。如果想求得特定节点的绝对概率，只需要沿着路径做连续乘积。例如，如果想知道一张图片是不是“Norfolk terrier ”需要计算：\n\n![](https://picture.mulindya.com/yolov2-pic10.png)\n\n另外，为了验证这种方法作者在WordTree（用1000类别的ImageNet创建）上训练了Darknet-19模型。为了创建WordTree1k，作者添加了很多中间节点，把label由1000扩展到1369。训练过程中ground truth标签要顺着向根节点的路径传播。例如，如果一张图片被标记为“Norfolk terrier”，它也被标记为“dog” 和“mammal”等。为了计算条件概率，模型预测了一个包含1369个元素的向量，而且基于所有“同义词集”计算softmax。\n\nsoftmax操作也同时应该采用分组操作，下图上半部分为ImageNet对应的原生Softmax，下半部分对应基于WordTree的Softmax：\n\n![](https://picture.mulindya.com/yolov2-pic9.png)\n\n通过上述方案构造WordTree，得到对应9418个分类，通过重采样保证Imagenet和COCO的样本数据比例为4:1。\n\n### 总结\n\n通过联合训练策略，YOLO9000可以快速检测出超过9000个类别的物体，总体mAP值为19,7%。我觉得这是作者在这篇论文作出的最大的贡献，因为YOLOv2的改进策略亮点并不是很突出，但是YOLO9000算是开创之举。\n","source":"_posts/deep_learning/yolov2.md","raw":"---\ntitle: YOLOv2\ntags: [深度学习,目标检测,yolo]\ncategories: [深度学习,目标检测]\ndate: 2021-08-27 10:57:37\nmath: true\n---\n\n## YOLOv2\n\n### 综述\n\n**论文地址**：https://arxiv.org/abs/1612.08242\n\nYolov2与Yolov1在保持速度的基础上，对预测效果的准确度，耗费时间，鲁棒性三个方面进行了改进，检测能力提高到9000种不同对象。文章提出了一种新的**训练方法--联合训练**方法。这种算法可以将两种数据集混合到一起，使用一种分层的观点进行分类，用大型的分类数据集扩充检测的数据集。也成为YOLO9000.\n\n联合训练的思路：**在检测数据集和分类数据集上训练物体检测器（Object Detectors），用检测数据集学习物体的准确位置，用分类数据集来增加分类的类别两。提升健壮性。**\n\nYolo9000就是使用联合训练的算法，拥有来自于Imagenet的9000种分类信息，物体检测的部分来自于CoCo的检测数据集。\n\n### 论文\n\n\n<details>\n<summary> yolov2 论文：YOLO9000: Better, Faster, Stronger</summary>\n<iframe src='/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/YOLOv2.pdf' width=100% height=650></iframe>\n</details>\n\n\n### 改进点\n\n#### BN(batch normalization) 批量归一化\n\nBN层有助于解决反向传播过程的**梯度消失和梯度爆炸**的问题，**降低**对超参数的**敏感性**，同时对batch归一化时，起到了一定的**正则化**的效果（去掉的dropout层）。通常，在网络的线性变换与激活函数之前增加一个BN层，BN层可以将其特征量归一化使得变换后的特征均值为0，方差为1，从而每一批训练样本都有类似的分布。同时还有修正的参数$\\gamma,\\beta$可以恢复原有信息。实验结果mAP提升2.4%\n\n一般的归一化公式：\n\n{% raw %}\n$$\n\\widehat x^{(k)} = \\frac{x^{(k)}-E[x^{(k)}]}{\\sqrt {Var[x^{(k)}]}} \\\\\n$$\n{% endraw %}\n\n![](https://picture.mulindya.com/yolov2-pic1.png)\n\n#### High resolution classifier（高分辨率图像分类器）\n\n由于对象检测的样本相对图像分类的训练样本要少得多，在对象检测时模型通常时先用图像分类的样本训练卷积层提取图像特征（训练backbone）。但是图像分类样本的分辨率不高，比如在yolov1中，训练集是224\\*224的图片来训练卷积层，但是在训练对象检测的模型使用的是448\\*448的图片，这样的切换对模型性能有一定影响。所以Yolo2在采用**224\\*224图像分类模型预训练之后再采用448\\*448的高分辨率样本对分类模型进行微调**(10个epoch)，这样再训练对象检测模型之前，网络特征就逐渐适应448\\*448的分辨率，然后再使用448\\*448的检测样本进行对象检测模型的训练，以缓解了分辨率突然切换造成的影响。通过这种方式，mAP提升了3.7%。\n\n#### Convolution with anchor boxes(使用先验框)\n\nYolov1是使用全连接层直接预测BBox的坐标值（每个grid预测k个Bbox），Faster R-CNN的方法是只用卷积层和region proposal network来预测锚框的偏移度和置信度。但是作者发现采用Faster R-CNN的方法比Yolov1的方法更加简便，让神经网络学习起来更加容易。\n\n因此，Yolov2也尝试了先验框（anchor），在每个grid预先设定一组不同大小不同宽高比的边框，来覆盖整个图像的不同位置和多种尺度，这些先验框作为预定义的候选区检测框内是否有目标，以及微调边框的位置。之前yolov1并没有采用先验框，并且每个grid只预测两个bounding box，整个图像有98个，yolov2入轨每个grid采用9个先验框，收缩网络运行在416\\*416的图片，一个grid有32像素，那么总共有13\\*13\\*9=1521个先验框，最终去掉了全连接层，采用anchor boxes来预测bounding boxes。由于图片中的物体都倾向于出现在图片的中心位置，特别是那种比较大的物体，所以有一个单独位于物体中心的位置用于预测这些物体。YOLO的卷积层采用32这个值来下采样图片，所以通过选择416\\*416用作输入尺寸最终能输出一个13\\*13的Feature Map。使用Anchor Box会让精确度稍微下降，但用了它能让YOLO能预测出大于一千个框，同时recall达到88%，mAP达到69.2%。\n\n#### Dimension clusters（聚类提取先验框的尺度信息）\n\n之前Anchor Box的尺寸是手动选择的，所以尺寸还有优化的余地。YOLO2尝试统计出更符合样本中对象尺寸的先验框，这样就可以减少网络微调先验框到实际位置的难度。YOLO2的做法是对训练集中标注的边框进行K-mean聚类分析，以寻找尽可能匹配样本的边框尺寸。\n\n在使用Kmeans聚类分析时，并不是直接采用的欧氏距离度量，因为这样大边框的距离会相对小边框大，这样误差就很大，因此我们采用IOU的形式。\n$$\nd(box,centroid) = 1-IOU(box,centroid)\n$$\ncentroid是聚类时被选作中心的边框，box就是其它边框，d就是两者间的“距离”。IOU越大，“距离”越近。YOLO2给出的聚类分析结果如下图所示：\n\n![](https://picture.mulindya.com/yolov2-pic2.png)\n\n通过分析实验结果，在model复杂性与high recall之间权衡之后，选择聚类分类数K=5。\n\n![](https://picture.mulindya.com/yolov2-pic3.png)\n\n说明用K-means选择Anchor Boxes时，选择值为5时，AVG IOU的值是61，这个值要比不用聚类的方法的60.9要高。选择值为9的时候，AVG IOU更有显著提高。总之就是说明用聚类的方法是有效果的。\n\n#### Direct location prediction（约束预测边框的位置）\n\n借鉴于Faster RCNN的先验框方法，在训练的早期阶段，其位置预测容易不稳定。其位置预测公式为：\n\n{% raw %}\n$$\nx = (t_x*w_a)+x_a \\\\\ny = (t_y*h_a)+y_a\n$$\n{% endraw %}\n\n其中， 是预测边框的中心， $x_a,y_a$是先验框（anchor）的中心点坐标， $w_a,h_a$是先验框（anchor）的宽和高，$t_x,t_y$ 是要学习的参数。注意，YOLO论文中写的是$x = (t_x*w_a)-x_a$ ，根据Faster RCNN，应该是\"+\"。\n\n但是$t_x,t_y$ 不加约束的这种方式，会导致预测边框中心会出现在任意位置，因此在早期训练阶段不稳定，文章将边框的中心约束在grid网格当中。\n\n![](https://picture.mulindya.com/yolov2-pic4.png)\n\n其中， $b_x,b_y,b_w,b_h$是预测边框的中心和宽高。 $Pr(object)*IOU(b,object)$是预测边框的置信度，在YOLO1是直接预测置信度的值，这里对预测参数$t_o$进行σ变换后作为置信度的值。 $c_x,c_y$是当前网格左上角到图像左上角的距离，要先将网格大小归一化，即令一个网格的宽=1，高=1。 $p_w,p_h$是先验框的宽和高($t_w,t_h$会对初始的设置进行调整)。σ是sigmoid函数。 $t_x,t_y,t_w,t_h,t_o$是要学习的参数($t_o$也可以学习的嘛，学到某种规律用以表示置信度:question:)，分别用于预测边框的中心和宽高，以及置信度。\n\n![](https://picture.mulindya.com/yolov2-pic5.png)\n\n这种方式可以让数值更幅度稳定，也让网络更容易学习。\n\n#### Fine-Grained Features(passthrough层检测细粒度特征)\n\n对象检测面临一个问题：即目标检测的对象有大有小，输入图像经过多层网络提取特征，最后输出的特征图中（比如YOLO2中输入416*416经过卷积网络下采样最后输出是13*13），较小的对象可能特征已经不明显甚至被忽略掉了。为了更好的检测出一些比较小的对象，最后输出的特征图需要保留一些更细节的信息。\n\nYOLO2引入一种称为passthrough层的方法在特征图中保留一些细节信息。具体来说，就是在最后一个pooling之前，特征图的大小是26\\*26\\*512，将其1拆4，直接传递（passthrough）到pooling后（并且又经过一组卷积）的特征图，两者叠加到一起作为输出的特征图。\n![](https://mmbiz.qpic.cn/sz_mmbiz_png/gYUsOT36vfrVPO5dCS8SFFLceGUMkGDWjLDkibibfuO5LIGloXSRnzrichTTuS9FezhwDY4LiavUiaJO3QtDEwgIXRQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1)\n\n具体怎样1拆4，下面借用一副图看的很清楚。图中示例的是1个4\\*4拆成4个2\\*2。另外，根据YOLO2的代码，特征图先用1\\*1卷积从 26\\*26\\*512 降维到 26\\*26\\*64，再做1拆4并passthrough。\n\n```python\nut = tf.extract_image_patches(in, [1, stride, stride, 1], [1, stride, stride, 1], [1,1,1,1], padding=\"VALID\")\n# or use tf.space_to_depth\n# out = tf.space_to_depth(in, 2)\n```\n\n```python\ntf.extract_image_patches(\n    images,\n    ksizes,\n    strides,\n    rates,\n    padding,\n    name=None\n)\n#images：必须是shape为[batch, in_rows, in_cols, depth]的tensor；\n#ksize：长度大于等于4的list，滑动窗的大小\n#strides:每块patch区域之间中心点之间的距离，必须是: [1, stride_rows, stride_cols, 1].\n    #具体点说就是用来计算每次选取patch的初始点位置\n#rates: 在每次提取的patch中，对应dim像素点位置之间的差距，必须是[1, rate_rows, rate_cols, 1]；「或者理解为 提取出来的每个框里面的像素不是都选择的 根据rate的不同 隔几个选一个 默认是1也就是的都选择 若为2 那么就是隔一个来选择」\n#padding:有两个取值，“VALID”或者“SAME”，“VALID”表示所取的patch区域必须完全包含在原始图像中.\"SAME\"表示可以取超出原始图像的部分，这一部分进行0填充。\n```\n\n#### Multi-scale Training（多尺度图像训练）\n\n作者希望YOLOv2能健壮的运行于不同尺寸的图片之上，所以把这一想法用于训练model中。\n\n区别于之前的补全图片的尺寸的方法，YOLOv2每迭代几次都会改变网络参数。每10个Batch，网络会**随机地选择一个新的图片尺寸**，由于使用了下采样参数是32，所以不同的尺寸大小也选择为32的倍数{320，352…..608}，最小320\\*320，最大608\\*608，网络会自动改变尺寸，并继续训练的过程。\n\n这一方法让网络在不同的输入尺寸上都能达到一个很好的预测效果，同一网络能在不同分辨率上进行检测。当输入图片尺寸比较小的精度高，输入图片尺寸比较大的时候精度相对低，所以你可以在YOLOv2的速度和精度上进行权衡。\n<center class=\"half\">\n<img src = \"https://picture.mulindya.com/yolov2-pic6.png\">\n<img src = \"https://picture.mulindya.com/yolov2-pic7.png\">\n</center>\n\n\n#### hi-res-detect(高分辨率图像的对象检测)\n\n上面左图表格中最后一行是使用高分辨l率的图像hi-res detector，因为YOLO2调整网络结构后能够支持多种尺寸的输入图像。通常是使用416\\*416的输入图像，如果用较高分辨率的输入图像，比如544\\*544，则mAP可以达到78.6，有1.8的提升。\n\n#### Hierarchical classification(分层分类)\n\n作者提出了一种在分类数据集和检测数据集上联合训练的机制。使用检测数据集的图片去学习检测相关的信息，例如bounding box 坐标预测，是否包含物体以及属于各个物体的概率。使用仅有类别标签的分类数据集图片去扩展可以检测的种类。作者通过ImageNet训练分类、COCO和VOC数据集来训练检测，这是一个很有价值的思路，可以让我们达到比较优的效果。通过将两个数据集混合训练，**如果遇到来自分类集的图片则只计算分类的Loss，遇到来自检测集的图片则计算完整的Loss**。\n\n但是ImageNet对应分类有9000种，而COCO则只提供80种目标检测，作者使用multi-label模型，即假定一张图片可以有多个label，并且不要求label间独立。因为作者选择在COCO和ImageNet数据集上进行联合训练，遇到的第一问题是两者的类别并不是完全互斥的，比如\"Norfolk terrier\"明显属于\"dog\"，所以作者提出了一种层级分类方法（Hierarchical classification），主要思路是根据各个类别之间的从属关系（根据WordNet）建立一种树结构WordTree，结合COCO和ImageNet建立的WordTree如下图所示：\n\n![](https://picture.mulindya.com/yolov2-pic8.png)\n\n1. 遍历Imagenet的label，然后在WordNet中寻找该label到根节点(指向一个物理对象)的路径；\n2. 如果路径只有一条，那么就将该路径直接加入到分层树结构中；\n3. 否则，从剩余的路径中选择一条最短路径，加入到分层树。\n\n这个分层树我们称之为 WordTree，作用就在于将两种数据集按照层级进行结合。(感觉就是为了扩充数据集同时简便计算)\n\n分类时的概率计算借用了**决策树思想**，**某个节点的概率值等于该节点到根节点的所有条件概率之积**。最终结果是一颗 WordTree （视觉名词组成的层次结构模型）。用WordTree执行分类时，预测每个节点的条件概率。如果想求得特定节点的绝对概率，只需要沿着路径做连续乘积。例如，如果想知道一张图片是不是“Norfolk terrier ”需要计算：\n\n![](https://picture.mulindya.com/yolov2-pic10.png)\n\n另外，为了验证这种方法作者在WordTree（用1000类别的ImageNet创建）上训练了Darknet-19模型。为了创建WordTree1k，作者添加了很多中间节点，把label由1000扩展到1369。训练过程中ground truth标签要顺着向根节点的路径传播。例如，如果一张图片被标记为“Norfolk terrier”，它也被标记为“dog” 和“mammal”等。为了计算条件概率，模型预测了一个包含1369个元素的向量，而且基于所有“同义词集”计算softmax。\n\nsoftmax操作也同时应该采用分组操作，下图上半部分为ImageNet对应的原生Softmax，下半部分对应基于WordTree的Softmax：\n\n![](https://picture.mulindya.com/yolov2-pic9.png)\n\n通过上述方案构造WordTree，得到对应9418个分类，通过重采样保证Imagenet和COCO的样本数据比例为4:1。\n\n### 总结\n\n通过联合训练策略，YOLO9000可以快速检测出超过9000个类别的物体，总体mAP值为19,7%。我觉得这是作者在这篇论文作出的最大的贡献，因为YOLOv2的改进策略亮点并不是很突出，但是YOLO9000算是开创之举。\n","slug":"deep_learning/yolov2","published":1,"updated":"2021-08-28T10:47:41.634Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxocf000qugx41zot9pkj","content":"<h2 id=\"YOLOv2\">YOLOv2</h2>\n<h3 id=\"综述\">综述</h3>\n<p><strong>论文地址</strong>：<a href=\"https://arxiv.org/abs/1612.08242\">https://arxiv.org/abs/1612.08242</a></p>\n<p>Yolov2与Yolov1在保持速度的基础上，对预测效果的准确度，耗费时间，鲁棒性三个方面进行了改进，检测能力提高到9000种不同对象。文章提出了一种新的<strong>训练方法–联合训练</strong>方法。这种算法可以将两种数据集混合到一起，使用一种分层的观点进行分类，用大型的分类数据集扩充检测的数据集。也成为YOLO9000.</p>\n<p>联合训练的思路：<strong>在检测数据集和分类数据集上训练物体检测器（Object Detectors），用检测数据集学习物体的准确位置，用分类数据集来增加分类的类别两。提升健壮性。</strong></p>\n<p>Yolo9000就是使用联合训练的算法，拥有来自于Imagenet的9000种分类信息，物体检测的部分来自于CoCo的检测数据集。</p>\n<h3 id=\"论文\">论文</h3>\n<details>\n<summary> yolov2 论文：YOLO9000: Better, Faster, Stronger</summary>\n<iframe src=\"/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/YOLOv2.pdf\" width=\"100%\" height=\"650\"></iframe>\n</details>\n<h3 id=\"改进点\">改进点</h3>\n<h4 id=\"BN-batch-normalization-批量归一化\">BN(batch normalization) 批量归一化</h4>\n<p>BN层有助于解决反向传播过程的<strong>梯度消失和梯度爆炸</strong>的问题，<strong>降低</strong>对超参数的<strong>敏感性</strong>，同时对batch归一化时，起到了一定的<strong>正则化</strong>的效果（去掉的dropout层）。通常，在网络的线性变换与激活函数之前增加一个BN层，BN层可以将其特征量归一化使得变换后的特征均值为0，方差为1，从而每一批训练样本都有类似的分布。同时还有修正的参数$\\gamma,\\beta$可以恢复原有信息。实验结果mAP提升2.4%</p>\n<p>一般的归一化公式：</p>\n\n$$\n\\widehat x^{(k)} = \\frac{x^{(k)}-E[x^{(k)}]}{\\sqrt {Var[x^{(k)}]}} \\\\\n$$\n\n<p><img src=\"https://picture.mulindya.com/yolov2-pic1.png\" alt=\"\"></p>\n<h4 id=\"High-resolution-classifier（高分辨率图像分类器）\">High resolution classifier（高分辨率图像分类器）</h4>\n<p>由于对象检测的样本相对图像分类的训练样本要少得多，在对象检测时模型通常时先用图像分类的样本训练卷积层提取图像特征（训练backbone）。但是图像分类样本的分辨率不高，比如在yolov1中，训练集是224*224的图片来训练卷积层，但是在训练对象检测的模型使用的是448*448的图片，这样的切换对模型性能有一定影响。所以Yolo2在采用<strong>224*224图像分类模型预训练之后再采用448*448的高分辨率样本对分类模型进行微调</strong>(10个epoch)，这样再训练对象检测模型之前，网络特征就逐渐适应448*448的分辨率，然后再使用448*448的检测样本进行对象检测模型的训练，以缓解了分辨率突然切换造成的影响。通过这种方式，mAP提升了3.7%。</p>\n<h4 id=\"Convolution-with-anchor-boxes-使用先验框\">Convolution with anchor boxes(使用先验框)</h4>\n<p>Yolov1是使用全连接层直接预测BBox的坐标值（每个grid预测k个Bbox），Faster R-CNN的方法是只用卷积层和region proposal network来预测锚框的偏移度和置信度。但是作者发现采用Faster R-CNN的方法比Yolov1的方法更加简便，让神经网络学习起来更加容易。</p>\n<p>因此，Yolov2也尝试了先验框（anchor），在每个grid预先设定一组不同大小不同宽高比的边框，来覆盖整个图像的不同位置和多种尺度，这些先验框作为预定义的候选区检测框内是否有目标，以及微调边框的位置。之前yolov1并没有采用先验框，并且每个grid只预测两个bounding box，整个图像有98个，yolov2入轨每个grid采用9个先验框，收缩网络运行在416*416的图片，一个grid有32像素，那么总共有13*13*9=1521个先验框，最终去掉了全连接层，采用anchor boxes来预测bounding boxes。由于图片中的物体都倾向于出现在图片的中心位置，特别是那种比较大的物体，所以有一个单独位于物体中心的位置用于预测这些物体。YOLO的卷积层采用32这个值来下采样图片，所以通过选择416*416用作输入尺寸最终能输出一个13*13的Feature Map。使用Anchor Box会让精确度稍微下降，但用了它能让YOLO能预测出大于一千个框，同时recall达到88%，mAP达到69.2%。</p>\n<h4 id=\"Dimension-clusters（聚类提取先验框的尺度信息）\">Dimension clusters（聚类提取先验框的尺度信息）</h4>\n<p>之前Anchor Box的尺寸是手动选择的，所以尺寸还有优化的余地。YOLO2尝试统计出更符合样本中对象尺寸的先验框，这样就可以减少网络微调先验框到实际位置的难度。YOLO2的做法是对训练集中标注的边框进行K-mean聚类分析，以寻找尽可能匹配样本的边框尺寸。</p>\n<p>在使用Kmeans聚类分析时，并不是直接采用的欧氏距离度量，因为这样大边框的距离会相对小边框大，这样误差就很大，因此我们采用IOU的形式。<br>\n$$<br>\nd(box,centroid) = 1-IOU(box,centroid)<br>\n$$<br>\ncentroid是聚类时被选作中心的边框，box就是其它边框，d就是两者间的“距离”。IOU越大，“距离”越近。YOLO2给出的聚类分析结果如下图所示：</p>\n<p><img src=\"https://picture.mulindya.com/yolov2-pic2.png\" alt=\"\"></p>\n<p>通过分析实验结果，在model复杂性与high recall之间权衡之后，选择聚类分类数K=5。</p>\n<p><img src=\"https://picture.mulindya.com/yolov2-pic3.png\" alt=\"\"></p>\n<p>说明用K-means选择Anchor Boxes时，选择值为5时，AVG IOU的值是61，这个值要比不用聚类的方法的60.9要高。选择值为9的时候，AVG IOU更有显著提高。总之就是说明用聚类的方法是有效果的。</p>\n<h4 id=\"Direct-location-prediction（约束预测边框的位置）\">Direct location prediction（约束预测边框的位置）</h4>\n<p>借鉴于Faster RCNN的先验框方法，在训练的早期阶段，其位置预测容易不稳定。其位置预测公式为：</p>\n\n$$\nx = (t_x*w_a)+x_a \\\\\ny = (t_y*h_a)+y_a\n$$\n\n<p>其中， 是预测边框的中心， $x_a,y_a$是先验框（anchor）的中心点坐标， $w_a,h_a$是先验框（anchor）的宽和高，$t_x,t_y$ 是要学习的参数。注意，YOLO论文中写的是$x = (t_x*w_a)-x_a$ ，根据Faster RCNN，应该是\"+\"。</p>\n<p>但是$t_x,t_y$ 不加约束的这种方式，会导致预测边框中心会出现在任意位置，因此在早期训练阶段不稳定，文章将边框的中心约束在grid网格当中。</p>\n<p><img src=\"https://picture.mulindya.com/yolov2-pic4.png\" alt=\"\"></p>\n<p>其中， $b_x,b_y,b_w,b_h$是预测边框的中心和宽高。 $Pr(object)*IOU(b,object)$是预测边框的置信度，在YOLO1是直接预测置信度的值，这里对预测参数$t_o$进行σ变换后作为置信度的值。 $c_x,c_y$是当前网格左上角到图像左上角的距离，要先将网格大小归一化，即令一个网格的宽=1，高=1。 $p_w,p_h$是先验框的宽和高($t_w,t_h$会对初始的设置进行调整)。σ是sigmoid函数。 $t_x,t_y,t_w,t_h,t_o$是要学习的参数($t_o$也可以学习的嘛，学到某种规律用以表示置信度❓)，分别用于预测边框的中心和宽高，以及置信度。</p>\n<p><img src=\"https://picture.mulindya.com/yolov2-pic5.png\" alt=\"\"></p>\n<p>这种方式可以让数值更幅度稳定，也让网络更容易学习。</p>\n<h4 id=\"Fine-Grained-Features-passthrough层检测细粒度特征\">Fine-Grained Features(passthrough层检测细粒度特征)</h4>\n<p>对象检测面临一个问题：即目标检测的对象有大有小，输入图像经过多层网络提取特征，最后输出的特征图中（比如YOLO2中输入416<em>416经过卷积网络下采样最后输出是13</em>13），较小的对象可能特征已经不明显甚至被忽略掉了。为了更好的检测出一些比较小的对象，最后输出的特征图需要保留一些更细节的信息。</p>\n<p>YOLO2引入一种称为passthrough层的方法在特征图中保留一些细节信息。具体来说，就是在最后一个pooling之前，特征图的大小是26*26*512，将其1拆4，直接传递（passthrough）到pooling后（并且又经过一组卷积）的特征图，两者叠加到一起作为输出的特征图。<br>\n<img src=\"https://mmbiz.qpic.cn/sz_mmbiz_png/gYUsOT36vfrVPO5dCS8SFFLceGUMkGDWjLDkibibfuO5LIGloXSRnzrichTTuS9FezhwDY4LiavUiaJO3QtDEwgIXRQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1\" alt=\"\"></p>\n<p>具体怎样1拆4，下面借用一副图看的很清楚。图中示例的是1个4*4拆成4个2*2。另外，根据YOLO2的代码，特征图先用1*1卷积从 26*26*512 降维到 26*26*64，再做1拆4并passthrough。</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\">ut = tf.extract_image_patches(<span class=\"hljs-keyword\">in</span>, [<span class=\"hljs-number\">1</span>, stride, stride, <span class=\"hljs-number\">1</span>], [<span class=\"hljs-number\">1</span>, stride, stride, <span class=\"hljs-number\">1</span>], [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>], padding=<span class=\"hljs-string\">\"VALID\"</span>)<br><span class=\"hljs-comment\"># or use tf.space_to_depth</span><br><span class=\"hljs-comment\"># out = tf.space_to_depth(in, 2)</span><br></code></pre></td></tr></tbody></table></figure>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\">tf.extract_image_patches(<br>    images,<br>    ksizes,<br>    strides,<br>    rates,<br>    padding,<br>    name=<span class=\"hljs-literal\">None</span><br>)<br><span class=\"hljs-comment\">#images：必须是shape为[batch, in_rows, in_cols, depth]的tensor；</span><br><span class=\"hljs-comment\">#ksize：长度大于等于4的list，滑动窗的大小</span><br><span class=\"hljs-comment\">#strides:每块patch区域之间中心点之间的距离，必须是: [1, stride_rows, stride_cols, 1].</span><br>    <span class=\"hljs-comment\">#具体点说就是用来计算每次选取patch的初始点位置</span><br><span class=\"hljs-comment\">#rates: 在每次提取的patch中，对应dim像素点位置之间的差距，必须是[1, rate_rows, rate_cols, 1]；「或者理解为 提取出来的每个框里面的像素不是都选择的 根据rate的不同 隔几个选一个 默认是1也就是的都选择 若为2 那么就是隔一个来选择」</span><br><span class=\"hljs-comment\">#padding:有两个取值，“VALID”或者“SAME”，“VALID”表示所取的patch区域必须完全包含在原始图像中.\"SAME\"表示可以取超出原始图像的部分，这一部分进行0填充。</span><br></code></pre></td></tr></tbody></table></figure>\n<h4 id=\"Multi-scale-Training（多尺度图像训练）\">Multi-scale Training（多尺度图像训练）</h4>\n<p>作者希望YOLOv2能健壮的运行于不同尺寸的图片之上，所以把这一想法用于训练model中。</p>\n<p>区别于之前的补全图片的尺寸的方法，YOLOv2每迭代几次都会改变网络参数。每10个Batch，网络会<strong>随机地选择一个新的图片尺寸</strong>，由于使用了下采样参数是32，所以不同的尺寸大小也选择为32的倍数{320，352……608}，最小320*320，最大608*608，网络会自动改变尺寸，并继续训练的过程。</p>\n<p>这一方法让网络在不同的输入尺寸上都能达到一个很好的预测效果，同一网络能在不同分辨率上进行检测。当输入图片尺寸比较小的精度高，输入图片尺寸比较大的时候精度相对低，所以你可以在YOLOv2的速度和精度上进行权衡。</p>\n<center class=\"half\">\n<img src=\"https://picture.mulindya.com/yolov2-pic6.png\">\n<img src=\"https://picture.mulindya.com/yolov2-pic7.png\">\n</center>\n<h4 id=\"hi-res-detect-高分辨率图像的对象检测\">hi-res-detect(高分辨率图像的对象检测)</h4>\n<p>上面左图表格中最后一行是使用高分辨l率的图像hi-res detector，因为YOLO2调整网络结构后能够支持多种尺寸的输入图像。通常是使用416*416的输入图像，如果用较高分辨率的输入图像，比如544*544，则mAP可以达到78.6，有1.8的提升。</p>\n<h4 id=\"Hierarchical-classification-分层分类\">Hierarchical classification(分层分类)</h4>\n<p>作者提出了一种在分类数据集和检测数据集上联合训练的机制。使用检测数据集的图片去学习检测相关的信息，例如bounding box 坐标预测，是否包含物体以及属于各个物体的概率。使用仅有类别标签的分类数据集图片去扩展可以检测的种类。作者通过ImageNet训练分类、COCO和VOC数据集来训练检测，这是一个很有价值的思路，可以让我们达到比较优的效果。通过将两个数据集混合训练，<strong>如果遇到来自分类集的图片则只计算分类的Loss，遇到来自检测集的图片则计算完整的Loss</strong>。</p>\n<p>但是ImageNet对应分类有9000种，而COCO则只提供80种目标检测，作者使用multi-label模型，即假定一张图片可以有多个label，并且不要求label间独立。因为作者选择在COCO和ImageNet数据集上进行联合训练，遇到的第一问题是两者的类别并不是完全互斥的，比如\"Norfolk terrier\"明显属于\"dog\"，所以作者提出了一种层级分类方法（Hierarchical classification），主要思路是根据各个类别之间的从属关系（根据WordNet）建立一种树结构WordTree，结合COCO和ImageNet建立的WordTree如下图所示：</p>\n<p><img src=\"https://picture.mulindya.com/yolov2-pic8.png\" alt=\"\"></p>\n<ol>\n<li>遍历Imagenet的label，然后在WordNet中寻找该label到根节点(指向一个物理对象)的路径；</li>\n<li>如果路径只有一条，那么就将该路径直接加入到分层树结构中；</li>\n<li>否则，从剩余的路径中选择一条最短路径，加入到分层树。</li>\n</ol>\n<p>这个分层树我们称之为 WordTree，作用就在于将两种数据集按照层级进行结合。(感觉就是为了扩充数据集同时简便计算)</p>\n<p>分类时的概率计算借用了<strong>决策树思想</strong>，<strong>某个节点的概率值等于该节点到根节点的所有条件概率之积</strong>。最终结果是一颗 WordTree （视觉名词组成的层次结构模型）。用WordTree执行分类时，预测每个节点的条件概率。如果想求得特定节点的绝对概率，只需要沿着路径做连续乘积。例如，如果想知道一张图片是不是“Norfolk terrier ”需要计算：</p>\n<p><img src=\"https://picture.mulindya.com/yolov2-pic10.png\" alt=\"\"></p>\n<p>另外，为了验证这种方法作者在WordTree（用1000类别的ImageNet创建）上训练了Darknet-19模型。为了创建WordTree1k，作者添加了很多中间节点，把label由1000扩展到1369。训练过程中ground truth标签要顺着向根节点的路径传播。例如，如果一张图片被标记为“Norfolk terrier”，它也被标记为“dog” 和“mammal”等。为了计算条件概率，模型预测了一个包含1369个元素的向量，而且基于所有“同义词集”计算softmax。</p>\n<p>softmax操作也同时应该采用分组操作，下图上半部分为ImageNet对应的原生Softmax，下半部分对应基于WordTree的Softmax：</p>\n<p><img src=\"https://picture.mulindya.com/yolov2-pic9.png\" alt=\"\"></p>\n<p>通过上述方案构造WordTree，得到对应9418个分类，通过重采样保证Imagenet和COCO的样本数据比例为4:1。</p>\n<h3 id=\"总结\">总结</h3>\n<p>通过联合训练策略，YOLO9000可以快速检测出超过9000个类别的物体，总体mAP值为19,7%。我觉得这是作者在这篇论文作出的最大的贡献，因为YOLOv2的改进策略亮点并不是很突出，但是YOLO9000算是开创之举。</p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<h2 id=\"YOLOv2\">YOLOv2</h2>\n<h3 id=\"综述\">综述</h3>\n<p><strong>论文地址</strong>：<a href=\"https://arxiv.org/abs/1612.08242\">https://arxiv.org/abs/1612.08242</a></p>\n<p>Yolov2与Yolov1在保持速度的基础上，对预测效果的准确度，耗费时间，鲁棒性三个方面进行了改进，检测能力提高到9000种不同对象。文章提出了一种新的<strong>训练方法–联合训练</strong>方法。这种算法可以将两种数据集混合到一起，使用一种分层的观点进行分类，用大型的分类数据集扩充检测的数据集。也成为YOLO9000.</p>\n<p>联合训练的思路：<strong>在检测数据集和分类数据集上训练物体检测器（Object Detectors），用检测数据集学习物体的准确位置，用分类数据集来增加分类的类别两。提升健壮性。</strong></p>\n<p>Yolo9000就是使用联合训练的算法，拥有来自于Imagenet的9000种分类信息，物体检测的部分来自于CoCo的检测数据集。</p>\n<h3 id=\"论文\">论文</h3>\n<details>\n<summary> yolov2 论文：YOLO9000: Better, Faster, Stronger</summary>\n<iframe src='/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/YOLOv2.pdf' width=100% height=650></iframe>\n</details>\n<h3 id=\"改进点\">改进点</h3>\n<h4 id=\"BN-batch-normalization-批量归一化\">BN(batch normalization) 批量归一化</h4>\n<p>BN层有助于解决反向传播过程的<strong>梯度消失和梯度爆炸</strong>的问题，<strong>降低</strong>对超参数的<strong>敏感性</strong>，同时对batch归一化时，起到了一定的<strong>正则化</strong>的效果（去掉的dropout层）。通常，在网络的线性变换与激活函数之前增加一个BN层，BN层可以将其特征量归一化使得变换后的特征均值为0，方差为1，从而每一批训练样本都有类似的分布。同时还有修正的参数$\\gamma,\\beta$可以恢复原有信息。实验结果mAP提升2.4%</p>\n<p>一般的归一化公式：</p>\n\n$$\n\\widehat x^{(k)} = \\frac{x^{(k)}-E[x^{(k)}]}{\\sqrt {Var[x^{(k)}]}} \\\\\n$$\n\n<p><img src=\"https://picture.mulindya.com/yolov2-pic1.png\" alt=\"\"></p>\n<h4 id=\"High-resolution-classifier（高分辨率图像分类器）\">High resolution classifier（高分辨率图像分类器）</h4>\n<p>由于对象检测的样本相对图像分类的训练样本要少得多，在对象检测时模型通常时先用图像分类的样本训练卷积层提取图像特征（训练backbone）。但是图像分类样本的分辨率不高，比如在yolov1中，训练集是224*224的图片来训练卷积层，但是在训练对象检测的模型使用的是448*448的图片，这样的切换对模型性能有一定影响。所以Yolo2在采用<strong>224*224图像分类模型预训练之后再采用448*448的高分辨率样本对分类模型进行微调</strong>(10个epoch)，这样再训练对象检测模型之前，网络特征就逐渐适应448*448的分辨率，然后再使用448*448的检测样本进行对象检测模型的训练，以缓解了分辨率突然切换造成的影响。通过这种方式，mAP提升了3.7%。</p>\n<h4 id=\"Convolution-with-anchor-boxes-使用先验框\">Convolution with anchor boxes(使用先验框)</h4>\n<p>Yolov1是使用全连接层直接预测BBox的坐标值（每个grid预测k个Bbox），Faster R-CNN的方法是只用卷积层和region proposal network来预测锚框的偏移度和置信度。但是作者发现采用Faster R-CNN的方法比Yolov1的方法更加简便，让神经网络学习起来更加容易。</p>\n<p>因此，Yolov2也尝试了先验框（anchor），在每个grid预先设定一组不同大小不同宽高比的边框，来覆盖整个图像的不同位置和多种尺度，这些先验框作为预定义的候选区检测框内是否有目标，以及微调边框的位置。之前yolov1并没有采用先验框，并且每个grid只预测两个bounding box，整个图像有98个，yolov2入轨每个grid采用9个先验框，收缩网络运行在416*416的图片，一个grid有32像素，那么总共有13*13*9=1521个先验框，最终去掉了全连接层，采用anchor boxes来预测bounding boxes。由于图片中的物体都倾向于出现在图片的中心位置，特别是那种比较大的物体，所以有一个单独位于物体中心的位置用于预测这些物体。YOLO的卷积层采用32这个值来下采样图片，所以通过选择416*416用作输入尺寸最终能输出一个13*13的Feature Map。使用Anchor Box会让精确度稍微下降，但用了它能让YOLO能预测出大于一千个框，同时recall达到88%，mAP达到69.2%。</p>\n<h4 id=\"Dimension-clusters（聚类提取先验框的尺度信息）\">Dimension clusters（聚类提取先验框的尺度信息）</h4>\n<p>之前Anchor Box的尺寸是手动选择的，所以尺寸还有优化的余地。YOLO2尝试统计出更符合样本中对象尺寸的先验框，这样就可以减少网络微调先验框到实际位置的难度。YOLO2的做法是对训练集中标注的边框进行K-mean聚类分析，以寻找尽可能匹配样本的边框尺寸。</p>\n<p>在使用Kmeans聚类分析时，并不是直接采用的欧氏距离度量，因为这样大边框的距离会相对小边框大，这样误差就很大，因此我们采用IOU的形式。<br>\n$$<br>\nd(box,centroid) = 1-IOU(box,centroid)<br>\n$$<br>\ncentroid是聚类时被选作中心的边框，box就是其它边框，d就是两者间的“距离”。IOU越大，“距离”越近。YOLO2给出的聚类分析结果如下图所示：</p>\n<p><img src=\"https://picture.mulindya.com/yolov2-pic2.png\" alt=\"\"></p>\n<p>通过分析实验结果，在model复杂性与high recall之间权衡之后，选择聚类分类数K=5。</p>\n<p><img src=\"https://picture.mulindya.com/yolov2-pic3.png\" alt=\"\"></p>\n<p>说明用K-means选择Anchor Boxes时，选择值为5时，AVG IOU的值是61，这个值要比不用聚类的方法的60.9要高。选择值为9的时候，AVG IOU更有显著提高。总之就是说明用聚类的方法是有效果的。</p>\n<h4 id=\"Direct-location-prediction（约束预测边框的位置）\">Direct location prediction（约束预测边框的位置）</h4>\n<p>借鉴于Faster RCNN的先验框方法，在训练的早期阶段，其位置预测容易不稳定。其位置预测公式为：</p>\n\n$$\nx = (t_x*w_a)+x_a \\\\\ny = (t_y*h_a)+y_a\n$$\n\n<p>其中， 是预测边框的中心， $x_a,y_a$是先验框（anchor）的中心点坐标， $w_a,h_a$是先验框（anchor）的宽和高，$t_x,t_y$ 是要学习的参数。注意，YOLO论文中写的是$x = (t_x*w_a)-x_a$ ，根据Faster RCNN，应该是&quot;+&quot;。</p>\n<p>但是$t_x,t_y$ 不加约束的这种方式，会导致预测边框中心会出现在任意位置，因此在早期训练阶段不稳定，文章将边框的中心约束在grid网格当中。</p>\n<p><img src=\"https://picture.mulindya.com/yolov2-pic4.png\" alt=\"\"></p>\n<p>其中， $b_x,b_y,b_w,b_h$是预测边框的中心和宽高。 $Pr(object)*IOU(b,object)$是预测边框的置信度，在YOLO1是直接预测置信度的值，这里对预测参数$t_o$进行σ变换后作为置信度的值。 $c_x,c_y$是当前网格左上角到图像左上角的距离，要先将网格大小归一化，即令一个网格的宽=1，高=1。 $p_w,p_h$是先验框的宽和高($t_w,t_h$会对初始的设置进行调整)。σ是sigmoid函数。 $t_x,t_y,t_w,t_h,t_o$是要学习的参数($t_o$也可以学习的嘛，学到某种规律用以表示置信度❓)，分别用于预测边框的中心和宽高，以及置信度。</p>\n<p><img src=\"https://picture.mulindya.com/yolov2-pic5.png\" alt=\"\"></p>\n<p>这种方式可以让数值更幅度稳定，也让网络更容易学习。</p>\n<h4 id=\"Fine-Grained-Features-passthrough层检测细粒度特征\">Fine-Grained Features(passthrough层检测细粒度特征)</h4>\n<p>对象检测面临一个问题：即目标检测的对象有大有小，输入图像经过多层网络提取特征，最后输出的特征图中（比如YOLO2中输入416<em>416经过卷积网络下采样最后输出是13</em>13），较小的对象可能特征已经不明显甚至被忽略掉了。为了更好的检测出一些比较小的对象，最后输出的特征图需要保留一些更细节的信息。</p>\n<p>YOLO2引入一种称为passthrough层的方法在特征图中保留一些细节信息。具体来说，就是在最后一个pooling之前，特征图的大小是26*26*512，将其1拆4，直接传递（passthrough）到pooling后（并且又经过一组卷积）的特征图，两者叠加到一起作为输出的特征图。<br>\n<img src=\"https://mmbiz.qpic.cn/sz_mmbiz_png/gYUsOT36vfrVPO5dCS8SFFLceGUMkGDWjLDkibibfuO5LIGloXSRnzrichTTuS9FezhwDY4LiavUiaJO3QtDEwgIXRQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1\" alt=\"\"></p>\n<p>具体怎样1拆4，下面借用一副图看的很清楚。图中示例的是1个4*4拆成4个2*2。另外，根据YOLO2的代码，特征图先用1*1卷积从 26*26*512 降维到 26*26*64，再做1拆4并passthrough。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\">ut = tf.extract_image_patches(<span class=\"hljs-keyword\">in</span>, [<span class=\"hljs-number\">1</span>, stride, stride, <span class=\"hljs-number\">1</span>], [<span class=\"hljs-number\">1</span>, stride, stride, <span class=\"hljs-number\">1</span>], [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>], padding=<span class=\"hljs-string\">&quot;VALID&quot;</span>)<br><span class=\"hljs-comment\"># or use tf.space_to_depth</span><br><span class=\"hljs-comment\"># out = tf.space_to_depth(in, 2)</span><br></code></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\">tf.extract_image_patches(<br>    images,<br>    ksizes,<br>    strides,<br>    rates,<br>    padding,<br>    name=<span class=\"hljs-literal\">None</span><br>)<br><span class=\"hljs-comment\">#images：必须是shape为[batch, in_rows, in_cols, depth]的tensor；</span><br><span class=\"hljs-comment\">#ksize：长度大于等于4的list，滑动窗的大小</span><br><span class=\"hljs-comment\">#strides:每块patch区域之间中心点之间的距离，必须是: [1, stride_rows, stride_cols, 1].</span><br>    <span class=\"hljs-comment\">#具体点说就是用来计算每次选取patch的初始点位置</span><br><span class=\"hljs-comment\">#rates: 在每次提取的patch中，对应dim像素点位置之间的差距，必须是[1, rate_rows, rate_cols, 1]；「或者理解为 提取出来的每个框里面的像素不是都选择的 根据rate的不同 隔几个选一个 默认是1也就是的都选择 若为2 那么就是隔一个来选择」</span><br><span class=\"hljs-comment\">#padding:有两个取值，“VALID”或者“SAME”，“VALID”表示所取的patch区域必须完全包含在原始图像中.&quot;SAME&quot;表示可以取超出原始图像的部分，这一部分进行0填充。</span><br></code></pre></td></tr></table></figure>\n<h4 id=\"Multi-scale-Training（多尺度图像训练）\">Multi-scale Training（多尺度图像训练）</h4>\n<p>作者希望YOLOv2能健壮的运行于不同尺寸的图片之上，所以把这一想法用于训练model中。</p>\n<p>区别于之前的补全图片的尺寸的方法，YOLOv2每迭代几次都会改变网络参数。每10个Batch，网络会<strong>随机地选择一个新的图片尺寸</strong>，由于使用了下采样参数是32，所以不同的尺寸大小也选择为32的倍数{320，352……608}，最小320*320，最大608*608，网络会自动改变尺寸，并继续训练的过程。</p>\n<p>这一方法让网络在不同的输入尺寸上都能达到一个很好的预测效果，同一网络能在不同分辨率上进行检测。当输入图片尺寸比较小的精度高，输入图片尺寸比较大的时候精度相对低，所以你可以在YOLOv2的速度和精度上进行权衡。</p>\n<center class=\"half\">\n<img src = \"https://picture.mulindya.com/yolov2-pic6.png\">\n<img src = \"https://picture.mulindya.com/yolov2-pic7.png\">\n</center>\n<h4 id=\"hi-res-detect-高分辨率图像的对象检测\">hi-res-detect(高分辨率图像的对象检测)</h4>\n<p>上面左图表格中最后一行是使用高分辨l率的图像hi-res detector，因为YOLO2调整网络结构后能够支持多种尺寸的输入图像。通常是使用416*416的输入图像，如果用较高分辨率的输入图像，比如544*544，则mAP可以达到78.6，有1.8的提升。</p>\n<h4 id=\"Hierarchical-classification-分层分类\">Hierarchical classification(分层分类)</h4>\n<p>作者提出了一种在分类数据集和检测数据集上联合训练的机制。使用检测数据集的图片去学习检测相关的信息，例如bounding box 坐标预测，是否包含物体以及属于各个物体的概率。使用仅有类别标签的分类数据集图片去扩展可以检测的种类。作者通过ImageNet训练分类、COCO和VOC数据集来训练检测，这是一个很有价值的思路，可以让我们达到比较优的效果。通过将两个数据集混合训练，<strong>如果遇到来自分类集的图片则只计算分类的Loss，遇到来自检测集的图片则计算完整的Loss</strong>。</p>\n<p>但是ImageNet对应分类有9000种，而COCO则只提供80种目标检测，作者使用multi-label模型，即假定一张图片可以有多个label，并且不要求label间独立。因为作者选择在COCO和ImageNet数据集上进行联合训练，遇到的第一问题是两者的类别并不是完全互斥的，比如&quot;Norfolk terrier&quot;明显属于&quot;dog&quot;，所以作者提出了一种层级分类方法（Hierarchical classification），主要思路是根据各个类别之间的从属关系（根据WordNet）建立一种树结构WordTree，结合COCO和ImageNet建立的WordTree如下图所示：</p>\n<p><img src=\"https://picture.mulindya.com/yolov2-pic8.png\" alt=\"\"></p>\n<ol>\n<li>遍历Imagenet的label，然后在WordNet中寻找该label到根节点(指向一个物理对象)的路径；</li>\n<li>如果路径只有一条，那么就将该路径直接加入到分层树结构中；</li>\n<li>否则，从剩余的路径中选择一条最短路径，加入到分层树。</li>\n</ol>\n<p>这个分层树我们称之为 WordTree，作用就在于将两种数据集按照层级进行结合。(感觉就是为了扩充数据集同时简便计算)</p>\n<p>分类时的概率计算借用了<strong>决策树思想</strong>，<strong>某个节点的概率值等于该节点到根节点的所有条件概率之积</strong>。最终结果是一颗 WordTree （视觉名词组成的层次结构模型）。用WordTree执行分类时，预测每个节点的条件概率。如果想求得特定节点的绝对概率，只需要沿着路径做连续乘积。例如，如果想知道一张图片是不是“Norfolk terrier ”需要计算：</p>\n<p><img src=\"https://picture.mulindya.com/yolov2-pic10.png\" alt=\"\"></p>\n<p>另外，为了验证这种方法作者在WordTree（用1000类别的ImageNet创建）上训练了Darknet-19模型。为了创建WordTree1k，作者添加了很多中间节点，把label由1000扩展到1369。训练过程中ground truth标签要顺着向根节点的路径传播。例如，如果一张图片被标记为“Norfolk terrier”，它也被标记为“dog” 和“mammal”等。为了计算条件概率，模型预测了一个包含1369个元素的向量，而且基于所有“同义词集”计算softmax。</p>\n<p>softmax操作也同时应该采用分组操作，下图上半部分为ImageNet对应的原生Softmax，下半部分对应基于WordTree的Softmax：</p>\n<p><img src=\"https://picture.mulindya.com/yolov2-pic9.png\" alt=\"\"></p>\n<p>通过上述方案构造WordTree，得到对应9418个分类，通过重采样保证Imagenet和COCO的样本数据比例为4:1。</p>\n<h3 id=\"总结\">总结</h3>\n<p>通过联合训练策略，YOLO9000可以快速检测出超过9000个类别的物体，总体mAP值为19,7%。我觉得这是作者在这篇论文作出的最大的贡献，因为YOLOv2的改进策略亮点并不是很突出，但是YOLO9000算是开创之举。</p>\n"},{"title":"YOLOv1","date":"2021-08-21T07:56:11.000Z","math":true,"_content":"\n> YOLO系列是基于深度学习的回归方法。YOLO：you only look once的优点是实时快速目标检测。一直都很想把YOLO系统的学习一下。在此，记录下相关的知识和个人理解。做笔记也算是督促我好好的整理相关内容叭！ok开始！:wink:\n\n> 参考：\n> https://zhuanlan.zhihu.com/p/136382095\n> https://mp.weixin.qq.com/s/df1JaGtnoEY4FQford4UIw\n\n## YOLO 和 Faster R-CNN\n\n两个网络的差异有两个方面：\n\n1. Yolo没有显示求取region proposal的过程，虽然Faster R-CNN中的RPN于Fast R-CNN共享卷积层，但是在模型训练过程中，还是需要反复的训练RPN于Fast R-CNN，也就是说这种方式还是需要”look twice“ ：确定候选框和分类；而Yolo系列只需要”look once“\n\n   > 关于Faster R-CNN的知识后续再填坑.....\n\n2. Yolo将检测统一为一个回归问题。而R-CNN将检测结果分为两个部分进行求解：分类`物体的类别` ， 回归`物体的bounding  box`\n\n## YOLOv1\n\n### 综述\n\n**论文下载：** http://arxiv.org/abs/1506.02640\n\n**代码下载：** https://github.com/pjreddie/darknet\n\n**核心思想**：将整张图作为网络的输入（与Faster-RCNN类似），直接在输出层对BBox的位置和类别进行回归。\n\n### 论文\n\n<details>\n<summary> yolov1 论文：You Only Look Once:Unified, Real-Time Object Detection</summary>\n<iframe src='/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/yolov1.pdf' width=100% height=650></iframe>\n</details>\n\n实现方法：\n\n![](https://picture.mulindya.com/yolov1-pic1.png)\n\n\n- 首先将一幅图像分成S*S个网格（grid cell）,如果某个物体的中心落在这个网格中，那么这个网格就负责预测这个物体。\n\n- 每个网格需要预测B个边界框(BBox)的位置信息和对应的置信度（confidence）;一个BBox对应四个位置信息和一个confidence信息，confidence表示所预测的Box中含有objext的置信度和box的预测情况。\n\n  > 也就是$conf = Pr(object)\\times IOU^{truth}_{pred}$ 如果有object落在其中的grid cell里，那么第一项为1否则取0.\n\n每个bounding box要预测(x, y, w, h)和confidence共5个值，每个网格还要预测一个类别信息，记为C类。则SxS个网格，每个网格要预测B个bounding box还要预测C个categories。判断这个落在此网格的物体是c个物体中的哪一个物体。输出就是S x S x (5*B+C)的一个tensor。（**注意：class信息是针对每个网格的，confidence信息是针对每个bounding box的。**）\n\n举例说明: 在PASCAL VOC中，图像输入为448x448，取S=7，B=2，一共有20个类别(C=20)。则输出就是7x7x30的一个tensor。*其中30也就是2\\*5+20，整个网络结构如下图所示：\n\n![](https://picture.mulindya.com/yolov1-pic2.png)\n\n在test的时候，每个网格预测的class信息与BBox得到的confidenci信息相乘，就可以得到每个BBox的class-specific confidence score：\n\n{% raw %}\n$$\nPr(Class_i \\vert Object) \\times Pr(Object) \\times IOU^{truth}_{pred} = Pr(Class_i) \\times IOU^{truth}_{pred}\n$$\n{% endraw %}\n\n得到每个box的class-specific confidence score之后，设置阈值，过滤掉得分低的boxes，对保留的boxes进行NMS处理，即可得到最终的检测结果。\n\n> NMS：non-maximum suppression 非极大抑制，其操作即是从集合中找到得分score最高的候选框，与其他候选框计算IOU，删除重合率高的候选框，因为这些候选框和最高score的框“竞争”同一个物体，但是score又不够高，所以是应该被淘汰的。确定了这个最高score的BBOX之后就可以不考虑他了，再继续找寻最高score的候选框，把与他竞争的候选框给pass掉即可，以此类推。\n\n#### 流程\n1. 输入一张图像将其分为7\\*7的网格\n2. 对于每一个网格,预测两个边框；（包括边框的置信度和其对应的类别概率）\n3. 根据预测的7\\*7\\*2的目标窗口，首先通过阈值去除可能性地的窗口，再采用NMS去除冗余的窗口。\n\n### 损失函数\n\n最重要的是设计损失函数，作者使用了sum-squared error loss（https://blog.csdn.net/shengyan5515/article/details/84036734 ）\n\n> 关于YOLO的损失函数，采用sum-squared error整合localization error（bboxes的坐标误差）和classification error，其中classification error包括两部分，一部分是没有包含object的box的confidence loss权值，另一部分则是有包含object的box的confidence loss权值\n\n![](https://picture.mulindya.com/yolov1-pic3.png)\n\n#### 问题：\n\n- 8维的localization error(4*2),和20维的classification error同等重要是不合理的\n- 如果一个网格中没有object(大部分),将这些网格的box对应confidence设置为0，是比较“暴力”的，会让loss特别大，网络不稳定并且不容易收敛。\n\n#### 解决方案：\n\n- 对于坐标预测赋予更大的权重（重视框的位置）\n- 对没有object的confidence loss，赋予小的权重(注意力转移到其他地方)\n\n- 对存在object的box的confidence loss和类别的预测权重正常取1\n\n> 为什么第二项出现了根号呢？\n>\n> 是因为我们的误差度量量反应出大box的小偏差要小于小box。为了逐步解决这个问题，我们预测了边界框的宽度和高度的平⽅根，而不是直接预测宽度和⾼度。因为根号之后曲线越大越平缓。这样对小的box的偏差相对更加敏感。\n\n观察损失函数可以看出：\n\n- 只有在网格中存在object的时候才会对classification error进行计算\n\n- 只有当某个网格的box的和对于的ground truth box是负责回归的，才会对这个box 的位置xywh损失进行计算，确定对应ground truth box就需要将这个box与这个网格中的所有bbox计算IOU，最大的那个ground truth是由这个网络负责预测的。\n\n  激活函数使用的是leak relu，模型是使用预训练的Imagenet。\n\n### 优点\n\n- 快速，pipline简单\n\n- 背景误检率低\n\n- 通用性强，对艺术品中的物体也可以检测，对非自然的图像物体的检测率比一般的DOM，R-CNN都要好很多\n\n### 缺点\n\n- 由于输出层是全连接层，因此在检测时，YOLO训练模型只能支持与训练图像分辨率相同的图像\n- 每个格子可以预测B个Bbox，但是最终只能选择IOU最高的BBox作为物体检测结果，也就是说，一个各自只能最多预测出一个物体；当物体比较小或者分布密集的时候也只能检测出一个。\n- 在loss的求解方程中，大目标和小目标的IOU误差在loss计算上是接近的（即使用了平方根缓解），因此对于小物体的检测准确性不高。\n\n","source":"_posts/deep_learning/yolov1.md","raw":"---\ntitle: YOLOv1\ntags: [深度学习,目标检测,yolo]\ncategories: [深度学习,目标检测]\ndate: 2021-08-21 15:56:11\nmath: true\n---\n\n> YOLO系列是基于深度学习的回归方法。YOLO：you only look once的优点是实时快速目标检测。一直都很想把YOLO系统的学习一下。在此，记录下相关的知识和个人理解。做笔记也算是督促我好好的整理相关内容叭！ok开始！:wink:\n\n> 参考：\n> https://zhuanlan.zhihu.com/p/136382095\n> https://mp.weixin.qq.com/s/df1JaGtnoEY4FQford4UIw\n\n## YOLO 和 Faster R-CNN\n\n两个网络的差异有两个方面：\n\n1. Yolo没有显示求取region proposal的过程，虽然Faster R-CNN中的RPN于Fast R-CNN共享卷积层，但是在模型训练过程中，还是需要反复的训练RPN于Fast R-CNN，也就是说这种方式还是需要”look twice“ ：确定候选框和分类；而Yolo系列只需要”look once“\n\n   > 关于Faster R-CNN的知识后续再填坑.....\n\n2. Yolo将检测统一为一个回归问题。而R-CNN将检测结果分为两个部分进行求解：分类`物体的类别` ， 回归`物体的bounding  box`\n\n## YOLOv1\n\n### 综述\n\n**论文下载：** http://arxiv.org/abs/1506.02640\n\n**代码下载：** https://github.com/pjreddie/darknet\n\n**核心思想**：将整张图作为网络的输入（与Faster-RCNN类似），直接在输出层对BBox的位置和类别进行回归。\n\n### 论文\n\n<details>\n<summary> yolov1 论文：You Only Look Once:Unified, Real-Time Object Detection</summary>\n<iframe src='/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/yolov1.pdf' width=100% height=650></iframe>\n</details>\n\n实现方法：\n\n![](https://picture.mulindya.com/yolov1-pic1.png)\n\n\n- 首先将一幅图像分成S*S个网格（grid cell）,如果某个物体的中心落在这个网格中，那么这个网格就负责预测这个物体。\n\n- 每个网格需要预测B个边界框(BBox)的位置信息和对应的置信度（confidence）;一个BBox对应四个位置信息和一个confidence信息，confidence表示所预测的Box中含有objext的置信度和box的预测情况。\n\n  > 也就是$conf = Pr(object)\\times IOU^{truth}_{pred}$ 如果有object落在其中的grid cell里，那么第一项为1否则取0.\n\n每个bounding box要预测(x, y, w, h)和confidence共5个值，每个网格还要预测一个类别信息，记为C类。则SxS个网格，每个网格要预测B个bounding box还要预测C个categories。判断这个落在此网格的物体是c个物体中的哪一个物体。输出就是S x S x (5*B+C)的一个tensor。（**注意：class信息是针对每个网格的，confidence信息是针对每个bounding box的。**）\n\n举例说明: 在PASCAL VOC中，图像输入为448x448，取S=7，B=2，一共有20个类别(C=20)。则输出就是7x7x30的一个tensor。*其中30也就是2\\*5+20，整个网络结构如下图所示：\n\n![](https://picture.mulindya.com/yolov1-pic2.png)\n\n在test的时候，每个网格预测的class信息与BBox得到的confidenci信息相乘，就可以得到每个BBox的class-specific confidence score：\n\n{% raw %}\n$$\nPr(Class_i \\vert Object) \\times Pr(Object) \\times IOU^{truth}_{pred} = Pr(Class_i) \\times IOU^{truth}_{pred}\n$$\n{% endraw %}\n\n得到每个box的class-specific confidence score之后，设置阈值，过滤掉得分低的boxes，对保留的boxes进行NMS处理，即可得到最终的检测结果。\n\n> NMS：non-maximum suppression 非极大抑制，其操作即是从集合中找到得分score最高的候选框，与其他候选框计算IOU，删除重合率高的候选框，因为这些候选框和最高score的框“竞争”同一个物体，但是score又不够高，所以是应该被淘汰的。确定了这个最高score的BBOX之后就可以不考虑他了，再继续找寻最高score的候选框，把与他竞争的候选框给pass掉即可，以此类推。\n\n#### 流程\n1. 输入一张图像将其分为7\\*7的网格\n2. 对于每一个网格,预测两个边框；（包括边框的置信度和其对应的类别概率）\n3. 根据预测的7\\*7\\*2的目标窗口，首先通过阈值去除可能性地的窗口，再采用NMS去除冗余的窗口。\n\n### 损失函数\n\n最重要的是设计损失函数，作者使用了sum-squared error loss（https://blog.csdn.net/shengyan5515/article/details/84036734 ）\n\n> 关于YOLO的损失函数，采用sum-squared error整合localization error（bboxes的坐标误差）和classification error，其中classification error包括两部分，一部分是没有包含object的box的confidence loss权值，另一部分则是有包含object的box的confidence loss权值\n\n![](https://picture.mulindya.com/yolov1-pic3.png)\n\n#### 问题：\n\n- 8维的localization error(4*2),和20维的classification error同等重要是不合理的\n- 如果一个网格中没有object(大部分),将这些网格的box对应confidence设置为0，是比较“暴力”的，会让loss特别大，网络不稳定并且不容易收敛。\n\n#### 解决方案：\n\n- 对于坐标预测赋予更大的权重（重视框的位置）\n- 对没有object的confidence loss，赋予小的权重(注意力转移到其他地方)\n\n- 对存在object的box的confidence loss和类别的预测权重正常取1\n\n> 为什么第二项出现了根号呢？\n>\n> 是因为我们的误差度量量反应出大box的小偏差要小于小box。为了逐步解决这个问题，我们预测了边界框的宽度和高度的平⽅根，而不是直接预测宽度和⾼度。因为根号之后曲线越大越平缓。这样对小的box的偏差相对更加敏感。\n\n观察损失函数可以看出：\n\n- 只有在网格中存在object的时候才会对classification error进行计算\n\n- 只有当某个网格的box的和对于的ground truth box是负责回归的，才会对这个box 的位置xywh损失进行计算，确定对应ground truth box就需要将这个box与这个网格中的所有bbox计算IOU，最大的那个ground truth是由这个网络负责预测的。\n\n  激活函数使用的是leak relu，模型是使用预训练的Imagenet。\n\n### 优点\n\n- 快速，pipline简单\n\n- 背景误检率低\n\n- 通用性强，对艺术品中的物体也可以检测，对非自然的图像物体的检测率比一般的DOM，R-CNN都要好很多\n\n### 缺点\n\n- 由于输出层是全连接层，因此在检测时，YOLO训练模型只能支持与训练图像分辨率相同的图像\n- 每个格子可以预测B个Bbox，但是最终只能选择IOU最高的BBox作为物体检测结果，也就是说，一个各自只能最多预测出一个物体；当物体比较小或者分布密集的时候也只能检测出一个。\n- 在loss的求解方程中，大目标和小目标的IOU误差在loss计算上是接近的（即使用了平方根缓解），因此对于小物体的检测准确性不高。\n\n","slug":"deep_learning/yolov1","published":1,"updated":"2021-08-28T10:48:25.738Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxocf000rugx4bwpw4ko2","content":"<blockquote>\n<p>YOLO系列是基于深度学习的回归方法。YOLO：you only look once的优点是实时快速目标检测。一直都很想把YOLO系统的学习一下。在此，记录下相关的知识和个人理解。做笔记也算是督促我好好的整理相关内容叭！ok开始！😉</p>\n</blockquote>\n<blockquote>\n<p>参考：<br>\n<a href=\"https://zhuanlan.zhihu.com/p/136382095\">https://zhuanlan.zhihu.com/p/136382095</a><br>\n<a href=\"https://mp.weixin.qq.com/s/df1JaGtnoEY4FQford4UIw\">https://mp.weixin.qq.com/s/df1JaGtnoEY4FQford4UIw</a></p>\n</blockquote>\n<h2 id=\"YOLO-和-Faster-R-CNN\">YOLO 和 Faster R-CNN</h2>\n<p>两个网络的差异有两个方面：</p>\n<ol>\n<li>\n<p>Yolo没有显示求取region proposal的过程，虽然Faster R-CNN中的RPN于Fast R-CNN共享卷积层，但是在模型训练过程中，还是需要反复的训练RPN于Fast R-CNN，也就是说这种方式还是需要”look twice“ ：确定候选框和分类；而Yolo系列只需要”look once“</p>\n<blockquote>\n<p>关于Faster R-CNN的知识后续再填坑…</p>\n</blockquote>\n</li>\n<li>\n<p>Yolo将检测统一为一个回归问题。而R-CNN将检测结果分为两个部分进行求解：分类<code>物体的类别</code> ， 回归<code>物体的bounding  box</code></p>\n</li>\n</ol>\n<h2 id=\"YOLOv1\">YOLOv1</h2>\n<h3 id=\"综述\">综述</h3>\n<p><strong>论文下载：</strong> <a href=\"http://arxiv.org/abs/1506.02640\">http://arxiv.org/abs/1506.02640</a></p>\n<p><strong>代码下载：</strong> <a href=\"https://github.com/pjreddie/darknet\">https://github.com/pjreddie/darknet</a></p>\n<p><strong>核心思想</strong>：将整张图作为网络的输入（与Faster-RCNN类似），直接在输出层对BBox的位置和类别进行回归。</p>\n<h3 id=\"论文\">论文</h3>\n<details>\n<summary> yolov1 论文：You Only Look Once:Unified, Real-Time Object Detection</summary>\n<iframe src=\"/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/yolov1.pdf\" width=\"100%\" height=\"650\"></iframe>\n</details>\n<p>实现方法：</p>\n<p><img src=\"https://picture.mulindya.com/yolov1-pic1.png\" alt=\"\"></p>\n<ul>\n<li>\n<p>首先将一幅图像分成S*S个网格（grid cell）,如果某个物体的中心落在这个网格中，那么这个网格就负责预测这个物体。</p>\n</li>\n<li>\n<p>每个网格需要预测B个边界框(BBox)的位置信息和对应的置信度（confidence）;一个BBox对应四个位置信息和一个confidence信息，confidence表示所预测的Box中含有objext的置信度和box的预测情况。</p>\n<blockquote>\n<p>也就是$conf = Pr(object)\\times IOU^{truth}_{pred}$ 如果有object落在其中的grid cell里，那么第一项为1否则取0.</p>\n</blockquote>\n</li>\n</ul>\n<p>每个bounding box要预测(x, y, w, h)和confidence共5个值，每个网格还要预测一个类别信息，记为C类。则SxS个网格，每个网格要预测B个bounding box还要预测C个categories。判断这个落在此网格的物体是c个物体中的哪一个物体。输出就是S x S x (5*B+C)的一个tensor。（<strong>注意：class信息是针对每个网格的，confidence信息是针对每个bounding box的。</strong>）</p>\n<p>举例说明: 在PASCAL VOC中，图像输入为448x448，取S=7，B=2，一共有20个类别(C=20)。则输出就是7x7x30的一个tensor。*其中30也就是2*5+20，整个网络结构如下图所示：</p>\n<p><img src=\"https://picture.mulindya.com/yolov1-pic2.png\" alt=\"\"></p>\n<p>在test的时候，每个网格预测的class信息与BBox得到的confidenci信息相乘，就可以得到每个BBox的class-specific confidence score：</p>\n\n$$\nPr(Class_i \\vert Object) \\times Pr(Object) \\times IOU^{truth}_{pred} = Pr(Class_i) \\times IOU^{truth}_{pred}\n$$\n\n<p>得到每个box的class-specific confidence score之后，设置阈值，过滤掉得分低的boxes，对保留的boxes进行NMS处理，即可得到最终的检测结果。</p>\n<blockquote>\n<p>NMS：non-maximum suppression 非极大抑制，其操作即是从集合中找到得分score最高的候选框，与其他候选框计算IOU，删除重合率高的候选框，因为这些候选框和最高score的框“竞争”同一个物体，但是score又不够高，所以是应该被淘汰的。确定了这个最高score的BBOX之后就可以不考虑他了，再继续找寻最高score的候选框，把与他竞争的候选框给pass掉即可，以此类推。</p>\n</blockquote>\n<h4 id=\"流程\">流程</h4>\n<ol>\n<li>输入一张图像将其分为7*7的网格</li>\n<li>对于每一个网格,预测两个边框；（包括边框的置信度和其对应的类别概率）</li>\n<li>根据预测的7*7*2的目标窗口，首先通过阈值去除可能性地的窗口，再采用NMS去除冗余的窗口。</li>\n</ol>\n<h3 id=\"损失函数\">损失函数</h3>\n<p>最重要的是设计损失函数，作者使用了sum-squared error loss（<a href=\"https://blog.csdn.net/shengyan5515/article/details/84036734\">https://blog.csdn.net/shengyan5515/article/details/84036734</a> ）</p>\n<blockquote>\n<p>关于YOLO的损失函数，采用sum-squared error整合localization error（bboxes的坐标误差）和classification error，其中classification error包括两部分，一部分是没有包含object的box的confidence loss权值，另一部分则是有包含object的box的confidence loss权值</p>\n</blockquote>\n<p><img src=\"https://picture.mulindya.com/yolov1-pic3.png\" alt=\"\"></p>\n<h4 id=\"问题：\">问题：</h4>\n<ul>\n<li>8维的localization error(4*2),和20维的classification error同等重要是不合理的</li>\n<li>如果一个网格中没有object(大部分),将这些网格的box对应confidence设置为0，是比较“暴力”的，会让loss特别大，网络不稳定并且不容易收敛。</li>\n</ul>\n<h4 id=\"解决方案：\">解决方案：</h4>\n<ul>\n<li>\n<p>对于坐标预测赋予更大的权重（重视框的位置）</p>\n</li>\n<li>\n<p>对没有object的confidence loss，赋予小的权重(注意力转移到其他地方)</p>\n</li>\n<li>\n<p>对存在object的box的confidence loss和类别的预测权重正常取1</p>\n</li>\n</ul>\n<blockquote>\n<p>为什么第二项出现了根号呢？</p>\n<p>是因为我们的误差度量量反应出大box的小偏差要小于小box。为了逐步解决这个问题，我们预测了边界框的宽度和高度的平⽅根，而不是直接预测宽度和⾼度。因为根号之后曲线越大越平缓。这样对小的box的偏差相对更加敏感。</p>\n</blockquote>\n<p>观察损失函数可以看出：</p>\n<ul>\n<li>\n<p>只有在网格中存在object的时候才会对classification error进行计算</p>\n</li>\n<li>\n<p>只有当某个网格的box的和对于的ground truth box是负责回归的，才会对这个box 的位置xywh损失进行计算，确定对应ground truth box就需要将这个box与这个网格中的所有bbox计算IOU，最大的那个ground truth是由这个网络负责预测的。</p>\n<p>激活函数使用的是leak relu，模型是使用预训练的Imagenet。</p>\n</li>\n</ul>\n<h3 id=\"优点\">优点</h3>\n<ul>\n<li>\n<p>快速，pipline简单</p>\n</li>\n<li>\n<p>背景误检率低</p>\n</li>\n<li>\n<p>通用性强，对艺术品中的物体也可以检测，对非自然的图像物体的检测率比一般的DOM，R-CNN都要好很多</p>\n</li>\n</ul>\n<h3 id=\"缺点\">缺点</h3>\n<ul>\n<li>由于输出层是全连接层，因此在检测时，YOLO训练模型只能支持与训练图像分辨率相同的图像</li>\n<li>每个格子可以预测B个Bbox，但是最终只能选择IOU最高的BBox作为物体检测结果，也就是说，一个各自只能最多预测出一个物体；当物体比较小或者分布密集的时候也只能检测出一个。</li>\n<li>在loss的求解方程中，大目标和小目标的IOU误差在loss计算上是接近的（即使用了平方根缓解），因此对于小物体的检测准确性不高。</li>\n</ul>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>YOLO系列是基于深度学习的回归方法。YOLO：you only look once的优点是实时快速目标检测。一直都很想把YOLO系统的学习一下。在此，记录下相关的知识和个人理解。做笔记也算是督促我好好的整理相关内容叭！ok开始！😉</p>\n</blockquote>\n<blockquote>\n<p>参考：<br>\n<a href=\"https://zhuanlan.zhihu.com/p/136382095\">https://zhuanlan.zhihu.com/p/136382095</a><br>\n<a href=\"https://mp.weixin.qq.com/s/df1JaGtnoEY4FQford4UIw\">https://mp.weixin.qq.com/s/df1JaGtnoEY4FQford4UIw</a></p>\n</blockquote>\n<h2 id=\"YOLO-和-Faster-R-CNN\">YOLO 和 Faster R-CNN</h2>\n<p>两个网络的差异有两个方面：</p>\n<ol>\n<li>\n<p>Yolo没有显示求取region proposal的过程，虽然Faster R-CNN中的RPN于Fast R-CNN共享卷积层，但是在模型训练过程中，还是需要反复的训练RPN于Fast R-CNN，也就是说这种方式还是需要”look twice“ ：确定候选框和分类；而Yolo系列只需要”look once“</p>\n<blockquote>\n<p>关于Faster R-CNN的知识后续再填坑…</p>\n</blockquote>\n</li>\n<li>\n<p>Yolo将检测统一为一个回归问题。而R-CNN将检测结果分为两个部分进行求解：分类<code>物体的类别</code> ， 回归<code>物体的bounding  box</code></p>\n</li>\n</ol>\n<h2 id=\"YOLOv1\">YOLOv1</h2>\n<h3 id=\"综述\">综述</h3>\n<p><strong>论文下载：</strong> <a href=\"http://arxiv.org/abs/1506.02640\">http://arxiv.org/abs/1506.02640</a></p>\n<p><strong>代码下载：</strong> <a href=\"https://github.com/pjreddie/darknet\">https://github.com/pjreddie/darknet</a></p>\n<p><strong>核心思想</strong>：将整张图作为网络的输入（与Faster-RCNN类似），直接在输出层对BBox的位置和类别进行回归。</p>\n<h3 id=\"论文\">论文</h3>\n<details>\n<summary> yolov1 论文：You Only Look Once:Unified, Real-Time Object Detection</summary>\n<iframe src='/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/yolov1.pdf' width=100% height=650></iframe>\n</details>\n<p>实现方法：</p>\n<p><img src=\"https://picture.mulindya.com/yolov1-pic1.png\" alt=\"\"></p>\n<ul>\n<li>\n<p>首先将一幅图像分成S*S个网格（grid cell）,如果某个物体的中心落在这个网格中，那么这个网格就负责预测这个物体。</p>\n</li>\n<li>\n<p>每个网格需要预测B个边界框(BBox)的位置信息和对应的置信度（confidence）;一个BBox对应四个位置信息和一个confidence信息，confidence表示所预测的Box中含有objext的置信度和box的预测情况。</p>\n<blockquote>\n<p>也就是$conf = Pr(object)\\times IOU^{truth}_{pred}$ 如果有object落在其中的grid cell里，那么第一项为1否则取0.</p>\n</blockquote>\n</li>\n</ul>\n<p>每个bounding box要预测(x, y, w, h)和confidence共5个值，每个网格还要预测一个类别信息，记为C类。则SxS个网格，每个网格要预测B个bounding box还要预测C个categories。判断这个落在此网格的物体是c个物体中的哪一个物体。输出就是S x S x (5*B+C)的一个tensor。（<strong>注意：class信息是针对每个网格的，confidence信息是针对每个bounding box的。</strong>）</p>\n<p>举例说明: 在PASCAL VOC中，图像输入为448x448，取S=7，B=2，一共有20个类别(C=20)。则输出就是7x7x30的一个tensor。*其中30也就是2*5+20，整个网络结构如下图所示：</p>\n<p><img src=\"https://picture.mulindya.com/yolov1-pic2.png\" alt=\"\"></p>\n<p>在test的时候，每个网格预测的class信息与BBox得到的confidenci信息相乘，就可以得到每个BBox的class-specific confidence score：</p>\n\n$$\nPr(Class_i \\vert Object) \\times Pr(Object) \\times IOU^{truth}_{pred} = Pr(Class_i) \\times IOU^{truth}_{pred}\n$$\n\n<p>得到每个box的class-specific confidence score之后，设置阈值，过滤掉得分低的boxes，对保留的boxes进行NMS处理，即可得到最终的检测结果。</p>\n<blockquote>\n<p>NMS：non-maximum suppression 非极大抑制，其操作即是从集合中找到得分score最高的候选框，与其他候选框计算IOU，删除重合率高的候选框，因为这些候选框和最高score的框“竞争”同一个物体，但是score又不够高，所以是应该被淘汰的。确定了这个最高score的BBOX之后就可以不考虑他了，再继续找寻最高score的候选框，把与他竞争的候选框给pass掉即可，以此类推。</p>\n</blockquote>\n<h4 id=\"流程\">流程</h4>\n<ol>\n<li>输入一张图像将其分为7*7的网格</li>\n<li>对于每一个网格,预测两个边框；（包括边框的置信度和其对应的类别概率）</li>\n<li>根据预测的7*7*2的目标窗口，首先通过阈值去除可能性地的窗口，再采用NMS去除冗余的窗口。</li>\n</ol>\n<h3 id=\"损失函数\">损失函数</h3>\n<p>最重要的是设计损失函数，作者使用了sum-squared error loss（<a href=\"https://blog.csdn.net/shengyan5515/article/details/84036734\">https://blog.csdn.net/shengyan5515/article/details/84036734</a> ）</p>\n<blockquote>\n<p>关于YOLO的损失函数，采用sum-squared error整合localization error（bboxes的坐标误差）和classification error，其中classification error包括两部分，一部分是没有包含object的box的confidence loss权值，另一部分则是有包含object的box的confidence loss权值</p>\n</blockquote>\n<p><img src=\"https://picture.mulindya.com/yolov1-pic3.png\" alt=\"\"></p>\n<h4 id=\"问题：\">问题：</h4>\n<ul>\n<li>8维的localization error(4*2),和20维的classification error同等重要是不合理的</li>\n<li>如果一个网格中没有object(大部分),将这些网格的box对应confidence设置为0，是比较“暴力”的，会让loss特别大，网络不稳定并且不容易收敛。</li>\n</ul>\n<h4 id=\"解决方案：\">解决方案：</h4>\n<ul>\n<li>\n<p>对于坐标预测赋予更大的权重（重视框的位置）</p>\n</li>\n<li>\n<p>对没有object的confidence loss，赋予小的权重(注意力转移到其他地方)</p>\n</li>\n<li>\n<p>对存在object的box的confidence loss和类别的预测权重正常取1</p>\n</li>\n</ul>\n<blockquote>\n<p>为什么第二项出现了根号呢？</p>\n<p>是因为我们的误差度量量反应出大box的小偏差要小于小box。为了逐步解决这个问题，我们预测了边界框的宽度和高度的平⽅根，而不是直接预测宽度和⾼度。因为根号之后曲线越大越平缓。这样对小的box的偏差相对更加敏感。</p>\n</blockquote>\n<p>观察损失函数可以看出：</p>\n<ul>\n<li>\n<p>只有在网格中存在object的时候才会对classification error进行计算</p>\n</li>\n<li>\n<p>只有当某个网格的box的和对于的ground truth box是负责回归的，才会对这个box 的位置xywh损失进行计算，确定对应ground truth box就需要将这个box与这个网格中的所有bbox计算IOU，最大的那个ground truth是由这个网络负责预测的。</p>\n<p>激活函数使用的是leak relu，模型是使用预训练的Imagenet。</p>\n</li>\n</ul>\n<h3 id=\"优点\">优点</h3>\n<ul>\n<li>\n<p>快速，pipline简单</p>\n</li>\n<li>\n<p>背景误检率低</p>\n</li>\n<li>\n<p>通用性强，对艺术品中的物体也可以检测，对非自然的图像物体的检测率比一般的DOM，R-CNN都要好很多</p>\n</li>\n</ul>\n<h3 id=\"缺点\">缺点</h3>\n<ul>\n<li>由于输出层是全连接层，因此在检测时，YOLO训练模型只能支持与训练图像分辨率相同的图像</li>\n<li>每个格子可以预测B个Bbox，但是最终只能选择IOU最高的BBox作为物体检测结果，也就是说，一个各自只能最多预测出一个物体；当物体比较小或者分布密集的时候也只能检测出一个。</li>\n<li>在loss的求解方程中，大目标和小目标的IOU误差在loss计算上是接近的（即使用了平方根缓解），因此对于小物体的检测准确性不高。</li>\n</ul>\n"},{"title":"dvc相关设置","date":"2021-08-10T09:36:32.000Z","_content":"\n>\n\n运行 sh setup.sh detection报错：\n\n> (base) root@9b1a4b217508:/workspace/fanmeilin/project/task/ai_lab# sh setup.sh detection\n> setup.sh: 12: setup.sh: dvc: not found\n> cp: failed to get attributes of 'assets/examples': No such file or directory\n> [*] copy DETECTION skeleton scripts to upper directory\n\n原因是未安装dvc，运行下面的命令安装dvc\n\n```\npip install dvc==2.3.0\npip install 'dvc[s3]'\n```\n\n> 在Win平台下可能会报错：\n>\n> ```\n> ERROR: Cannot uninstall 'ruamel-yaml'. It is a distutils installed project and thus we cannot accurately determine which files belong to it which would lead to only a partial uninstall.\n> ```\n>\n> 此时需要进入python 的lib/site-packages 中删除 ‘ruamel-yaml’ 相关的文件\n\n**注意：** dvc 2.3.0 版本与之后的hash计算方法不同，不能混用\n\n再次执行 sh setup.sh detection报错\n\n> ERROR: unexpected error - Cannot connect to host ceph01:80 ssl:default [Name or service not known]: [Errno -2] Name or service not known  \n\n则修改etc/hosts文件\n\n- 配置hosts文件，在hosts文件中增加以下内容\n  `192.168.10.91 ceph01`\n\n##### *详细dvc的各种操作，可移步* [师兄博客 DVC 使用手册](https://www.zywvvd.com/2020/12/17/dvc/dvc/)\n\n","source":"_posts/dvc/dvc-config.md","raw":"---\ntitle: dvc相关设置\ntags: [dvc]\ncategories: dvc\ndate: 2021-08-10 17:36:32\n---\n\n>\n\n运行 sh setup.sh detection报错：\n\n> (base) root@9b1a4b217508:/workspace/fanmeilin/project/task/ai_lab# sh setup.sh detection\n> setup.sh: 12: setup.sh: dvc: not found\n> cp: failed to get attributes of 'assets/examples': No such file or directory\n> [*] copy DETECTION skeleton scripts to upper directory\n\n原因是未安装dvc，运行下面的命令安装dvc\n\n```\npip install dvc==2.3.0\npip install 'dvc[s3]'\n```\n\n> 在Win平台下可能会报错：\n>\n> ```\n> ERROR: Cannot uninstall 'ruamel-yaml'. It is a distutils installed project and thus we cannot accurately determine which files belong to it which would lead to only a partial uninstall.\n> ```\n>\n> 此时需要进入python 的lib/site-packages 中删除 ‘ruamel-yaml’ 相关的文件\n\n**注意：** dvc 2.3.0 版本与之后的hash计算方法不同，不能混用\n\n再次执行 sh setup.sh detection报错\n\n> ERROR: unexpected error - Cannot connect to host ceph01:80 ssl:default [Name or service not known]: [Errno -2] Name or service not known  \n\n则修改etc/hosts文件\n\n- 配置hosts文件，在hosts文件中增加以下内容\n  `192.168.10.91 ceph01`\n\n##### *详细dvc的各种操作，可移步* [师兄博客 DVC 使用手册](https://www.zywvvd.com/2020/12/17/dvc/dvc/)\n\n","slug":"dvc/dvc-config","published":1,"updated":"2021-08-14T10:08:10.537Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxoch000vugx40ol17e7u","content":"<blockquote></blockquote>\n<p>运行 sh <a href=\"http://setup.sh\">setup.sh</a> detection报错：</p>\n<blockquote>\n<p>(base) root@9b1a4b217508:/workspace/fanmeilin/project/task/ai_lab# sh <a href=\"http://setup.sh\">setup.sh</a> detection<br>\n<a href=\"http://setup.sh\">setup.sh</a>: 12: <a href=\"http://setup.sh\">setup.sh</a>: dvc: not found<br>\ncp: failed to get attributes of ‘assets/examples’: No such file or directory<br>\n[*] copy DETECTION skeleton scripts to upper directory</p>\n</blockquote>\n<p>原因是未安装dvc，运行下面的命令安装dvc</p>\n<figure class=\"highlight apache\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">pip</span> install dvc==<span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">3</span>.<span class=\"hljs-number\">0</span><br><span class=\"hljs-attribute\">pip</span> install 'dvc[s<span class=\"hljs-number\">3</span>]'<br></code></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>在Win平台下可能会报错：</p>\n<figure class=\"highlight subunit\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs subunit\"><span class=\"hljs-keyword\">ERROR: </span>Cannot uninstall 'ruamel-yaml'. It is a distutils installed project and thus we cannot accurately determine which files belong to it which would lead to only a partial uninstall.<br></code></pre></td></tr></tbody></table></figure>\n<p>此时需要进入python 的lib/site-packages 中删除 ‘ruamel-yaml’ 相关的文件</p>\n</blockquote>\n<p><strong>注意：</strong> dvc 2.3.0 版本与之后的hash计算方法不同，不能混用</p>\n<p>再次执行 sh <a href=\"http://setup.sh\">setup.sh</a> detection报错</p>\n<blockquote>\n<p>ERROR: unexpected error - Cannot connect to host ceph01:80 ssl:default [Name or service not known]: [Errno -2] Name or service not known</p>\n</blockquote>\n<p>则修改etc/hosts文件</p>\n<ul>\n<li>配置hosts文件，在hosts文件中增加以下内容<br>\n<code>192.168.10.91 ceph01</code></li>\n</ul>\n<h5 id=\"详细dvc的各种操作，可移步-师兄博客-DVC-使用手册\"><em>详细dvc的各种操作，可移步</em> <a href=\"https://www.zywvvd.com/2020/12/17/dvc/dvc/\">师兄博客 DVC 使用手册</a></h5>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote></blockquote>\n<p>运行 sh <a href=\"http://setup.sh\">setup.sh</a> detection报错：</p>\n<blockquote>\n<p>(base) root@9b1a4b217508:/workspace/fanmeilin/project/task/ai_lab# sh <a href=\"http://setup.sh\">setup.sh</a> detection<br>\n<a href=\"http://setup.sh\">setup.sh</a>: 12: <a href=\"http://setup.sh\">setup.sh</a>: dvc: not found<br>\ncp: failed to get attributes of ‘assets/examples’: No such file or directory<br>\n[*] copy DETECTION skeleton scripts to upper directory</p>\n</blockquote>\n<p>原因是未安装dvc，运行下面的命令安装dvc</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">pip</span> install dvc==<span class=\"hljs-number\">2</span>.<span class=\"hljs-number\">3</span>.<span class=\"hljs-number\">0</span><br><span class=\"hljs-attribute\">pip</span> install &#x27;dvc[s<span class=\"hljs-number\">3</span>]&#x27;<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>在Win平台下可能会报错：</p>\n<figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs subunit\"><span class=\"hljs-keyword\">ERROR: </span>Cannot uninstall &#x27;ruamel-yaml&#x27;. It is a distutils installed project and thus we cannot accurately determine which files belong to it which would lead to only a partial uninstall.<br></code></pre></td></tr></table></figure>\n<p>此时需要进入python 的lib/site-packages 中删除 ‘ruamel-yaml’ 相关的文件</p>\n</blockquote>\n<p><strong>注意：</strong> dvc 2.3.0 版本与之后的hash计算方法不同，不能混用</p>\n<p>再次执行 sh <a href=\"http://setup.sh\">setup.sh</a> detection报错</p>\n<blockquote>\n<p>ERROR: unexpected error - Cannot connect to host ceph01:80 ssl:default [Name or service not known]: [Errno -2] Name or service not known</p>\n</blockquote>\n<p>则修改etc/hosts文件</p>\n<ul>\n<li>配置hosts文件，在hosts文件中增加以下内容<br>\n<code>192.168.10.91 ceph01</code></li>\n</ul>\n<h5 id=\"详细dvc的各种操作，可移步-师兄博客-DVC-使用手册\"><em>详细dvc的各种操作，可移步</em> <a href=\"https://www.zywvvd.com/2020/12/17/dvc/dvc/\">师兄博客 DVC 使用手册</a></h5>\n"},{"title":"Self-awareness","date":"2021-08-19T13:24:42.000Z","_content":"\n>\n\nhttps://paper.mulindya.com/Self-awareness.pdf\n\n<iframe src='/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/Self-awareness.pdf' width=100% height=600></iframe>\n","source":"_posts/english/self-aware.md","raw":"---\ntitle: Self-awareness\ntags: 英语\ncategories: 英语\ndate: 2021-08-19 21:24:42\n---\n\n>\n\nhttps://paper.mulindya.com/Self-awareness.pdf\n\n<iframe src='/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/Self-awareness.pdf' width=100% height=600></iframe>\n","slug":"english/self-aware","published":1,"updated":"2021-08-19T13:26:36.133Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxoch000xugx41t1tfkc3","content":"<blockquote></blockquote>\n<p><a href=\"https://paper.mulindya.com/Self-awareness.pdf\">https://paper.mulindya.com/Self-awareness.pdf</a></p>\n<iframe src=\"/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/Self-awareness.pdf\" width=\"100%\" height=\"600\"></iframe>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote></blockquote>\n<p><a href=\"https://paper.mulindya.com/Self-awareness.pdf\">https://paper.mulindya.com/Self-awareness.pdf</a></p>\n<iframe src='/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/Self-awareness.pdf' width=100% height=600></iframe>\n"},{"title":"拉普拉斯算子","date":"2021-08-20T06:27:00.000Z","math":true,"_content":"\n>  ​\t图像锐化处理的作用是使灰度反差增强，从而使模糊图像变得更加清晰。图像模糊的实质就是图像受到平均运算或积分运算，因此可以对图像进行逆运算，如微分运算能够突出图像细节，使图像变得更为清晰。\n> ​\t积分运算的模板可以平滑图像，反过来对应微分运算的模板卷积可以锐化图像。锐化模板系数的取值再中心为正数而周围为负数。或者中心为负数周围为正数。而拉普拉斯算子就是一种常用的线性锐化滤波的方法。\n\n## 拉普拉斯的背景\n\n在图像中的边缘区域，像素值会发生“跳跃”，对这些像素求导，在其一阶导数在边缘位置为极值（Sobel算子）：\n\n![img](https://picture.mulindya.com/laplace-pic1.png)\n\n如果对像素值求二阶导数，会发现边缘处的导数值为0；**但是并不是说二阶导数为0就意味着是边缘**。\n\n![](https://picture.mulindya.com/laplace-pic2.png)\n\n## 计算方法\n\n### 像素二阶导数\n\n二阶导数的计算方法：\n$$\n\\nabla^2f = \\frac{\\partial^2 f}{\\partial x^2}+\\frac{\\partial^2 f}{\\partial y^2}\n$$\n分别沿着X和Y方向有二阶偏导数均可借用差分计算：\n$$\n\\frac{\\partial^2 f}{\\partial x^2} = f(x+1,y)+f(x-1,y)-2f(x,y)\n$$\n\n$$\n\\frac{\\partial^2 f}{\\partial y^2} = f(x,y+1)+f(x,y-1)-2f(x,y)\n$$\n\n那么可以得到\n$$\n\\nabla^2f = f(x+1,y)+f(x-1,y)+f(x,y+1)+f(x,y-1)-4f(x,y)\n$$\n### 模板卷积\n\n对应的模板卷积即为\n\n{%raw%}\n$$\n\\begin{bmatrix} 0 & 1 & 0\\\\ 1 & -4 & 1 \\\\ 0 & 1 & 0 \\end{bmatrix} 或者\\begin{bmatrix} 0 & -1 & 0 \\\\ -1 & 4 & -1 \\\\ 0 & -1 & 0 \\end{bmatrix}\n$$\n{%endraw%}\n\n前者是mask中心为负数，后者是mask中心为正数；他们的目的和效果是一致的，只是表现形式稍有不同，前者在卷积后，在边缘的亮处为负数，在边缘暗处为正数。后者相反。\n\nmask为负数时，在边缘的亮处为负数，在边缘暗处为正数。可以参见下图：\n\n![](https://picture.mulindya.com/laplace-pic3.png)\n\n上述是考虑中心像素4邻域，类似还有考虑8邻域，此时中心点区8或-8，周围为-1或1。\n\n{%raw%}\n$$\n\\begin{bmatrix} 1 & 1 & 1 \\\\ 1 & -8 & 1 \\\\ 1 & 1 & 1 \\end{bmatrix} 或者\\begin{bmatrix} -1 & -1 & -1 \\\\ -1 & 8 & -1 \\\\ -1 & -1 & -1 \\end{bmatrix}\n$$\n\n{%endraw%}\n\n## 图像锐化\n\n锐化处理可选择拉普拉斯算子对原图像进行处理，产生描述灰度突变的图像，再将拉普拉斯图像与原始图像叠加而产生锐化图像。拉普拉斯锐化的基本方法可以由下式表示：\n$$\ng(x,y) = \\begin{cases} f(x,y) - \\nabla^2f(x,y) & \\text{mask中心为负数}\\\\f(x,y) + \\nabla^2f(x,y) & \\text{mask中心为正数} \\end{cases}\n$$\n\n这种简单的锐化方法既可以产生拉普拉斯锐化处理的效果，同时又能保留背景信息，将原始图像叠加到拉普拉斯变换的处理结果中去，可以使图像中的各灰度值得到保留，使灰度突变处的对比度得到增强，**最终结果是在保留图像背景的前提下，突现出图像中小的细节信息**。\n\n缺点是没有了边缘的方向信息；双倍加强了噪声的影响。\n\n> 锐化处理的公式从模板形式容易看出，如果在图像中一个较暗的区域中出现了一个亮点，那么用拉普拉斯运算就会使这个亮点变得更亮。因为图像中的边缘就是那些灰度发生跳变的区域，所以拉普拉斯锐化模板在边缘检测中很有用。一般增强技术对于陡峭的边缘和缓慢变化的边缘很难确定其边缘线的位置。但此算子却可用二次微分正峰和负峰之间的过零点来确定，对孤立点或端点更为敏感，因此特别适用于以**突出图像中的孤立点、孤立线或线端点为目的的场合**。同梯度算子一样，拉普拉斯算子也会增强图像中的噪声，有时用拉普拉斯算子进行边缘检测时，可将图像先进行**平滑处理**。\n\n## 代码\n\n在OpenCV内使用函数cv2.Laplacian()实现Laplacian算子的计算，该函数的语法格式为：\n\n```\ndst = cv2.Laplacian( src, ddepth[, ksize[, scale[, delta[, borderType]]]] )\n```\n\n式中：\n● dst代表目标图像。\n● src代表原始图像。\n● ddepth代表目标图像的深度。\n● ksize代表用于计算二阶导数的核尺寸大小。该值必须是正的奇数。\n● scale代表计算Laplacian值的缩放比例因子，该参数是可选的。默认情况下，该值为1，表示不进行缩放。\n● delta代表加到目标图像上的可选值，默认为0。\n● borderType : 用于推断图像外部像素的边界模式，一般是DORDER_DEFAULT,不支持BORDER_WRAP.\n\n```python\nimport cv2\nimg = cv2.imread(\"img.png\",0)\nlaplacian = cv2.Laplacian(img,cv2.CV_64F)\nlaplacian = cv2.convertScaleABs(laplacian)\ncv2.imshow(img)\ncv2.imshow(laplacian)\n```\n原图\n![](https://picture.mulindya.com/laplace-pic4.png)\n处理之后\n![](https://picture.mulindya.com/laplace-pic5.png)\n\n","source":"_posts/img_process/laplace.md","raw":"---\ntitle: 拉普拉斯算子\ntags: [图像处理]\ncategories: [图像处理]\ndate: 2021-08-20 14:27:00\nmath: true\n---\n\n>  ​\t图像锐化处理的作用是使灰度反差增强，从而使模糊图像变得更加清晰。图像模糊的实质就是图像受到平均运算或积分运算，因此可以对图像进行逆运算，如微分运算能够突出图像细节，使图像变得更为清晰。\n> ​\t积分运算的模板可以平滑图像，反过来对应微分运算的模板卷积可以锐化图像。锐化模板系数的取值再中心为正数而周围为负数。或者中心为负数周围为正数。而拉普拉斯算子就是一种常用的线性锐化滤波的方法。\n\n## 拉普拉斯的背景\n\n在图像中的边缘区域，像素值会发生“跳跃”，对这些像素求导，在其一阶导数在边缘位置为极值（Sobel算子）：\n\n![img](https://picture.mulindya.com/laplace-pic1.png)\n\n如果对像素值求二阶导数，会发现边缘处的导数值为0；**但是并不是说二阶导数为0就意味着是边缘**。\n\n![](https://picture.mulindya.com/laplace-pic2.png)\n\n## 计算方法\n\n### 像素二阶导数\n\n二阶导数的计算方法：\n$$\n\\nabla^2f = \\frac{\\partial^2 f}{\\partial x^2}+\\frac{\\partial^2 f}{\\partial y^2}\n$$\n分别沿着X和Y方向有二阶偏导数均可借用差分计算：\n$$\n\\frac{\\partial^2 f}{\\partial x^2} = f(x+1,y)+f(x-1,y)-2f(x,y)\n$$\n\n$$\n\\frac{\\partial^2 f}{\\partial y^2} = f(x,y+1)+f(x,y-1)-2f(x,y)\n$$\n\n那么可以得到\n$$\n\\nabla^2f = f(x+1,y)+f(x-1,y)+f(x,y+1)+f(x,y-1)-4f(x,y)\n$$\n### 模板卷积\n\n对应的模板卷积即为\n\n{%raw%}\n$$\n\\begin{bmatrix} 0 & 1 & 0\\\\ 1 & -4 & 1 \\\\ 0 & 1 & 0 \\end{bmatrix} 或者\\begin{bmatrix} 0 & -1 & 0 \\\\ -1 & 4 & -1 \\\\ 0 & -1 & 0 \\end{bmatrix}\n$$\n{%endraw%}\n\n前者是mask中心为负数，后者是mask中心为正数；他们的目的和效果是一致的，只是表现形式稍有不同，前者在卷积后，在边缘的亮处为负数，在边缘暗处为正数。后者相反。\n\nmask为负数时，在边缘的亮处为负数，在边缘暗处为正数。可以参见下图：\n\n![](https://picture.mulindya.com/laplace-pic3.png)\n\n上述是考虑中心像素4邻域，类似还有考虑8邻域，此时中心点区8或-8，周围为-1或1。\n\n{%raw%}\n$$\n\\begin{bmatrix} 1 & 1 & 1 \\\\ 1 & -8 & 1 \\\\ 1 & 1 & 1 \\end{bmatrix} 或者\\begin{bmatrix} -1 & -1 & -1 \\\\ -1 & 8 & -1 \\\\ -1 & -1 & -1 \\end{bmatrix}\n$$\n\n{%endraw%}\n\n## 图像锐化\n\n锐化处理可选择拉普拉斯算子对原图像进行处理，产生描述灰度突变的图像，再将拉普拉斯图像与原始图像叠加而产生锐化图像。拉普拉斯锐化的基本方法可以由下式表示：\n$$\ng(x,y) = \\begin{cases} f(x,y) - \\nabla^2f(x,y) & \\text{mask中心为负数}\\\\f(x,y) + \\nabla^2f(x,y) & \\text{mask中心为正数} \\end{cases}\n$$\n\n这种简单的锐化方法既可以产生拉普拉斯锐化处理的效果，同时又能保留背景信息，将原始图像叠加到拉普拉斯变换的处理结果中去，可以使图像中的各灰度值得到保留，使灰度突变处的对比度得到增强，**最终结果是在保留图像背景的前提下，突现出图像中小的细节信息**。\n\n缺点是没有了边缘的方向信息；双倍加强了噪声的影响。\n\n> 锐化处理的公式从模板形式容易看出，如果在图像中一个较暗的区域中出现了一个亮点，那么用拉普拉斯运算就会使这个亮点变得更亮。因为图像中的边缘就是那些灰度发生跳变的区域，所以拉普拉斯锐化模板在边缘检测中很有用。一般增强技术对于陡峭的边缘和缓慢变化的边缘很难确定其边缘线的位置。但此算子却可用二次微分正峰和负峰之间的过零点来确定，对孤立点或端点更为敏感，因此特别适用于以**突出图像中的孤立点、孤立线或线端点为目的的场合**。同梯度算子一样，拉普拉斯算子也会增强图像中的噪声，有时用拉普拉斯算子进行边缘检测时，可将图像先进行**平滑处理**。\n\n## 代码\n\n在OpenCV内使用函数cv2.Laplacian()实现Laplacian算子的计算，该函数的语法格式为：\n\n```\ndst = cv2.Laplacian( src, ddepth[, ksize[, scale[, delta[, borderType]]]] )\n```\n\n式中：\n● dst代表目标图像。\n● src代表原始图像。\n● ddepth代表目标图像的深度。\n● ksize代表用于计算二阶导数的核尺寸大小。该值必须是正的奇数。\n● scale代表计算Laplacian值的缩放比例因子，该参数是可选的。默认情况下，该值为1，表示不进行缩放。\n● delta代表加到目标图像上的可选值，默认为0。\n● borderType : 用于推断图像外部像素的边界模式，一般是DORDER_DEFAULT,不支持BORDER_WRAP.\n\n```python\nimport cv2\nimg = cv2.imread(\"img.png\",0)\nlaplacian = cv2.Laplacian(img,cv2.CV_64F)\nlaplacian = cv2.convertScaleABs(laplacian)\ncv2.imshow(img)\ncv2.imshow(laplacian)\n```\n原图\n![](https://picture.mulindya.com/laplace-pic4.png)\n处理之后\n![](https://picture.mulindya.com/laplace-pic5.png)\n\n","slug":"img_process/laplace","published":1,"updated":"2021-08-20T08:32:15.457Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxoci0011ugx46m0kela2","content":"<blockquote>\n<p>​\t图像锐化处理的作用是使灰度反差增强，从而使模糊图像变得更加清晰。图像模糊的实质就是图像受到平均运算或积分运算，因此可以对图像进行逆运算，如微分运算能够突出图像细节，使图像变得更为清晰。<br>\n​\t积分运算的模板可以平滑图像，反过来对应微分运算的模板卷积可以锐化图像。锐化模板系数的取值再中心为正数而周围为负数。或者中心为负数周围为正数。而拉普拉斯算子就是一种常用的线性锐化滤波的方法。</p>\n</blockquote>\n<h2 id=\"拉普拉斯的背景\">拉普拉斯的背景</h2>\n<p>在图像中的边缘区域，像素值会发生“跳跃”，对这些像素求导，在其一阶导数在边缘位置为极值（Sobel算子）：</p>\n<p><img src=\"https://picture.mulindya.com/laplace-pic1.png\" alt=\"img\"></p>\n<p>如果对像素值求二阶导数，会发现边缘处的导数值为0；<strong>但是并不是说二阶导数为0就意味着是边缘</strong>。</p>\n<p><img src=\"https://picture.mulindya.com/laplace-pic2.png\" alt=\"\"></p>\n<h2 id=\"计算方法\">计算方法</h2>\n<h3 id=\"像素二阶导数\">像素二阶导数</h3>\n<p>二阶导数的计算方法：<br>\n$$<br>\n\\nabla^2f = \\frac{\\partial^2 f}{\\partial x<sup>2}+\\frac{\\partial</sup>2 f}{\\partial y^2}<br>\n$$<br>\n分别沿着X和Y方向有二阶偏导数均可借用差分计算：<br>\n$$<br>\n\\frac{\\partial^2 f}{\\partial x^2} = f(x+1,y)+f(x-1,y)-2f(x,y)<br>\n$$</p>\n<p>$$<br>\n\\frac{\\partial^2 f}{\\partial y^2} = f(x,y+1)+f(x,y-1)-2f(x,y)<br>\n$$</p>\n<p>那么可以得到<br>\n$$<br>\n\\nabla^2f = f(x+1,y)+f(x-1,y)+f(x,y+1)+f(x,y-1)-4f(x,y)<br>\n$$</p>\n<h3 id=\"模板卷积\">模板卷积</h3>\n<p>对应的模板卷积即为</p>\n\n$$\n\\begin{bmatrix} 0 &amp; 1 &amp; 0\\\\ 1 &amp; -4 &amp; 1 \\\\ 0 &amp; 1 &amp; 0 \\end{bmatrix} 或者\\begin{bmatrix} 0 &amp; -1 &amp; 0 \\\\ -1 &amp; 4 &amp; -1 \\\\ 0 &amp; -1 &amp; 0 \\end{bmatrix}\n$$\n\n<p>前者是mask中心为负数，后者是mask中心为正数；他们的目的和效果是一致的，只是表现形式稍有不同，前者在卷积后，在边缘的亮处为负数，在边缘暗处为正数。后者相反。</p>\n<p>mask为负数时，在边缘的亮处为负数，在边缘暗处为正数。可以参见下图：</p>\n<p><img src=\"https://picture.mulindya.com/laplace-pic3.png\" alt=\"\"></p>\n<p>上述是考虑中心像素4邻域，类似还有考虑8邻域，此时中心点区8或-8，周围为-1或1。</p>\n\n$$\n\\begin{bmatrix} 1 &amp; 1 &amp; 1 \\\\ 1 &amp; -8 &amp; 1 \\\\ 1 &amp; 1 &amp; 1 \\end{bmatrix} 或者\\begin{bmatrix} -1 &amp; -1 &amp; -1 \\\\ -1 &amp; 8 &amp; -1 \\\\ -1 &amp; -1 &amp; -1 \\end{bmatrix}\n$$\n\n\n<h2 id=\"图像锐化\">图像锐化</h2>\n<p>锐化处理可选择拉普拉斯算子对原图像进行处理，产生描述灰度突变的图像，再将拉普拉斯图像与原始图像叠加而产生锐化图像。拉普拉斯锐化的基本方法可以由下式表示：<br>\n$$<br>\ng(x,y) = \\begin{cases} f(x,y) - \\nabla^2f(x,y) &amp; \\text{mask中心为负数}\\f(x,y) + \\nabla^2f(x,y) &amp; \\text{mask中心为正数} \\end{cases}<br>\n$$</p>\n<p>这种简单的锐化方法既可以产生拉普拉斯锐化处理的效果，同时又能保留背景信息，将原始图像叠加到拉普拉斯变换的处理结果中去，可以使图像中的各灰度值得到保留，使灰度突变处的对比度得到增强，<strong>最终结果是在保留图像背景的前提下，突现出图像中小的细节信息</strong>。</p>\n<p>缺点是没有了边缘的方向信息；双倍加强了噪声的影响。</p>\n<blockquote>\n<p>锐化处理的公式从模板形式容易看出，如果在图像中一个较暗的区域中出现了一个亮点，那么用拉普拉斯运算就会使这个亮点变得更亮。因为图像中的边缘就是那些灰度发生跳变的区域，所以拉普拉斯锐化模板在边缘检测中很有用。一般增强技术对于陡峭的边缘和缓慢变化的边缘很难确定其边缘线的位置。但此算子却可用二次微分正峰和负峰之间的过零点来确定，对孤立点或端点更为敏感，因此特别适用于以<strong>突出图像中的孤立点、孤立线或线端点为目的的场合</strong>。同梯度算子一样，拉普拉斯算子也会增强图像中的噪声，有时用拉普拉斯算子进行边缘检测时，可将图像先进行<strong>平滑处理</strong>。</p>\n</blockquote>\n<h2 id=\"代码\">代码</h2>\n<p>在OpenCV内使用函数cv2.Laplacian()实现Laplacian算子的计算，该函数的语法格式为：</p>\n<figure class=\"highlight reasonml\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs reasonml\">dst = cv2.<span class=\"hljs-constructor\">Laplacian( <span class=\"hljs-params\">src</span>, <span class=\"hljs-params\">ddepth</span>[, <span class=\"hljs-params\">ksize</span>[, <span class=\"hljs-params\">scale</span>[, <span class=\"hljs-params\">delta</span>[, <span class=\"hljs-params\">borderType</span>]]]] )</span><br></code></pre></td></tr></tbody></table></figure>\n<p>式中：<br>\n● dst代表目标图像。<br>\n● src代表原始图像。<br>\n● ddepth代表目标图像的深度。<br>\n● ksize代表用于计算二阶导数的核尺寸大小。该值必须是正的奇数。<br>\n● scale代表计算Laplacian值的缩放比例因子，该参数是可选的。默认情况下，该值为1，表示不进行缩放。<br>\n● delta代表加到目标图像上的可选值，默认为0。<br>\n● borderType : 用于推断图像外部像素的边界模式，一般是DORDER_DEFAULT,不支持BORDER_WRAP.</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> cv2<br>img = cv2.imread(<span class=\"hljs-string\">\"img.png\"</span>,<span class=\"hljs-number\">0</span>)<br>laplacian = cv2.Laplacian(img,cv2.CV_64F)<br>laplacian = cv2.convertScaleABs(laplacian)<br>cv2.imshow(img)<br>cv2.imshow(laplacian)<br></code></pre></td></tr></tbody></table></figure>\n<p>原图<br>\n<img src=\"https://picture.mulindya.com/laplace-pic4.png\" alt=\"\"><br>\n处理之后<br>\n<img src=\"https://picture.mulindya.com/laplace-pic5.png\" alt=\"\"></p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>​\t图像锐化处理的作用是使灰度反差增强，从而使模糊图像变得更加清晰。图像模糊的实质就是图像受到平均运算或积分运算，因此可以对图像进行逆运算，如微分运算能够突出图像细节，使图像变得更为清晰。<br>\n​\t积分运算的模板可以平滑图像，反过来对应微分运算的模板卷积可以锐化图像。锐化模板系数的取值再中心为正数而周围为负数。或者中心为负数周围为正数。而拉普拉斯算子就是一种常用的线性锐化滤波的方法。</p>\n</blockquote>\n<h2 id=\"拉普拉斯的背景\">拉普拉斯的背景</h2>\n<p>在图像中的边缘区域，像素值会发生“跳跃”，对这些像素求导，在其一阶导数在边缘位置为极值（Sobel算子）：</p>\n<p><img src=\"https://picture.mulindya.com/laplace-pic1.png\" alt=\"img\"></p>\n<p>如果对像素值求二阶导数，会发现边缘处的导数值为0；<strong>但是并不是说二阶导数为0就意味着是边缘</strong>。</p>\n<p><img src=\"https://picture.mulindya.com/laplace-pic2.png\" alt=\"\"></p>\n<h2 id=\"计算方法\">计算方法</h2>\n<h3 id=\"像素二阶导数\">像素二阶导数</h3>\n<p>二阶导数的计算方法：<br>\n$$<br>\n\\nabla^2f = \\frac{\\partial^2 f}{\\partial x<sup>2}+\\frac{\\partial</sup>2 f}{\\partial y^2}<br>\n$$<br>\n分别沿着X和Y方向有二阶偏导数均可借用差分计算：<br>\n$$<br>\n\\frac{\\partial^2 f}{\\partial x^2} = f(x+1,y)+f(x-1,y)-2f(x,y)<br>\n$$</p>\n<p>$$<br>\n\\frac{\\partial^2 f}{\\partial y^2} = f(x,y+1)+f(x,y-1)-2f(x,y)<br>\n$$</p>\n<p>那么可以得到<br>\n$$<br>\n\\nabla^2f = f(x+1,y)+f(x-1,y)+f(x,y+1)+f(x,y-1)-4f(x,y)<br>\n$$</p>\n<h3 id=\"模板卷积\">模板卷积</h3>\n<p>对应的模板卷积即为</p>\n\n$$\n\\begin{bmatrix} 0 & 1 & 0\\\\ 1 & -4 & 1 \\\\ 0 & 1 & 0 \\end{bmatrix} 或者\\begin{bmatrix} 0 & -1 & 0 \\\\ -1 & 4 & -1 \\\\ 0 & -1 & 0 \\end{bmatrix}\n$$\n\n<p>前者是mask中心为负数，后者是mask中心为正数；他们的目的和效果是一致的，只是表现形式稍有不同，前者在卷积后，在边缘的亮处为负数，在边缘暗处为正数。后者相反。</p>\n<p>mask为负数时，在边缘的亮处为负数，在边缘暗处为正数。可以参见下图：</p>\n<p><img src=\"https://picture.mulindya.com/laplace-pic3.png\" alt=\"\"></p>\n<p>上述是考虑中心像素4邻域，类似还有考虑8邻域，此时中心点区8或-8，周围为-1或1。</p>\n\n$$\n\\begin{bmatrix} 1 & 1 & 1 \\\\ 1 & -8 & 1 \\\\ 1 & 1 & 1 \\end{bmatrix} 或者\\begin{bmatrix} -1 & -1 & -1 \\\\ -1 & 8 & -1 \\\\ -1 & -1 & -1 \\end{bmatrix}\n$$\n\n\n<h2 id=\"图像锐化\">图像锐化</h2>\n<p>锐化处理可选择拉普拉斯算子对原图像进行处理，产生描述灰度突变的图像，再将拉普拉斯图像与原始图像叠加而产生锐化图像。拉普拉斯锐化的基本方法可以由下式表示：<br>\n$$<br>\ng(x,y) = \\begin{cases} f(x,y) - \\nabla^2f(x,y) &amp; \\text{mask中心为负数}\\f(x,y) + \\nabla^2f(x,y) &amp; \\text{mask中心为正数} \\end{cases}<br>\n$$</p>\n<p>这种简单的锐化方法既可以产生拉普拉斯锐化处理的效果，同时又能保留背景信息，将原始图像叠加到拉普拉斯变换的处理结果中去，可以使图像中的各灰度值得到保留，使灰度突变处的对比度得到增强，<strong>最终结果是在保留图像背景的前提下，突现出图像中小的细节信息</strong>。</p>\n<p>缺点是没有了边缘的方向信息；双倍加强了噪声的影响。</p>\n<blockquote>\n<p>锐化处理的公式从模板形式容易看出，如果在图像中一个较暗的区域中出现了一个亮点，那么用拉普拉斯运算就会使这个亮点变得更亮。因为图像中的边缘就是那些灰度发生跳变的区域，所以拉普拉斯锐化模板在边缘检测中很有用。一般增强技术对于陡峭的边缘和缓慢变化的边缘很难确定其边缘线的位置。但此算子却可用二次微分正峰和负峰之间的过零点来确定，对孤立点或端点更为敏感，因此特别适用于以<strong>突出图像中的孤立点、孤立线或线端点为目的的场合</strong>。同梯度算子一样，拉普拉斯算子也会增强图像中的噪声，有时用拉普拉斯算子进行边缘检测时，可将图像先进行<strong>平滑处理</strong>。</p>\n</blockquote>\n<h2 id=\"代码\">代码</h2>\n<p>在OpenCV内使用函数cv2.Laplacian()实现Laplacian算子的计算，该函数的语法格式为：</p>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs reasonml\">dst = cv2.<span class=\"hljs-constructor\">Laplacian( <span class=\"hljs-params\">src</span>, <span class=\"hljs-params\">ddepth</span>[, <span class=\"hljs-params\">ksize</span>[, <span class=\"hljs-params\">scale</span>[, <span class=\"hljs-params\">delta</span>[, <span class=\"hljs-params\">borderType</span>]]]] )</span><br></code></pre></td></tr></table></figure>\n<p>式中：<br>\n● dst代表目标图像。<br>\n● src代表原始图像。<br>\n● ddepth代表目标图像的深度。<br>\n● ksize代表用于计算二阶导数的核尺寸大小。该值必须是正的奇数。<br>\n● scale代表计算Laplacian值的缩放比例因子，该参数是可选的。默认情况下，该值为1，表示不进行缩放。<br>\n● delta代表加到目标图像上的可选值，默认为0。<br>\n● borderType : 用于推断图像外部像素的边界模式，一般是DORDER_DEFAULT,不支持BORDER_WRAP.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> cv2<br>img = cv2.imread(<span class=\"hljs-string\">&quot;img.png&quot;</span>,<span class=\"hljs-number\">0</span>)<br>laplacian = cv2.Laplacian(img,cv2.CV_64F)<br>laplacian = cv2.convertScaleABs(laplacian)<br>cv2.imshow(img)<br>cv2.imshow(laplacian)<br></code></pre></td></tr></table></figure>\n<p>原图<br>\n<img src=\"https://picture.mulindya.com/laplace-pic4.png\" alt=\"\"><br>\n处理之后<br>\n<img src=\"https://picture.mulindya.com/laplace-pic5.png\" alt=\"\"></p>\n"},{"title":"Sobel算子","date":"2021-08-14T02:25:07.000Z","math":true,"_content":"\n>本文主要介绍Sobel算子，主要用于边缘检测；由于该算子引入了局部平均，对噪声有平滑作用，因此还可以消除噪声。\n\n## 图像边缘与梯度\n\n在图像边缘，灰度值的变化较大，因此图像在此处的梯度值也较大。一般情况，图像梯度时计算图像的边缘信息。图像梯度严格来说时需要求导数，但是在图像计算上时使用像素值的差得到梯度的近似值。\n图像强度的显著变化可分为：\n\n- 阶跃变化函数，即图像强度在不连续处的两边的像素灰度值有着显著的差异；\n- 线条（屋顶）变化函数，即图像强度突然从一个值变化到另一个值，保持一较小行程后又回到原来的值。\n\n![](https://picture.mulindya.com/sobel-pic1.png)\n\n（a）（b）分别是阶跃函数和屋顶函数的二维图像；（c）（d）是阶跃和屋顶函数的函数图象；（e）（f）对应一阶倒数；（g）（h）是二阶倒数。\n\n## Sobel算子\n\n常用如下两个模板进行边缘检测，将Gx，Gy与图像卷积，即可得到横向和纵向的亮度差分近似值。\n\n{% raw %}\n$$\nG_x = \\begin{bmatrix} -1 & 0 & 1 \\\\ -2 & 0 & 2\\\\-1 & 0 & 1\\end{bmatrix} \\qquad G_y = \\begin{bmatrix} 1 & 2 & 1 \\\\ 0 & 0 & 0\\\\-1 & -2 & -1\\end{bmatrix}\n$$\n{% endraw %}\n\n图像每一个像素的梯度可以使用$G = \\sqrt{G^2_x+G^2_y}$来表示，梯度的方向使用$\\Theta = arctan(\\frac{G_y}{G_x})$。\n\n还有另外一个比`Sobel`函数的近似效果更好的 `Scharr`函数，其内核矩阵如下:\n\n{% raw %}\n$$\nG_x = \\begin{bmatrix} -3 & 0 & 3 \\\\ -10 & 0 & 10 \\\\ -3 & 0 & 3\\end{bmatrix} \\qquad G_y = \\begin{bmatrix} -3 & -10 & -3 \\\\ 0 & 0 & 0 \\\\ 3 & 10 & 3\\end{bmatrix}\n$$\n\n{% endraw %}\n\n## 代码使用\n\n### cv2.Sobel()\n\nSobel算子依然是一种过滤器，只是其是带有方向的\n\n```python\ndst = cv2.Sobel(src, ddepth, dx, dy[,ksize[, scale[, delta[, borderType]]]])\n```\n\n- dst代表目标函数\n-  src代表原始图像\n-  ddpeth代表输出图像的深度 ，-1表示采用的是与原图像相同的深度。目标图像的深度必须大于等于原图像的深度；\n-   dx代表x方向上的求导阶数 ，0表示这个方向上没有求导，一般为0、1、2。\n-   dy代表y方向上的求导阶数，0表示这个方向上没有求导，一般为0、1、2。\n-   ksize代表Sobel核的大小，该值为-1时，则会使用Scharr算子进行运算,一般选择为1、3、5、7\n-   scale代表计算导数时所采用的缩放因子，默认为1，无缩放\n-  delta代表加在目标图像dst上的值，该值是可选的，默认为0\n-  borderType代表边界样式，这个参数默认值为cv2.BORDER_DEFAULT。\n\n> 其中ddepth设计图像深度的概念：\n> 图像深度是指存储每个像素值所用的位数，例如cv2.CV_8U，指的是8位无符号数，取值范围为0~255，超出范围则会被截断（截断指的是，当数值大于255保留为255，当数值小于0保留为0，其余不变）。\n>\n> 具体还有：CV_16S（16位无符号数），CV_16U（16位有符号数），CV_32F（32位浮点数），CV_64F（64位浮点数）等.\n\n```python\nimport cv2\n#载入原图，图像深度为CV_8U\nimg_original=cv2.imread('E:\\ShannonT\\\\notebook workspace\\\\images\\\\4.28.9.jpg',0)\n#求X方向梯度，并且输出图像一个为CV_8U,一个为CV_64F\nimg_gradient_X_8U=cv2.Sobel(img_original,-1,1,0)\nimg_gradient_X_64F=cv2.Sobel(img_original,cv2.CV_64F,1,0)\n#将图像深度改为CV_8U\nimg_gradient_X_64Fto8U=cv2.convertScaleAbs(img_gradient_X_64F)\n#图像显示\ncv2.imshow('X_gradient_8U',img_gradient_X)\ncv2.imshow('X_gradient_64Fto8U',img_gradient_X_64Fto8U)\ncv2.waitKey()\ncv2.destroyAllWindows()\n```\n\n![](https://picture.mulindya.com/sobel-pic2.png)\n\n`cv2.imshow()`的默认显示为8位无符号数，即[0,255]，因此在显示`CV_64F`的图像前使用了函数`cv2.convertScaleAbs()`将图像深度为`CV_64F`的梯度图像重新转化为`CV_8U`。\n\n### cv2.convertScaleAbs()\n\n```\ncv2.convertScaleAbs(src[,alpha[,beta]])\n```\n\n先计算数组绝对值，后转化为8位无符号数\n\n- src:输入图像（多维数组）\n- alpha:比例因子\n- beta:保存新图像（数组）前可以增加的值\n\n### 归一化\n\n防止梯度大小被截断最简单的方法就是先将输入图像归一化（实际归一化的过程就已经实现了图像深度的转变）。在使用深度大于8U的格式之前将灰度先归一化，就不用`convertScaleAbs`转换了。\n\n```python\nimport cv2\nimport numpy as np\n#载入灰度原图，图像深度为CV_8U\nimg_original=cv2.imread('E:\\ShannonT\\\\notebook workspace\\\\images\\\\4.28.9.jpg',0)\n#原图归一化,实际图像深度已经变为CV_64F\nimg_standard=img_original/255\n#采用灰度原图求X方向梯度\noriginal_gradient_X_64F=cv2.Sobel(img_original,cv2.CV_64F,1,0)\noriginal_gradient_X_64Fto8U=cv2.convertScaleAbs(original_gradient_X_64F)\n#采用归一化的图像求X方向梯度\nstandard_gradient_X=cv2.Sobel(img_standard,-1,1,0)\n#图像显示\ncv2.imshow('original',img_original)\ncv2.imshow('original_X',original_gradient_X_64Fto8U)\ncv2.imshow('standard_X',standard_gradient_X)\ncv2.waitKey()\ncv2.destroyAllWindows()\n```\n\n![](https://picture.mulindya.com/sobel-pic3.png)\n\n### cv2.addWeighted()\n\n```\ncv2.addWeighted(src1, alpha, src2, beta, gamma[, dst[, dtype]]) → dst\n```\n\n- src1 输入的第一个数组\n- alpha 第一个数组的权重\n- src2 输入的第二个数组（与第一个数组有相同的shape）\n- beta 第二个数组的权重\n- dst 输出的数组名称\n- gamma 计算和时所采用的缩放因子，默认为1，无缩放\n- dtype 输出图像的深度，-1表示和input相同\n- \n> dst = src1 * alpha + src2 * beta + gamma;\n\n注意：由参数说明可以看出，被叠加的两幅图像必须是尺寸相同、类型相同的；并且，当输出图像array的深度为CV_32S时，这个函数就不适用了，这时候就会内存溢出或者算出的结果压根不对。\n\n### 边缘检测\n\n通过cv2.Sobel()我们可以轻松计算出X,Y方向的梯度大小，根据公式\n\n$$\nG = \\sqrt{G^2_x+G^2_y}\n$$\n可以求出梯度图像，实际操作时，为了简化运算，我们使用公式\n\n$$\nG = \\vert{G_x}\\vert+\\vert{G_y}\\vert\n$$\n\n```python\nimport cv2\nimport numpy as np\n#载入灰度原图，并且归一化\nimg_original=cv2.imread('E:\\ShannonT\\\\notebook workspace\\\\images\\\\4.28.9.jpg',0)/255\n#分别求X,Y方向的梯度\ngrad_X=cv2.Sobel(img_original,-1,1,0)\ngrad_Y=cv2.Sobel(img_original,-1,0,1)\n#求梯度图像\ngrad=cv2.addWeighted(grad_X,0.5,grad_Y,0.5,0)\ncv2.imshow('gradient',grad)\n```\n\n## 官方说明\n\n当年作者并没有公开发表过论文，仅仅是在一次博士生课题讨论会(1968)上提出(\"A 3x3 Isotropic Gradient Operator for Image Processing\")，后在1973年出版的一本专著（\"Pattern Classification and Scene Analysis\"）的脚注里作为注释出现和公开的。\n\n详细介绍，请参考以下内容。\n\n<iframe src='/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/An%20Isotropic%203x3%20Image%20Gradient%20Operator.pdf' width=100% height=450></iframe>\n\n","source":"_posts/img_process/sobel.md","raw":"---\ntitle: Sobel算子\ntags: 图像处理\ncategories: [图像处理]\ndate: 2021-08-14 10:25:07\nmath: true\n---\n\n>本文主要介绍Sobel算子，主要用于边缘检测；由于该算子引入了局部平均，对噪声有平滑作用，因此还可以消除噪声。\n\n## 图像边缘与梯度\n\n在图像边缘，灰度值的变化较大，因此图像在此处的梯度值也较大。一般情况，图像梯度时计算图像的边缘信息。图像梯度严格来说时需要求导数，但是在图像计算上时使用像素值的差得到梯度的近似值。\n图像强度的显著变化可分为：\n\n- 阶跃变化函数，即图像强度在不连续处的两边的像素灰度值有着显著的差异；\n- 线条（屋顶）变化函数，即图像强度突然从一个值变化到另一个值，保持一较小行程后又回到原来的值。\n\n![](https://picture.mulindya.com/sobel-pic1.png)\n\n（a）（b）分别是阶跃函数和屋顶函数的二维图像；（c）（d）是阶跃和屋顶函数的函数图象；（e）（f）对应一阶倒数；（g）（h）是二阶倒数。\n\n## Sobel算子\n\n常用如下两个模板进行边缘检测，将Gx，Gy与图像卷积，即可得到横向和纵向的亮度差分近似值。\n\n{% raw %}\n$$\nG_x = \\begin{bmatrix} -1 & 0 & 1 \\\\ -2 & 0 & 2\\\\-1 & 0 & 1\\end{bmatrix} \\qquad G_y = \\begin{bmatrix} 1 & 2 & 1 \\\\ 0 & 0 & 0\\\\-1 & -2 & -1\\end{bmatrix}\n$$\n{% endraw %}\n\n图像每一个像素的梯度可以使用$G = \\sqrt{G^2_x+G^2_y}$来表示，梯度的方向使用$\\Theta = arctan(\\frac{G_y}{G_x})$。\n\n还有另外一个比`Sobel`函数的近似效果更好的 `Scharr`函数，其内核矩阵如下:\n\n{% raw %}\n$$\nG_x = \\begin{bmatrix} -3 & 0 & 3 \\\\ -10 & 0 & 10 \\\\ -3 & 0 & 3\\end{bmatrix} \\qquad G_y = \\begin{bmatrix} -3 & -10 & -3 \\\\ 0 & 0 & 0 \\\\ 3 & 10 & 3\\end{bmatrix}\n$$\n\n{% endraw %}\n\n## 代码使用\n\n### cv2.Sobel()\n\nSobel算子依然是一种过滤器，只是其是带有方向的\n\n```python\ndst = cv2.Sobel(src, ddepth, dx, dy[,ksize[, scale[, delta[, borderType]]]])\n```\n\n- dst代表目标函数\n-  src代表原始图像\n-  ddpeth代表输出图像的深度 ，-1表示采用的是与原图像相同的深度。目标图像的深度必须大于等于原图像的深度；\n-   dx代表x方向上的求导阶数 ，0表示这个方向上没有求导，一般为0、1、2。\n-   dy代表y方向上的求导阶数，0表示这个方向上没有求导，一般为0、1、2。\n-   ksize代表Sobel核的大小，该值为-1时，则会使用Scharr算子进行运算,一般选择为1、3、5、7\n-   scale代表计算导数时所采用的缩放因子，默认为1，无缩放\n-  delta代表加在目标图像dst上的值，该值是可选的，默认为0\n-  borderType代表边界样式，这个参数默认值为cv2.BORDER_DEFAULT。\n\n> 其中ddepth设计图像深度的概念：\n> 图像深度是指存储每个像素值所用的位数，例如cv2.CV_8U，指的是8位无符号数，取值范围为0~255，超出范围则会被截断（截断指的是，当数值大于255保留为255，当数值小于0保留为0，其余不变）。\n>\n> 具体还有：CV_16S（16位无符号数），CV_16U（16位有符号数），CV_32F（32位浮点数），CV_64F（64位浮点数）等.\n\n```python\nimport cv2\n#载入原图，图像深度为CV_8U\nimg_original=cv2.imread('E:\\ShannonT\\\\notebook workspace\\\\images\\\\4.28.9.jpg',0)\n#求X方向梯度，并且输出图像一个为CV_8U,一个为CV_64F\nimg_gradient_X_8U=cv2.Sobel(img_original,-1,1,0)\nimg_gradient_X_64F=cv2.Sobel(img_original,cv2.CV_64F,1,0)\n#将图像深度改为CV_8U\nimg_gradient_X_64Fto8U=cv2.convertScaleAbs(img_gradient_X_64F)\n#图像显示\ncv2.imshow('X_gradient_8U',img_gradient_X)\ncv2.imshow('X_gradient_64Fto8U',img_gradient_X_64Fto8U)\ncv2.waitKey()\ncv2.destroyAllWindows()\n```\n\n![](https://picture.mulindya.com/sobel-pic2.png)\n\n`cv2.imshow()`的默认显示为8位无符号数，即[0,255]，因此在显示`CV_64F`的图像前使用了函数`cv2.convertScaleAbs()`将图像深度为`CV_64F`的梯度图像重新转化为`CV_8U`。\n\n### cv2.convertScaleAbs()\n\n```\ncv2.convertScaleAbs(src[,alpha[,beta]])\n```\n\n先计算数组绝对值，后转化为8位无符号数\n\n- src:输入图像（多维数组）\n- alpha:比例因子\n- beta:保存新图像（数组）前可以增加的值\n\n### 归一化\n\n防止梯度大小被截断最简单的方法就是先将输入图像归一化（实际归一化的过程就已经实现了图像深度的转变）。在使用深度大于8U的格式之前将灰度先归一化，就不用`convertScaleAbs`转换了。\n\n```python\nimport cv2\nimport numpy as np\n#载入灰度原图，图像深度为CV_8U\nimg_original=cv2.imread('E:\\ShannonT\\\\notebook workspace\\\\images\\\\4.28.9.jpg',0)\n#原图归一化,实际图像深度已经变为CV_64F\nimg_standard=img_original/255\n#采用灰度原图求X方向梯度\noriginal_gradient_X_64F=cv2.Sobel(img_original,cv2.CV_64F,1,0)\noriginal_gradient_X_64Fto8U=cv2.convertScaleAbs(original_gradient_X_64F)\n#采用归一化的图像求X方向梯度\nstandard_gradient_X=cv2.Sobel(img_standard,-1,1,0)\n#图像显示\ncv2.imshow('original',img_original)\ncv2.imshow('original_X',original_gradient_X_64Fto8U)\ncv2.imshow('standard_X',standard_gradient_X)\ncv2.waitKey()\ncv2.destroyAllWindows()\n```\n\n![](https://picture.mulindya.com/sobel-pic3.png)\n\n### cv2.addWeighted()\n\n```\ncv2.addWeighted(src1, alpha, src2, beta, gamma[, dst[, dtype]]) → dst\n```\n\n- src1 输入的第一个数组\n- alpha 第一个数组的权重\n- src2 输入的第二个数组（与第一个数组有相同的shape）\n- beta 第二个数组的权重\n- dst 输出的数组名称\n- gamma 计算和时所采用的缩放因子，默认为1，无缩放\n- dtype 输出图像的深度，-1表示和input相同\n- \n> dst = src1 * alpha + src2 * beta + gamma;\n\n注意：由参数说明可以看出，被叠加的两幅图像必须是尺寸相同、类型相同的；并且，当输出图像array的深度为CV_32S时，这个函数就不适用了，这时候就会内存溢出或者算出的结果压根不对。\n\n### 边缘检测\n\n通过cv2.Sobel()我们可以轻松计算出X,Y方向的梯度大小，根据公式\n\n$$\nG = \\sqrt{G^2_x+G^2_y}\n$$\n可以求出梯度图像，实际操作时，为了简化运算，我们使用公式\n\n$$\nG = \\vert{G_x}\\vert+\\vert{G_y}\\vert\n$$\n\n```python\nimport cv2\nimport numpy as np\n#载入灰度原图，并且归一化\nimg_original=cv2.imread('E:\\ShannonT\\\\notebook workspace\\\\images\\\\4.28.9.jpg',0)/255\n#分别求X,Y方向的梯度\ngrad_X=cv2.Sobel(img_original,-1,1,0)\ngrad_Y=cv2.Sobel(img_original,-1,0,1)\n#求梯度图像\ngrad=cv2.addWeighted(grad_X,0.5,grad_Y,0.5,0)\ncv2.imshow('gradient',grad)\n```\n\n## 官方说明\n\n当年作者并没有公开发表过论文，仅仅是在一次博士生课题讨论会(1968)上提出(\"A 3x3 Isotropic Gradient Operator for Image Processing\")，后在1973年出版的一本专著（\"Pattern Classification and Scene Analysis\"）的脚注里作为注释出现和公开的。\n\n详细介绍，请参考以下内容。\n\n<iframe src='/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/An%20Isotropic%203x3%20Image%20Gradient%20Operator.pdf' width=100% height=450></iframe>\n\n","slug":"img_process/sobel","published":1,"updated":"2021-08-19T12:20:11.175Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxocj0014ugx4gqba5960","content":"<blockquote>\n<p>本文主要介绍Sobel算子，主要用于边缘检测；由于该算子引入了局部平均，对噪声有平滑作用，因此还可以消除噪声。</p>\n</blockquote>\n<h2 id=\"图像边缘与梯度\">图像边缘与梯度</h2>\n<p>在图像边缘，灰度值的变化较大，因此图像在此处的梯度值也较大。一般情况，图像梯度时计算图像的边缘信息。图像梯度严格来说时需要求导数，但是在图像计算上时使用像素值的差得到梯度的近似值。<br>\n图像强度的显著变化可分为：</p>\n<ul>\n<li>阶跃变化函数，即图像强度在不连续处的两边的像素灰度值有着显著的差异；</li>\n<li>线条（屋顶）变化函数，即图像强度突然从一个值变化到另一个值，保持一较小行程后又回到原来的值。</li>\n</ul>\n<p><img src=\"https://picture.mulindya.com/sobel-pic1.png\" alt=\"\"></p>\n<p>（a）（b）分别是阶跃函数和屋顶函数的二维图像；（c）（d）是阶跃和屋顶函数的函数图象；（e）（f）对应一阶倒数；（g）（h）是二阶倒数。</p>\n<h2 id=\"Sobel算子\">Sobel算子</h2>\n<p>常用如下两个模板进行边缘检测，将Gx，Gy与图像卷积，即可得到横向和纵向的亮度差分近似值。</p>\n\n$$\nG_x = \\begin{bmatrix} -1 &amp; 0 &amp; 1 \\\\ -2 &amp; 0 &amp; 2\\\\-1 &amp; 0 &amp; 1\\end{bmatrix} \\qquad G_y = \\begin{bmatrix} 1 &amp; 2 &amp; 1 \\\\ 0 &amp; 0 &amp; 0\\\\-1 &amp; -2 &amp; -1\\end{bmatrix}\n$$\n\n<p>图像每一个像素的梯度可以使用$G = \\sqrt{G<sup>2_x+G</sup>2_y}$来表示，梯度的方向使用$\\Theta = arctan(\\frac{G_y}{G_x})$。</p>\n<p>还有另外一个比<code>Sobel</code>函数的近似效果更好的 <code>Scharr</code>函数，其内核矩阵如下:</p>\n\n$$\nG_x = \\begin{bmatrix} -3 &amp; 0 &amp; 3 \\\\ -10 &amp; 0 &amp; 10 \\\\ -3 &amp; 0 &amp; 3\\end{bmatrix} \\qquad G_y = \\begin{bmatrix} -3 &amp; -10 &amp; -3 \\\\ 0 &amp; 0 &amp; 0 \\\\ 3 &amp; 10 &amp; 3\\end{bmatrix}\n$$\n\n\n<h2 id=\"代码使用\">代码使用</h2>\n<h3 id=\"cv2-Sobel\">cv2.Sobel()</h3>\n<p>Sobel算子依然是一种过滤器，只是其是带有方向的</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\">dst = cv2.Sobel(src, ddepth, dx, dy[,ksize[, scale[, delta[, borderType]]]])<br></code></pre></td></tr></tbody></table></figure>\n<ul>\n<li>dst代表目标函数</li>\n<li>src代表原始图像</li>\n<li>ddpeth代表输出图像的深度 ，-1表示采用的是与原图像相同的深度。目标图像的深度必须大于等于原图像的深度；</li>\n<li>dx代表x方向上的求导阶数 ，0表示这个方向上没有求导，一般为0、1、2。</li>\n<li>dy代表y方向上的求导阶数，0表示这个方向上没有求导，一般为0、1、2。</li>\n<li>ksize代表Sobel核的大小，该值为-1时，则会使用Scharr算子进行运算,一般选择为1、3、5、7</li>\n<li>scale代表计算导数时所采用的缩放因子，默认为1，无缩放</li>\n<li>delta代表加在目标图像dst上的值，该值是可选的，默认为0</li>\n<li>borderType代表边界样式，这个参数默认值为cv2.BORDER_DEFAULT。</li>\n</ul>\n<blockquote>\n<p>其中ddepth设计图像深度的概念：<br>\n图像深度是指存储每个像素值所用的位数，例如cv2.CV_8U，指的是8位无符号数，取值范围为0~255，超出范围则会被截断（截断指的是，当数值大于255保留为255，当数值小于0保留为0，其余不变）。</p>\n<p>具体还有：CV_16S（16位无符号数），CV_16U（16位有符号数），CV_32F（32位浮点数），CV_64F（64位浮点数）等.</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> cv2<br><span class=\"hljs-comment\">#载入原图，图像深度为CV_8U</span><br>img_original=cv2.imread(<span class=\"hljs-string\">'E:\\ShannonT\\\\notebook workspace\\\\images\\\\4.28.9.jpg'</span>,<span class=\"hljs-number\">0</span>)<br><span class=\"hljs-comment\">#求X方向梯度，并且输出图像一个为CV_8U,一个为CV_64F</span><br>img_gradient_X_8U=cv2.Sobel(img_original,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>)<br>img_gradient_X_64F=cv2.Sobel(img_original,cv2.CV_64F,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>)<br><span class=\"hljs-comment\">#将图像深度改为CV_8U</span><br>img_gradient_X_64Fto8U=cv2.convertScaleAbs(img_gradient_X_64F)<br><span class=\"hljs-comment\">#图像显示</span><br>cv2.imshow(<span class=\"hljs-string\">'X_gradient_8U'</span>,img_gradient_X)<br>cv2.imshow(<span class=\"hljs-string\">'X_gradient_64Fto8U'</span>,img_gradient_X_64Fto8U)<br>cv2.waitKey()<br>cv2.destroyAllWindows()<br></code></pre></td></tr></tbody></table></figure>\n<p><img src=\"https://picture.mulindya.com/sobel-pic2.png\" alt=\"\"></p>\n<p><code>cv2.imshow()</code>的默认显示为8位无符号数，即[0,255]，因此在显示<code>CV_64F</code>的图像前使用了函数<code>cv2.convertScaleAbs()</code>将图像深度为<code>CV_64F</code>的梯度图像重新转化为<code>CV_8U</code>。</p>\n<h3 id=\"cv2-convertScaleAbs\">cv2.convertScaleAbs()</h3>\n<figure class=\"highlight reasonml\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs reasonml\">cv2.convert<span class=\"hljs-constructor\">ScaleAbs(<span class=\"hljs-params\">src</span>[,<span class=\"hljs-params\">alpha</span>[,<span class=\"hljs-params\">beta</span>]])</span><br></code></pre></td></tr></tbody></table></figure>\n<p>先计算数组绝对值，后转化为8位无符号数</p>\n<ul>\n<li>src:输入图像（多维数组）</li>\n<li>alpha:比例因子</li>\n<li>beta:保存新图像（数组）前可以增加的值</li>\n</ul>\n<h3 id=\"归一化\">归一化</h3>\n<p>防止梯度大小被截断最简单的方法就是先将输入图像归一化（实际归一化的过程就已经实现了图像深度的转变）。在使用深度大于8U的格式之前将灰度先归一化，就不用<code>convertScaleAbs</code>转换了。</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> cv2<br><span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np<br><span class=\"hljs-comment\">#载入灰度原图，图像深度为CV_8U</span><br>img_original=cv2.imread(<span class=\"hljs-string\">'E:\\ShannonT\\\\notebook workspace\\\\images\\\\4.28.9.jpg'</span>,<span class=\"hljs-number\">0</span>)<br><span class=\"hljs-comment\">#原图归一化,实际图像深度已经变为CV_64F</span><br>img_standard=img_original/<span class=\"hljs-number\">255</span><br><span class=\"hljs-comment\">#采用灰度原图求X方向梯度</span><br>original_gradient_X_64F=cv2.Sobel(img_original,cv2.CV_64F,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>)<br>original_gradient_X_64Fto8U=cv2.convertScaleAbs(original_gradient_X_64F)<br><span class=\"hljs-comment\">#采用归一化的图像求X方向梯度</span><br>standard_gradient_X=cv2.Sobel(img_standard,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>)<br><span class=\"hljs-comment\">#图像显示</span><br>cv2.imshow(<span class=\"hljs-string\">'original'</span>,img_original)<br>cv2.imshow(<span class=\"hljs-string\">'original_X'</span>,original_gradient_X_64Fto8U)<br>cv2.imshow(<span class=\"hljs-string\">'standard_X'</span>,standard_gradient_X)<br>cv2.waitKey()<br>cv2.destroyAllWindows()<br></code></pre></td></tr></tbody></table></figure>\n<p><img src=\"https://picture.mulindya.com/sobel-pic3.png\" alt=\"\"></p>\n<h3 id=\"cv2-addWeighted\">cv2.addWeighted()</h3>\n<figure class=\"highlight reasonml\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs reasonml\">cv2.add<span class=\"hljs-constructor\">Weighted(<span class=\"hljs-params\">src1</span>, <span class=\"hljs-params\">alpha</span>, <span class=\"hljs-params\">src2</span>, <span class=\"hljs-params\">beta</span>, <span class=\"hljs-params\">gamma</span>[, <span class=\"hljs-params\">dst</span>[, <span class=\"hljs-params\">dtype</span>]])</span> → dst<br></code></pre></td></tr></tbody></table></figure>\n<ul>\n<li>src1 输入的第一个数组</li>\n<li>alpha 第一个数组的权重</li>\n<li>src2 输入的第二个数组（与第一个数组有相同的shape）</li>\n<li>beta 第二个数组的权重</li>\n<li>dst 输出的数组名称</li>\n<li>gamma 计算和时所采用的缩放因子，默认为1，无缩放</li>\n<li>dtype 输出图像的深度，-1表示和input相同</li>\n<li></li>\n</ul>\n<blockquote>\n<p>dst = src1 * alpha + src2 * beta + gamma;</p>\n</blockquote>\n<p>注意：由参数说明可以看出，被叠加的两幅图像必须是尺寸相同、类型相同的；并且，当输出图像array的深度为CV_32S时，这个函数就不适用了，这时候就会内存溢出或者算出的结果压根不对。</p>\n<h3 id=\"边缘检测\">边缘检测</h3>\n<p>通过cv2.Sobel()我们可以轻松计算出X,Y方向的梯度大小，根据公式</p>\n<p>$$<br>\nG = \\sqrt{G<sup>2_x+G</sup>2_y}<br>\n$$<br>\n可以求出梯度图像，实际操作时，为了简化运算，我们使用公式</p>\n<p>$$<br>\nG = \\vert{G_x}\\vert+\\vert{G_y}\\vert<br>\n$$</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> cv2<br><span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np<br><span class=\"hljs-comment\">#载入灰度原图，并且归一化</span><br>img_original=cv2.imread(<span class=\"hljs-string\">'E:\\ShannonT\\\\notebook workspace\\\\images\\\\4.28.9.jpg'</span>,<span class=\"hljs-number\">0</span>)/<span class=\"hljs-number\">255</span><br><span class=\"hljs-comment\">#分别求X,Y方向的梯度</span><br>grad_X=cv2.Sobel(img_original,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>)<br>grad_Y=cv2.Sobel(img_original,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span>)<br><span class=\"hljs-comment\">#求梯度图像</span><br>grad=cv2.addWeighted(grad_X,<span class=\"hljs-number\">0.5</span>,grad_Y,<span class=\"hljs-number\">0.5</span>,<span class=\"hljs-number\">0</span>)<br>cv2.imshow(<span class=\"hljs-string\">'gradient'</span>,grad)<br></code></pre></td></tr></tbody></table></figure>\n<h2 id=\"官方说明\">官方说明</h2>\n<p>当年作者并没有公开发表过论文，仅仅是在一次博士生课题讨论会(1968)上提出(“A 3x3 Isotropic Gradient Operator for Image Processing”)，后在1973年出版的一本专著（“Pattern Classification and Scene Analysis”）的脚注里作为注释出现和公开的。</p>\n<p>详细介绍，请参考以下内容。</p>\n<iframe src=\"/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/An%20Isotropic%203x3%20Image%20Gradient%20Operator.pdf\" width=\"100%\" height=\"450\"></iframe>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>本文主要介绍Sobel算子，主要用于边缘检测；由于该算子引入了局部平均，对噪声有平滑作用，因此还可以消除噪声。</p>\n</blockquote>\n<h2 id=\"图像边缘与梯度\">图像边缘与梯度</h2>\n<p>在图像边缘，灰度值的变化较大，因此图像在此处的梯度值也较大。一般情况，图像梯度时计算图像的边缘信息。图像梯度严格来说时需要求导数，但是在图像计算上时使用像素值的差得到梯度的近似值。<br>\n图像强度的显著变化可分为：</p>\n<ul>\n<li>阶跃变化函数，即图像强度在不连续处的两边的像素灰度值有着显著的差异；</li>\n<li>线条（屋顶）变化函数，即图像强度突然从一个值变化到另一个值，保持一较小行程后又回到原来的值。</li>\n</ul>\n<p><img src=\"https://picture.mulindya.com/sobel-pic1.png\" alt=\"\"></p>\n<p>（a）（b）分别是阶跃函数和屋顶函数的二维图像；（c）（d）是阶跃和屋顶函数的函数图象；（e）（f）对应一阶倒数；（g）（h）是二阶倒数。</p>\n<h2 id=\"Sobel算子\">Sobel算子</h2>\n<p>常用如下两个模板进行边缘检测，将Gx，Gy与图像卷积，即可得到横向和纵向的亮度差分近似值。</p>\n\n$$\nG_x = \\begin{bmatrix} -1 & 0 & 1 \\\\ -2 & 0 & 2\\\\-1 & 0 & 1\\end{bmatrix} \\qquad G_y = \\begin{bmatrix} 1 & 2 & 1 \\\\ 0 & 0 & 0\\\\-1 & -2 & -1\\end{bmatrix}\n$$\n\n<p>图像每一个像素的梯度可以使用$G = \\sqrt{G<sup>2_x+G</sup>2_y}$来表示，梯度的方向使用$\\Theta = arctan(\\frac{G_y}{G_x})$。</p>\n<p>还有另外一个比<code>Sobel</code>函数的近似效果更好的 <code>Scharr</code>函数，其内核矩阵如下:</p>\n\n$$\nG_x = \\begin{bmatrix} -3 & 0 & 3 \\\\ -10 & 0 & 10 \\\\ -3 & 0 & 3\\end{bmatrix} \\qquad G_y = \\begin{bmatrix} -3 & -10 & -3 \\\\ 0 & 0 & 0 \\\\ 3 & 10 & 3\\end{bmatrix}\n$$\n\n\n<h2 id=\"代码使用\">代码使用</h2>\n<h3 id=\"cv2-Sobel\">cv2.Sobel()</h3>\n<p>Sobel算子依然是一种过滤器，只是其是带有方向的</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\">dst = cv2.Sobel(src, ddepth, dx, dy[,ksize[, scale[, delta[, borderType]]]])<br></code></pre></td></tr></table></figure>\n<ul>\n<li>dst代表目标函数</li>\n<li>src代表原始图像</li>\n<li>ddpeth代表输出图像的深度 ，-1表示采用的是与原图像相同的深度。目标图像的深度必须大于等于原图像的深度；</li>\n<li>dx代表x方向上的求导阶数 ，0表示这个方向上没有求导，一般为0、1、2。</li>\n<li>dy代表y方向上的求导阶数，0表示这个方向上没有求导，一般为0、1、2。</li>\n<li>ksize代表Sobel核的大小，该值为-1时，则会使用Scharr算子进行运算,一般选择为1、3、5、7</li>\n<li>scale代表计算导数时所采用的缩放因子，默认为1，无缩放</li>\n<li>delta代表加在目标图像dst上的值，该值是可选的，默认为0</li>\n<li>borderType代表边界样式，这个参数默认值为cv2.BORDER_DEFAULT。</li>\n</ul>\n<blockquote>\n<p>其中ddepth设计图像深度的概念：<br>\n图像深度是指存储每个像素值所用的位数，例如cv2.CV_8U，指的是8位无符号数，取值范围为0~255，超出范围则会被截断（截断指的是，当数值大于255保留为255，当数值小于0保留为0，其余不变）。</p>\n<p>具体还有：CV_16S（16位无符号数），CV_16U（16位有符号数），CV_32F（32位浮点数），CV_64F（64位浮点数）等.</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> cv2<br><span class=\"hljs-comment\">#载入原图，图像深度为CV_8U</span><br>img_original=cv2.imread(<span class=\"hljs-string\">&#x27;E:\\ShannonT\\\\notebook workspace\\\\images\\\\4.28.9.jpg&#x27;</span>,<span class=\"hljs-number\">0</span>)<br><span class=\"hljs-comment\">#求X方向梯度，并且输出图像一个为CV_8U,一个为CV_64F</span><br>img_gradient_X_8U=cv2.Sobel(img_original,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>)<br>img_gradient_X_64F=cv2.Sobel(img_original,cv2.CV_64F,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>)<br><span class=\"hljs-comment\">#将图像深度改为CV_8U</span><br>img_gradient_X_64Fto8U=cv2.convertScaleAbs(img_gradient_X_64F)<br><span class=\"hljs-comment\">#图像显示</span><br>cv2.imshow(<span class=\"hljs-string\">&#x27;X_gradient_8U&#x27;</span>,img_gradient_X)<br>cv2.imshow(<span class=\"hljs-string\">&#x27;X_gradient_64Fto8U&#x27;</span>,img_gradient_X_64Fto8U)<br>cv2.waitKey()<br>cv2.destroyAllWindows()<br></code></pre></td></tr></table></figure>\n<p><img src=\"https://picture.mulindya.com/sobel-pic2.png\" alt=\"\"></p>\n<p><code>cv2.imshow()</code>的默认显示为8位无符号数，即[0,255]，因此在显示<code>CV_64F</code>的图像前使用了函数<code>cv2.convertScaleAbs()</code>将图像深度为<code>CV_64F</code>的梯度图像重新转化为<code>CV_8U</code>。</p>\n<h3 id=\"cv2-convertScaleAbs\">cv2.convertScaleAbs()</h3>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs reasonml\">cv2.convert<span class=\"hljs-constructor\">ScaleAbs(<span class=\"hljs-params\">src</span>[,<span class=\"hljs-params\">alpha</span>[,<span class=\"hljs-params\">beta</span>]])</span><br></code></pre></td></tr></table></figure>\n<p>先计算数组绝对值，后转化为8位无符号数</p>\n<ul>\n<li>src:输入图像（多维数组）</li>\n<li>alpha:比例因子</li>\n<li>beta:保存新图像（数组）前可以增加的值</li>\n</ul>\n<h3 id=\"归一化\">归一化</h3>\n<p>防止梯度大小被截断最简单的方法就是先将输入图像归一化（实际归一化的过程就已经实现了图像深度的转变）。在使用深度大于8U的格式之前将灰度先归一化，就不用<code>convertScaleAbs</code>转换了。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> cv2<br><span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np<br><span class=\"hljs-comment\">#载入灰度原图，图像深度为CV_8U</span><br>img_original=cv2.imread(<span class=\"hljs-string\">&#x27;E:\\ShannonT\\\\notebook workspace\\\\images\\\\4.28.9.jpg&#x27;</span>,<span class=\"hljs-number\">0</span>)<br><span class=\"hljs-comment\">#原图归一化,实际图像深度已经变为CV_64F</span><br>img_standard=img_original/<span class=\"hljs-number\">255</span><br><span class=\"hljs-comment\">#采用灰度原图求X方向梯度</span><br>original_gradient_X_64F=cv2.Sobel(img_original,cv2.CV_64F,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>)<br>original_gradient_X_64Fto8U=cv2.convertScaleAbs(original_gradient_X_64F)<br><span class=\"hljs-comment\">#采用归一化的图像求X方向梯度</span><br>standard_gradient_X=cv2.Sobel(img_standard,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>)<br><span class=\"hljs-comment\">#图像显示</span><br>cv2.imshow(<span class=\"hljs-string\">&#x27;original&#x27;</span>,img_original)<br>cv2.imshow(<span class=\"hljs-string\">&#x27;original_X&#x27;</span>,original_gradient_X_64Fto8U)<br>cv2.imshow(<span class=\"hljs-string\">&#x27;standard_X&#x27;</span>,standard_gradient_X)<br>cv2.waitKey()<br>cv2.destroyAllWindows()<br></code></pre></td></tr></table></figure>\n<p><img src=\"https://picture.mulindya.com/sobel-pic3.png\" alt=\"\"></p>\n<h3 id=\"cv2-addWeighted\">cv2.addWeighted()</h3>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs reasonml\">cv2.add<span class=\"hljs-constructor\">Weighted(<span class=\"hljs-params\">src1</span>, <span class=\"hljs-params\">alpha</span>, <span class=\"hljs-params\">src2</span>, <span class=\"hljs-params\">beta</span>, <span class=\"hljs-params\">gamma</span>[, <span class=\"hljs-params\">dst</span>[, <span class=\"hljs-params\">dtype</span>]])</span> → dst<br></code></pre></td></tr></table></figure>\n<ul>\n<li>src1 输入的第一个数组</li>\n<li>alpha 第一个数组的权重</li>\n<li>src2 输入的第二个数组（与第一个数组有相同的shape）</li>\n<li>beta 第二个数组的权重</li>\n<li>dst 输出的数组名称</li>\n<li>gamma 计算和时所采用的缩放因子，默认为1，无缩放</li>\n<li>dtype 输出图像的深度，-1表示和input相同</li>\n<li></li>\n</ul>\n<blockquote>\n<p>dst = src1 * alpha + src2 * beta + gamma;</p>\n</blockquote>\n<p>注意：由参数说明可以看出，被叠加的两幅图像必须是尺寸相同、类型相同的；并且，当输出图像array的深度为CV_32S时，这个函数就不适用了，这时候就会内存溢出或者算出的结果压根不对。</p>\n<h3 id=\"边缘检测\">边缘检测</h3>\n<p>通过cv2.Sobel()我们可以轻松计算出X,Y方向的梯度大小，根据公式</p>\n<p>$$<br>\nG = \\sqrt{G<sup>2_x+G</sup>2_y}<br>\n$$<br>\n可以求出梯度图像，实际操作时，为了简化运算，我们使用公式</p>\n<p>$$<br>\nG = \\vert{G_x}\\vert+\\vert{G_y}\\vert<br>\n$$</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> cv2<br><span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np<br><span class=\"hljs-comment\">#载入灰度原图，并且归一化</span><br>img_original=cv2.imread(<span class=\"hljs-string\">&#x27;E:\\ShannonT\\\\notebook workspace\\\\images\\\\4.28.9.jpg&#x27;</span>,<span class=\"hljs-number\">0</span>)/<span class=\"hljs-number\">255</span><br><span class=\"hljs-comment\">#分别求X,Y方向的梯度</span><br>grad_X=cv2.Sobel(img_original,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>)<br>grad_Y=cv2.Sobel(img_original,-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span>)<br><span class=\"hljs-comment\">#求梯度图像</span><br>grad=cv2.addWeighted(grad_X,<span class=\"hljs-number\">0.5</span>,grad_Y,<span class=\"hljs-number\">0.5</span>,<span class=\"hljs-number\">0</span>)<br>cv2.imshow(<span class=\"hljs-string\">&#x27;gradient&#x27;</span>,grad)<br></code></pre></td></tr></table></figure>\n<h2 id=\"官方说明\">官方说明</h2>\n<p>当年作者并没有公开发表过论文，仅仅是在一次博士生课题讨论会(1968)上提出(“A 3x3 Isotropic Gradient Operator for Image Processing”)，后在1973年出版的一本专著（“Pattern Classification and Scene Analysis”）的脚注里作为注释出现和公开的。</p>\n<p>详细介绍，请参考以下内容。</p>\n<iframe src='/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/An%20Isotropic%203x3%20Image%20Gradient%20Operator.pdf' width=100% height=450></iframe>\n"},{"title":"剑指offer03 数组中重复的数字","date":"2021-08-11T02:53:45.000Z","_content":"\n>数组中重复的数字\n\n## 题目\n\n找出数组中重复的数字。\n\n\n在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。\n\n### 示例 1：\n\n```\n输入：\n[2, 3, 1, 0, 2, 5, 3]\n输出：2 或 3 \n```\n\n### 提示：\n\n- 2 <= n <= 100000\n\n## 题解\n\n创建一个flag数组进行标记；\n\n指定大小的数组创建\n\n**填坑：** <font color=red> 不要使用后者,因为后者是浅拷贝，改变某一元素，该列均会改变</font>\n\n- 一维\n\n  a = [0 for _ in range(n)]  《=》  a = [0] * n \n\n- 二维\n\n  a = [[0 for col in range(m)] for row in range(n)]  *# 创建一个n\\*m的二维矩阵a，每个初值都是0*   《=》  a = [[0] \\*m] \\*n \n\n```python\nclass Solution:\n    def findRepeatNumber(self, nums: List[int]) -> int:\n        flag = [0 for _ in range(len(nums))] #创建长度为nums的数组 也可以用[0]*n\n        for x in nums:\n            flag[x] += 1\n            if(flag[x]>1):\n                return x\n```\n\n<font color=purple size=4>实际上无需构建新的数组进行标记，可以直接使用set的长度进行判断。或者使用sort，使用list的sort方法。判断相邻的元素是否相等。</font>\n\n方法1：利用python set的无序不重复特性：利用Python中的set集合为无序不重复集合，通过判断temp_set的长度确定是否是重复数字。\n\n```python\nclass Solution:\n    def findRepeatNumber(self, nums: List[int]) -> int:\n        temp_set = set()\n        repeat = -1\n        for i in range(len(nums)):\n            temp_set.add(nums[i])\n            if len(temp_set) < i + 1:\n                repeat = nums[i]\n                break\n        return repeat\n```\n\n方法2：利用python的sort函数排序，然后计算相邻两个数据是否相等即可。\n\n```python\nclass Solution:\n    def findRepeatNumber(self, nums: List[int]) -> int:\n        nums.sort()\n        for i in range(len(nums)-1):\n            if nums[i]==nums[i+1]:\n                return nums[i]\n```\n","source":"_posts/leetcode/leetcode-offer03.md","raw":"---\ntitle: 剑指offer03 数组中重复的数字\ntags: [剑指,数组,idea]\ncategories: [剑指,数组]\ndate: 2021-08-11 10:53:45\n---\n\n>数组中重复的数字\n\n## 题目\n\n找出数组中重复的数字。\n\n\n在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。\n\n### 示例 1：\n\n```\n输入：\n[2, 3, 1, 0, 2, 5, 3]\n输出：2 或 3 \n```\n\n### 提示：\n\n- 2 <= n <= 100000\n\n## 题解\n\n创建一个flag数组进行标记；\n\n指定大小的数组创建\n\n**填坑：** <font color=red> 不要使用后者,因为后者是浅拷贝，改变某一元素，该列均会改变</font>\n\n- 一维\n\n  a = [0 for _ in range(n)]  《=》  a = [0] * n \n\n- 二维\n\n  a = [[0 for col in range(m)] for row in range(n)]  *# 创建一个n\\*m的二维矩阵a，每个初值都是0*   《=》  a = [[0] \\*m] \\*n \n\n```python\nclass Solution:\n    def findRepeatNumber(self, nums: List[int]) -> int:\n        flag = [0 for _ in range(len(nums))] #创建长度为nums的数组 也可以用[0]*n\n        for x in nums:\n            flag[x] += 1\n            if(flag[x]>1):\n                return x\n```\n\n<font color=purple size=4>实际上无需构建新的数组进行标记，可以直接使用set的长度进行判断。或者使用sort，使用list的sort方法。判断相邻的元素是否相等。</font>\n\n方法1：利用python set的无序不重复特性：利用Python中的set集合为无序不重复集合，通过判断temp_set的长度确定是否是重复数字。\n\n```python\nclass Solution:\n    def findRepeatNumber(self, nums: List[int]) -> int:\n        temp_set = set()\n        repeat = -1\n        for i in range(len(nums)):\n            temp_set.add(nums[i])\n            if len(temp_set) < i + 1:\n                repeat = nums[i]\n                break\n        return repeat\n```\n\n方法2：利用python的sort函数排序，然后计算相邻两个数据是否相等即可。\n\n```python\nclass Solution:\n    def findRepeatNumber(self, nums: List[int]) -> int:\n        nums.sort()\n        for i in range(len(nums)-1):\n            if nums[i]==nums[i+1]:\n                return nums[i]\n```\n","slug":"leetcode/leetcode-offer03","published":1,"updated":"2021-08-14T09:58:47.407Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxock0017ugx4fxldhh63","content":"<blockquote>\n<p>数组中重复的数字</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>找出数组中重复的数字。</p>\n<p>在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight accesslog\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs accesslog\">输入：<br><span class=\"hljs-string\">[2, 3, 1, 0, 2, 5, 3]</span><br>输出：<span class=\"hljs-number\">2</span> 或 <span class=\"hljs-number\">3</span> <br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>2 &lt;= n &lt;= 100000</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>创建一个flag数组进行标记；</p>\n<p>指定大小的数组创建</p>\n<p><strong>填坑：</strong> <font color=\"red\"> 不要使用后者,因为后者是浅拷贝，改变某一元素，该列均会改变</font></p>\n<ul>\n<li>\n<p>一维</p>\n<p>a = [0 for _ in range(n)]  《=》  a = [0] * n</p>\n</li>\n<li>\n<p>二维</p>\n<p>a = [[0 for col in range(m)] for row in range(n)]  <em># 创建一个n*m的二维矩阵a，每个初值都是0</em>   《=》  a = [[0] *m] *n</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">findRepeatNumber</span>(<span class=\"hljs-params\">self, nums: <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]</span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        flag = [<span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(nums))] <span class=\"hljs-comment\">#创建长度为nums的数组 也可以用[0]*n</span><br>        <span class=\"hljs-keyword\">for</span> x <span class=\"hljs-keyword\">in</span> nums:<br>            flag[x] += <span class=\"hljs-number\">1</span><br>            <span class=\"hljs-keyword\">if</span>(flag[x]&gt;<span class=\"hljs-number\">1</span>):<br>                <span class=\"hljs-keyword\">return</span> x<br></code></pre></td></tr></tbody></table></figure>\n<p><font color=\"purple\" size=\"4\">实际上无需构建新的数组进行标记，可以直接使用set的长度进行判断。或者使用sort，使用list的sort方法。判断相邻的元素是否相等。</font></p>\n<p>方法1：利用python set的无序不重复特性：利用Python中的set集合为无序不重复集合，通过判断temp_set的长度确定是否是重复数字。</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">findRepeatNumber</span>(<span class=\"hljs-params\">self, nums: <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]</span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        temp_set = <span class=\"hljs-built_in\">set</span>()<br>        repeat = -<span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(nums)):<br>            temp_set.add(nums[i])<br>            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">len</span>(temp_set) &lt; i + <span class=\"hljs-number\">1</span>:<br>                repeat = nums[i]<br>                <span class=\"hljs-keyword\">break</span><br>        <span class=\"hljs-keyword\">return</span> repeat<br></code></pre></td></tr></tbody></table></figure>\n<p>方法2：利用python的sort函数排序，然后计算相邻两个数据是否相等即可。</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">findRepeatNumber</span>(<span class=\"hljs-params\">self, nums: <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]</span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        nums.sort()<br>        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(nums)-<span class=\"hljs-number\">1</span>):<br>            <span class=\"hljs-keyword\">if</span> nums[i]==nums[i+<span class=\"hljs-number\">1</span>]:<br>                <span class=\"hljs-keyword\">return</span> nums[i]<br></code></pre></td></tr></tbody></table></figure>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>数组中重复的数字</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>找出数组中重复的数字。</p>\n<p>在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs accesslog\">输入：<br><span class=\"hljs-string\">[2, 3, 1, 0, 2, 5, 3]</span><br>输出：<span class=\"hljs-number\">2</span> 或 <span class=\"hljs-number\">3</span> <br></code></pre></td></tr></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>2 &lt;= n &lt;= 100000</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>创建一个flag数组进行标记；</p>\n<p>指定大小的数组创建</p>\n<p><strong>填坑：</strong> <font color=red> 不要使用后者,因为后者是浅拷贝，改变某一元素，该列均会改变</font></p>\n<ul>\n<li>\n<p>一维</p>\n<p>a = [0 for _ in range(n)]  《=》  a = [0] * n</p>\n</li>\n<li>\n<p>二维</p>\n<p>a = [[0 for col in range(m)] for row in range(n)]  <em># 创建一个n*m的二维矩阵a，每个初值都是0</em>   《=》  a = [[0] *m] *n</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">findRepeatNumber</span>(<span class=\"hljs-params\">self, nums: <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]</span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        flag = [<span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(nums))] <span class=\"hljs-comment\">#创建长度为nums的数组 也可以用[0]*n</span><br>        <span class=\"hljs-keyword\">for</span> x <span class=\"hljs-keyword\">in</span> nums:<br>            flag[x] += <span class=\"hljs-number\">1</span><br>            <span class=\"hljs-keyword\">if</span>(flag[x]&gt;<span class=\"hljs-number\">1</span>):<br>                <span class=\"hljs-keyword\">return</span> x<br></code></pre></td></tr></table></figure>\n<p><font color=purple size=4>实际上无需构建新的数组进行标记，可以直接使用set的长度进行判断。或者使用sort，使用list的sort方法。判断相邻的元素是否相等。</font></p>\n<p>方法1：利用python set的无序不重复特性：利用Python中的set集合为无序不重复集合，通过判断temp_set的长度确定是否是重复数字。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">findRepeatNumber</span>(<span class=\"hljs-params\">self, nums: <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]</span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        temp_set = <span class=\"hljs-built_in\">set</span>()<br>        repeat = -<span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(nums)):<br>            temp_set.add(nums[i])<br>            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">len</span>(temp_set) &lt; i + <span class=\"hljs-number\">1</span>:<br>                repeat = nums[i]<br>                <span class=\"hljs-keyword\">break</span><br>        <span class=\"hljs-keyword\">return</span> repeat<br></code></pre></td></tr></table></figure>\n<p>方法2：利用python的sort函数排序，然后计算相邻两个数据是否相等即可。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">findRepeatNumber</span>(<span class=\"hljs-params\">self, nums: <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]</span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        nums.sort()<br>        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(nums)-<span class=\"hljs-number\">1</span>):<br>            <span class=\"hljs-keyword\">if</span> nums[i]==nums[i+<span class=\"hljs-number\">1</span>]:<br>                <span class=\"hljs-keyword\">return</span> nums[i]<br></code></pre></td></tr></table></figure>\n"},{"title":"剑指offer04 二维数组中的查找","date":"2021-08-11T10:07:12.000Z","_content":"\n>二维数组中的查找\n\n## 题目\n\n在一个 n * m 的二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个高效的函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。\n\n### 示例 1：\n\n现有矩阵 matrix 如下：\n\n```\n[\n  [1,   4,  7, 11, 15],\n  [2,   5,  8, 12, 19],\n  [3,   6,  9, 16, 22],\n  [10, 13, 14, 17, 24],\n  [18, 21, 23, 26, 30]\n]\n```\n\n给定 target = `5`，返回 `true`。\n\n给定 target = `20`，返回 `false`。\n\n### 提示：\n\n- 0 <= n <= 1000\n- 0 <= m <= 1000\n\n## 题解\n\n当开始想要采用二分法的思想进行判断。但是发现二分只能考虑到左上和右下块的内容。右上和左下的内容无法判断其大小划分。所以会有视觉盲区无法二分缩小区域。\n\n<font color=purple>二维数组无法用二分法，因为其“二分”是分为4份，无法充分涵盖进行判断，会出现错误。</font>\n\n```python\nclass Solution:\n    def findNumberIn2DArray(self, matrix: List[List[int]], target: int) -> bool:\n        if not(matrix): return False\n        si,sj = 0,0\n        ei,ej = len(matrix)-1,len(matrix[0])-1\n        def isExit(matrix: List[List[int]], si, sj, ei, ej, target: int):\n            if not (si<=ei and sj<=ej): #先判断范围\n                return False\n            if(target<matrix[si][sj] or target>matrix[ei][ej]): return False\n            if(target==matrix[si][sj] or target==matrix[ei][ej]): return True\n            mi,mj = int((si+ei)/2),int((sj+ej)/2)\n            if(target==matrix[mi][mj]):\n                return True\n            elif (target>matrix[mi][mj]):\n                return isExit(matrix,mi+1,mj,ei,ej,target) or isExit(matrix,mi,mj+1,ei,ej,target)\n            else:\n                return isExit(matrix,si,sj,mi-1,mj,target) or isExit(matrix,si,sj,mi,mj-1,target)\n        return isExit(matrix,si,sj,ei,ej,target)\n```\n使用线性查找的方法，可以使得复杂度从暴力的O(n*m)到O(n+m)\n思想是选取左下角或者右上角，周围不均衡的点开始进行判断，这样才知道应该向哪个方向缩小区域.\n\n<font color=hotpink>例如此处是选取左下角作为初始，向上此列逐渐变小，向右此行逐渐变大。因此target如果比此点小，就向上移动查找，如果比此点大，就向右查找。</font>\n\n```python\nclass Solution:\n    def findNumberIn2DArray(self, matrix: List[List[int]], target: int) -> bool:\n        if not(matrix): return False\n        i,j = len(matrix)-1,0\n        while(i>=0 and j<=len(matrix[0])-1):\n            if(target==matrix[i][j]):return True\n            elif(target>matrix[i][j]):j += 1\n            else:i -= 1\n        return False\n```\n\n","source":"_posts/leetcode/leetcode-offer04.md","raw":"---\ntitle: 剑指offer04 二维数组中的查找\ntags: [剑指,数组查找,idea]\ncategories: [剑指,数组]\ndate: 2021-08-11 18:07:12\n---\n\n>二维数组中的查找\n\n## 题目\n\n在一个 n * m 的二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个高效的函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。\n\n### 示例 1：\n\n现有矩阵 matrix 如下：\n\n```\n[\n  [1,   4,  7, 11, 15],\n  [2,   5,  8, 12, 19],\n  [3,   6,  9, 16, 22],\n  [10, 13, 14, 17, 24],\n  [18, 21, 23, 26, 30]\n]\n```\n\n给定 target = `5`，返回 `true`。\n\n给定 target = `20`，返回 `false`。\n\n### 提示：\n\n- 0 <= n <= 1000\n- 0 <= m <= 1000\n\n## 题解\n\n当开始想要采用二分法的思想进行判断。但是发现二分只能考虑到左上和右下块的内容。右上和左下的内容无法判断其大小划分。所以会有视觉盲区无法二分缩小区域。\n\n<font color=purple>二维数组无法用二分法，因为其“二分”是分为4份，无法充分涵盖进行判断，会出现错误。</font>\n\n```python\nclass Solution:\n    def findNumberIn2DArray(self, matrix: List[List[int]], target: int) -> bool:\n        if not(matrix): return False\n        si,sj = 0,0\n        ei,ej = len(matrix)-1,len(matrix[0])-1\n        def isExit(matrix: List[List[int]], si, sj, ei, ej, target: int):\n            if not (si<=ei and sj<=ej): #先判断范围\n                return False\n            if(target<matrix[si][sj] or target>matrix[ei][ej]): return False\n            if(target==matrix[si][sj] or target==matrix[ei][ej]): return True\n            mi,mj = int((si+ei)/2),int((sj+ej)/2)\n            if(target==matrix[mi][mj]):\n                return True\n            elif (target>matrix[mi][mj]):\n                return isExit(matrix,mi+1,mj,ei,ej,target) or isExit(matrix,mi,mj+1,ei,ej,target)\n            else:\n                return isExit(matrix,si,sj,mi-1,mj,target) or isExit(matrix,si,sj,mi,mj-1,target)\n        return isExit(matrix,si,sj,ei,ej,target)\n```\n使用线性查找的方法，可以使得复杂度从暴力的O(n*m)到O(n+m)\n思想是选取左下角或者右上角，周围不均衡的点开始进行判断，这样才知道应该向哪个方向缩小区域.\n\n<font color=hotpink>例如此处是选取左下角作为初始，向上此列逐渐变小，向右此行逐渐变大。因此target如果比此点小，就向上移动查找，如果比此点大，就向右查找。</font>\n\n```python\nclass Solution:\n    def findNumberIn2DArray(self, matrix: List[List[int]], target: int) -> bool:\n        if not(matrix): return False\n        i,j = len(matrix)-1,0\n        while(i>=0 and j<=len(matrix[0])-1):\n            if(target==matrix[i][j]):return True\n            elif(target>matrix[i][j]):j += 1\n            else:i -= 1\n        return False\n```\n\n","slug":"leetcode/leetcode-offer04","published":1,"updated":"2021-08-14T10:08:10.539Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxocl001augx48bw1eowt","content":"<blockquote>\n<p>二维数组中的查找</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>在一个 n * m 的二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个高效的函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<p>现有矩阵 matrix 如下：</p>\n<figure class=\"highlight json\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\">[<br>  [<span class=\"hljs-number\">1</span>,   <span class=\"hljs-number\">4</span>,  <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">15</span>],<br>  [<span class=\"hljs-number\">2</span>,   <span class=\"hljs-number\">5</span>,  <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">19</span>],<br>  [<span class=\"hljs-number\">3</span>,   <span class=\"hljs-number\">6</span>,  <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">16</span>, <span class=\"hljs-number\">22</span>],<br>  [<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">14</span>, <span class=\"hljs-number\">17</span>, <span class=\"hljs-number\">24</span>],<br>  [<span class=\"hljs-number\">18</span>, <span class=\"hljs-number\">21</span>, <span class=\"hljs-number\">23</span>, <span class=\"hljs-number\">26</span>, <span class=\"hljs-number\">30</span>]<br>]<br></code></pre></td></tr></tbody></table></figure>\n<p>给定 target = <code>5</code>，返回 <code>true</code>。</p>\n<p>给定 target = <code>20</code>，返回 <code>false</code>。</p>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>0 &lt;= n &lt;= 1000</li>\n<li>0 &lt;= m &lt;= 1000</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>当开始想要采用二分法的思想进行判断。但是发现二分只能考虑到左上和右下块的内容。右上和左下的内容无法判断其大小划分。所以会有视觉盲区无法二分缩小区域。</p>\n<p><font color=\"purple\">二维数组无法用二分法，因为其“二分”是分为4份，无法充分涵盖进行判断，会出现错误。</font></p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">findNumberIn2DArray</span>(<span class=\"hljs-params\">self, matrix: <span class=\"hljs-type\">List</span>[<span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]], target: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">bool</span>:</span><br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span>(matrix): <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br>        si,sj = <span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span><br>        ei,ej = <span class=\"hljs-built_in\">len</span>(matrix)-<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">len</span>(matrix[<span class=\"hljs-number\">0</span>])-<span class=\"hljs-number\">1</span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">isExit</span>(<span class=\"hljs-params\">matrix: <span class=\"hljs-type\">List</span>[<span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]], si, sj, ei, ej, target: <span class=\"hljs-built_in\">int</span></span>):</span><br>            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> (si&lt;=ei <span class=\"hljs-keyword\">and</span> sj&lt;=ej): <span class=\"hljs-comment\">#先判断范围</span><br>                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br>            <span class=\"hljs-keyword\">if</span>(target&lt;matrix[si][sj] <span class=\"hljs-keyword\">or</span> target&gt;matrix[ei][ej]): <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br>            <span class=\"hljs-keyword\">if</span>(target==matrix[si][sj] <span class=\"hljs-keyword\">or</span> target==matrix[ei][ej]): <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span><br>            mi,mj = <span class=\"hljs-built_in\">int</span>((si+ei)/<span class=\"hljs-number\">2</span>),<span class=\"hljs-built_in\">int</span>((sj+ej)/<span class=\"hljs-number\">2</span>)<br>            <span class=\"hljs-keyword\">if</span>(target==matrix[mi][mj]):<br>                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span><br>            <span class=\"hljs-keyword\">elif</span> (target&gt;matrix[mi][mj]):<br>                <span class=\"hljs-keyword\">return</span> isExit(matrix,mi+<span class=\"hljs-number\">1</span>,mj,ei,ej,target) <span class=\"hljs-keyword\">or</span> isExit(matrix,mi,mj+<span class=\"hljs-number\">1</span>,ei,ej,target)<br>            <span class=\"hljs-keyword\">else</span>:<br>                <span class=\"hljs-keyword\">return</span> isExit(matrix,si,sj,mi-<span class=\"hljs-number\">1</span>,mj,target) <span class=\"hljs-keyword\">or</span> isExit(matrix,si,sj,mi,mj-<span class=\"hljs-number\">1</span>,target)<br>        <span class=\"hljs-keyword\">return</span> isExit(matrix,si,sj,ei,ej,target)<br></code></pre></td></tr></tbody></table></figure>\n<p>使用线性查找的方法，可以使得复杂度从暴力的O(n*m)到O(n+m)<br>\n思想是选取左下角或者右上角，周围不均衡的点开始进行判断，这样才知道应该向哪个方向缩小区域.</p>\n<p><font color=\"hotpink\">例如此处是选取左下角作为初始，向上此列逐渐变小，向右此行逐渐变大。因此target如果比此点小，就向上移动查找，如果比此点大，就向右查找。</font></p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">findNumberIn2DArray</span>(<span class=\"hljs-params\">self, matrix: <span class=\"hljs-type\">List</span>[<span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]], target: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">bool</span>:</span><br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span>(matrix): <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br>        i,j = <span class=\"hljs-built_in\">len</span>(matrix)-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span><br>        <span class=\"hljs-keyword\">while</span>(i&gt;=<span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">and</span> j&lt;=<span class=\"hljs-built_in\">len</span>(matrix[<span class=\"hljs-number\">0</span>])-<span class=\"hljs-number\">1</span>):<br>            <span class=\"hljs-keyword\">if</span>(target==matrix[i][j]):<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span><br>            <span class=\"hljs-keyword\">elif</span>(target&gt;matrix[i][j]):j += <span class=\"hljs-number\">1</span><br>            <span class=\"hljs-keyword\">else</span>:i -= <span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br></code></pre></td></tr></tbody></table></figure>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>二维数组中的查找</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>在一个 n * m 的二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个高效的函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<p>现有矩阵 matrix 如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\">[<br>  [<span class=\"hljs-number\">1</span>,   <span class=\"hljs-number\">4</span>,  <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">15</span>],<br>  [<span class=\"hljs-number\">2</span>,   <span class=\"hljs-number\">5</span>,  <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">19</span>],<br>  [<span class=\"hljs-number\">3</span>,   <span class=\"hljs-number\">6</span>,  <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">16</span>, <span class=\"hljs-number\">22</span>],<br>  [<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">13</span>, <span class=\"hljs-number\">14</span>, <span class=\"hljs-number\">17</span>, <span class=\"hljs-number\">24</span>],<br>  [<span class=\"hljs-number\">18</span>, <span class=\"hljs-number\">21</span>, <span class=\"hljs-number\">23</span>, <span class=\"hljs-number\">26</span>, <span class=\"hljs-number\">30</span>]<br>]<br></code></pre></td></tr></table></figure>\n<p>给定 target = <code>5</code>，返回 <code>true</code>。</p>\n<p>给定 target = <code>20</code>，返回 <code>false</code>。</p>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>0 &lt;= n &lt;= 1000</li>\n<li>0 &lt;= m &lt;= 1000</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>当开始想要采用二分法的思想进行判断。但是发现二分只能考虑到左上和右下块的内容。右上和左下的内容无法判断其大小划分。所以会有视觉盲区无法二分缩小区域。</p>\n<p><font color=purple>二维数组无法用二分法，因为其“二分”是分为4份，无法充分涵盖进行判断，会出现错误。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">findNumberIn2DArray</span>(<span class=\"hljs-params\">self, matrix: <span class=\"hljs-type\">List</span>[<span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]], target: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">bool</span>:</span><br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span>(matrix): <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br>        si,sj = <span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span><br>        ei,ej = <span class=\"hljs-built_in\">len</span>(matrix)-<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">len</span>(matrix[<span class=\"hljs-number\">0</span>])-<span class=\"hljs-number\">1</span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">isExit</span>(<span class=\"hljs-params\">matrix: <span class=\"hljs-type\">List</span>[<span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]], si, sj, ei, ej, target: <span class=\"hljs-built_in\">int</span></span>):</span><br>            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> (si&lt;=ei <span class=\"hljs-keyword\">and</span> sj&lt;=ej): <span class=\"hljs-comment\">#先判断范围</span><br>                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br>            <span class=\"hljs-keyword\">if</span>(target&lt;matrix[si][sj] <span class=\"hljs-keyword\">or</span> target&gt;matrix[ei][ej]): <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br>            <span class=\"hljs-keyword\">if</span>(target==matrix[si][sj] <span class=\"hljs-keyword\">or</span> target==matrix[ei][ej]): <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span><br>            mi,mj = <span class=\"hljs-built_in\">int</span>((si+ei)/<span class=\"hljs-number\">2</span>),<span class=\"hljs-built_in\">int</span>((sj+ej)/<span class=\"hljs-number\">2</span>)<br>            <span class=\"hljs-keyword\">if</span>(target==matrix[mi][mj]):<br>                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span><br>            <span class=\"hljs-keyword\">elif</span> (target&gt;matrix[mi][mj]):<br>                <span class=\"hljs-keyword\">return</span> isExit(matrix,mi+<span class=\"hljs-number\">1</span>,mj,ei,ej,target) <span class=\"hljs-keyword\">or</span> isExit(matrix,mi,mj+<span class=\"hljs-number\">1</span>,ei,ej,target)<br>            <span class=\"hljs-keyword\">else</span>:<br>                <span class=\"hljs-keyword\">return</span> isExit(matrix,si,sj,mi-<span class=\"hljs-number\">1</span>,mj,target) <span class=\"hljs-keyword\">or</span> isExit(matrix,si,sj,mi,mj-<span class=\"hljs-number\">1</span>,target)<br>        <span class=\"hljs-keyword\">return</span> isExit(matrix,si,sj,ei,ej,target)<br></code></pre></td></tr></table></figure>\n<p>使用线性查找的方法，可以使得复杂度从暴力的O(n*m)到O(n+m)<br>\n思想是选取左下角或者右上角，周围不均衡的点开始进行判断，这样才知道应该向哪个方向缩小区域.</p>\n<p><font color=hotpink>例如此处是选取左下角作为初始，向上此列逐渐变小，向右此行逐渐变大。因此target如果比此点小，就向上移动查找，如果比此点大，就向右查找。</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">findNumberIn2DArray</span>(<span class=\"hljs-params\">self, matrix: <span class=\"hljs-type\">List</span>[<span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]], target: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">bool</span>:</span><br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span>(matrix): <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br>        i,j = <span class=\"hljs-built_in\">len</span>(matrix)-<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span><br>        <span class=\"hljs-keyword\">while</span>(i&gt;=<span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">and</span> j&lt;=<span class=\"hljs-built_in\">len</span>(matrix[<span class=\"hljs-number\">0</span>])-<span class=\"hljs-number\">1</span>):<br>            <span class=\"hljs-keyword\">if</span>(target==matrix[i][j]):<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span><br>            <span class=\"hljs-keyword\">elif</span>(target&gt;matrix[i][j]):j += <span class=\"hljs-number\">1</span><br>            <span class=\"hljs-keyword\">else</span>:i -= <span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br></code></pre></td></tr></table></figure>\n"},{"title":"剑指offer05 替换空格","date":"2021-08-11T10:36:13.000Z","_content":"\n>替换空格\n\n## 题目\n\n请实现一个函数，把字符串 `s` 中的每个空格替换成\"%20\"。\n\n### 示例 1：\n\n```\n输入：s = \"We are happy.\"\n输出：\"We%20are%20happy.\"\n```\n\n### 提示：\n\n- 0 <= s 的长度 <= 10000\n\n## 题解\n\n直接替换即可。相当于使用replace方法\n\n```python\nclass Solution:\n    def replaceSpace(self, s: str) -> str:\n       #相当于现成函数 return s.replace(\" \",\"%20\")\n        result = \"\"\n        for x in s:\n            if x==' ':\n                x = \"%20\"\n            result += x\n        return result\n```\n\n","source":"_posts/leetcode/leetcode-offer05.md","raw":"---\ntitle: 剑指offer05 替换空格\ntags: [剑指,字符串]\ncategories: [剑指,字符串]\ndate: 2021-08-11 18:36:13\n---\n\n>替换空格\n\n## 题目\n\n请实现一个函数，把字符串 `s` 中的每个空格替换成\"%20\"。\n\n### 示例 1：\n\n```\n输入：s = \"We are happy.\"\n输出：\"We%20are%20happy.\"\n```\n\n### 提示：\n\n- 0 <= s 的长度 <= 10000\n\n## 题解\n\n直接替换即可。相当于使用replace方法\n\n```python\nclass Solution:\n    def replaceSpace(self, s: str) -> str:\n       #相当于现成函数 return s.replace(\" \",\"%20\")\n        result = \"\"\n        for x in s:\n            if x==' ':\n                x = \"%20\"\n            result += x\n        return result\n```\n\n","slug":"leetcode/leetcode-offer05","published":1,"updated":"2021-08-14T10:08:10.539Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxocm001dugx4aor426jq","content":"<blockquote>\n<p>替换空格</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>请实现一个函数，把字符串 <code>s</code> 中的每个空格替换成\"%20\"。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight perl\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs perl\">输入：s = <span class=\"hljs-string\">\"We are happy.\"</span><br>输出：<span class=\"hljs-string\">\"We%20are%20happy.\"</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>0 &lt;= s 的长度 &lt;= 10000</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>直接替换即可。相当于使用replace方法</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">replaceSpace</span>(<span class=\"hljs-params\">self, s: <span class=\"hljs-built_in\">str</span></span>) -&gt; <span class=\"hljs-built_in\">str</span>:</span><br>       <span class=\"hljs-comment\">#相当于现成函数 return s.replace(\" \",\"%20\")</span><br>        result = <span class=\"hljs-string\">\"\"</span><br>        <span class=\"hljs-keyword\">for</span> x <span class=\"hljs-keyword\">in</span> s:<br>            <span class=\"hljs-keyword\">if</span> x==<span class=\"hljs-string\">' '</span>:<br>                x = <span class=\"hljs-string\">\"%20\"</span><br>            result += x<br>        <span class=\"hljs-keyword\">return</span> result<br></code></pre></td></tr></tbody></table></figure>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>替换空格</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>请实现一个函数，把字符串 <code>s</code> 中的每个空格替换成&quot;%20&quot;。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs perl\">输入：s = <span class=\"hljs-string\">&quot;We are happy.&quot;</span><br>输出：<span class=\"hljs-string\">&quot;We%20are%20happy.&quot;</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>0 &lt;= s 的长度 &lt;= 10000</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>直接替换即可。相当于使用replace方法</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">replaceSpace</span>(<span class=\"hljs-params\">self, s: <span class=\"hljs-built_in\">str</span></span>) -&gt; <span class=\"hljs-built_in\">str</span>:</span><br>       <span class=\"hljs-comment\">#相当于现成函数 return s.replace(&quot; &quot;,&quot;%20&quot;)</span><br>        result = <span class=\"hljs-string\">&quot;&quot;</span><br>        <span class=\"hljs-keyword\">for</span> x <span class=\"hljs-keyword\">in</span> s:<br>            <span class=\"hljs-keyword\">if</span> x==<span class=\"hljs-string\">&#x27; &#x27;</span>:<br>                x = <span class=\"hljs-string\">&quot;%20&quot;</span><br>            result += x<br>        <span class=\"hljs-keyword\">return</span> result<br></code></pre></td></tr></table></figure>\n"},{"title":"剑指offer06 从尾到头打印链表","date":"2021-08-13T17:28:42.000Z","_content":"\n>从尾到头打印链表\n\n## 题目\n\n输入一个链表的头节点，从尾到头反过来返回每个节点的值（用数组返回）。\n\n### 示例 1：\n\n```\n输入：head = [1,3,2]\n输出：[2,3,1]\n```\n\n### 提示：\n\n- 0 <= 链表长度 <= 10000\n\n## 题解\n\n遍历链表，直接插入到头位置。就可以直接输出了。或者采用递归，超级简洁，值得借鉴。注意if的条件和对应结果。（递归就从中间普适的节点开始考虑 然后补充边界细节）\n\n<font color=orange>return self.reversePrint( head.next ) + [ head.val ] if head else []</font>\n\n```python\n# Definition for singly-linked list.\n# class ListNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution(object):\n    def reversePrint(self, head):\n        \"\"\"\n        :type head: ListNode\n        :rtype: List[int]\n        \"\"\"\n        p=head\n        result = []\n        while(p):\n            result = [p.val]+result #直接添加到前面\n            p = p.next\n        return result\n        #使用递归一条语句超级简洁 递归后一个元素+当前元素 如果当前为空则+【】 也是终止未知\n        #return self.reversePrint(head.next) + [head.val] if head else []\n```\n\n","source":"_posts/leetcode/leetcode-offer06.md","raw":"---\ntitle: 剑指offer06 从尾到头打印链表\ntags: [剑指,链表,idea]\ncategories: [剑指,链表]\ndate: 2021-08-14 01:28:42\n---\n\n>从尾到头打印链表\n\n## 题目\n\n输入一个链表的头节点，从尾到头反过来返回每个节点的值（用数组返回）。\n\n### 示例 1：\n\n```\n输入：head = [1,3,2]\n输出：[2,3,1]\n```\n\n### 提示：\n\n- 0 <= 链表长度 <= 10000\n\n## 题解\n\n遍历链表，直接插入到头位置。就可以直接输出了。或者采用递归，超级简洁，值得借鉴。注意if的条件和对应结果。（递归就从中间普适的节点开始考虑 然后补充边界细节）\n\n<font color=orange>return self.reversePrint( head.next ) + [ head.val ] if head else []</font>\n\n```python\n# Definition for singly-linked list.\n# class ListNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution(object):\n    def reversePrint(self, head):\n        \"\"\"\n        :type head: ListNode\n        :rtype: List[int]\n        \"\"\"\n        p=head\n        result = []\n        while(p):\n            result = [p.val]+result #直接添加到前面\n            p = p.next\n        return result\n        #使用递归一条语句超级简洁 递归后一个元素+当前元素 如果当前为空则+【】 也是终止未知\n        #return self.reversePrint(head.next) + [head.val] if head else []\n```\n\n","slug":"leetcode/leetcode-offer06","published":1,"updated":"2021-08-14T10:08:10.540Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxocn001fugx4eaibahki","content":"<blockquote>\n<p>从尾到头打印链表</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>输入一个链表的头节点，从尾到头反过来返回每个节点的值（用数组返回）。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight inform7\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs inform7\">输入：head = <span class=\"hljs-comment\">[1,3,2]</span><br>输出：<span class=\"hljs-comment\">[2,3,1]</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>0 &lt;= 链表长度 &lt;= 10000</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>遍历链表，直接插入到头位置。就可以直接输出了。或者采用递归，超级简洁，值得借鉴。注意if的条件和对应结果。（递归就从中间普适的节点开始考虑 然后补充边界细节）</p>\n<p><font color=\"orange\">return self.reversePrint( head.next ) + [ head.val ] if head else []</font></p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\"># Definition for singly-linked list.</span><br><span class=\"hljs-comment\"># class ListNode(object):</span><br><span class=\"hljs-comment\">#     def __init__(self, x):</span><br><span class=\"hljs-comment\">#         self.val = x</span><br><span class=\"hljs-comment\">#         self.next = None</span><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">object</span></span>):</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">reversePrint</span>(<span class=\"hljs-params\">self, head</span>):</span><br>        <span class=\"hljs-string\">\"\"\"</span><br><span class=\"hljs-string\">        :type head: ListNode</span><br><span class=\"hljs-string\">        :rtype: List[int]</span><br><span class=\"hljs-string\">        \"\"\"</span><br>        p=head<br>        result = []<br>        <span class=\"hljs-keyword\">while</span>(p):<br>            result = [p.val]+result <span class=\"hljs-comment\">#直接添加到前面</span><br>            p = p.<span class=\"hljs-built_in\">next</span><br>        <span class=\"hljs-keyword\">return</span> result<br>        <span class=\"hljs-comment\">#使用递归一条语句超级简洁 递归后一个元素+当前元素 如果当前为空则+【】 也是终止未知</span><br>        <span class=\"hljs-comment\">#return self.reversePrint(head.next) + [head.val] if head else []</span><br></code></pre></td></tr></tbody></table></figure>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>从尾到头打印链表</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>输入一个链表的头节点，从尾到头反过来返回每个节点的值（用数组返回）。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight inform7\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs inform7\">输入：head = <span class=\"hljs-comment\">[1,3,2]</span><br>输出：<span class=\"hljs-comment\">[2,3,1]</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>0 &lt;= 链表长度 &lt;= 10000</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>遍历链表，直接插入到头位置。就可以直接输出了。或者采用递归，超级简洁，值得借鉴。注意if的条件和对应结果。（递归就从中间普适的节点开始考虑 然后补充边界细节）</p>\n<p><font color=orange>return self.reversePrint( head.next ) + [ head.val ] if head else []</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\"># Definition for singly-linked list.</span><br><span class=\"hljs-comment\"># class ListNode(object):</span><br><span class=\"hljs-comment\">#     def __init__(self, x):</span><br><span class=\"hljs-comment\">#         self.val = x</span><br><span class=\"hljs-comment\">#         self.next = None</span><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">object</span></span>):</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">reversePrint</span>(<span class=\"hljs-params\">self, head</span>):</span><br>        <span class=\"hljs-string\">&quot;&quot;&quot;</span><br><span class=\"hljs-string\">        :type head: ListNode</span><br><span class=\"hljs-string\">        :rtype: List[int]</span><br><span class=\"hljs-string\">        &quot;&quot;&quot;</span><br>        p=head<br>        result = []<br>        <span class=\"hljs-keyword\">while</span>(p):<br>            result = [p.val]+result <span class=\"hljs-comment\">#直接添加到前面</span><br>            p = p.<span class=\"hljs-built_in\">next</span><br>        <span class=\"hljs-keyword\">return</span> result<br>        <span class=\"hljs-comment\">#使用递归一条语句超级简洁 递归后一个元素+当前元素 如果当前为空则+【】 也是终止未知</span><br>        <span class=\"hljs-comment\">#return self.reversePrint(head.next) + [head.val] if head else []</span><br></code></pre></td></tr></table></figure>\n"},{"title":"剑指offer07 重建二叉树","date":"2021-08-17T12:59:06.000Z","_content":"\n>重建二叉树\n\n## 题目\n输入某二叉树的前序遍历和中序遍历的结果，请构建该二叉树并返回其根节点。\n\n假设输入的前序遍历和中序遍历的结果中都不含重复的数字。\n\n### 示例 1：\n\n![img](https://picture.mulindya.com/leetcode-offer07-tree.jpg)\n\n```\nInput: preorder = [3,9,20,15,7], inorder = [9,3,15,20,7]\nOutput: [3,9,20,null,null,15,7]\n```\n\n### 示例 2：\n\n```\nInput: preorder = [-1], inorder = [-1]\nOutput: [-1]\n```\n\n### 提示：\n\n- 0 <= 节点个数 <= 5000\n\n## 题解\n\n使用闭包函数，构建对应区域的树，返回根节点。关键步骤是查找到rootindex在中序遍历中的位置，然后分别构建对应的子树。在查找时可以先建立哈希表，使用字典和枚举结合构建flag `flag = {ele:i for i,ele in enumerate(inorder)}`。可以减少执行时间的开销。\n\n```python\n# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def buildTree(self, preorder: List[int], inorder: List[int]) -> TreeNode:\n        def func(rootindex,ins,ine):\n            if(ins>ine): return None\n            root = TreeNode(preorder[rootindex])\n            # t = ins\n            # while(inorder[t]!=preorder[rootindex]):t+=1\n            t = flag[preorder[rootindex]]\n            root.left = func(rootindex+1,ins,t-1)\n            root.right = func(rootindex+t-ins+1,t+1,ine)\n            return root\n        # 构建哈希表 在查找时更方便\n        flag = {ele:i for i,ele in enumerate(inorder)} #使用字典构建\n        root = func(0,0,len(inorder)-1)\n        return root\n```\n\n","source":"_posts/leetcode/leetcode-offer07.md","raw":"---\ntitle: 剑指offer07 重建二叉树\ntags: [剑指,树]\ncategories: [剑指,树]\ndate: 2021-08-17 20:59:06\n---\n\n>重建二叉树\n\n## 题目\n输入某二叉树的前序遍历和中序遍历的结果，请构建该二叉树并返回其根节点。\n\n假设输入的前序遍历和中序遍历的结果中都不含重复的数字。\n\n### 示例 1：\n\n![img](https://picture.mulindya.com/leetcode-offer07-tree.jpg)\n\n```\nInput: preorder = [3,9,20,15,7], inorder = [9,3,15,20,7]\nOutput: [3,9,20,null,null,15,7]\n```\n\n### 示例 2：\n\n```\nInput: preorder = [-1], inorder = [-1]\nOutput: [-1]\n```\n\n### 提示：\n\n- 0 <= 节点个数 <= 5000\n\n## 题解\n\n使用闭包函数，构建对应区域的树，返回根节点。关键步骤是查找到rootindex在中序遍历中的位置，然后分别构建对应的子树。在查找时可以先建立哈希表，使用字典和枚举结合构建flag `flag = {ele:i for i,ele in enumerate(inorder)}`。可以减少执行时间的开销。\n\n```python\n# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def buildTree(self, preorder: List[int], inorder: List[int]) -> TreeNode:\n        def func(rootindex,ins,ine):\n            if(ins>ine): return None\n            root = TreeNode(preorder[rootindex])\n            # t = ins\n            # while(inorder[t]!=preorder[rootindex]):t+=1\n            t = flag[preorder[rootindex]]\n            root.left = func(rootindex+1,ins,t-1)\n            root.right = func(rootindex+t-ins+1,t+1,ine)\n            return root\n        # 构建哈希表 在查找时更方便\n        flag = {ele:i for i,ele in enumerate(inorder)} #使用字典构建\n        root = func(0,0,len(inorder)-1)\n        return root\n```\n\n","slug":"leetcode/leetcode-offer07","published":1,"updated":"2021-08-19T08:04:36.471Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxoco001iugx4bppja3fn","content":"<blockquote>\n<p>重建二叉树</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>输入某二叉树的前序遍历和中序遍历的结果，请构建该二叉树并返回其根节点。</p>\n<p>假设输入的前序遍历和中序遍历的结果中都不含重复的数字。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<p><img src=\"https://picture.mulindya.com/leetcode-offer07-tree.jpg\" alt=\"img\"></p>\n<figure class=\"highlight nix\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">Input: <span class=\"hljs-attr\">preorder</span> = [<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">9</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">15</span>,<span class=\"hljs-number\">7</span>], <span class=\"hljs-attr\">inorder</span> = [<span class=\"hljs-number\">9</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">15</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">7</span>]<br>Output: [<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">9</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-number\">15</span>,<span class=\"hljs-number\">7</span>]<br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight inform7\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs inform7\">Input: preorder = <span class=\"hljs-comment\">[-1]</span>, inorder = <span class=\"hljs-comment\">[-1]</span><br>Output: <span class=\"hljs-comment\">[-1]</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>0 &lt;= 节点个数 &lt;= 5000</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>使用闭包函数，构建对应区域的树，返回根节点。关键步骤是查找到rootindex在中序遍历中的位置，然后分别构建对应的子树。在查找时可以先建立哈希表，使用字典和枚举结合构建flag <code>flag = {ele:i for i,ele in enumerate(inorder)}</code>。可以减少执行时间的开销。</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\"># Definition for a binary tree node.</span><br><span class=\"hljs-comment\"># class TreeNode:</span><br><span class=\"hljs-comment\">#     def __init__(self, x):</span><br><span class=\"hljs-comment\">#         self.val = x</span><br><span class=\"hljs-comment\">#         self.left = None</span><br><span class=\"hljs-comment\">#         self.right = None</span><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">buildTree</span>(<span class=\"hljs-params\">self, preorder: <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>], inorder: <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]</span>) -&gt; TreeNode:</span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">func</span>(<span class=\"hljs-params\">rootindex,ins,ine</span>):</span><br>            <span class=\"hljs-keyword\">if</span>(ins&gt;ine): <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">None</span><br>            root = TreeNode(preorder[rootindex])<br>            <span class=\"hljs-comment\"># t = ins</span><br>            <span class=\"hljs-comment\"># while(inorder[t]!=preorder[rootindex]):t+=1</span><br>            t = flag[preorder[rootindex]]<br>            root.left = func(rootindex+<span class=\"hljs-number\">1</span>,ins,t-<span class=\"hljs-number\">1</span>)<br>            root.right = func(rootindex+t-ins+<span class=\"hljs-number\">1</span>,t+<span class=\"hljs-number\">1</span>,ine)<br>            <span class=\"hljs-keyword\">return</span> root<br>        <span class=\"hljs-comment\"># 构建哈希表 在查找时更方便</span><br>        flag = {ele:i <span class=\"hljs-keyword\">for</span> i,ele <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">enumerate</span>(inorder)} <span class=\"hljs-comment\">#使用字典构建</span><br>        root = func(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-built_in\">len</span>(inorder)-<span class=\"hljs-number\">1</span>)<br>        <span class=\"hljs-keyword\">return</span> root<br></code></pre></td></tr></tbody></table></figure>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>重建二叉树</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>输入某二叉树的前序遍历和中序遍历的结果，请构建该二叉树并返回其根节点。</p>\n<p>假设输入的前序遍历和中序遍历的结果中都不含重复的数字。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<p><img src=\"https://picture.mulindya.com/leetcode-offer07-tree.jpg\" alt=\"img\"></p>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">Input: <span class=\"hljs-attr\">preorder</span> = [<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">9</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">15</span>,<span class=\"hljs-number\">7</span>], <span class=\"hljs-attr\">inorder</span> = [<span class=\"hljs-number\">9</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">15</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">7</span>]<br>Output: [<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">9</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-number\">15</span>,<span class=\"hljs-number\">7</span>]<br></code></pre></td></tr></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight inform7\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs inform7\">Input: preorder = <span class=\"hljs-comment\">[-1]</span>, inorder = <span class=\"hljs-comment\">[-1]</span><br>Output: <span class=\"hljs-comment\">[-1]</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>0 &lt;= 节点个数 &lt;= 5000</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>使用闭包函数，构建对应区域的树，返回根节点。关键步骤是查找到rootindex在中序遍历中的位置，然后分别构建对应的子树。在查找时可以先建立哈希表，使用字典和枚举结合构建flag <code>flag = &#123;ele:i for i,ele in enumerate(inorder)&#125;</code>。可以减少执行时间的开销。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\"># Definition for a binary tree node.</span><br><span class=\"hljs-comment\"># class TreeNode:</span><br><span class=\"hljs-comment\">#     def __init__(self, x):</span><br><span class=\"hljs-comment\">#         self.val = x</span><br><span class=\"hljs-comment\">#         self.left = None</span><br><span class=\"hljs-comment\">#         self.right = None</span><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">buildTree</span>(<span class=\"hljs-params\">self, preorder: <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>], inorder: <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]</span>) -&gt; TreeNode:</span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">func</span>(<span class=\"hljs-params\">rootindex,ins,ine</span>):</span><br>            <span class=\"hljs-keyword\">if</span>(ins&gt;ine): <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">None</span><br>            root = TreeNode(preorder[rootindex])<br>            <span class=\"hljs-comment\"># t = ins</span><br>            <span class=\"hljs-comment\"># while(inorder[t]!=preorder[rootindex]):t+=1</span><br>            t = flag[preorder[rootindex]]<br>            root.left = func(rootindex+<span class=\"hljs-number\">1</span>,ins,t-<span class=\"hljs-number\">1</span>)<br>            root.right = func(rootindex+t-ins+<span class=\"hljs-number\">1</span>,t+<span class=\"hljs-number\">1</span>,ine)<br>            <span class=\"hljs-keyword\">return</span> root<br>        <span class=\"hljs-comment\"># 构建哈希表 在查找时更方便</span><br>        flag = &#123;ele:i <span class=\"hljs-keyword\">for</span> i,ele <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">enumerate</span>(inorder)&#125; <span class=\"hljs-comment\">#使用字典构建</span><br>        root = func(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-built_in\">len</span>(inorder)-<span class=\"hljs-number\">1</span>)<br>        <span class=\"hljs-keyword\">return</span> root<br></code></pre></td></tr></table></figure>\n"},{"title":"剑指offer09 用两个栈实现队列","date":"2021-08-10T02:46:28.000Z","_content":"\n> 用两个栈实现队列\n\n## 题目\n\n用两个栈实现一个队列。队列的声明如下，请实现它的两个函数 appendTail 和 deleteHead ，分别完成在队列尾部插入整数和在队列头部删除整数的功能。(若队列中没有元素，deleteHead 操作返回 -1 )\n\n### 示例 1：\n\n```\n输入：\n[\"CQueue\",\"appendTail\",\"deleteHead\",\"deleteHead\"]\n[[],[3],[],[]]\n输出：[null,null,3,-1]\n```\n\n### 示例 2：\n\n```\n输入：\n[\"CQueue\",\"deleteHead\",\"appendTail\",\"appendTail\",\"deleteHead\",\"deleteHead\"]\n[[],[],[5],[2],[],[]]\n输出：[null,-1,null,null,5,2]\n```\n\n### 提示：\n\n- 1 <= values <= 10000\n- 最多会对 appendTail、deleteHead 进行 10000 次调用\n\n## 题解\n\n使用两个栈，*一个作为插入栈，一个作为删除栈*。`使用list进行相关操作（append，pop）`；在插入时直接对stack1进行append操作，删除时首先需要构建删除栈内容，再进行判断，最后同步到插入栈中（此时删除栈又为空）。\n\n```python\nclass CQueue:\n\n    def __init__(self):\n        # stack1是insert栈 stack2是delete栈\n        self.stack1 = [] #list作用和stack类似\n        self.stack2 = []\n\n    def appendTail(self, value: int) -> None:\n        self.stack1.append(value) # 直接插入栈顶\n\n    def deleteHead(self) -> int:\n        while self.stack1: #首先更新delete栈\n            self.stack2.append(self.stack1.pop())\n        #进行deleteHead操作\n        if not self.stack2: \n            return -1\n        popitem = self.stack2.pop()\n        # 将更新结果写回stack1中 保持一致\n        while self.stack2:\n            self.stack1.append(self.stack2.pop())\n        return popitem\n\n# Your CQueue object will be instantiated and called as such:\n# obj = CQueue()\n# obj.appendTail(value)\n# param_2 = obj.deleteHead()\n```\n\n","source":"_posts/leetcode/leetcode-offer09.md","raw":"---\ntitle: 剑指offer09 用两个栈实现队列\ndate: 2021-08-10 10:46:28\ntags: [剑指,栈]\ncategories: [剑指,栈]\n---\n\n> 用两个栈实现队列\n\n## 题目\n\n用两个栈实现一个队列。队列的声明如下，请实现它的两个函数 appendTail 和 deleteHead ，分别完成在队列尾部插入整数和在队列头部删除整数的功能。(若队列中没有元素，deleteHead 操作返回 -1 )\n\n### 示例 1：\n\n```\n输入：\n[\"CQueue\",\"appendTail\",\"deleteHead\",\"deleteHead\"]\n[[],[3],[],[]]\n输出：[null,null,3,-1]\n```\n\n### 示例 2：\n\n```\n输入：\n[\"CQueue\",\"deleteHead\",\"appendTail\",\"appendTail\",\"deleteHead\",\"deleteHead\"]\n[[],[],[5],[2],[],[]]\n输出：[null,-1,null,null,5,2]\n```\n\n### 提示：\n\n- 1 <= values <= 10000\n- 最多会对 appendTail、deleteHead 进行 10000 次调用\n\n## 题解\n\n使用两个栈，*一个作为插入栈，一个作为删除栈*。`使用list进行相关操作（append，pop）`；在插入时直接对stack1进行append操作，删除时首先需要构建删除栈内容，再进行判断，最后同步到插入栈中（此时删除栈又为空）。\n\n```python\nclass CQueue:\n\n    def __init__(self):\n        # stack1是insert栈 stack2是delete栈\n        self.stack1 = [] #list作用和stack类似\n        self.stack2 = []\n\n    def appendTail(self, value: int) -> None:\n        self.stack1.append(value) # 直接插入栈顶\n\n    def deleteHead(self) -> int:\n        while self.stack1: #首先更新delete栈\n            self.stack2.append(self.stack1.pop())\n        #进行deleteHead操作\n        if not self.stack2: \n            return -1\n        popitem = self.stack2.pop()\n        # 将更新结果写回stack1中 保持一致\n        while self.stack2:\n            self.stack1.append(self.stack2.pop())\n        return popitem\n\n# Your CQueue object will be instantiated and called as such:\n# obj = CQueue()\n# obj.appendTail(value)\n# param_2 = obj.deleteHead()\n```\n\n","slug":"leetcode/leetcode-offer09","published":1,"updated":"2021-08-14T10:08:10.540Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxocp001mugx42dj34hoq","content":"<blockquote>\n<p>用两个栈实现队列</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>用两个栈实现一个队列。队列的声明如下，请实现它的两个函数 appendTail 和 deleteHead ，分别完成在队列尾部插入整数和在队列头部删除整数的功能。(若队列中没有元素，deleteHead 操作返回 -1 )</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight prolog\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs prolog\">输入：<br>[<span class=\"hljs-string\">\"CQueue\"</span>,<span class=\"hljs-string\">\"appendTail\"</span>,<span class=\"hljs-string\">\"deleteHead\"</span>,<span class=\"hljs-string\">\"deleteHead\"</span>]<br>[[],[<span class=\"hljs-number\">3</span>],[],[]]<br>输出：[null,null,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">-1</span>]<br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight prolog\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs prolog\">输入：<br>[<span class=\"hljs-string\">\"CQueue\"</span>,<span class=\"hljs-string\">\"deleteHead\"</span>,<span class=\"hljs-string\">\"appendTail\"</span>,<span class=\"hljs-string\">\"appendTail\"</span>,<span class=\"hljs-string\">\"deleteHead\"</span>,<span class=\"hljs-string\">\"deleteHead\"</span>]<br>[[],[],[<span class=\"hljs-number\">5</span>],[<span class=\"hljs-number\">2</span>],[],[]]<br>输出：[null,<span class=\"hljs-number\">-1</span>,null,null,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">2</span>]<br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>1 &lt;= values &lt;= 10000</li>\n<li>最多会对 appendTail、deleteHead 进行 10000 次调用</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>使用两个栈，<em>一个作为插入栈，一个作为删除栈</em>。<code>使用list进行相关操作（append，pop）</code>；在插入时直接对stack1进行append操作，删除时首先需要构建删除栈内容，再进行判断，最后同步到插入栈中（此时删除栈又为空）。</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CQueue</span>:</span><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">__init__</span>(<span class=\"hljs-params\">self</span>):</span><br>        <span class=\"hljs-comment\"># stack1是insert栈 stack2是delete栈</span><br>        self.stack1 = [] <span class=\"hljs-comment\">#list作用和stack类似</span><br>        self.stack2 = []<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">appendTail</span>(<span class=\"hljs-params\">self, value: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-literal\">None</span>:</span><br>        self.stack1.append(value) <span class=\"hljs-comment\"># 直接插入栈顶</span><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">deleteHead</span>(<span class=\"hljs-params\">self</span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        <span class=\"hljs-keyword\">while</span> self.stack1: <span class=\"hljs-comment\">#首先更新delete栈</span><br>            self.stack2.append(self.stack1.pop())<br>        <span class=\"hljs-comment\">#进行deleteHead操作</span><br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> self.stack2: <br>            <span class=\"hljs-keyword\">return</span> -<span class=\"hljs-number\">1</span><br>        popitem = self.stack2.pop()<br>        <span class=\"hljs-comment\"># 将更新结果写回stack1中 保持一致</span><br>        <span class=\"hljs-keyword\">while</span> self.stack2:<br>            self.stack1.append(self.stack2.pop())<br>        <span class=\"hljs-keyword\">return</span> popitem<br><br><span class=\"hljs-comment\"># Your CQueue object will be instantiated and called as such:</span><br><span class=\"hljs-comment\"># obj = CQueue()</span><br><span class=\"hljs-comment\"># obj.appendTail(value)</span><br><span class=\"hljs-comment\"># param_2 = obj.deleteHead()</span><br></code></pre></td></tr></tbody></table></figure>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>用两个栈实现队列</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>用两个栈实现一个队列。队列的声明如下，请实现它的两个函数 appendTail 和 deleteHead ，分别完成在队列尾部插入整数和在队列头部删除整数的功能。(若队列中没有元素，deleteHead 操作返回 -1 )</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs prolog\">输入：<br>[<span class=\"hljs-string\">&quot;CQueue&quot;</span>,<span class=\"hljs-string\">&quot;appendTail&quot;</span>,<span class=\"hljs-string\">&quot;deleteHead&quot;</span>,<span class=\"hljs-string\">&quot;deleteHead&quot;</span>]<br>[[],[<span class=\"hljs-number\">3</span>],[],[]]<br>输出：[null,null,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">-1</span>]<br></code></pre></td></tr></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs prolog\">输入：<br>[<span class=\"hljs-string\">&quot;CQueue&quot;</span>,<span class=\"hljs-string\">&quot;deleteHead&quot;</span>,<span class=\"hljs-string\">&quot;appendTail&quot;</span>,<span class=\"hljs-string\">&quot;appendTail&quot;</span>,<span class=\"hljs-string\">&quot;deleteHead&quot;</span>,<span class=\"hljs-string\">&quot;deleteHead&quot;</span>]<br>[[],[],[<span class=\"hljs-number\">5</span>],[<span class=\"hljs-number\">2</span>],[],[]]<br>输出：[null,<span class=\"hljs-number\">-1</span>,null,null,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">2</span>]<br></code></pre></td></tr></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>1 &lt;= values &lt;= 10000</li>\n<li>最多会对 appendTail、deleteHead 进行 10000 次调用</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>使用两个栈，<em>一个作为插入栈，一个作为删除栈</em>。<code>使用list进行相关操作（append，pop）</code>；在插入时直接对stack1进行append操作，删除时首先需要构建删除栈内容，再进行判断，最后同步到插入栈中（此时删除栈又为空）。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CQueue</span>:</span><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">__init__</span>(<span class=\"hljs-params\">self</span>):</span><br>        <span class=\"hljs-comment\"># stack1是insert栈 stack2是delete栈</span><br>        self.stack1 = [] <span class=\"hljs-comment\">#list作用和stack类似</span><br>        self.stack2 = []<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">appendTail</span>(<span class=\"hljs-params\">self, value: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-literal\">None</span>:</span><br>        self.stack1.append(value) <span class=\"hljs-comment\"># 直接插入栈顶</span><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">deleteHead</span>(<span class=\"hljs-params\">self</span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        <span class=\"hljs-keyword\">while</span> self.stack1: <span class=\"hljs-comment\">#首先更新delete栈</span><br>            self.stack2.append(self.stack1.pop())<br>        <span class=\"hljs-comment\">#进行deleteHead操作</span><br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> self.stack2: <br>            <span class=\"hljs-keyword\">return</span> -<span class=\"hljs-number\">1</span><br>        popitem = self.stack2.pop()<br>        <span class=\"hljs-comment\"># 将更新结果写回stack1中 保持一致</span><br>        <span class=\"hljs-keyword\">while</span> self.stack2:<br>            self.stack1.append(self.stack2.pop())<br>        <span class=\"hljs-keyword\">return</span> popitem<br><br><span class=\"hljs-comment\"># Your CQueue object will be instantiated and called as such:</span><br><span class=\"hljs-comment\"># obj = CQueue()</span><br><span class=\"hljs-comment\"># obj.appendTail(value)</span><br><span class=\"hljs-comment\"># param_2 = obj.deleteHead()</span><br></code></pre></td></tr></table></figure>\n"},{"title":"剑指offer10-1 斐波那契数列","date":"2021-08-10T03:55:26.000Z","math":true,"_content":"\n>斐波那契数列\n\n## 题目\n\n写一个函数，输入 n ，求斐波那契（Fibonacci）数列的第 n 项（即 F(N)）。斐波那契数列的定义如下：\n\n$$\nF(0) = 0,   F(1) = 1 \\\\\\\\\nF(N) = F(N - 1) + F(N - 2), 其中 N > 1.\n$$\n斐波那契数列由 0 和 1 开始，之后的斐波那契数就是由之前的两数相加而得出。\n\n答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。\n\n### 示例 1：\n\n```\n输入：n = 2\n输出：1\n```\n\n### 示例 2：\n\n```\n输入：n = 5\n输出：5\n```\n\n### 提示：\n\n- 0 <= n <= 100\n\n## 题解\n\n有三种方向：\n\n- 使用递归\n\n  大量重复计算，时间超时。\n\n- 使用数组存储\n\n  新建长度为n的数组，在递归基础上，存储计算的结果，后直接取用。但是占用了额外的空间$O(n)$\n\n- 使用动态规划\n\n  `以其公式F(N) = F(N - 1) + F(N - 2)为转移方程。`\n\n```python\nclass Solution:\n    def fib(self, n: int) -> int:\n        a,b = 0,1\n        for _ in range(n):\n            a,b = b,a+b #sum = a+b a = b b = sum a相当于f(i) b相当于f(i+1)\n        return a%1000000007\n    # def fib(self, n: int) -> int:\n    #     if(n==0): return 0\n    #     if(n==1): return 1\n    #     return (self.fib(n-1)+self.fib(n-2))%1000000007 #超时 递归时间复杂度大\n```\n\n循环n次\n\n注意`a,b = b,a+b` 相当于sum = a+b ；a = b； b = sum ；\n\n第i轮中 a相当于f(i)，b相当于f(i+1) 。因此最后返回a\n\n","source":"_posts/leetcode/leetcode-offer10-1.md","raw":"---\ntitle: 剑指offer10-1 斐波那契数列\ntags: [剑指,斐波那契,动态规划]\ncategories: [剑指,动态规划]\ndate: 2021-08-10 11:55:26\nmath: true\n---\n\n>斐波那契数列\n\n## 题目\n\n写一个函数，输入 n ，求斐波那契（Fibonacci）数列的第 n 项（即 F(N)）。斐波那契数列的定义如下：\n\n$$\nF(0) = 0,   F(1) = 1 \\\\\\\\\nF(N) = F(N - 1) + F(N - 2), 其中 N > 1.\n$$\n斐波那契数列由 0 和 1 开始，之后的斐波那契数就是由之前的两数相加而得出。\n\n答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。\n\n### 示例 1：\n\n```\n输入：n = 2\n输出：1\n```\n\n### 示例 2：\n\n```\n输入：n = 5\n输出：5\n```\n\n### 提示：\n\n- 0 <= n <= 100\n\n## 题解\n\n有三种方向：\n\n- 使用递归\n\n  大量重复计算，时间超时。\n\n- 使用数组存储\n\n  新建长度为n的数组，在递归基础上，存储计算的结果，后直接取用。但是占用了额外的空间$O(n)$\n\n- 使用动态规划\n\n  `以其公式F(N) = F(N - 1) + F(N - 2)为转移方程。`\n\n```python\nclass Solution:\n    def fib(self, n: int) -> int:\n        a,b = 0,1\n        for _ in range(n):\n            a,b = b,a+b #sum = a+b a = b b = sum a相当于f(i) b相当于f(i+1)\n        return a%1000000007\n    # def fib(self, n: int) -> int:\n    #     if(n==0): return 0\n    #     if(n==1): return 1\n    #     return (self.fib(n-1)+self.fib(n-2))%1000000007 #超时 递归时间复杂度大\n```\n\n循环n次\n\n注意`a,b = b,a+b` 相当于sum = a+b ；a = b； b = sum ；\n\n第i轮中 a相当于f(i)，b相当于f(i+1) 。因此最后返回a\n\n","slug":"leetcode/leetcode-offer10-1","published":1,"updated":"2021-08-14T10:08:10.540Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxocq001ougx4cyv8edr2","content":"<blockquote>\n<p>斐波那契数列</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>写一个函数，输入 n ，求斐波那契（Fibonacci）数列的第 n 项（即 F(N)）。斐波那契数列的定义如下：</p>\n<p>$$<br>\nF(0) = 0,   F(1) = 1 \\\\<br>\nF(N) = F(N - 1) + F(N - 2), 其中 N &gt; 1.<br>\n$$<br>\n斐波那契数列由 0 和 1 开始，之后的斐波那契数就是由之前的两数相加而得出。</p>\n<p>答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight excel\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs excel\">输入：<span class=\"hljs-built_in\">n</span> = <span class=\"hljs-number\">2</span><br>输出：<span class=\"hljs-number\">1</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight excel\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs excel\">输入：<span class=\"hljs-built_in\">n</span> = <span class=\"hljs-number\">5</span><br>输出：<span class=\"hljs-number\">5</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>0 &lt;= n &lt;= 100</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>有三种方向：</p>\n<ul>\n<li>\n<p>使用递归</p>\n<p>大量重复计算，时间超时。</p>\n</li>\n<li>\n<p>使用数组存储</p>\n<p>新建长度为n的数组，在递归基础上，存储计算的结果，后直接取用。但是占用了额外的空间$O(n)$</p>\n</li>\n<li>\n<p>使用动态规划</p>\n<p><code>以其公式F(N) = F(N - 1) + F(N - 2)为转移方程。</code></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">fib</span>(<span class=\"hljs-params\">self, n: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        a,b = <span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(n):<br>            a,b = b,a+b <span class=\"hljs-comment\">#sum = a+b a = b b = sum a相当于f(i) b相当于f(i+1)</span><br>        <span class=\"hljs-keyword\">return</span> a%<span class=\"hljs-number\">1000000007</span><br>    <span class=\"hljs-comment\"># def fib(self, n: int) -&gt; int:</span><br>    <span class=\"hljs-comment\">#     if(n==0): return 0</span><br>    <span class=\"hljs-comment\">#     if(n==1): return 1</span><br>    <span class=\"hljs-comment\">#     return (self.fib(n-1)+self.fib(n-2))%1000000007 #超时 递归时间复杂度大</span><br></code></pre></td></tr></tbody></table></figure>\n<p>循环n次</p>\n<p>注意<code>a,b = b,a+b</code> 相当于sum = a+b ；a = b； b = sum ；</p>\n<p>第i轮中 a相当于f(i)，b相当于f(i+1) 。因此最后返回a</p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>斐波那契数列</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>写一个函数，输入 n ，求斐波那契（Fibonacci）数列的第 n 项（即 F(N)）。斐波那契数列的定义如下：</p>\n<p>$$<br>\nF(0) = 0,   F(1) = 1 \\\\<br>\nF(N) = F(N - 1) + F(N - 2), 其中 N &gt; 1.<br>\n$$<br>\n斐波那契数列由 0 和 1 开始，之后的斐波那契数就是由之前的两数相加而得出。</p>\n<p>答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs excel\">输入：<span class=\"hljs-built_in\">n</span> = <span class=\"hljs-number\">2</span><br>输出：<span class=\"hljs-number\">1</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs excel\">输入：<span class=\"hljs-built_in\">n</span> = <span class=\"hljs-number\">5</span><br>输出：<span class=\"hljs-number\">5</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>0 &lt;= n &lt;= 100</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>有三种方向：</p>\n<ul>\n<li>\n<p>使用递归</p>\n<p>大量重复计算，时间超时。</p>\n</li>\n<li>\n<p>使用数组存储</p>\n<p>新建长度为n的数组，在递归基础上，存储计算的结果，后直接取用。但是占用了额外的空间$O(n)$</p>\n</li>\n<li>\n<p>使用动态规划</p>\n<p><code>以其公式F(N) = F(N - 1) + F(N - 2)为转移方程。</code></p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">fib</span>(<span class=\"hljs-params\">self, n: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        a,b = <span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(n):<br>            a,b = b,a+b <span class=\"hljs-comment\">#sum = a+b a = b b = sum a相当于f(i) b相当于f(i+1)</span><br>        <span class=\"hljs-keyword\">return</span> a%<span class=\"hljs-number\">1000000007</span><br>    <span class=\"hljs-comment\"># def fib(self, n: int) -&gt; int:</span><br>    <span class=\"hljs-comment\">#     if(n==0): return 0</span><br>    <span class=\"hljs-comment\">#     if(n==1): return 1</span><br>    <span class=\"hljs-comment\">#     return (self.fib(n-1)+self.fib(n-2))%1000000007 #超时 递归时间复杂度大</span><br></code></pre></td></tr></table></figure>\n<p>循环n次</p>\n<p>注意<code>a,b = b,a+b</code> 相当于sum = a+b ；a = b； b = sum ；</p>\n<p>第i轮中 a相当于f(i)，b相当于f(i+1) 。因此最后返回a</p>\n"},{"title":"剑指offer10-2 青蛙跳台阶问题","date":"2021-08-10T06:22:55.000Z","math":true,"_content":"\n>青蛙跳台阶问题\n\n## 题目\n\n一只青蛙一次可以跳上1级台阶，也可以跳上2级台阶。求该青蛙跳上一个 n 级的台阶总共有多少种跳法。\n\n答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。\n\n### 示例 1：\n\n```\n输入：n = 2\n输出：2\n```\n\n### 示例 2：\n\n```\n输入：n = 7\n输出：21\n```\n### 示例3：\n```\n输入：n = 0\n输出：1\n```\n\n### 提示：\n\n- 0 <= n <= 100\n\n## 题解\n\n实际上是斐波那契数列的变种。跳上n级台阶的方法个数 可以分解为：*跳上此台阶前的一步是1步还是2步*。也就是 $f(n) = f(n-1) + f(n-2)$。\n\n不同之处在于此时的f(0) = 1\n\n```python\nclass Solution:\n    def numWays(self, n: int) -> int:\n        a,b = 1,1\n        for _ in range(n):\n            a,b = b,a+b\n        return a%1000000007\n```\n\n","source":"_posts/leetcode/leetcode-offer10-2.md","raw":"---\ntitle: 剑指offer10-2 青蛙跳台阶问题\ntags: [剑指,斐波那契,动态规划,idea]\ncategories: [剑指,动态规划]\ndate: 2021-08-10 14:22:55\nmath: true\n---\n\n>青蛙跳台阶问题\n\n## 题目\n\n一只青蛙一次可以跳上1级台阶，也可以跳上2级台阶。求该青蛙跳上一个 n 级的台阶总共有多少种跳法。\n\n答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。\n\n### 示例 1：\n\n```\n输入：n = 2\n输出：2\n```\n\n### 示例 2：\n\n```\n输入：n = 7\n输出：21\n```\n### 示例3：\n```\n输入：n = 0\n输出：1\n```\n\n### 提示：\n\n- 0 <= n <= 100\n\n## 题解\n\n实际上是斐波那契数列的变种。跳上n级台阶的方法个数 可以分解为：*跳上此台阶前的一步是1步还是2步*。也就是 $f(n) = f(n-1) + f(n-2)$。\n\n不同之处在于此时的f(0) = 1\n\n```python\nclass Solution:\n    def numWays(self, n: int) -> int:\n        a,b = 1,1\n        for _ in range(n):\n            a,b = b,a+b\n        return a%1000000007\n```\n\n","slug":"leetcode/leetcode-offer10-2","published":1,"updated":"2021-08-14T10:08:10.541Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxocr001sugx4gr3iauj0","content":"<blockquote>\n<p>青蛙跳台阶问题</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>一只青蛙一次可以跳上1级台阶，也可以跳上2级台阶。求该青蛙跳上一个 n 级的台阶总共有多少种跳法。</p>\n<p>答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight excel\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs excel\">输入：<span class=\"hljs-built_in\">n</span> = <span class=\"hljs-number\">2</span><br>输出：<span class=\"hljs-number\">2</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight excel\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs excel\">输入：<span class=\"hljs-built_in\">n</span> = <span class=\"hljs-number\">7</span><br>输出：<span class=\"hljs-number\">21</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"示例3：\">示例3：</h3>\n<figure class=\"highlight excel\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs excel\">输入：<span class=\"hljs-built_in\">n</span> = <span class=\"hljs-number\">0</span><br>输出：<span class=\"hljs-number\">1</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>0 &lt;= n &lt;= 100</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>实际上是斐波那契数列的变种。跳上n级台阶的方法个数 可以分解为：<em>跳上此台阶前的一步是1步还是2步</em>。也就是 $f(n) = f(n-1) + f(n-2)$。</p>\n<p>不同之处在于此时的f(0) = 1</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">numWays</span>(<span class=\"hljs-params\">self, n: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        a,b = <span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(n):<br>            a,b = b,a+b<br>        <span class=\"hljs-keyword\">return</span> a%<span class=\"hljs-number\">1000000007</span><br></code></pre></td></tr></tbody></table></figure>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>青蛙跳台阶问题</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>一只青蛙一次可以跳上1级台阶，也可以跳上2级台阶。求该青蛙跳上一个 n 级的台阶总共有多少种跳法。</p>\n<p>答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs excel\">输入：<span class=\"hljs-built_in\">n</span> = <span class=\"hljs-number\">2</span><br>输出：<span class=\"hljs-number\">2</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs excel\">输入：<span class=\"hljs-built_in\">n</span> = <span class=\"hljs-number\">7</span><br>输出：<span class=\"hljs-number\">21</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"示例3：\">示例3：</h3>\n<figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs excel\">输入：<span class=\"hljs-built_in\">n</span> = <span class=\"hljs-number\">0</span><br>输出：<span class=\"hljs-number\">1</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>0 &lt;= n &lt;= 100</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>实际上是斐波那契数列的变种。跳上n级台阶的方法个数 可以分解为：<em>跳上此台阶前的一步是1步还是2步</em>。也就是 $f(n) = f(n-1) + f(n-2)$。</p>\n<p>不同之处在于此时的f(0) = 1</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">numWays</span>(<span class=\"hljs-params\">self, n: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        a,b = <span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(n):<br>            a,b = b,a+b<br>        <span class=\"hljs-keyword\">return</span> a%<span class=\"hljs-number\">1000000007</span><br></code></pre></td></tr></table></figure>\n"},{"title":"剑指offer11 旋转数组的最小数字","date":"2021-08-13T09:40:06.000Z","_content":"\n>旋转数组的最小数字\n\n## 题目\n\n把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。输入一个递增排序的数组的一个旋转，输出旋转数组的最小元素。例如，数组 [3,4,5,1,2] 为 [1,2,3,4,5] 的一个旋转，该数组的最小值为1。\n\n### 示例 1：\n\n```\n输入：[3,4,5,1,2]\n输出：1\n```\n\n### 示例 2：\n\n```\n输入：[2,2,2,0,1]\n输出：0\n```\n\n## 题解\n\n将数组遍历一遍，遇到第一个非增序的元素即为最小值。复杂度为线性级别。\n\n```python\nclass Solution:\n    def minArray(self, numbers: List[int]) -> int:\n        if not(numbers):return 0\n        minitem = numbers[0]\n        for i in range(1,len(numbers)):\n            if numbers[i]<numbers[i-1]:\n                return min(minitem,numbers[i])\n        return minitem\n```\n\n还可以使用二分法，将线性级别的复杂度降低到对数级别。\n\n![](https://picture.mulindya.com/leetcode-offer11-pic1.png)\n\n最低点有特性：左边的所有元素都要比右边所有元素大。利用这个特性可以逐渐缩小范围。\n\n中间元素和某个边界元素比较大小，来确定范围，<u>但是要注意两者相等时就没有确切的判断了</u>。可以直接用线性比较来替代。\n\n```python\nclass Solution:\n    def minArray(self, numbers: [int]) -> int:\n        i, j = 0, len(numbers) - 1\n        while i < j:\n            m = (i + j) // 2\n            if numbers[m] > numbers[j]: i = m + 1\n            elif numbers[m] < numbers[j]: j = m\n            else: j -= 1\n        return numbers[i]\n```\n\n实际上，当出现 nums[m] = nums[j] 时，一定有区间[i,m]内所有元素相等 或 区间 [m,j] 内所有元素相等（或两者皆满足）。对于寻找此类数组的最小值问题，可直接放弃二分查找，而使用线性查找替代。\n\n```python\nclass Solution:\n    def minArray(self, numbers: [int]) -> int:\n        i, j = 0, len(numbers) - 1\n        while i < j:\n            m = (i + j) // 2\n            if numbers[m] > numbers[j]: i = m + 1\n            elif numbers[m] < numbers[j]: j = m\n            else: return min(numbers[i:j])\n        return numbers[i]\n```\n\n","source":"_posts/leetcode/leetcode-offer11.md","raw":"---\ntitle: 剑指offer11 旋转数组的最小数字\ntags: [剑指,数组,idea]\ncategories: [剑指,数组]\ndate: 2021-08-13 17:40:06\n---\n\n>旋转数组的最小数字\n\n## 题目\n\n把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。输入一个递增排序的数组的一个旋转，输出旋转数组的最小元素。例如，数组 [3,4,5,1,2] 为 [1,2,3,4,5] 的一个旋转，该数组的最小值为1。\n\n### 示例 1：\n\n```\n输入：[3,4,5,1,2]\n输出：1\n```\n\n### 示例 2：\n\n```\n输入：[2,2,2,0,1]\n输出：0\n```\n\n## 题解\n\n将数组遍历一遍，遇到第一个非增序的元素即为最小值。复杂度为线性级别。\n\n```python\nclass Solution:\n    def minArray(self, numbers: List[int]) -> int:\n        if not(numbers):return 0\n        minitem = numbers[0]\n        for i in range(1,len(numbers)):\n            if numbers[i]<numbers[i-1]:\n                return min(minitem,numbers[i])\n        return minitem\n```\n\n还可以使用二分法，将线性级别的复杂度降低到对数级别。\n\n![](https://picture.mulindya.com/leetcode-offer11-pic1.png)\n\n最低点有特性：左边的所有元素都要比右边所有元素大。利用这个特性可以逐渐缩小范围。\n\n中间元素和某个边界元素比较大小，来确定范围，<u>但是要注意两者相等时就没有确切的判断了</u>。可以直接用线性比较来替代。\n\n```python\nclass Solution:\n    def minArray(self, numbers: [int]) -> int:\n        i, j = 0, len(numbers) - 1\n        while i < j:\n            m = (i + j) // 2\n            if numbers[m] > numbers[j]: i = m + 1\n            elif numbers[m] < numbers[j]: j = m\n            else: j -= 1\n        return numbers[i]\n```\n\n实际上，当出现 nums[m] = nums[j] 时，一定有区间[i,m]内所有元素相等 或 区间 [m,j] 内所有元素相等（或两者皆满足）。对于寻找此类数组的最小值问题，可直接放弃二分查找，而使用线性查找替代。\n\n```python\nclass Solution:\n    def minArray(self, numbers: [int]) -> int:\n        i, j = 0, len(numbers) - 1\n        while i < j:\n            m = (i + j) // 2\n            if numbers[m] > numbers[j]: i = m + 1\n            elif numbers[m] < numbers[j]: j = m\n            else: return min(numbers[i:j])\n        return numbers[i]\n```\n\n","slug":"leetcode/leetcode-offer11","published":1,"updated":"2021-08-19T08:10:13.845Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxocs001uugx4hrg91zc0","content":"<blockquote>\n<p>旋转数组的最小数字</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。输入一个递增排序的数组的一个旋转，输出旋转数组的最小元素。例如，数组 [3,4,5,1,2] 为 [1,2,3,4,5] 的一个旋转，该数组的最小值为1。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight accesslog\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs accesslog\">输入：<span class=\"hljs-string\">[3,4,5,1,2]</span><br>输出：<span class=\"hljs-number\">1</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight accesslog\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs accesslog\">输入：<span class=\"hljs-string\">[2,2,2,0,1]</span><br>输出：<span class=\"hljs-number\">0</span><br></code></pre></td></tr></tbody></table></figure>\n<h2 id=\"题解\">题解</h2>\n<p>将数组遍历一遍，遇到第一个非增序的元素即为最小值。复杂度为线性级别。</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">minArray</span>(<span class=\"hljs-params\">self, numbers: <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]</span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span>(numbers):<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span><br>        minitem = numbers[<span class=\"hljs-number\">0</span>]<br>        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">len</span>(numbers)):<br>            <span class=\"hljs-keyword\">if</span> numbers[i]&lt;numbers[i-<span class=\"hljs-number\">1</span>]:<br>                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">min</span>(minitem,numbers[i])<br>        <span class=\"hljs-keyword\">return</span> minitem<br></code></pre></td></tr></tbody></table></figure>\n<p>还可以使用二分法，将线性级别的复杂度降低到对数级别。</p>\n<p><img src=\"https://picture.mulindya.com/leetcode-offer11-pic1.png\" alt=\"\"></p>\n<p>最低点有特性：左边的所有元素都要比右边所有元素大。利用这个特性可以逐渐缩小范围。</p>\n<p>中间元素和某个边界元素比较大小，来确定范围，<u>但是要注意两者相等时就没有确切的判断了</u>。可以直接用线性比较来替代。</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">minArray</span>(<span class=\"hljs-params\">self, numbers: [<span class=\"hljs-built_in\">int</span>]</span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        i, j = <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">len</span>(numbers) - <span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">while</span> i &lt; j:<br>            m = (i + j) // <span class=\"hljs-number\">2</span><br>            <span class=\"hljs-keyword\">if</span> numbers[m] &gt; numbers[j]: i = m + <span class=\"hljs-number\">1</span><br>            <span class=\"hljs-keyword\">elif</span> numbers[m] &lt; numbers[j]: j = m<br>            <span class=\"hljs-keyword\">else</span>: j -= <span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">return</span> numbers[i]<br></code></pre></td></tr></tbody></table></figure>\n<p>实际上，当出现 nums[m] = nums[j] 时，一定有区间[i,m]内所有元素相等 或 区间 [m,j] 内所有元素相等（或两者皆满足）。对于寻找此类数组的最小值问题，可直接放弃二分查找，而使用线性查找替代。</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">minArray</span>(<span class=\"hljs-params\">self, numbers: [<span class=\"hljs-built_in\">int</span>]</span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        i, j = <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">len</span>(numbers) - <span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">while</span> i &lt; j:<br>            m = (i + j) // <span class=\"hljs-number\">2</span><br>            <span class=\"hljs-keyword\">if</span> numbers[m] &gt; numbers[j]: i = m + <span class=\"hljs-number\">1</span><br>            <span class=\"hljs-keyword\">elif</span> numbers[m] &lt; numbers[j]: j = m<br>            <span class=\"hljs-keyword\">else</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">min</span>(numbers[i:j])<br>        <span class=\"hljs-keyword\">return</span> numbers[i]<br></code></pre></td></tr></tbody></table></figure>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>旋转数组的最小数字</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。输入一个递增排序的数组的一个旋转，输出旋转数组的最小元素。例如，数组 [3,4,5,1,2] 为 [1,2,3,4,5] 的一个旋转，该数组的最小值为1。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs accesslog\">输入：<span class=\"hljs-string\">[3,4,5,1,2]</span><br>输出：<span class=\"hljs-number\">1</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs accesslog\">输入：<span class=\"hljs-string\">[2,2,2,0,1]</span><br>输出：<span class=\"hljs-number\">0</span><br></code></pre></td></tr></table></figure>\n<h2 id=\"题解\">题解</h2>\n<p>将数组遍历一遍，遇到第一个非增序的元素即为最小值。复杂度为线性级别。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">minArray</span>(<span class=\"hljs-params\">self, numbers: <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]</span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span>(numbers):<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span><br>        minitem = numbers[<span class=\"hljs-number\">0</span>]<br>        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">len</span>(numbers)):<br>            <span class=\"hljs-keyword\">if</span> numbers[i]&lt;numbers[i-<span class=\"hljs-number\">1</span>]:<br>                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">min</span>(minitem,numbers[i])<br>        <span class=\"hljs-keyword\">return</span> minitem<br></code></pre></td></tr></table></figure>\n<p>还可以使用二分法，将线性级别的复杂度降低到对数级别。</p>\n<p><img src=\"https://picture.mulindya.com/leetcode-offer11-pic1.png\" alt=\"\"></p>\n<p>最低点有特性：左边的所有元素都要比右边所有元素大。利用这个特性可以逐渐缩小范围。</p>\n<p>中间元素和某个边界元素比较大小，来确定范围，<u>但是要注意两者相等时就没有确切的判断了</u>。可以直接用线性比较来替代。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">minArray</span>(<span class=\"hljs-params\">self, numbers: [<span class=\"hljs-built_in\">int</span>]</span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        i, j = <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">len</span>(numbers) - <span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">while</span> i &lt; j:<br>            m = (i + j) // <span class=\"hljs-number\">2</span><br>            <span class=\"hljs-keyword\">if</span> numbers[m] &gt; numbers[j]: i = m + <span class=\"hljs-number\">1</span><br>            <span class=\"hljs-keyword\">elif</span> numbers[m] &lt; numbers[j]: j = m<br>            <span class=\"hljs-keyword\">else</span>: j -= <span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">return</span> numbers[i]<br></code></pre></td></tr></table></figure>\n<p>实际上，当出现 nums[m] = nums[j] 时，一定有区间[i,m]内所有元素相等 或 区间 [m,j] 内所有元素相等（或两者皆满足）。对于寻找此类数组的最小值问题，可直接放弃二分查找，而使用线性查找替代。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">minArray</span>(<span class=\"hljs-params\">self, numbers: [<span class=\"hljs-built_in\">int</span>]</span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        i, j = <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">len</span>(numbers) - <span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">while</span> i &lt; j:<br>            m = (i + j) // <span class=\"hljs-number\">2</span><br>            <span class=\"hljs-keyword\">if</span> numbers[m] &gt; numbers[j]: i = m + <span class=\"hljs-number\">1</span><br>            <span class=\"hljs-keyword\">elif</span> numbers[m] &lt; numbers[j]: j = m<br>            <span class=\"hljs-keyword\">else</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">min</span>(numbers[i:j])<br>        <span class=\"hljs-keyword\">return</span> numbers[i]<br></code></pre></td></tr></table></figure>\n"},{"title":"剑指offer12 矩阵中的路径","date":"2021-08-13T17:04:59.000Z","_content":"\n>矩阵中的路径\n\n## 题目\n\n给定一个 m x n 二维字符网格 board 和一个字符串单词 word 。如果 word 存在于网格中，返回 true ；否则，返回 false 。\n\n单词必须按照字母顺序，通过相邻的单元格内的字母构成，其中“相邻”单元格是那些水平相邻或垂直相邻的单元格。同一个单元格内的字母不允许被重复使用。\n\n例如，在下面的 3×4 的矩阵中包含单词 \"ABCCED\"（单词中的字母已标出）。\n\n![](https://picture.mulindya.com/leetcode-offer12-pic1.jpg)\n\n### 示例 1：\n\n```\n输入：board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"ABCCED\"\n输出：true\n```\n\n### 示例 2：\n\n```\n输入：board = [[\"a\",\"b\"],[\"c\",\"d\"]], word = \"abcd\"\n输出：false\n```\n\n### 提示：\n\n- `1 <= board.length <= 200`\n- `1 <= board[i].length <= 200`\n- `board` 和 `word` 仅由大小写英文字母组成\n\n## 题解\n\n循环遍历二维数组，以此为起点判断是否存在连续的字符串。在dfs中首先进行边界范围判断，以及此点是否满足要求，如果不满足要求直接返回假，为真则继续word判断之后的字符。如果以及是最后的字符就可以直接返回结果。<font color=purple>注意在判断k+1之前需要先mask掉自身的值，防止后续“路线返回”</font>\n\n```python\nclass Solution(object):\n    def exist(self, board, word):\n        \"\"\"\n        :type board: List[List[str]]\n        :type word: str\n        :rtype: bool\n        \"\"\"\n        def dfs(i,j,k):\n            if (not len(board)>i>=0) or (not len(board[0])>j>=0) or board[i][j]!=word[k]: return False \n            #不匹配的情况\n            if k == len(word)-1: return True #不用继续判断\n            board[i][j] = ' '\n            # #注意不能直接返回 因为在处理邻近的内容会判断到自身，这是不允许的，所以先mask\n            # return dfs(i+1,j,k+1) or dfs(i-1,j,k+1) or dfs(i,j+1,k+1) or dfs(i,j-1,k+1) \n            res = dfs(i+1,j,k+1) or dfs(i-1,j,k+1) or dfs(i,j+1,k+1) or dfs(i,j-1,k+1) \n            board[i][j] = word[k]\n            return res\n        for i in range(len(board)):\n            for j in range(len(board[0])):\n                if dfs(i,j,0): return True #如果从ij开始找0之后的字符串找到则为真\n        return False\n```\n\n","source":"_posts/leetcode/leetcode-offer12.md","raw":"---\ntitle: 剑指offer12 矩阵中的路径\ntags: [剑指,DFS,idea]\ncategories: [剑指,DFS]\ndate: 2021-08-14 01:04:59\n---\n\n>矩阵中的路径\n\n## 题目\n\n给定一个 m x n 二维字符网格 board 和一个字符串单词 word 。如果 word 存在于网格中，返回 true ；否则，返回 false 。\n\n单词必须按照字母顺序，通过相邻的单元格内的字母构成，其中“相邻”单元格是那些水平相邻或垂直相邻的单元格。同一个单元格内的字母不允许被重复使用。\n\n例如，在下面的 3×4 的矩阵中包含单词 \"ABCCED\"（单词中的字母已标出）。\n\n![](https://picture.mulindya.com/leetcode-offer12-pic1.jpg)\n\n### 示例 1：\n\n```\n输入：board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"ABCCED\"\n输出：true\n```\n\n### 示例 2：\n\n```\n输入：board = [[\"a\",\"b\"],[\"c\",\"d\"]], word = \"abcd\"\n输出：false\n```\n\n### 提示：\n\n- `1 <= board.length <= 200`\n- `1 <= board[i].length <= 200`\n- `board` 和 `word` 仅由大小写英文字母组成\n\n## 题解\n\n循环遍历二维数组，以此为起点判断是否存在连续的字符串。在dfs中首先进行边界范围判断，以及此点是否满足要求，如果不满足要求直接返回假，为真则继续word判断之后的字符。如果以及是最后的字符就可以直接返回结果。<font color=purple>注意在判断k+1之前需要先mask掉自身的值，防止后续“路线返回”</font>\n\n```python\nclass Solution(object):\n    def exist(self, board, word):\n        \"\"\"\n        :type board: List[List[str]]\n        :type word: str\n        :rtype: bool\n        \"\"\"\n        def dfs(i,j,k):\n            if (not len(board)>i>=0) or (not len(board[0])>j>=0) or board[i][j]!=word[k]: return False \n            #不匹配的情况\n            if k == len(word)-1: return True #不用继续判断\n            board[i][j] = ' '\n            # #注意不能直接返回 因为在处理邻近的内容会判断到自身，这是不允许的，所以先mask\n            # return dfs(i+1,j,k+1) or dfs(i-1,j,k+1) or dfs(i,j+1,k+1) or dfs(i,j-1,k+1) \n            res = dfs(i+1,j,k+1) or dfs(i-1,j,k+1) or dfs(i,j+1,k+1) or dfs(i,j-1,k+1) \n            board[i][j] = word[k]\n            return res\n        for i in range(len(board)):\n            for j in range(len(board[0])):\n                if dfs(i,j,0): return True #如果从ij开始找0之后的字符串找到则为真\n        return False\n```\n\n","slug":"leetcode/leetcode-offer12","published":1,"updated":"2021-08-19T08:09:35.487Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxoct001zugx43ezkd91j","content":"<blockquote>\n<p>矩阵中的路径</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>给定一个 m x n 二维字符网格 board 和一个字符串单词 word 。如果 word 存在于网格中，返回 true ；否则，返回 false 。</p>\n<p>单词必须按照字母顺序，通过相邻的单元格内的字母构成，其中“相邻”单元格是那些水平相邻或垂直相邻的单元格。同一个单元格内的字母不允许被重复使用。</p>\n<p>例如，在下面的 3×4 的矩阵中包含单词 “ABCCED”（单词中的字母已标出）。</p>\n<p><img src=\"https://picture.mulindya.com/leetcode-offer12-pic1.jpg\" alt=\"\"></p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight prolog\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs prolog\">输入：board = [[<span class=\"hljs-string\">\"A\"</span>,<span class=\"hljs-string\">\"B\"</span>,<span class=\"hljs-string\">\"C\"</span>,<span class=\"hljs-string\">\"E\"</span>],[<span class=\"hljs-string\">\"S\"</span>,<span class=\"hljs-string\">\"F\"</span>,<span class=\"hljs-string\">\"C\"</span>,<span class=\"hljs-string\">\"S\"</span>],[<span class=\"hljs-string\">\"A\"</span>,<span class=\"hljs-string\">\"D\"</span>,<span class=\"hljs-string\">\"E\"</span>,<span class=\"hljs-string\">\"E\"</span>]], word = <span class=\"hljs-string\">\"ABCCED\"</span><br>输出：true<br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight nix\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">输入：<span class=\"hljs-attr\">board</span> = [[<span class=\"hljs-string\">\"a\"</span>,<span class=\"hljs-string\">\"b\"</span>],[<span class=\"hljs-string\">\"c\"</span>,<span class=\"hljs-string\">\"d\"</span>]], <span class=\"hljs-attr\">word</span> = <span class=\"hljs-string\">\"abcd\"</span><br>输出：<span class=\"hljs-literal\">false</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li><code>1 &lt;= board.length &lt;= 200</code></li>\n<li><code>1 &lt;= board[i].length &lt;= 200</code></li>\n<li><code>board</code> 和 <code>word</code> 仅由大小写英文字母组成</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>循环遍历二维数组，以此为起点判断是否存在连续的字符串。在dfs中首先进行边界范围判断，以及此点是否满足要求，如果不满足要求直接返回假，为真则继续word判断之后的字符。如果以及是最后的字符就可以直接返回结果。<font color=\"purple\">注意在判断k+1之前需要先mask掉自身的值，防止后续“路线返回”</font></p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">object</span></span>):</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">exist</span>(<span class=\"hljs-params\">self, board, word</span>):</span><br>        <span class=\"hljs-string\">\"\"\"</span><br><span class=\"hljs-string\">        :type board: List[List[str]]</span><br><span class=\"hljs-string\">        :type word: str</span><br><span class=\"hljs-string\">        :rtype: bool</span><br><span class=\"hljs-string\">        \"\"\"</span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">dfs</span>(<span class=\"hljs-params\">i,j,k</span>):</span><br>            <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">not</span> <span class=\"hljs-built_in\">len</span>(board)&gt;i&gt;=<span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">or</span> (<span class=\"hljs-keyword\">not</span> <span class=\"hljs-built_in\">len</span>(board[<span class=\"hljs-number\">0</span>])&gt;j&gt;=<span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">or</span> board[i][j]!=word[k]: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span> <br>            <span class=\"hljs-comment\">#不匹配的情况</span><br>            <span class=\"hljs-keyword\">if</span> k == <span class=\"hljs-built_in\">len</span>(word)-<span class=\"hljs-number\">1</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span> <span class=\"hljs-comment\">#不用继续判断</span><br>            board[i][j] = <span class=\"hljs-string\">' '</span><br>            <span class=\"hljs-comment\"># #注意不能直接返回 因为在处理邻近的内容会判断到自身，这是不允许的，所以先mask</span><br>            <span class=\"hljs-comment\"># return dfs(i+1,j,k+1) or dfs(i-1,j,k+1) or dfs(i,j+1,k+1) or dfs(i,j-1,k+1) </span><br>            res = dfs(i+<span class=\"hljs-number\">1</span>,j,k+<span class=\"hljs-number\">1</span>) <span class=\"hljs-keyword\">or</span> dfs(i-<span class=\"hljs-number\">1</span>,j,k+<span class=\"hljs-number\">1</span>) <span class=\"hljs-keyword\">or</span> dfs(i,j+<span class=\"hljs-number\">1</span>,k+<span class=\"hljs-number\">1</span>) <span class=\"hljs-keyword\">or</span> dfs(i,j-<span class=\"hljs-number\">1</span>,k+<span class=\"hljs-number\">1</span>) <br>            board[i][j] = word[k]<br>            <span class=\"hljs-keyword\">return</span> res<br>        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(board)):<br>            <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(board[<span class=\"hljs-number\">0</span>])):<br>                <span class=\"hljs-keyword\">if</span> dfs(i,j,<span class=\"hljs-number\">0</span>): <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span> <span class=\"hljs-comment\">#如果从ij开始找0之后的字符串找到则为真</span><br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br></code></pre></td></tr></tbody></table></figure>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>矩阵中的路径</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>给定一个 m x n 二维字符网格 board 和一个字符串单词 word 。如果 word 存在于网格中，返回 true ；否则，返回 false 。</p>\n<p>单词必须按照字母顺序，通过相邻的单元格内的字母构成，其中“相邻”单元格是那些水平相邻或垂直相邻的单元格。同一个单元格内的字母不允许被重复使用。</p>\n<p>例如，在下面的 3×4 的矩阵中包含单词 “ABCCED”（单词中的字母已标出）。</p>\n<p><img src=\"https://picture.mulindya.com/leetcode-offer12-pic1.jpg\" alt=\"\"></p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs prolog\">输入：board = [[<span class=\"hljs-string\">&quot;A&quot;</span>,<span class=\"hljs-string\">&quot;B&quot;</span>,<span class=\"hljs-string\">&quot;C&quot;</span>,<span class=\"hljs-string\">&quot;E&quot;</span>],[<span class=\"hljs-string\">&quot;S&quot;</span>,<span class=\"hljs-string\">&quot;F&quot;</span>,<span class=\"hljs-string\">&quot;C&quot;</span>,<span class=\"hljs-string\">&quot;S&quot;</span>],[<span class=\"hljs-string\">&quot;A&quot;</span>,<span class=\"hljs-string\">&quot;D&quot;</span>,<span class=\"hljs-string\">&quot;E&quot;</span>,<span class=\"hljs-string\">&quot;E&quot;</span>]], word = <span class=\"hljs-string\">&quot;ABCCED&quot;</span><br>输出：true<br></code></pre></td></tr></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">输入：<span class=\"hljs-attr\">board</span> = [[<span class=\"hljs-string\">&quot;a&quot;</span>,<span class=\"hljs-string\">&quot;b&quot;</span>],[<span class=\"hljs-string\">&quot;c&quot;</span>,<span class=\"hljs-string\">&quot;d&quot;</span>]], <span class=\"hljs-attr\">word</span> = <span class=\"hljs-string\">&quot;abcd&quot;</span><br>输出：<span class=\"hljs-literal\">false</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li><code>1 &lt;= board.length &lt;= 200</code></li>\n<li><code>1 &lt;= board[i].length &lt;= 200</code></li>\n<li><code>board</code> 和 <code>word</code> 仅由大小写英文字母组成</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>循环遍历二维数组，以此为起点判断是否存在连续的字符串。在dfs中首先进行边界范围判断，以及此点是否满足要求，如果不满足要求直接返回假，为真则继续word判断之后的字符。如果以及是最后的字符就可以直接返回结果。<font color=purple>注意在判断k+1之前需要先mask掉自身的值，防止后续“路线返回”</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">object</span></span>):</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">exist</span>(<span class=\"hljs-params\">self, board, word</span>):</span><br>        <span class=\"hljs-string\">&quot;&quot;&quot;</span><br><span class=\"hljs-string\">        :type board: List[List[str]]</span><br><span class=\"hljs-string\">        :type word: str</span><br><span class=\"hljs-string\">        :rtype: bool</span><br><span class=\"hljs-string\">        &quot;&quot;&quot;</span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">dfs</span>(<span class=\"hljs-params\">i,j,k</span>):</span><br>            <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">not</span> <span class=\"hljs-built_in\">len</span>(board)&gt;i&gt;=<span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">or</span> (<span class=\"hljs-keyword\">not</span> <span class=\"hljs-built_in\">len</span>(board[<span class=\"hljs-number\">0</span>])&gt;j&gt;=<span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">or</span> board[i][j]!=word[k]: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span> <br>            <span class=\"hljs-comment\">#不匹配的情况</span><br>            <span class=\"hljs-keyword\">if</span> k == <span class=\"hljs-built_in\">len</span>(word)-<span class=\"hljs-number\">1</span>: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span> <span class=\"hljs-comment\">#不用继续判断</span><br>            board[i][j] = <span class=\"hljs-string\">&#x27; &#x27;</span><br>            <span class=\"hljs-comment\"># #注意不能直接返回 因为在处理邻近的内容会判断到自身，这是不允许的，所以先mask</span><br>            <span class=\"hljs-comment\"># return dfs(i+1,j,k+1) or dfs(i-1,j,k+1) or dfs(i,j+1,k+1) or dfs(i,j-1,k+1) </span><br>            res = dfs(i+<span class=\"hljs-number\">1</span>,j,k+<span class=\"hljs-number\">1</span>) <span class=\"hljs-keyword\">or</span> dfs(i-<span class=\"hljs-number\">1</span>,j,k+<span class=\"hljs-number\">1</span>) <span class=\"hljs-keyword\">or</span> dfs(i,j+<span class=\"hljs-number\">1</span>,k+<span class=\"hljs-number\">1</span>) <span class=\"hljs-keyword\">or</span> dfs(i,j-<span class=\"hljs-number\">1</span>,k+<span class=\"hljs-number\">1</span>) <br>            board[i][j] = word[k]<br>            <span class=\"hljs-keyword\">return</span> res<br>        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(board)):<br>            <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(board[<span class=\"hljs-number\">0</span>])):<br>                <span class=\"hljs-keyword\">if</span> dfs(i,j,<span class=\"hljs-number\">0</span>): <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span> <span class=\"hljs-comment\">#如果从ij开始找0之后的字符串找到则为真</span><br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br></code></pre></td></tr></table></figure>\n"},{"title":"剑指offer13 机器人的运动范围","date":"2021-08-14T09:56:11.000Z","_content":"\n>机器人的运动范围\n\n## 题目\n\n地上有一个m行n列的方格，从坐标 [0,0] 到坐标 [m-1,n-1] 。一个机器人从坐标 [0, 0] 的格子开始移动，它每次可以向左、右、上、下移动一格（不能移动到方格外），也不能进入行坐标和列坐标的数位之和大于k的格子。例如，当k为18时，机器人能够进入方格 [35, 37] ，因为3+5+3+7=18。但它不能进入方格 [35, 38]，因为3+5+3+8=19。请问该机器人能够到达多少个格子？\n\n### 示例 1：\n\n```\n输入：m = 2, n = 3, k = 1\n输出：3\n```\n\n### 示例 2：\n\n```\n输入：m = 3, n = 1, k = 0\n输出：1\n```\n\n### 提示：\n\n- `1 <= n,m <= 100`\n- `0 <= k <= 20`\n\n## 题解\n\n### 解法一 DFS\n\n- 深搜+剪枝\n- 优化技巧就是只判断右边和下边就行了，因为左和上是一定会在搜索的过程中被包括的\n\n​        <font color=purple>注意[[1]*n]*m 是浅拷贝复制（“=”复制）因此如果一个元素改变了，此列都会改变</font>\n\n```python\nclass Solution(object):\n    def movingCount(self, m, n, k):\n        \"\"\"\n        :type m: int\n        :type n: int\n        :type k: int\n        :rtype: int\n        \"\"\"\n        \n        fflag = [[1 for _ in range(n)] for _ in range(m)]  \n        def numsum(i,j):\n            sum=0\n            while(i):\n                sum+=(i%10)\n                i = i//10\n            while(j):\n                sum+=(j%10)\n                j = j//10\n            return sum\n        def dfs(i,j):\n            if (not m>i>=0) or (not n>j>=0) or (fflag[i][j]==0) or (numsum(i,j)>k): \n                return 0\n            fflag[i][j] = 0\n            # return 1+dfs(i+1,j)+dfs(i-1,j)+dfs(i,j+1)+dfs(i,j-1)\n            return 1+dfs(i+1,j)+dfs(i,j+1)\n\n        return dfs(0,0)\n```\n\n### 解法二 递推\n\n#### 思路\n\n考虑到方法一提到搜索的方向只需要朝下或朝右，我们可以得出一种递推的求解方法。\n\n#### 算法\n\n定义 `vis[i][j]` 为 `(i, j)` 坐标是否可达，如果可达返回 1，否则返回 0。\n\n首先 (i, j) 本身需要可以进入，因此需要先判断 i 和 j 的数位之和是否大于 k ，如果大于的话直接设置 `vis[i][j]` 为不可达即可。\n\n否则，前面提到搜索方向只需朝下或朝右，因此 (i, j) 的格子只会从 (i - 1, j) 或者 (i, j - 1) 两个格子走过来（不考虑边界条件），那么 `vis[i][j]` 是否可达的状态则可由如下公式计算得到：\n\n即只要有一个格子可达，那么 (i, j) 这个格子就是可达的，因此我们只要遍历所有格子，递推计算出它们是否可达然后用变量 ans 记录可达的格子数量即可。\n\n初始条件 `vis[i][j] = 1` ，递推计算的过程中注意边界的处理。\n\n```python\ndef digitsum(n):\n    ans = 0\n    while n:\n        ans += n % 10\n        n //= 10\n    return ans\n\nclass Solution:\n    def movingCount(self, m: int, n: int, k: int) -> int:\n        vis = set([(0, 0)])\n        for i in range(m):\n            for j in range(n):\n                if ((i - 1, j) in vis or (i, j - 1) in vis) and digitsum(i) + digitsum(j) <= k:\n                    vis.add((i, j))\n        return len(vis)\n```\n\n### 解法三\n\n#### 思路和算法\n\n我们将行坐标和列坐标数位之和大于 k 的格子看作障碍物，那么这道题就是一道很传统的搜索题目，我们可以使用广度优先搜索或者深度优先搜索来解决它，本文选择使用广度优先搜索的方法来讲解。\n\n那么如何计算一个数的数位之和呢？我们只需要对数 x 每次对 10 取余，就能知道数 x 的个位数是多少，然后再将 x 除 10，这个操作等价于将 x 的十进制数向右移一位，删除个位数（类似于二进制中的 >> 右移运算符），不断重复直到 x 为 0 时结束。\n\n同时这道题还有一个隐藏的优化：我们在搜索的过程中搜索方向可以缩减为向右和向下，而不必再向上和向左进行搜索。如下图，我们展示了 16 * 16 的地图随着限制条件 k 的放大，可行方格的变化趋势，每个格子里的值为行坐标和列坐标的数位之和，蓝色方格代表非障碍方格，即其值小于等于当前的限制条件 k。我们可以发现随着限制条件 k 的增大，(0, 0) 所在的蓝色方格区域内新加入的非障碍方格都可以由上方或左方的格子移动一步得到。而其他不连通的蓝色方格区域会随着 k 的增大而连通，且连通的时候也是由上方或左方的格子移动一步得到，因此我们可以将我们的搜索方向缩减为向右或向下。\n\n```python\ndef digitsum(n):\n    ans = 0\n    while n:\n        ans += n % 10\n        n //= 10\n    return ans\n\nclass Solution:\n    def movingCount(self, m: int, n: int, k: int) -> int:\n        from queue import Queue\n        q = Queue()\n        q.put((0, 0))\n        s = set()\n        while not q.empty():\n            x, y = q.get()\n            if (x, y) not in s and 0 <= x < m and 0 <= y < n and digitsum(x) + digitsum(y) <= k:\n                s.add((x, y))\n                for nx, ny in [(x + 1, y), (x, y + 1)]:\n                    q.put((nx, ny))\n        return len(s)\n```\n\n#### 复杂度分析\n\n##### 时间复杂度：O(mn)\n\n其中 m 为方格的行数，n 为方格的列数。考虑所有格子都能进入，那么搜索的时候一个格子最多会被访问的次数为常数，所以时间复杂度为 O(2mn)=O(mn)。\n\n##### 空间复杂度：O(mn)\n\n其中 m 为方格的行数，n 为方格的列数。搜索的时候需要一个大小为 O(mn)的标记结构用来标记每个格子是否被走过。\n\n","source":"_posts/leetcode/leetcode-offer13.md","raw":"---\ntitle: 剑指offer13 机器人的运动范围\ntags: [剑指,DFS,idea]\ncategories: [剑指,DFS]\ndate: 2021-08-14 17:56:11\n---\n\n>机器人的运动范围\n\n## 题目\n\n地上有一个m行n列的方格，从坐标 [0,0] 到坐标 [m-1,n-1] 。一个机器人从坐标 [0, 0] 的格子开始移动，它每次可以向左、右、上、下移动一格（不能移动到方格外），也不能进入行坐标和列坐标的数位之和大于k的格子。例如，当k为18时，机器人能够进入方格 [35, 37] ，因为3+5+3+7=18。但它不能进入方格 [35, 38]，因为3+5+3+8=19。请问该机器人能够到达多少个格子？\n\n### 示例 1：\n\n```\n输入：m = 2, n = 3, k = 1\n输出：3\n```\n\n### 示例 2：\n\n```\n输入：m = 3, n = 1, k = 0\n输出：1\n```\n\n### 提示：\n\n- `1 <= n,m <= 100`\n- `0 <= k <= 20`\n\n## 题解\n\n### 解法一 DFS\n\n- 深搜+剪枝\n- 优化技巧就是只判断右边和下边就行了，因为左和上是一定会在搜索的过程中被包括的\n\n​        <font color=purple>注意[[1]*n]*m 是浅拷贝复制（“=”复制）因此如果一个元素改变了，此列都会改变</font>\n\n```python\nclass Solution(object):\n    def movingCount(self, m, n, k):\n        \"\"\"\n        :type m: int\n        :type n: int\n        :type k: int\n        :rtype: int\n        \"\"\"\n        \n        fflag = [[1 for _ in range(n)] for _ in range(m)]  \n        def numsum(i,j):\n            sum=0\n            while(i):\n                sum+=(i%10)\n                i = i//10\n            while(j):\n                sum+=(j%10)\n                j = j//10\n            return sum\n        def dfs(i,j):\n            if (not m>i>=0) or (not n>j>=0) or (fflag[i][j]==0) or (numsum(i,j)>k): \n                return 0\n            fflag[i][j] = 0\n            # return 1+dfs(i+1,j)+dfs(i-1,j)+dfs(i,j+1)+dfs(i,j-1)\n            return 1+dfs(i+1,j)+dfs(i,j+1)\n\n        return dfs(0,0)\n```\n\n### 解法二 递推\n\n#### 思路\n\n考虑到方法一提到搜索的方向只需要朝下或朝右，我们可以得出一种递推的求解方法。\n\n#### 算法\n\n定义 `vis[i][j]` 为 `(i, j)` 坐标是否可达，如果可达返回 1，否则返回 0。\n\n首先 (i, j) 本身需要可以进入，因此需要先判断 i 和 j 的数位之和是否大于 k ，如果大于的话直接设置 `vis[i][j]` 为不可达即可。\n\n否则，前面提到搜索方向只需朝下或朝右，因此 (i, j) 的格子只会从 (i - 1, j) 或者 (i, j - 1) 两个格子走过来（不考虑边界条件），那么 `vis[i][j]` 是否可达的状态则可由如下公式计算得到：\n\n即只要有一个格子可达，那么 (i, j) 这个格子就是可达的，因此我们只要遍历所有格子，递推计算出它们是否可达然后用变量 ans 记录可达的格子数量即可。\n\n初始条件 `vis[i][j] = 1` ，递推计算的过程中注意边界的处理。\n\n```python\ndef digitsum(n):\n    ans = 0\n    while n:\n        ans += n % 10\n        n //= 10\n    return ans\n\nclass Solution:\n    def movingCount(self, m: int, n: int, k: int) -> int:\n        vis = set([(0, 0)])\n        for i in range(m):\n            for j in range(n):\n                if ((i - 1, j) in vis or (i, j - 1) in vis) and digitsum(i) + digitsum(j) <= k:\n                    vis.add((i, j))\n        return len(vis)\n```\n\n### 解法三\n\n#### 思路和算法\n\n我们将行坐标和列坐标数位之和大于 k 的格子看作障碍物，那么这道题就是一道很传统的搜索题目，我们可以使用广度优先搜索或者深度优先搜索来解决它，本文选择使用广度优先搜索的方法来讲解。\n\n那么如何计算一个数的数位之和呢？我们只需要对数 x 每次对 10 取余，就能知道数 x 的个位数是多少，然后再将 x 除 10，这个操作等价于将 x 的十进制数向右移一位，删除个位数（类似于二进制中的 >> 右移运算符），不断重复直到 x 为 0 时结束。\n\n同时这道题还有一个隐藏的优化：我们在搜索的过程中搜索方向可以缩减为向右和向下，而不必再向上和向左进行搜索。如下图，我们展示了 16 * 16 的地图随着限制条件 k 的放大，可行方格的变化趋势，每个格子里的值为行坐标和列坐标的数位之和，蓝色方格代表非障碍方格，即其值小于等于当前的限制条件 k。我们可以发现随着限制条件 k 的增大，(0, 0) 所在的蓝色方格区域内新加入的非障碍方格都可以由上方或左方的格子移动一步得到。而其他不连通的蓝色方格区域会随着 k 的增大而连通，且连通的时候也是由上方或左方的格子移动一步得到，因此我们可以将我们的搜索方向缩减为向右或向下。\n\n```python\ndef digitsum(n):\n    ans = 0\n    while n:\n        ans += n % 10\n        n //= 10\n    return ans\n\nclass Solution:\n    def movingCount(self, m: int, n: int, k: int) -> int:\n        from queue import Queue\n        q = Queue()\n        q.put((0, 0))\n        s = set()\n        while not q.empty():\n            x, y = q.get()\n            if (x, y) not in s and 0 <= x < m and 0 <= y < n and digitsum(x) + digitsum(y) <= k:\n                s.add((x, y))\n                for nx, ny in [(x + 1, y), (x, y + 1)]:\n                    q.put((nx, ny))\n        return len(s)\n```\n\n#### 复杂度分析\n\n##### 时间复杂度：O(mn)\n\n其中 m 为方格的行数，n 为方格的列数。考虑所有格子都能进入，那么搜索的时候一个格子最多会被访问的次数为常数，所以时间复杂度为 O(2mn)=O(mn)。\n\n##### 空间复杂度：O(mn)\n\n其中 m 为方格的行数，n 为方格的列数。搜索的时候需要一个大小为 O(mn)的标记结构用来标记每个格子是否被走过。\n\n","slug":"leetcode/leetcode-offer13","published":1,"updated":"2021-08-14T10:28:23.532Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxocu0020ugx40h126mif","content":"<blockquote>\n<p>机器人的运动范围</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>地上有一个m行n列的方格，从坐标 [0,0] 到坐标 [m-1,n-1] 。一个机器人从坐标 [0, 0] 的格子开始移动，它每次可以向左、右、上、下移动一格（不能移动到方格外），也不能进入行坐标和列坐标的数位之和大于k的格子。例如，当k为18时，机器人能够进入方格 [35, 37] ，因为3+5+3+7=18。但它不能进入方格 [35, 38]，因为3+5+3+8=19。请问该机器人能够到达多少个格子？</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight nix\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">输入：<span class=\"hljs-attr\">m</span> = <span class=\"hljs-number\">2</span>, <span class=\"hljs-attr\">n</span> = <span class=\"hljs-number\">3</span>, <span class=\"hljs-attr\">k</span> = <span class=\"hljs-number\">1</span><br>输出：<span class=\"hljs-number\">3</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight nix\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">输入：<span class=\"hljs-attr\">m</span> = <span class=\"hljs-number\">3</span>, <span class=\"hljs-attr\">n</span> = <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">k</span> = <span class=\"hljs-number\">0</span><br>输出：<span class=\"hljs-number\">1</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li><code>1 &lt;= n,m &lt;= 100</code></li>\n<li><code>0 &lt;= k &lt;= 20</code></li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<h3 id=\"解法一-DFS\">解法一 DFS</h3>\n<ul>\n<li>深搜+剪枝</li>\n<li>优化技巧就是只判断右边和下边就行了，因为左和上是一定会在搜索的过程中被包括的</li>\n</ul>\n<p>​        <font color=\"purple\">注意[[1]*n]*m 是浅拷贝复制（“=”复制）因此如果一个元素改变了，此列都会改变</font></p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">object</span></span>):</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">movingCount</span>(<span class=\"hljs-params\">self, m, n, k</span>):</span><br>        <span class=\"hljs-string\">\"\"\"</span><br><span class=\"hljs-string\">        :type m: int</span><br><span class=\"hljs-string\">        :type n: int</span><br><span class=\"hljs-string\">        :type k: int</span><br><span class=\"hljs-string\">        :rtype: int</span><br><span class=\"hljs-string\">        \"\"\"</span><br>        <br>        fflag = [[<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(n)] <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(m)]  <br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">numsum</span>(<span class=\"hljs-params\">i,j</span>):</span><br>            <span class=\"hljs-built_in\">sum</span>=<span class=\"hljs-number\">0</span><br>            <span class=\"hljs-keyword\">while</span>(i):<br>                <span class=\"hljs-built_in\">sum</span>+=(i%<span class=\"hljs-number\">10</span>)<br>                i = i//<span class=\"hljs-number\">10</span><br>            <span class=\"hljs-keyword\">while</span>(j):<br>                <span class=\"hljs-built_in\">sum</span>+=(j%<span class=\"hljs-number\">10</span>)<br>                j = j//<span class=\"hljs-number\">10</span><br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">sum</span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">dfs</span>(<span class=\"hljs-params\">i,j</span>):</span><br>            <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">not</span> m&gt;i&gt;=<span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">or</span> (<span class=\"hljs-keyword\">not</span> n&gt;j&gt;=<span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">or</span> (fflag[i][j]==<span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">or</span> (numsum(i,j)&gt;k): <br>                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span><br>            fflag[i][j] = <span class=\"hljs-number\">0</span><br>            <span class=\"hljs-comment\"># return 1+dfs(i+1,j)+dfs(i-1,j)+dfs(i,j+1)+dfs(i,j-1)</span><br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>+dfs(i+<span class=\"hljs-number\">1</span>,j)+dfs(i,j+<span class=\"hljs-number\">1</span>)<br><br>        <span class=\"hljs-keyword\">return</span> dfs(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>)<br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"解法二-递推\">解法二 递推</h3>\n<h4 id=\"思路\">思路</h4>\n<p>考虑到方法一提到搜索的方向只需要朝下或朝右，我们可以得出一种递推的求解方法。</p>\n<h4 id=\"算法\">算法</h4>\n<p>定义 <code>vis[i][j]</code> 为 <code>(i, j)</code> 坐标是否可达，如果可达返回 1，否则返回 0。</p>\n<p>首先 (i, j) 本身需要可以进入，因此需要先判断 i 和 j 的数位之和是否大于 k ，如果大于的话直接设置 <code>vis[i][j]</code> 为不可达即可。</p>\n<p>否则，前面提到搜索方向只需朝下或朝右，因此 (i, j) 的格子只会从 (i - 1, j) 或者 (i, j - 1) 两个格子走过来（不考虑边界条件），那么 <code>vis[i][j]</code> 是否可达的状态则可由如下公式计算得到：</p>\n<p>即只要有一个格子可达，那么 (i, j) 这个格子就是可达的，因此我们只要遍历所有格子，递推计算出它们是否可达然后用变量 ans 记录可达的格子数量即可。</p>\n<p>初始条件 <code>vis[i][j] = 1</code> ，递推计算的过程中注意边界的处理。</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">digitsum</span>(<span class=\"hljs-params\">n</span>):</span><br>    ans = <span class=\"hljs-number\">0</span><br>    <span class=\"hljs-keyword\">while</span> n:<br>        ans += n % <span class=\"hljs-number\">10</span><br>        n //= <span class=\"hljs-number\">10</span><br>    <span class=\"hljs-keyword\">return</span> ans<br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">movingCount</span>(<span class=\"hljs-params\">self, m: <span class=\"hljs-built_in\">int</span>, n: <span class=\"hljs-built_in\">int</span>, k: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        vis = <span class=\"hljs-built_in\">set</span>([(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>)])<br>        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(m):<br>            <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(n):<br>                <span class=\"hljs-keyword\">if</span> ((i - <span class=\"hljs-number\">1</span>, j) <span class=\"hljs-keyword\">in</span> vis <span class=\"hljs-keyword\">or</span> (i, j - <span class=\"hljs-number\">1</span>) <span class=\"hljs-keyword\">in</span> vis) <span class=\"hljs-keyword\">and</span> digitsum(i) + digitsum(j) &lt;= k:<br>                    vis.add((i, j))<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">len</span>(vis)<br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"解法三\">解法三</h3>\n<h4 id=\"思路和算法\">思路和算法</h4>\n<p>我们将行坐标和列坐标数位之和大于 k 的格子看作障碍物，那么这道题就是一道很传统的搜索题目，我们可以使用广度优先搜索或者深度优先搜索来解决它，本文选择使用广度优先搜索的方法来讲解。</p>\n<p>那么如何计算一个数的数位之和呢？我们只需要对数 x 每次对 10 取余，就能知道数 x 的个位数是多少，然后再将 x 除 10，这个操作等价于将 x 的十进制数向右移一位，删除个位数（类似于二进制中的 &gt;&gt; 右移运算符），不断重复直到 x 为 0 时结束。</p>\n<p>同时这道题还有一个隐藏的优化：我们在搜索的过程中搜索方向可以缩减为向右和向下，而不必再向上和向左进行搜索。如下图，我们展示了 16 * 16 的地图随着限制条件 k 的放大，可行方格的变化趋势，每个格子里的值为行坐标和列坐标的数位之和，蓝色方格代表非障碍方格，即其值小于等于当前的限制条件 k。我们可以发现随着限制条件 k 的增大，(0, 0) 所在的蓝色方格区域内新加入的非障碍方格都可以由上方或左方的格子移动一步得到。而其他不连通的蓝色方格区域会随着 k 的增大而连通，且连通的时候也是由上方或左方的格子移动一步得到，因此我们可以将我们的搜索方向缩减为向右或向下。</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">digitsum</span>(<span class=\"hljs-params\">n</span>):</span><br>    ans = <span class=\"hljs-number\">0</span><br>    <span class=\"hljs-keyword\">while</span> n:<br>        ans += n % <span class=\"hljs-number\">10</span><br>        n //= <span class=\"hljs-number\">10</span><br>    <span class=\"hljs-keyword\">return</span> ans<br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">movingCount</span>(<span class=\"hljs-params\">self, m: <span class=\"hljs-built_in\">int</span>, n: <span class=\"hljs-built_in\">int</span>, k: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        <span class=\"hljs-keyword\">from</span> queue <span class=\"hljs-keyword\">import</span> Queue<br>        q = Queue()<br>        q.put((<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>))<br>        s = <span class=\"hljs-built_in\">set</span>()<br>        <span class=\"hljs-keyword\">while</span> <span class=\"hljs-keyword\">not</span> q.empty():<br>            x, y = q.get()<br>            <span class=\"hljs-keyword\">if</span> (x, y) <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">in</span> s <span class=\"hljs-keyword\">and</span> <span class=\"hljs-number\">0</span> &lt;= x &lt; m <span class=\"hljs-keyword\">and</span> <span class=\"hljs-number\">0</span> &lt;= y &lt; n <span class=\"hljs-keyword\">and</span> digitsum(x) + digitsum(y) &lt;= k:<br>                s.add((x, y))<br>                <span class=\"hljs-keyword\">for</span> nx, ny <span class=\"hljs-keyword\">in</span> [(x + <span class=\"hljs-number\">1</span>, y), (x, y + <span class=\"hljs-number\">1</span>)]:<br>                    q.put((nx, ny))<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">len</span>(s)<br></code></pre></td></tr></tbody></table></figure>\n<h4 id=\"复杂度分析\">复杂度分析</h4>\n<h5 id=\"时间复杂度：O-mn\">时间复杂度：O(mn)</h5>\n<p>其中 m 为方格的行数，n 为方格的列数。考虑所有格子都能进入，那么搜索的时候一个格子最多会被访问的次数为常数，所以时间复杂度为 O(2mn)=O(mn)。</p>\n<h5 id=\"空间复杂度：O-mn\">空间复杂度：O(mn)</h5>\n<p>其中 m 为方格的行数，n 为方格的列数。搜索的时候需要一个大小为 O(mn)的标记结构用来标记每个格子是否被走过。</p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>机器人的运动范围</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>地上有一个m行n列的方格，从坐标 [0,0] 到坐标 [m-1,n-1] 。一个机器人从坐标 [0, 0] 的格子开始移动，它每次可以向左、右、上、下移动一格（不能移动到方格外），也不能进入行坐标和列坐标的数位之和大于k的格子。例如，当k为18时，机器人能够进入方格 [35, 37] ，因为3+5+3+7=18。但它不能进入方格 [35, 38]，因为3+5+3+8=19。请问该机器人能够到达多少个格子？</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">输入：<span class=\"hljs-attr\">m</span> = <span class=\"hljs-number\">2</span>, <span class=\"hljs-attr\">n</span> = <span class=\"hljs-number\">3</span>, <span class=\"hljs-attr\">k</span> = <span class=\"hljs-number\">1</span><br>输出：<span class=\"hljs-number\">3</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">输入：<span class=\"hljs-attr\">m</span> = <span class=\"hljs-number\">3</span>, <span class=\"hljs-attr\">n</span> = <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">k</span> = <span class=\"hljs-number\">0</span><br>输出：<span class=\"hljs-number\">1</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li><code>1 &lt;= n,m &lt;= 100</code></li>\n<li><code>0 &lt;= k &lt;= 20</code></li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<h3 id=\"解法一-DFS\">解法一 DFS</h3>\n<ul>\n<li>深搜+剪枝</li>\n<li>优化技巧就是只判断右边和下边就行了，因为左和上是一定会在搜索的过程中被包括的</li>\n</ul>\n<p>​        <font color=purple>注意[[1]*n]*m 是浅拷贝复制（“=”复制）因此如果一个元素改变了，此列都会改变</font></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">object</span></span>):</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">movingCount</span>(<span class=\"hljs-params\">self, m, n, k</span>):</span><br>        <span class=\"hljs-string\">&quot;&quot;&quot;</span><br><span class=\"hljs-string\">        :type m: int</span><br><span class=\"hljs-string\">        :type n: int</span><br><span class=\"hljs-string\">        :type k: int</span><br><span class=\"hljs-string\">        :rtype: int</span><br><span class=\"hljs-string\">        &quot;&quot;&quot;</span><br>        <br>        fflag = [[<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(n)] <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(m)]  <br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">numsum</span>(<span class=\"hljs-params\">i,j</span>):</span><br>            <span class=\"hljs-built_in\">sum</span>=<span class=\"hljs-number\">0</span><br>            <span class=\"hljs-keyword\">while</span>(i):<br>                <span class=\"hljs-built_in\">sum</span>+=(i%<span class=\"hljs-number\">10</span>)<br>                i = i//<span class=\"hljs-number\">10</span><br>            <span class=\"hljs-keyword\">while</span>(j):<br>                <span class=\"hljs-built_in\">sum</span>+=(j%<span class=\"hljs-number\">10</span>)<br>                j = j//<span class=\"hljs-number\">10</span><br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">sum</span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">dfs</span>(<span class=\"hljs-params\">i,j</span>):</span><br>            <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">not</span> m&gt;i&gt;=<span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">or</span> (<span class=\"hljs-keyword\">not</span> n&gt;j&gt;=<span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">or</span> (fflag[i][j]==<span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">or</span> (numsum(i,j)&gt;k): <br>                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span><br>            fflag[i][j] = <span class=\"hljs-number\">0</span><br>            <span class=\"hljs-comment\"># return 1+dfs(i+1,j)+dfs(i-1,j)+dfs(i,j+1)+dfs(i,j-1)</span><br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>+dfs(i+<span class=\"hljs-number\">1</span>,j)+dfs(i,j+<span class=\"hljs-number\">1</span>)<br><br>        <span class=\"hljs-keyword\">return</span> dfs(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>)<br></code></pre></td></tr></table></figure>\n<h3 id=\"解法二-递推\">解法二 递推</h3>\n<h4 id=\"思路\">思路</h4>\n<p>考虑到方法一提到搜索的方向只需要朝下或朝右，我们可以得出一种递推的求解方法。</p>\n<h4 id=\"算法\">算法</h4>\n<p>定义 <code>vis[i][j]</code> 为 <code>(i, j)</code> 坐标是否可达，如果可达返回 1，否则返回 0。</p>\n<p>首先 (i, j) 本身需要可以进入，因此需要先判断 i 和 j 的数位之和是否大于 k ，如果大于的话直接设置 <code>vis[i][j]</code> 为不可达即可。</p>\n<p>否则，前面提到搜索方向只需朝下或朝右，因此 (i, j) 的格子只会从 (i - 1, j) 或者 (i, j - 1) 两个格子走过来（不考虑边界条件），那么 <code>vis[i][j]</code> 是否可达的状态则可由如下公式计算得到：</p>\n<p>即只要有一个格子可达，那么 (i, j) 这个格子就是可达的，因此我们只要遍历所有格子，递推计算出它们是否可达然后用变量 ans 记录可达的格子数量即可。</p>\n<p>初始条件 <code>vis[i][j] = 1</code> ，递推计算的过程中注意边界的处理。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">digitsum</span>(<span class=\"hljs-params\">n</span>):</span><br>    ans = <span class=\"hljs-number\">0</span><br>    <span class=\"hljs-keyword\">while</span> n:<br>        ans += n % <span class=\"hljs-number\">10</span><br>        n //= <span class=\"hljs-number\">10</span><br>    <span class=\"hljs-keyword\">return</span> ans<br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">movingCount</span>(<span class=\"hljs-params\">self, m: <span class=\"hljs-built_in\">int</span>, n: <span class=\"hljs-built_in\">int</span>, k: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        vis = <span class=\"hljs-built_in\">set</span>([(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>)])<br>        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(m):<br>            <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(n):<br>                <span class=\"hljs-keyword\">if</span> ((i - <span class=\"hljs-number\">1</span>, j) <span class=\"hljs-keyword\">in</span> vis <span class=\"hljs-keyword\">or</span> (i, j - <span class=\"hljs-number\">1</span>) <span class=\"hljs-keyword\">in</span> vis) <span class=\"hljs-keyword\">and</span> digitsum(i) + digitsum(j) &lt;= k:<br>                    vis.add((i, j))<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">len</span>(vis)<br></code></pre></td></tr></table></figure>\n<h3 id=\"解法三\">解法三</h3>\n<h4 id=\"思路和算法\">思路和算法</h4>\n<p>我们将行坐标和列坐标数位之和大于 k 的格子看作障碍物，那么这道题就是一道很传统的搜索题目，我们可以使用广度优先搜索或者深度优先搜索来解决它，本文选择使用广度优先搜索的方法来讲解。</p>\n<p>那么如何计算一个数的数位之和呢？我们只需要对数 x 每次对 10 取余，就能知道数 x 的个位数是多少，然后再将 x 除 10，这个操作等价于将 x 的十进制数向右移一位，删除个位数（类似于二进制中的 &gt;&gt; 右移运算符），不断重复直到 x 为 0 时结束。</p>\n<p>同时这道题还有一个隐藏的优化：我们在搜索的过程中搜索方向可以缩减为向右和向下，而不必再向上和向左进行搜索。如下图，我们展示了 16 * 16 的地图随着限制条件 k 的放大，可行方格的变化趋势，每个格子里的值为行坐标和列坐标的数位之和，蓝色方格代表非障碍方格，即其值小于等于当前的限制条件 k。我们可以发现随着限制条件 k 的增大，(0, 0) 所在的蓝色方格区域内新加入的非障碍方格都可以由上方或左方的格子移动一步得到。而其他不连通的蓝色方格区域会随着 k 的增大而连通，且连通的时候也是由上方或左方的格子移动一步得到，因此我们可以将我们的搜索方向缩减为向右或向下。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">digitsum</span>(<span class=\"hljs-params\">n</span>):</span><br>    ans = <span class=\"hljs-number\">0</span><br>    <span class=\"hljs-keyword\">while</span> n:<br>        ans += n % <span class=\"hljs-number\">10</span><br>        n //= <span class=\"hljs-number\">10</span><br>    <span class=\"hljs-keyword\">return</span> ans<br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">movingCount</span>(<span class=\"hljs-params\">self, m: <span class=\"hljs-built_in\">int</span>, n: <span class=\"hljs-built_in\">int</span>, k: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        <span class=\"hljs-keyword\">from</span> queue <span class=\"hljs-keyword\">import</span> Queue<br>        q = Queue()<br>        q.put((<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>))<br>        s = <span class=\"hljs-built_in\">set</span>()<br>        <span class=\"hljs-keyword\">while</span> <span class=\"hljs-keyword\">not</span> q.empty():<br>            x, y = q.get()<br>            <span class=\"hljs-keyword\">if</span> (x, y) <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">in</span> s <span class=\"hljs-keyword\">and</span> <span class=\"hljs-number\">0</span> &lt;= x &lt; m <span class=\"hljs-keyword\">and</span> <span class=\"hljs-number\">0</span> &lt;= y &lt; n <span class=\"hljs-keyword\">and</span> digitsum(x) + digitsum(y) &lt;= k:<br>                s.add((x, y))<br>                <span class=\"hljs-keyword\">for</span> nx, ny <span class=\"hljs-keyword\">in</span> [(x + <span class=\"hljs-number\">1</span>, y), (x, y + <span class=\"hljs-number\">1</span>)]:<br>                    q.put((nx, ny))<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">len</span>(s)<br></code></pre></td></tr></table></figure>\n<h4 id=\"复杂度分析\">复杂度分析</h4>\n<h5 id=\"时间复杂度：O-mn\">时间复杂度：O(mn)</h5>\n<p>其中 m 为方格的行数，n 为方格的列数。考虑所有格子都能进入，那么搜索的时候一个格子最多会被访问的次数为常数，所以时间复杂度为 O(2mn)=O(mn)。</p>\n<h5 id=\"空间复杂度：O-mn\">空间复杂度：O(mn)</h5>\n<p>其中 m 为方格的行数，n 为方格的列数。搜索的时候需要一个大小为 O(mn)的标记结构用来标记每个格子是否被走过。</p>\n"},{"title":"剑指offer14.1 剪绳子1","date":"2021-08-17T15:46:41.000Z","_content":"\n>剪绳子\n\n## 题目\n\n给你一根长度为 n 的绳子，请把绳子剪成整数长度的 m 段（m、n都是整数，n>1并且m>1），每段绳子的长度记为 k[0],k[1]...k[m-1] 。请问 k[0]*k[1]*...*k[m-1] 可能的最大乘积是多少？例如，当绳子的长度是8时，我们把它剪成长度分别为2、3、3的三段，此时得到的最大乘积是18。\n\n#### 示例 1：\n\n```\n输入: 2\n输出: 1\n解释: 2 = 1 + 1, 1 × 1 = 1\n```\n\n#### 示例 2：\n\n```\n输入: 10\n输出: 36\n解释: 10 = 3 + 3 + 4, 3 × 3 × 4 = 36\n```\n\n##### 提示：\n\n- `2 <= n <= 58`\n\n#### 题解\n\n该题采用动态规划比较好理解，dp[i]表示长度为i的绳子分成m的最大乘积。j表示第一段的长度，遍历j的取值（可以直接从2开始），在剩余的i-j（**缩小范围**）的长度选择不切分或者最大乘积，即dp\\[i][j] = max(j\\*(i-j),j\\*dp[i-j])。**但是实际上“【j】”并不关心**，因此可以与dp[i]比较,选择最大的更新dp[i]即可。\n\n```python\nclass Solution:\n    def cuttingRope(self, n: int) -> int:\n        dp = [1 for _ in range(n+1)]  # 表示长度为n的绳子得到的最大乘积\n        dp[2] = 1\n        for i in range(3,n+1):\n            for j in range(2,i): # 第一段\n                dp[i] = max(dp[i],max(j*(i-j),j*dp[i-j])) \n                #向前获取信息，在选定j之后，注意还要比较dp[i]本身，以及在第一段j的基础上剩下的是否切\n        return dp[n]\n\n```\n\n","source":"_posts/leetcode/leetcode-offer14-1.md","raw":"---\ntitle: 剑指offer14.1 剪绳子1\ntags: [剑指,动态规划,idea]\ncategories: [剑指,动态规划]\ndate: 2021-08-17 23:46:41\n---\n\n>剪绳子\n\n## 题目\n\n给你一根长度为 n 的绳子，请把绳子剪成整数长度的 m 段（m、n都是整数，n>1并且m>1），每段绳子的长度记为 k[0],k[1]...k[m-1] 。请问 k[0]*k[1]*...*k[m-1] 可能的最大乘积是多少？例如，当绳子的长度是8时，我们把它剪成长度分别为2、3、3的三段，此时得到的最大乘积是18。\n\n#### 示例 1：\n\n```\n输入: 2\n输出: 1\n解释: 2 = 1 + 1, 1 × 1 = 1\n```\n\n#### 示例 2：\n\n```\n输入: 10\n输出: 36\n解释: 10 = 3 + 3 + 4, 3 × 3 × 4 = 36\n```\n\n##### 提示：\n\n- `2 <= n <= 58`\n\n#### 题解\n\n该题采用动态规划比较好理解，dp[i]表示长度为i的绳子分成m的最大乘积。j表示第一段的长度，遍历j的取值（可以直接从2开始），在剩余的i-j（**缩小范围**）的长度选择不切分或者最大乘积，即dp\\[i][j] = max(j\\*(i-j),j\\*dp[i-j])。**但是实际上“【j】”并不关心**，因此可以与dp[i]比较,选择最大的更新dp[i]即可。\n\n```python\nclass Solution:\n    def cuttingRope(self, n: int) -> int:\n        dp = [1 for _ in range(n+1)]  # 表示长度为n的绳子得到的最大乘积\n        dp[2] = 1\n        for i in range(3,n+1):\n            for j in range(2,i): # 第一段\n                dp[i] = max(dp[i],max(j*(i-j),j*dp[i-j])) \n                #向前获取信息，在选定j之后，注意还要比较dp[i]本身，以及在第一段j的基础上剩下的是否切\n        return dp[n]\n\n```\n\n","slug":"leetcode/leetcode-offer14-1","published":1,"updated":"2021-08-18T02:08:46.305Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxocv0024ugx4faelagqs","content":"<blockquote>\n<p>剪绳子</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>给你一根长度为 n 的绳子，请把绳子剪成整数长度的 m 段（m、n都是整数，n&gt;1并且m&gt;1），每段绳子的长度记为 k[0],k[1]…k[m-1] 。请问 k[0]<em>k[1]</em>…*k[m-1] 可能的最大乘积是多少？例如，当绳子的长度是8时，我们把它剪成长度分别为2、3、3的三段，此时得到的最大乘积是18。</p>\n<h4 id=\"示例-1：\">示例 1：</h4>\n<figure class=\"highlight tap\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tap\">输入: 2<br>输出: 1<br>解释:<span class=\"hljs-number\"> 2 </span>=<span class=\"hljs-number\"> 1 </span>+ 1,<span class=\"hljs-number\"> 1 </span>×<span class=\"hljs-number\"> 1 </span>= 1<br></code></pre></td></tr></tbody></table></figure>\n<h4 id=\"示例-2：\">示例 2：</h4>\n<figure class=\"highlight tap\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tap\">输入: 10<br>输出: 36<br>解释:<span class=\"hljs-number\"> 10 </span>=<span class=\"hljs-number\"> 3 </span>+<span class=\"hljs-number\"> 3 </span>+ 4,<span class=\"hljs-number\"> 3 </span>×<span class=\"hljs-number\"> 3 </span>×<span class=\"hljs-number\"> 4 </span>= 36<br></code></pre></td></tr></tbody></table></figure>\n<h5 id=\"提示：\">提示：</h5>\n<ul>\n<li><code>2 &lt;= n &lt;= 58</code></li>\n</ul>\n<h4 id=\"题解\">题解</h4>\n<p>该题采用动态规划比较好理解，dp[i]表示长度为i的绳子分成m的最大乘积。j表示第一段的长度，遍历j的取值（可以直接从2开始），在剩余的i-j（<strong>缩小范围</strong>）的长度选择不切分或者最大乘积，即dp[i][j] = max(j*(i-j),j*dp[i-j])。<strong>但是实际上“【j】”并不关心</strong>，因此可以与dp[i]比较,选择最大的更新dp[i]即可。</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">cuttingRope</span>(<span class=\"hljs-params\">self, n: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        dp = [<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(n+<span class=\"hljs-number\">1</span>)]  <span class=\"hljs-comment\"># 表示长度为n的绳子得到的最大乘积</span><br>        dp[<span class=\"hljs-number\">2</span>] = <span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">3</span>,n+<span class=\"hljs-number\">1</span>):<br>            <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">2</span>,i): <span class=\"hljs-comment\"># 第一段</span><br>                dp[i] = <span class=\"hljs-built_in\">max</span>(dp[i],<span class=\"hljs-built_in\">max</span>(j*(i-j),j*dp[i-j])) <br>                <span class=\"hljs-comment\">#向前获取信息，在选定j之后，注意还要比较dp[i]本身，以及在第一段j的基础上剩下的是否切</span><br>        <span class=\"hljs-keyword\">return</span> dp[n]<br><br></code></pre></td></tr></tbody></table></figure>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>剪绳子</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>给你一根长度为 n 的绳子，请把绳子剪成整数长度的 m 段（m、n都是整数，n&gt;1并且m&gt;1），每段绳子的长度记为 k[0],k[1]…k[m-1] 。请问 k[0]<em>k[1]</em>…*k[m-1] 可能的最大乘积是多少？例如，当绳子的长度是8时，我们把它剪成长度分别为2、3、3的三段，此时得到的最大乘积是18。</p>\n<h4 id=\"示例-1：\">示例 1：</h4>\n<figure class=\"highlight tap\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tap\">输入: 2<br>输出: 1<br>解释:<span class=\"hljs-number\"> 2 </span>=<span class=\"hljs-number\"> 1 </span>+ 1,<span class=\"hljs-number\"> 1 </span>×<span class=\"hljs-number\"> 1 </span>= 1<br></code></pre></td></tr></table></figure>\n<h4 id=\"示例-2：\">示例 2：</h4>\n<figure class=\"highlight tap\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tap\">输入: 10<br>输出: 36<br>解释:<span class=\"hljs-number\"> 10 </span>=<span class=\"hljs-number\"> 3 </span>+<span class=\"hljs-number\"> 3 </span>+ 4,<span class=\"hljs-number\"> 3 </span>×<span class=\"hljs-number\"> 3 </span>×<span class=\"hljs-number\"> 4 </span>= 36<br></code></pre></td></tr></table></figure>\n<h5 id=\"提示：\">提示：</h5>\n<ul>\n<li><code>2 &lt;= n &lt;= 58</code></li>\n</ul>\n<h4 id=\"题解\">题解</h4>\n<p>该题采用动态规划比较好理解，dp[i]表示长度为i的绳子分成m的最大乘积。j表示第一段的长度，遍历j的取值（可以直接从2开始），在剩余的i-j（<strong>缩小范围</strong>）的长度选择不切分或者最大乘积，即dp[i][j] = max(j*(i-j),j*dp[i-j])。<strong>但是实际上“【j】”并不关心</strong>，因此可以与dp[i]比较,选择最大的更新dp[i]即可。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">cuttingRope</span>(<span class=\"hljs-params\">self, n: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        dp = [<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(n+<span class=\"hljs-number\">1</span>)]  <span class=\"hljs-comment\"># 表示长度为n的绳子得到的最大乘积</span><br>        dp[<span class=\"hljs-number\">2</span>] = <span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">3</span>,n+<span class=\"hljs-number\">1</span>):<br>            <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">2</span>,i): <span class=\"hljs-comment\"># 第一段</span><br>                dp[i] = <span class=\"hljs-built_in\">max</span>(dp[i],<span class=\"hljs-built_in\">max</span>(j*(i-j),j*dp[i-j])) <br>                <span class=\"hljs-comment\">#向前获取信息，在选定j之后，注意还要比较dp[i]本身，以及在第一段j的基础上剩下的是否切</span><br>        <span class=\"hljs-keyword\">return</span> dp[n]<br><br></code></pre></td></tr></table></figure>\n"},{"title":"剑指offer14.2 剪绳子2","date":"2021-08-17T16:20:17.000Z","_content":"\n> 剪绳子2\n\n## 题目\n\n给你一根长度为 n 的绳子，请把绳子剪成整数长度的 m 段（m、n都是整数，n>1并且m>1），每段绳子的长度记为 k[0],k[1]...k[m - 1] .请问 k[0]*k[1]*...*k[m - 1] 可能的最大乘积是多少？例如，当绳子的长度是8时，我们把它剪成长度分别为2、3、3的三段，此时得到的最大乘积是18。\n\n答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。\n\n### 示例 1：\n\n```\n输入: 2\n输出: 1\n解释: 2 = 1 + 1, 1 × 1 = 1\n```\n\n### 示例 2：\n\n```\n输入: 10\n输出: 36\n解释: 10 = 3 + 3 + 4, 3 × 3 × 4 = 36\n```\n\n### 提示：\n\n- `2 <= n <= 1000`\n\n## 题解\n\n使用动态规划具体参照剪绳子1\n\n```python\nclass Solution:\n    def cuttingRope(self, n: int) -> int:\n        dp = [0 for i in range(n+1)]\n        dp[2] = 1\n        for i in range(3,n+1):\n            for j in range(2,i):\n                dp[i] = max(dp[i],max(j*(i-j),j*dp[i-j]))\n        return dp[n]%1000000007\n```\n\n但是这种方式时间复杂度较大。\n\n步骤如下：(数学可以证明尽量分成多的3)[参见题解](https://leetcode-cn.com/problems/jian-sheng-zi-lcof/solution/mian-shi-ti-14-i-jian-sheng-zi-tan-xin-si-xiang-by/)\n\n- 如果 n == 2，返回1，如果 n == 3，返回2，两个可以合并成n小于4的时候返回n - 1\n- 如果 n == 4，返回4\n- 如果 n > 4，分成尽可能多的长度为3的小段，每次循环长度n减去3，乘积res乘以3；最后返回时乘以小于等于4的最后一小段；每次乘法操作后记得取余就行\n以上2和3可以合并\n\n```python\nclass Solution:\n    def cuttingRope(self, n: int) -> int:\n        if n < 4:\n            return n - 1\n        res = 1\n        while n > 4: # 找寻尽量多的3\n            res = res * 3 % 1000000007\n            n -= 3\n        return res * n % 1000000007 #乘以剩余的\n```\n\n","source":"_posts/leetcode/leetcode-offer14-2.md","raw":"---\ntitle: 剑指offer14.2 剪绳子2\ntags: [剑指,动态规划]\ncategories: [剑指,动态规划]\ndate: 2021-08-18 00:20:17\n---\n\n> 剪绳子2\n\n## 题目\n\n给你一根长度为 n 的绳子，请把绳子剪成整数长度的 m 段（m、n都是整数，n>1并且m>1），每段绳子的长度记为 k[0],k[1]...k[m - 1] .请问 k[0]*k[1]*...*k[m - 1] 可能的最大乘积是多少？例如，当绳子的长度是8时，我们把它剪成长度分别为2、3、3的三段，此时得到的最大乘积是18。\n\n答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。\n\n### 示例 1：\n\n```\n输入: 2\n输出: 1\n解释: 2 = 1 + 1, 1 × 1 = 1\n```\n\n### 示例 2：\n\n```\n输入: 10\n输出: 36\n解释: 10 = 3 + 3 + 4, 3 × 3 × 4 = 36\n```\n\n### 提示：\n\n- `2 <= n <= 1000`\n\n## 题解\n\n使用动态规划具体参照剪绳子1\n\n```python\nclass Solution:\n    def cuttingRope(self, n: int) -> int:\n        dp = [0 for i in range(n+1)]\n        dp[2] = 1\n        for i in range(3,n+1):\n            for j in range(2,i):\n                dp[i] = max(dp[i],max(j*(i-j),j*dp[i-j]))\n        return dp[n]%1000000007\n```\n\n但是这种方式时间复杂度较大。\n\n步骤如下：(数学可以证明尽量分成多的3)[参见题解](https://leetcode-cn.com/problems/jian-sheng-zi-lcof/solution/mian-shi-ti-14-i-jian-sheng-zi-tan-xin-si-xiang-by/)\n\n- 如果 n == 2，返回1，如果 n == 3，返回2，两个可以合并成n小于4的时候返回n - 1\n- 如果 n == 4，返回4\n- 如果 n > 4，分成尽可能多的长度为3的小段，每次循环长度n减去3，乘积res乘以3；最后返回时乘以小于等于4的最后一小段；每次乘法操作后记得取余就行\n以上2和3可以合并\n\n```python\nclass Solution:\n    def cuttingRope(self, n: int) -> int:\n        if n < 4:\n            return n - 1\n        res = 1\n        while n > 4: # 找寻尽量多的3\n            res = res * 3 % 1000000007\n            n -= 3\n        return res * n % 1000000007 #乘以剩余的\n```\n\n","slug":"leetcode/leetcode-offer14-2","published":1,"updated":"2021-08-18T02:08:52.469Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxocv0025ugx4gwg67ovb","content":"<blockquote>\n<p>剪绳子2</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>给你一根长度为 n 的绳子，请把绳子剪成整数长度的 m 段（m、n都是整数，n&gt;1并且m&gt;1），每段绳子的长度记为 k[0],k[1]…k[m - 1] .请问 k[0]<em>k[1]</em>…*k[m - 1] 可能的最大乘积是多少？例如，当绳子的长度是8时，我们把它剪成长度分别为2、3、3的三段，此时得到的最大乘积是18。</p>\n<p>答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight tap\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tap\">输入: 2<br>输出: 1<br>解释:<span class=\"hljs-number\"> 2 </span>=<span class=\"hljs-number\"> 1 </span>+ 1,<span class=\"hljs-number\"> 1 </span>×<span class=\"hljs-number\"> 1 </span>= 1<br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight tap\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tap\">输入: 10<br>输出: 36<br>解释:<span class=\"hljs-number\"> 10 </span>=<span class=\"hljs-number\"> 3 </span>+<span class=\"hljs-number\"> 3 </span>+ 4,<span class=\"hljs-number\"> 3 </span>×<span class=\"hljs-number\"> 3 </span>×<span class=\"hljs-number\"> 4 </span>= 36<br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li><code>2 &lt;= n &lt;= 1000</code></li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>使用动态规划具体参照剪绳子1</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">cuttingRope</span>(<span class=\"hljs-params\">self, n: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        dp = [<span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(n+<span class=\"hljs-number\">1</span>)]<br>        dp[<span class=\"hljs-number\">2</span>] = <span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">3</span>,n+<span class=\"hljs-number\">1</span>):<br>            <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">2</span>,i):<br>                dp[i] = <span class=\"hljs-built_in\">max</span>(dp[i],<span class=\"hljs-built_in\">max</span>(j*(i-j),j*dp[i-j]))<br>        <span class=\"hljs-keyword\">return</span> dp[n]%<span class=\"hljs-number\">1000000007</span><br></code></pre></td></tr></tbody></table></figure>\n<p>但是这种方式时间复杂度较大。</p>\n<p>步骤如下：(数学可以证明尽量分成多的3)<a href=\"https://leetcode-cn.com/problems/jian-sheng-zi-lcof/solution/mian-shi-ti-14-i-jian-sheng-zi-tan-xin-si-xiang-by/\">参见题解</a></p>\n<ul>\n<li>如果 n == 2，返回1，如果 n == 3，返回2，两个可以合并成n小于4的时候返回n - 1</li>\n<li>如果 n == 4，返回4</li>\n<li>如果 n &gt; 4，分成尽可能多的长度为3的小段，每次循环长度n减去3，乘积res乘以3；最后返回时乘以小于等于4的最后一小段；每次乘法操作后记得取余就行<br>\n以上2和3可以合并</li>\n</ul>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">cuttingRope</span>(<span class=\"hljs-params\">self, n: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        <span class=\"hljs-keyword\">if</span> n &lt; <span class=\"hljs-number\">4</span>:<br>            <span class=\"hljs-keyword\">return</span> n - <span class=\"hljs-number\">1</span><br>        res = <span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">while</span> n &gt; <span class=\"hljs-number\">4</span>: <span class=\"hljs-comment\"># 找寻尽量多的3</span><br>            res = res * <span class=\"hljs-number\">3</span> % <span class=\"hljs-number\">1000000007</span><br>            n -= <span class=\"hljs-number\">3</span><br>        <span class=\"hljs-keyword\">return</span> res * n % <span class=\"hljs-number\">1000000007</span> <span class=\"hljs-comment\">#乘以剩余的</span><br></code></pre></td></tr></tbody></table></figure>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>剪绳子2</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>给你一根长度为 n 的绳子，请把绳子剪成整数长度的 m 段（m、n都是整数，n&gt;1并且m&gt;1），每段绳子的长度记为 k[0],k[1]…k[m - 1] .请问 k[0]<em>k[1]</em>…*k[m - 1] 可能的最大乘积是多少？例如，当绳子的长度是8时，我们把它剪成长度分别为2、3、3的三段，此时得到的最大乘积是18。</p>\n<p>答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight tap\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tap\">输入: 2<br>输出: 1<br>解释:<span class=\"hljs-number\"> 2 </span>=<span class=\"hljs-number\"> 1 </span>+ 1,<span class=\"hljs-number\"> 1 </span>×<span class=\"hljs-number\"> 1 </span>= 1<br></code></pre></td></tr></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight tap\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tap\">输入: 10<br>输出: 36<br>解释:<span class=\"hljs-number\"> 10 </span>=<span class=\"hljs-number\"> 3 </span>+<span class=\"hljs-number\"> 3 </span>+ 4,<span class=\"hljs-number\"> 3 </span>×<span class=\"hljs-number\"> 3 </span>×<span class=\"hljs-number\"> 4 </span>= 36<br></code></pre></td></tr></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li><code>2 &lt;= n &lt;= 1000</code></li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>使用动态规划具体参照剪绳子1</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">cuttingRope</span>(<span class=\"hljs-params\">self, n: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        dp = [<span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(n+<span class=\"hljs-number\">1</span>)]<br>        dp[<span class=\"hljs-number\">2</span>] = <span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">3</span>,n+<span class=\"hljs-number\">1</span>):<br>            <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">2</span>,i):<br>                dp[i] = <span class=\"hljs-built_in\">max</span>(dp[i],<span class=\"hljs-built_in\">max</span>(j*(i-j),j*dp[i-j]))<br>        <span class=\"hljs-keyword\">return</span> dp[n]%<span class=\"hljs-number\">1000000007</span><br></code></pre></td></tr></table></figure>\n<p>但是这种方式时间复杂度较大。</p>\n<p>步骤如下：(数学可以证明尽量分成多的3)<a href=\"https://leetcode-cn.com/problems/jian-sheng-zi-lcof/solution/mian-shi-ti-14-i-jian-sheng-zi-tan-xin-si-xiang-by/\">参见题解</a></p>\n<ul>\n<li>如果 n == 2，返回1，如果 n == 3，返回2，两个可以合并成n小于4的时候返回n - 1</li>\n<li>如果 n == 4，返回4</li>\n<li>如果 n &gt; 4，分成尽可能多的长度为3的小段，每次循环长度n减去3，乘积res乘以3；最后返回时乘以小于等于4的最后一小段；每次乘法操作后记得取余就行<br>\n以上2和3可以合并</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">cuttingRope</span>(<span class=\"hljs-params\">self, n: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        <span class=\"hljs-keyword\">if</span> n &lt; <span class=\"hljs-number\">4</span>:<br>            <span class=\"hljs-keyword\">return</span> n - <span class=\"hljs-number\">1</span><br>        res = <span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">while</span> n &gt; <span class=\"hljs-number\">4</span>: <span class=\"hljs-comment\"># 找寻尽量多的3</span><br>            res = res * <span class=\"hljs-number\">3</span> % <span class=\"hljs-number\">1000000007</span><br>            n -= <span class=\"hljs-number\">3</span><br>        <span class=\"hljs-keyword\">return</span> res * n % <span class=\"hljs-number\">1000000007</span> <span class=\"hljs-comment\">#乘以剩余的</span><br></code></pre></td></tr></table></figure>\n"},{"title":"剑指offer15 二进制中1的个数","date":"2021-08-19T12:22:04.000Z","_content":"\n> 二进制中1的个数\n\n## 题目\n\n编写一个函数，输入是一个无符号整数（以二进制串的形式），返回其二进制表达式中数字位数为 '1' 的个数（也被称为 汉明重量).）。\n提示：\n- 请注意，在某些语言（如 Java）中，没有无符号整数类型。在这种情况下，输入和输出都将被指定为有符号整数类型，并且不应影响您的实现，因为无论整数是有符号的还是无符号的，其内部的二进制表示形式都是相同的。\n- 在 Java 中，编译器使用 二进制补码 记法来表示有符号整数。因此，在上面的 示例 3 中，输入表示有符号整数 -3。\n\n\n### 示例 1：\n\n```\n输入：n = 11 (控制台输入 00000000000000000000000000001011)\n输出：3\n解释：输入的二进制串 00000000000000000000000000001011 中，共有三位为 '1'。\n```\n\n### 示例 2：\n\n```\n输入：n = 128 (控制台输入 00000000000000000000000010000000)\n输出：1\n解释：输入的二进制串 00000000000000000000000010000000 中，共有一位为 '1'。\n```\n\n### 示例 3：\n\n```\n输入：n = 4294967293 (控制台输入 11111111111111111111111111111101，部分语言中 n = -3）\n输出：31\n解释：输入的二进制串 11111111111111111111111111111101 中，共有 31 位为 '1'。\n```\n### 提示：\n\n- 输入必须是长度为 32 的 二进制串 。\n\n## 题解\n\n第一种方式是采用内置的bin函数，将n转化为二进制格式。然后统计其字符串的1的个数。\n\n```python\nclass Solution:\n    def hammingWeight(self, n: int) -> int:\n        s = str(bin(n))\n        cnt = 0\n        for x in s:\n            if(x=='1'):\n                cnt+=1\n        return cnt\n```\n第二种方法是采用移位操作`<<`和按位与`&`对输入的数字进行统计。如：11 & 8 = 8（1011 & 100 = 100）\n```python\n class Solution:\n \tdef hammingWeight(self, n: int) -> int:\n        cnt = sum(1 for i in range(32) if(n & (1 << i)))\n        return cnt\n```\n\n<font color=hotpink>下面这个就很妙了</font>\n\n第三种方法 利用 `n &（n-1）` \n\n(n−1) 解析： 二进制数字 n 最右边的 1 变成 0 ，此 1 右边的 0 都变成 1。\nn \\& (n - 1) 解析： 二进制数字 n 最右边的 1变成 0，其余不变。\n利用此特性每次循环可以消去一个1\n\n![](https://picture.mulindya.com/leetcode-offer15pic1.png)\n\n```python\nclass Solution:\n    def hammingWeight(self, n: int) -> int:\n        res = 0\n        while n:\n            res += 1\n            n &= n - 1\n        return res\n```\n\n","source":"_posts/leetcode/leetcode-offer15.md","raw":"---\ntitle: 剑指offer15 二进制中1的个数\ntags: [剑指,变量]\ncategories: [剑指,变量]\ndate: 2021-08-19 20:22:04\n---\n\n> 二进制中1的个数\n\n## 题目\n\n编写一个函数，输入是一个无符号整数（以二进制串的形式），返回其二进制表达式中数字位数为 '1' 的个数（也被称为 汉明重量).）。\n提示：\n- 请注意，在某些语言（如 Java）中，没有无符号整数类型。在这种情况下，输入和输出都将被指定为有符号整数类型，并且不应影响您的实现，因为无论整数是有符号的还是无符号的，其内部的二进制表示形式都是相同的。\n- 在 Java 中，编译器使用 二进制补码 记法来表示有符号整数。因此，在上面的 示例 3 中，输入表示有符号整数 -3。\n\n\n### 示例 1：\n\n```\n输入：n = 11 (控制台输入 00000000000000000000000000001011)\n输出：3\n解释：输入的二进制串 00000000000000000000000000001011 中，共有三位为 '1'。\n```\n\n### 示例 2：\n\n```\n输入：n = 128 (控制台输入 00000000000000000000000010000000)\n输出：1\n解释：输入的二进制串 00000000000000000000000010000000 中，共有一位为 '1'。\n```\n\n### 示例 3：\n\n```\n输入：n = 4294967293 (控制台输入 11111111111111111111111111111101，部分语言中 n = -3）\n输出：31\n解释：输入的二进制串 11111111111111111111111111111101 中，共有 31 位为 '1'。\n```\n### 提示：\n\n- 输入必须是长度为 32 的 二进制串 。\n\n## 题解\n\n第一种方式是采用内置的bin函数，将n转化为二进制格式。然后统计其字符串的1的个数。\n\n```python\nclass Solution:\n    def hammingWeight(self, n: int) -> int:\n        s = str(bin(n))\n        cnt = 0\n        for x in s:\n            if(x=='1'):\n                cnt+=1\n        return cnt\n```\n第二种方法是采用移位操作`<<`和按位与`&`对输入的数字进行统计。如：11 & 8 = 8（1011 & 100 = 100）\n```python\n class Solution:\n \tdef hammingWeight(self, n: int) -> int:\n        cnt = sum(1 for i in range(32) if(n & (1 << i)))\n        return cnt\n```\n\n<font color=hotpink>下面这个就很妙了</font>\n\n第三种方法 利用 `n &（n-1）` \n\n(n−1) 解析： 二进制数字 n 最右边的 1 变成 0 ，此 1 右边的 0 都变成 1。\nn \\& (n - 1) 解析： 二进制数字 n 最右边的 1变成 0，其余不变。\n利用此特性每次循环可以消去一个1\n\n![](https://picture.mulindya.com/leetcode-offer15pic1.png)\n\n```python\nclass Solution:\n    def hammingWeight(self, n: int) -> int:\n        res = 0\n        while n:\n            res += 1\n            n &= n - 1\n        return res\n```\n\n","slug":"leetcode/leetcode-offer15","published":1,"updated":"2021-08-19T12:37:52.725Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxocw0027ugx4hms1f8dt","content":"<blockquote>\n<p>二进制中1的个数</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>编写一个函数，输入是一个无符号整数（以二进制串的形式），返回其二进制表达式中数字位数为 ‘1’ 的个数（也被称为 汉明重量).）。<br>\n提示：</p>\n<ul>\n<li>请注意，在某些语言（如 Java）中，没有无符号整数类型。在这种情况下，输入和输出都将被指定为有符号整数类型，并且不应影响您的实现，因为无论整数是有符号的还是无符号的，其内部的二进制表示形式都是相同的。</li>\n<li>在 Java 中，编译器使用 二进制补码 记法来表示有符号整数。因此，在上面的&nbsp;示例 3&nbsp;中，输入表示有符号整数 -3。</li>\n</ul>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight 1c\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\">输入：n = <span class=\"hljs-number\">11</span> (控制台输入 <span class=\"hljs-number\">00000000000000000000000000001011</span>)<br>输出：<span class=\"hljs-number\">3</span><br>解释：输入的二进制串 <span class=\"hljs-number\">00000000000000000000000000001011</span>&nbsp;中，共有三位为 '1'。<br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight 1c\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\">输入：n = <span class=\"hljs-number\">128</span> (控制台输入 <span class=\"hljs-number\">00000000000000000000000010000000</span>)<br>输出：<span class=\"hljs-number\">1</span><br>解释：输入的二进制串 <span class=\"hljs-number\">00000000000000000000000010000000</span>&nbsp;中，共有一位为 '1'。<br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"示例-3：\">示例 3：</h3>\n<figure class=\"highlight tap\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tap\">输入：n =<span class=\"hljs-number\"> 4294967293 </span>(控制台输入 11111111111111111111111111111101，部分语言中 n = -3）<br>输出：31<br>解释：输入的二进制串<span class=\"hljs-number\"> 11111111111111111111111111111101 </span>中，共有<span class=\"hljs-number\"> 31 </span>位为 '1'。<br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>输入必须是长度为 32 的 二进制串 。</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>第一种方式是采用内置的bin函数，将n转化为二进制格式。然后统计其字符串的1的个数。</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">hammingWeight</span>(<span class=\"hljs-params\">self, n: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        s = <span class=\"hljs-built_in\">str</span>(<span class=\"hljs-built_in\">bin</span>(n))<br>        cnt = <span class=\"hljs-number\">0</span><br>        <span class=\"hljs-keyword\">for</span> x <span class=\"hljs-keyword\">in</span> s:<br>            <span class=\"hljs-keyword\">if</span>(x==<span class=\"hljs-string\">'1'</span>):<br>                cnt+=<span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">return</span> cnt<br></code></pre></td></tr></tbody></table></figure>\n<p>第二种方法是采用移位操作<code>&lt;&lt;</code>和按位与<code>&amp;</code>对输入的数字进行统计。如：11 &amp; 8 = 8（1011 &amp; 100 = 100）</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">hammingWeight</span>(<span class=\"hljs-params\">self, n: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>       cnt = <span class=\"hljs-built_in\">sum</span>(<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">32</span>) <span class=\"hljs-keyword\">if</span>(n &amp; (<span class=\"hljs-number\">1</span> &lt;&lt; i)))<br>       <span class=\"hljs-keyword\">return</span> cnt<br></code></pre></td></tr></tbody></table></figure>\n<p><font color=\"hotpink\">下面这个就很妙了</font></p>\n<p>第三种方法 利用 <code>n &amp;（n-1）</code></p>\n<p>(n−1) 解析： 二进制数字 n 最右边的 1 变成 0 ，此 1 右边的 0 都变成 1。<br>\nn &amp; (n - 1) 解析： 二进制数字 n 最右边的 1变成 0，其余不变。<br>\n利用此特性每次循环可以消去一个1</p>\n<p><img src=\"https://picture.mulindya.com/leetcode-offer15pic1.png\" alt=\"\"></p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">hammingWeight</span>(<span class=\"hljs-params\">self, n: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        res = <span class=\"hljs-number\">0</span><br>        <span class=\"hljs-keyword\">while</span> n:<br>            res += <span class=\"hljs-number\">1</span><br>            n &amp;= n - <span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">return</span> res<br></code></pre></td></tr></tbody></table></figure>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>二进制中1的个数</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>编写一个函数，输入是一个无符号整数（以二进制串的形式），返回其二进制表达式中数字位数为 ‘1’ 的个数（也被称为 汉明重量).）。<br>\n提示：</p>\n<ul>\n<li>请注意，在某些语言（如 Java）中，没有无符号整数类型。在这种情况下，输入和输出都将被指定为有符号整数类型，并且不应影响您的实现，因为无论整数是有符号的还是无符号的，其内部的二进制表示形式都是相同的。</li>\n<li>在 Java 中，编译器使用 二进制补码 记法来表示有符号整数。因此，在上面的 示例 3 中，输入表示有符号整数 -3。</li>\n</ul>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\">输入：n = <span class=\"hljs-number\">11</span> (控制台输入 <span class=\"hljs-number\">00000000000000000000000000001011</span>)<br>输出：<span class=\"hljs-number\">3</span><br>解释：输入的二进制串 <span class=\"hljs-number\">00000000000000000000000000001011</span> 中，共有三位为 &#x27;1&#x27;。<br></code></pre></td></tr></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\">输入：n = <span class=\"hljs-number\">128</span> (控制台输入 <span class=\"hljs-number\">00000000000000000000000010000000</span>)<br>输出：<span class=\"hljs-number\">1</span><br>解释：输入的二进制串 <span class=\"hljs-number\">00000000000000000000000010000000</span> 中，共有一位为 &#x27;1&#x27;。<br></code></pre></td></tr></table></figure>\n<h3 id=\"示例-3：\">示例 3：</h3>\n<figure class=\"highlight tap\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs tap\">输入：n =<span class=\"hljs-number\"> 4294967293 </span>(控制台输入 11111111111111111111111111111101，部分语言中 n = -3）<br>输出：31<br>解释：输入的二进制串<span class=\"hljs-number\"> 11111111111111111111111111111101 </span>中，共有<span class=\"hljs-number\"> 31 </span>位为 &#x27;1&#x27;。<br></code></pre></td></tr></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>输入必须是长度为 32 的 二进制串 。</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>第一种方式是采用内置的bin函数，将n转化为二进制格式。然后统计其字符串的1的个数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">hammingWeight</span>(<span class=\"hljs-params\">self, n: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        s = <span class=\"hljs-built_in\">str</span>(<span class=\"hljs-built_in\">bin</span>(n))<br>        cnt = <span class=\"hljs-number\">0</span><br>        <span class=\"hljs-keyword\">for</span> x <span class=\"hljs-keyword\">in</span> s:<br>            <span class=\"hljs-keyword\">if</span>(x==<span class=\"hljs-string\">&#x27;1&#x27;</span>):<br>                cnt+=<span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">return</span> cnt<br></code></pre></td></tr></table></figure>\n<p>第二种方法是采用移位操作<code>&lt;&lt;</code>和按位与<code>&amp;</code>对输入的数字进行统计。如：11 &amp; 8 = 8（1011 &amp; 100 = 100）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">hammingWeight</span>(<span class=\"hljs-params\">self, n: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>       cnt = <span class=\"hljs-built_in\">sum</span>(<span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">32</span>) <span class=\"hljs-keyword\">if</span>(n &amp; (<span class=\"hljs-number\">1</span> &lt;&lt; i)))<br>       <span class=\"hljs-keyword\">return</span> cnt<br></code></pre></td></tr></table></figure>\n<p><font color=hotpink>下面这个就很妙了</font></p>\n<p>第三种方法 利用 <code>n &amp;（n-1）</code></p>\n<p>(n−1) 解析： 二进制数字 n 最右边的 1 变成 0 ，此 1 右边的 0 都变成 1。<br>\nn &amp; (n - 1) 解析： 二进制数字 n 最右边的 1变成 0，其余不变。<br>\n利用此特性每次循环可以消去一个1</p>\n<p><img src=\"https://picture.mulindya.com/leetcode-offer15pic1.png\" alt=\"\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">hammingWeight</span>(<span class=\"hljs-params\">self, n: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:</span><br>        res = <span class=\"hljs-number\">0</span><br>        <span class=\"hljs-keyword\">while</span> n:<br>            res += <span class=\"hljs-number\">1</span><br>            n &amp;= n - <span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">return</span> res<br></code></pre></td></tr></table></figure>\n"},{"title":"剑指offer16  数值的整数次方","date":"2021-08-21T03:08:18.000Z","math":true,"_content":"\n> 数值的整数次方\n\n## 题目\n\n实现 pow(x, n) ，即计算 x 的 n 次幂函数（即，xn）。不得使用库函数，同时不需要考虑大数问题。\n\n### 示例 1：\n\n```\n输入：x = 2.00000, n = 10\n输出：1024.00000\n```\n\n### 示例 2：\n\n```\n输入：x = 2.10000, n = 3\n输出：9.26100\n```\n\n### 提示：\n\n- -100.0 < x < 100.0\n- $-2^{31}$ <= n <= $2^{31}-1$\n- $-10^4$ <= $x^n$ <= $10^4$\n\n## 题解\n\n一种方法是将x乘以n次，但是这种时间复杂度是O(n)。判题时时间超出限制。\n\n```python\nclass Solution:\n    def myPow(self, x: float, n: int) -> float:\n        if(n==0):return 1\n        result=1\n        if(n<0):\n            n = -n\n            x = 1/x\n        while(n):\n            result *= x\n            n -=1\n        return result\n```\n\n实际上可以利用x *= x 和对n右移操作可以得到$x,x^2,x^4,x^8,x^{16}.....$，而$x^{11}$可以二进制指数表示为$x^{1011}$也就是$x \\times x^2 \\times x^8$。这样原本需要循环11次就只需要循环4次\n\n根据提示条件，循环最多不会超过32次。就很棒！\n\n```python\nclass Solution:\n    def myPow(self, x: float, n: int) -> float:\n        if(n==0):return 1\n        result=1\n        if(n<0):\n            n = -n\n            x = 1/x\n        while(n): #时间复杂度大大降低 不超过32次 O(logn)\n            if(n & 1):result *= x #看最后一位是否为1\n            x *= x\n            n = n>>1 #n右移 1011-》101\n        return result\n```\n\n","source":"_posts/leetcode/leetcode-offer16.md","raw":"---\ntitle: 剑指offer16  数值的整数次方\ntags: [剑指,快速幂,idea]\ncategories: [剑指,快速幂]\ndate: 2021-08-21 11:08:18\nmath: true\n---\n\n> 数值的整数次方\n\n## 题目\n\n实现 pow(x, n) ，即计算 x 的 n 次幂函数（即，xn）。不得使用库函数，同时不需要考虑大数问题。\n\n### 示例 1：\n\n```\n输入：x = 2.00000, n = 10\n输出：1024.00000\n```\n\n### 示例 2：\n\n```\n输入：x = 2.10000, n = 3\n输出：9.26100\n```\n\n### 提示：\n\n- -100.0 < x < 100.0\n- $-2^{31}$ <= n <= $2^{31}-1$\n- $-10^4$ <= $x^n$ <= $10^4$\n\n## 题解\n\n一种方法是将x乘以n次，但是这种时间复杂度是O(n)。判题时时间超出限制。\n\n```python\nclass Solution:\n    def myPow(self, x: float, n: int) -> float:\n        if(n==0):return 1\n        result=1\n        if(n<0):\n            n = -n\n            x = 1/x\n        while(n):\n            result *= x\n            n -=1\n        return result\n```\n\n实际上可以利用x *= x 和对n右移操作可以得到$x,x^2,x^4,x^8,x^{16}.....$，而$x^{11}$可以二进制指数表示为$x^{1011}$也就是$x \\times x^2 \\times x^8$。这样原本需要循环11次就只需要循环4次\n\n根据提示条件，循环最多不会超过32次。就很棒！\n\n```python\nclass Solution:\n    def myPow(self, x: float, n: int) -> float:\n        if(n==0):return 1\n        result=1\n        if(n<0):\n            n = -n\n            x = 1/x\n        while(n): #时间复杂度大大降低 不超过32次 O(logn)\n            if(n & 1):result *= x #看最后一位是否为1\n            x *= x\n            n = n>>1 #n右移 1011-》101\n        return result\n```\n\n","slug":"leetcode/leetcode-offer16","published":1,"updated":"2021-08-21T03:42:33.770Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxocx002augx45s3cardx","content":"<blockquote>\n<p>数值的整数次方</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>实现 pow(x, n) ，即计算 x 的 n 次幂函数（即，xn）。不得使用库函数，同时不需要考虑大数问题。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight dns\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dns\">输入：x = <span class=\"hljs-number\">2.00000</span>, n = <span class=\"hljs-number\">10</span><br>输出：<span class=\"hljs-number\">1024.00000</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight dns\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dns\">输入：x = <span class=\"hljs-number\">2.10000</span>, n = <span class=\"hljs-number\">3</span><br>输出：<span class=\"hljs-number\">9.26100</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>-100.0 &lt; x &lt; 100.0</li>\n<li>$-2^{31}$ &lt;= n &lt;= $2^{31}-1$</li>\n<li>$-10^4$ &lt;= $x^n$ &lt;= $10^4$</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>一种方法是将x乘以n次，但是这种时间复杂度是O(n)。判题时时间超出限制。</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">myPow</span>(<span class=\"hljs-params\">self, x: <span class=\"hljs-built_in\">float</span>, n: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">float</span>:</span><br>        <span class=\"hljs-keyword\">if</span>(n==<span class=\"hljs-number\">0</span>):<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span><br>        result=<span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">if</span>(n&lt;<span class=\"hljs-number\">0</span>):<br>            n = -n<br>            x = <span class=\"hljs-number\">1</span>/x<br>        <span class=\"hljs-keyword\">while</span>(n):<br>            result *= x<br>            n -=<span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">return</span> result<br></code></pre></td></tr></tbody></table></figure>\n<p>实际上可以利用x *= x 和对n右移操作可以得到$x,x<sup>2,x</sup>4,x<sup>8,x</sup>{16}…$，而$x<sup>{11}$可以二进制指数表示为$x</sup>{1011}$也就是$x \\times x^2 \\times x^8$。这样原本需要循环11次就只需要循环4次</p>\n<p>根据提示条件，循环最多不会超过32次。就很棒！</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">myPow</span>(<span class=\"hljs-params\">self, x: <span class=\"hljs-built_in\">float</span>, n: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">float</span>:</span><br>        <span class=\"hljs-keyword\">if</span>(n==<span class=\"hljs-number\">0</span>):<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span><br>        result=<span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">if</span>(n&lt;<span class=\"hljs-number\">0</span>):<br>            n = -n<br>            x = <span class=\"hljs-number\">1</span>/x<br>        <span class=\"hljs-keyword\">while</span>(n): <span class=\"hljs-comment\">#时间复杂度大大降低 不超过32次 O(logn)</span><br>            <span class=\"hljs-keyword\">if</span>(n &amp; <span class=\"hljs-number\">1</span>):result *= x <span class=\"hljs-comment\">#看最后一位是否为1</span><br>            x *= x<br>            n = n&gt;&gt;<span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">#n右移 1011-》101</span><br>        <span class=\"hljs-keyword\">return</span> result<br></code></pre></td></tr></tbody></table></figure>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>数值的整数次方</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>实现 pow(x, n) ，即计算 x 的 n 次幂函数（即，xn）。不得使用库函数，同时不需要考虑大数问题。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight dns\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dns\">输入：x = <span class=\"hljs-number\">2.00000</span>, n = <span class=\"hljs-number\">10</span><br>输出：<span class=\"hljs-number\">1024.00000</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight dns\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dns\">输入：x = <span class=\"hljs-number\">2.10000</span>, n = <span class=\"hljs-number\">3</span><br>输出：<span class=\"hljs-number\">9.26100</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>-100.0 &lt; x &lt; 100.0</li>\n<li>$-2^{31}$ &lt;= n &lt;= $2^{31}-1$</li>\n<li>$-10^4$ &lt;= $x^n$ &lt;= $10^4$</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>一种方法是将x乘以n次，但是这种时间复杂度是O(n)。判题时时间超出限制。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">myPow</span>(<span class=\"hljs-params\">self, x: <span class=\"hljs-built_in\">float</span>, n: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">float</span>:</span><br>        <span class=\"hljs-keyword\">if</span>(n==<span class=\"hljs-number\">0</span>):<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span><br>        result=<span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">if</span>(n&lt;<span class=\"hljs-number\">0</span>):<br>            n = -n<br>            x = <span class=\"hljs-number\">1</span>/x<br>        <span class=\"hljs-keyword\">while</span>(n):<br>            result *= x<br>            n -=<span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">return</span> result<br></code></pre></td></tr></table></figure>\n<p>实际上可以利用x *= x 和对n右移操作可以得到$x,x<sup>2,x</sup>4,x<sup>8,x</sup>{16}…$，而$x<sup>{11}$可以二进制指数表示为$x</sup>{1011}$也就是$x \\times x^2 \\times x^8$。这样原本需要循环11次就只需要循环4次</p>\n<p>根据提示条件，循环最多不会超过32次。就很棒！</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">myPow</span>(<span class=\"hljs-params\">self, x: <span class=\"hljs-built_in\">float</span>, n: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">float</span>:</span><br>        <span class=\"hljs-keyword\">if</span>(n==<span class=\"hljs-number\">0</span>):<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span><br>        result=<span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">if</span>(n&lt;<span class=\"hljs-number\">0</span>):<br>            n = -n<br>            x = <span class=\"hljs-number\">1</span>/x<br>        <span class=\"hljs-keyword\">while</span>(n): <span class=\"hljs-comment\">#时间复杂度大大降低 不超过32次 O(logn)</span><br>            <span class=\"hljs-keyword\">if</span>(n &amp; <span class=\"hljs-number\">1</span>):result *= x <span class=\"hljs-comment\">#看最后一位是否为1</span><br>            x *= x<br>            n = n&gt;&gt;<span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">#n右移 1011-》101</span><br>        <span class=\"hljs-keyword\">return</span> result<br></code></pre></td></tr></table></figure>\n"},{"title":"剑指offer17 打印从1到最大的n位数","date":"2021-08-20T09:11:58.000Z","_content":"\n> 打印从1到最大的n位数\n\n## 题目\n\n输入数字 n，按顺序打印出从 1 到最大的 n 位十进制数。比如输入 3，则打印出 1、2、3 一直到最大的 3 位数 999。\n\n### 示例 1：\n\n```\n输入: n = 1\n输出: [1,2,3,4,5,6,7,8,9]\n```\n\n### 提示：\n\n- 用返回一个整数列表来代替打印\n- n 为正整数\n\n## 题解\n\n借用python的类型转换的包容性，直接可以返回列表\n\n```python\nclass Solution:\n    def printNumbers(self, n: int) -> List[int]:\n        return [i for i in range(1,pow(10,n))] #或者10**n\n```\n实际上，考点是大数越界情况下的打印。\n解决思路，用字符串的全排列来解决数字的越界情况。基于分治算法的思想，先固定高位，向低位递归，当个位已被固定时，添加数字的字符串。例如当 n = 2时（数字范围 1 - 99 ），固定十位为 0- 9 ，按顺序依次开启递归，固定个位 0 - 9 ，终止递归并添加数字字符串。\n\n```python\nclass Solution:\n    def printNumbers(self, n: int) -> [int]:\n        def dfs(x):\n            if x == n:\n                s = ''.join(num[self.start:])\n                if s != '0': res.append(int(s))\n                if n - self.start == self.nine: self.start -= 1\n                return\n            for i in range(10):\n                if i == 9: self.nine += 1\n                num[x] = str(i)\n                dfs(x + 1)\n            self.nine -= 1\n        \n        num, res = ['0'] * n, []\n        self.nine = 0\n        self.start = n - 1\n        dfs(0)\n        return res\n```\n\n- 字符串左边界定义： 声明变量 start 规定字符串的左边界，以保证添加的数字字符串 num[start:] 中无高位多余的 0 。例如当 n = 2 时, 1 - 9时 start = 1， 10 - 99 时 start = 0。\n- 左边界 start 变化规律： 观察可知，当输出数字的所有位都是 9 时，则下个数字需要向更高位进 11 ，此时左边界 start 需要减11 （即高位多余的 0 减少一个）。例如当 n = 3（数字范围 1 - 999 ）时，左边界 start 需要减 1 的情况有： \"009\" 进位至 \"010\" ， \"099\" 进位至 \"100\" 。设数字各位中 9 的数量为 nine ，所有位都为 9 的判断条件可用以下公式表示：n - start = nine统计 nine 的方法： 固定第 x 位时，当 i = 9则执行 nine = nine + 1 ，并在回溯前恢复 nine = nine - 1\n\n","source":"_posts/leetcode/leetcode-offer17.md","raw":"---\ntitle: 剑指offer17 打印从1到最大的n位数\ntags: [剑指,大数]\ncategories: [剑指,大数]\ndate: 2021-08-20 17:11:58\n---\n\n> 打印从1到最大的n位数\n\n## 题目\n\n输入数字 n，按顺序打印出从 1 到最大的 n 位十进制数。比如输入 3，则打印出 1、2、3 一直到最大的 3 位数 999。\n\n### 示例 1：\n\n```\n输入: n = 1\n输出: [1,2,3,4,5,6,7,8,9]\n```\n\n### 提示：\n\n- 用返回一个整数列表来代替打印\n- n 为正整数\n\n## 题解\n\n借用python的类型转换的包容性，直接可以返回列表\n\n```python\nclass Solution:\n    def printNumbers(self, n: int) -> List[int]:\n        return [i for i in range(1,pow(10,n))] #或者10**n\n```\n实际上，考点是大数越界情况下的打印。\n解决思路，用字符串的全排列来解决数字的越界情况。基于分治算法的思想，先固定高位，向低位递归，当个位已被固定时，添加数字的字符串。例如当 n = 2时（数字范围 1 - 99 ），固定十位为 0- 9 ，按顺序依次开启递归，固定个位 0 - 9 ，终止递归并添加数字字符串。\n\n```python\nclass Solution:\n    def printNumbers(self, n: int) -> [int]:\n        def dfs(x):\n            if x == n:\n                s = ''.join(num[self.start:])\n                if s != '0': res.append(int(s))\n                if n - self.start == self.nine: self.start -= 1\n                return\n            for i in range(10):\n                if i == 9: self.nine += 1\n                num[x] = str(i)\n                dfs(x + 1)\n            self.nine -= 1\n        \n        num, res = ['0'] * n, []\n        self.nine = 0\n        self.start = n - 1\n        dfs(0)\n        return res\n```\n\n- 字符串左边界定义： 声明变量 start 规定字符串的左边界，以保证添加的数字字符串 num[start:] 中无高位多余的 0 。例如当 n = 2 时, 1 - 9时 start = 1， 10 - 99 时 start = 0。\n- 左边界 start 变化规律： 观察可知，当输出数字的所有位都是 9 时，则下个数字需要向更高位进 11 ，此时左边界 start 需要减11 （即高位多余的 0 减少一个）。例如当 n = 3（数字范围 1 - 999 ）时，左边界 start 需要减 1 的情况有： \"009\" 进位至 \"010\" ， \"099\" 进位至 \"100\" 。设数字各位中 9 的数量为 nine ，所有位都为 9 的判断条件可用以下公式表示：n - start = nine统计 nine 的方法： 固定第 x 位时，当 i = 9则执行 nine = nine + 1 ，并在回溯前恢复 nine = nine - 1\n\n","slug":"leetcode/leetcode-offer17","published":1,"updated":"2021-08-20T10:10:51.179Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxocy002dugx48pas9zu4","content":"<blockquote>\n<p>打印从1到最大的n位数</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>输入数字 n，按顺序打印出从 1 到最大的 n 位十进制数。比如输入 3，则打印出 1、2、3 一直到最大的 3 位数 999。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight dns\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dns\">输入: n = <span class=\"hljs-number\">1</span><br>输出: [<span class=\"hljs-number\">1,2,3,4</span>,<span class=\"hljs-number\">5,6,7,8</span>,<span class=\"hljs-number\">9</span>]<br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>用返回一个整数列表来代替打印</li>\n<li>n 为正整数</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>借用python的类型转换的包容性，直接可以返回列表</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">printNumbers</span>(<span class=\"hljs-params\">self, n: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]:</span><br>        <span class=\"hljs-keyword\">return</span> [i <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">pow</span>(<span class=\"hljs-number\">10</span>,n))] <span class=\"hljs-comment\">#或者10**n</span><br></code></pre></td></tr></tbody></table></figure>\n<p>实际上，考点是大数越界情况下的打印。<br>\n解决思路，用字符串的全排列来解决数字的越界情况。基于分治算法的思想，先固定高位，向低位递归，当个位已被固定时，添加数字的字符串。例如当 n = 2时（数字范围 1 - 99 ），固定十位为 0- 9 ，按顺序依次开启递归，固定个位 0 - 9 ，终止递归并添加数字字符串。</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">printNumbers</span>(<span class=\"hljs-params\">self, n: <span class=\"hljs-built_in\">int</span></span>) -&gt; [<span class=\"hljs-built_in\">int</span>]:</span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">dfs</span>(<span class=\"hljs-params\">x</span>):</span><br>            <span class=\"hljs-keyword\">if</span> x == n:<br>                s = <span class=\"hljs-string\">''</span>.join(num[self.start:])<br>                <span class=\"hljs-keyword\">if</span> s != <span class=\"hljs-string\">'0'</span>: res.append(<span class=\"hljs-built_in\">int</span>(s))<br>                <span class=\"hljs-keyword\">if</span> n - self.start == self.nine: self.start -= <span class=\"hljs-number\">1</span><br>                <span class=\"hljs-keyword\">return</span><br>            <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">10</span>):<br>                <span class=\"hljs-keyword\">if</span> i == <span class=\"hljs-number\">9</span>: self.nine += <span class=\"hljs-number\">1</span><br>                num[x] = <span class=\"hljs-built_in\">str</span>(i)<br>                dfs(x + <span class=\"hljs-number\">1</span>)<br>            self.nine -= <span class=\"hljs-number\">1</span><br>        <br>        num, res = [<span class=\"hljs-string\">'0'</span>] * n, []<br>        self.nine = <span class=\"hljs-number\">0</span><br>        self.start = n - <span class=\"hljs-number\">1</span><br>        dfs(<span class=\"hljs-number\">0</span>)<br>        <span class=\"hljs-keyword\">return</span> res<br></code></pre></td></tr></tbody></table></figure>\n<ul>\n<li>字符串左边界定义： 声明变量 start 规定字符串的左边界，以保证添加的数字字符串 num[start:] 中无高位多余的 0 。例如当 n = 2 时, 1 - 9时 start = 1， 10 - 99 时 start = 0。</li>\n<li>左边界 start 变化规律： 观察可知，当输出数字的所有位都是 9 时，则下个数字需要向更高位进 11 ，此时左边界 start 需要减11 （即高位多余的 0 减少一个）。例如当 n = 3（数字范围 1 - 999 ）时，左边界 start 需要减 1 的情况有： “009” 进位至 “010” ， “099” 进位至 “100” 。设数字各位中 9 的数量为 nine ，所有位都为 9 的判断条件可用以下公式表示：n - start = nine统计 nine 的方法： 固定第 x 位时，当 i = 9则执行 nine = nine + 1 ，并在回溯前恢复 nine = nine - 1</li>\n</ul>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>打印从1到最大的n位数</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>输入数字 n，按顺序打印出从 1 到最大的 n 位十进制数。比如输入 3，则打印出 1、2、3 一直到最大的 3 位数 999。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight dns\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dns\">输入: n = <span class=\"hljs-number\">1</span><br>输出: [<span class=\"hljs-number\">1,2,3,4</span>,<span class=\"hljs-number\">5,6,7,8</span>,<span class=\"hljs-number\">9</span>]<br></code></pre></td></tr></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>用返回一个整数列表来代替打印</li>\n<li>n 为正整数</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>借用python的类型转换的包容性，直接可以返回列表</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">printNumbers</span>(<span class=\"hljs-params\">self, n: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]:</span><br>        <span class=\"hljs-keyword\">return</span> [i <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">pow</span>(<span class=\"hljs-number\">10</span>,n))] <span class=\"hljs-comment\">#或者10**n</span><br></code></pre></td></tr></table></figure>\n<p>实际上，考点是大数越界情况下的打印。<br>\n解决思路，用字符串的全排列来解决数字的越界情况。基于分治算法的思想，先固定高位，向低位递归，当个位已被固定时，添加数字的字符串。例如当 n = 2时（数字范围 1 - 99 ），固定十位为 0- 9 ，按顺序依次开启递归，固定个位 0 - 9 ，终止递归并添加数字字符串。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">printNumbers</span>(<span class=\"hljs-params\">self, n: <span class=\"hljs-built_in\">int</span></span>) -&gt; [<span class=\"hljs-built_in\">int</span>]:</span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">dfs</span>(<span class=\"hljs-params\">x</span>):</span><br>            <span class=\"hljs-keyword\">if</span> x == n:<br>                s = <span class=\"hljs-string\">&#x27;&#x27;</span>.join(num[self.start:])<br>                <span class=\"hljs-keyword\">if</span> s != <span class=\"hljs-string\">&#x27;0&#x27;</span>: res.append(<span class=\"hljs-built_in\">int</span>(s))<br>                <span class=\"hljs-keyword\">if</span> n - self.start == self.nine: self.start -= <span class=\"hljs-number\">1</span><br>                <span class=\"hljs-keyword\">return</span><br>            <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">10</span>):<br>                <span class=\"hljs-keyword\">if</span> i == <span class=\"hljs-number\">9</span>: self.nine += <span class=\"hljs-number\">1</span><br>                num[x] = <span class=\"hljs-built_in\">str</span>(i)<br>                dfs(x + <span class=\"hljs-number\">1</span>)<br>            self.nine -= <span class=\"hljs-number\">1</span><br>        <br>        num, res = [<span class=\"hljs-string\">&#x27;0&#x27;</span>] * n, []<br>        self.nine = <span class=\"hljs-number\">0</span><br>        self.start = n - <span class=\"hljs-number\">1</span><br>        dfs(<span class=\"hljs-number\">0</span>)<br>        <span class=\"hljs-keyword\">return</span> res<br></code></pre></td></tr></table></figure>\n<ul>\n<li>字符串左边界定义： 声明变量 start 规定字符串的左边界，以保证添加的数字字符串 num[start:] 中无高位多余的 0 。例如当 n = 2 时, 1 - 9时 start = 1， 10 - 99 时 start = 0。</li>\n<li>左边界 start 变化规律： 观察可知，当输出数字的所有位都是 9 时，则下个数字需要向更高位进 11 ，此时左边界 start 需要减11 （即高位多余的 0 减少一个）。例如当 n = 3（数字范围 1 - 999 ）时，左边界 start 需要减 1 的情况有： “009” 进位至 “010” ， “099” 进位至 “100” 。设数字各位中 9 的数量为 nine ，所有位都为 9 的判断条件可用以下公式表示：n - start = nine统计 nine 的方法： 固定第 x 位时，当 i = 9则执行 nine = nine + 1 ，并在回溯前恢复 nine = nine - 1</li>\n</ul>\n"},{"title":"剑指offer18 删除链表的节点","date":"2021-08-21T06:15:05.000Z","_content":"\n> 删除链表的节点\n\n## 题目\n\n给定单向链表的头指针和一个要删除的节点的值，定义一个函数删除该节点。返回删除后的链表的头节点。\n注意：此题对比原题有改动\n\n### 示例 1：\n\n```\n输入: head = [4,5,1,9], val = 5\n输出: [4,1,9]\n解释: 给定你链表中值为 5 的第二个节点，那么在调用了你的函数之后，该链表应变为 4 -> 1 -> 9.\n```\n\n### 示例 2：\n\n```\n输入: head = [4,5,1,9], val = 1\n输出: [4,5,9]\n解释: 给定你链表中值为 1 的第三个节点，那么在调用了你的函数之后，该链表应变为 4 -> 5 -> 9.\n```\n\n### 提示：\n\n- 题目保证链表中节点的值互不相同\n- 若使用 C 或 C++ 语言，你不需要 free 或 delete 被删除的节点\n\n## 题解\n\n常规操作\n\n```python\n# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\nclass Solution:\n    def deleteNode(self, head: ListNode, val: int) -> ListNode:\n        p = head\n        if(head.val==val):return p.next\n        while(p.next):\n            if(p.next.val == val):\n                p.next = p.next.next\n                return head\n            p = p.next\n```\n\n","source":"_posts/leetcode/leetcode-offer18.md","raw":"---\ntitle: 剑指offer18 删除链表的节点\ntags: [剑指,链表]\ncategories:  [剑指,链表]\ndate: 2021-08-21 14:15:05\n---\n\n> 删除链表的节点\n\n## 题目\n\n给定单向链表的头指针和一个要删除的节点的值，定义一个函数删除该节点。返回删除后的链表的头节点。\n注意：此题对比原题有改动\n\n### 示例 1：\n\n```\n输入: head = [4,5,1,9], val = 5\n输出: [4,1,9]\n解释: 给定你链表中值为 5 的第二个节点，那么在调用了你的函数之后，该链表应变为 4 -> 1 -> 9.\n```\n\n### 示例 2：\n\n```\n输入: head = [4,5,1,9], val = 1\n输出: [4,5,9]\n解释: 给定你链表中值为 1 的第三个节点，那么在调用了你的函数之后，该链表应变为 4 -> 5 -> 9.\n```\n\n### 提示：\n\n- 题目保证链表中节点的值互不相同\n- 若使用 C 或 C++ 语言，你不需要 free 或 delete 被删除的节点\n\n## 题解\n\n常规操作\n\n```python\n# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\nclass Solution:\n    def deleteNode(self, head: ListNode, val: int) -> ListNode:\n        p = head\n        if(head.val==val):return p.next\n        while(p.next):\n            if(p.next.val == val):\n                p.next = p.next.next\n                return head\n            p = p.next\n```\n\n","slug":"leetcode/leetcode-offer18","published":1,"updated":"2021-08-21T06:17:40.782Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxocy002gugx4hhci1acb","content":"<blockquote>\n<p>删除链表的节点</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>给定单向链表的头指针和一个要删除的节点的值，定义一个函数删除该节点。返回删除后的链表的头节点。<br>\n注意：此题对比原题有改动</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight makefile\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs makefile\"><span class=\"hljs-section\">输入: head = [4,5,1,9], val = 5</span><br><span class=\"hljs-section\">输出: [4,1,9]</span><br><span class=\"hljs-section\">解释: 给定你链表中值为&nbsp;5&nbsp;的第二个节点，那么在调用了你的函数之后，该链表应变为 4 -&gt; 1 -&gt; 9.</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight makefile\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs makefile\"><span class=\"hljs-section\">输入: head = [4,5,1,9], val = 1</span><br><span class=\"hljs-section\">输出: [4,5,9]</span><br><span class=\"hljs-section\">解释: 给定你链表中值为&nbsp;1&nbsp;的第三个节点，那么在调用了你的函数之后，该链表应变为 4 -&gt; 5 -&gt; 9.</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>题目保证链表中节点的值互不相同</li>\n<li>若使用 C 或 C++ 语言，你不需要 free 或 delete 被删除的节点</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>常规操作</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\"># Definition for singly-linked list.</span><br><span class=\"hljs-comment\"># class ListNode:</span><br><span class=\"hljs-comment\">#     def __init__(self, x):</span><br><span class=\"hljs-comment\">#         self.val = x</span><br><span class=\"hljs-comment\">#         self.next = None</span><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">deleteNode</span>(<span class=\"hljs-params\">self, head: ListNode, val: <span class=\"hljs-built_in\">int</span></span>) -&gt; ListNode:</span><br>        p = head<br>        <span class=\"hljs-keyword\">if</span>(head.val==val):<span class=\"hljs-keyword\">return</span> p.<span class=\"hljs-built_in\">next</span><br>        <span class=\"hljs-keyword\">while</span>(p.<span class=\"hljs-built_in\">next</span>):<br>            <span class=\"hljs-keyword\">if</span>(p.<span class=\"hljs-built_in\">next</span>.val == val):<br>                p.<span class=\"hljs-built_in\">next</span> = p.<span class=\"hljs-built_in\">next</span>.<span class=\"hljs-built_in\">next</span><br>                <span class=\"hljs-keyword\">return</span> head<br>            p = p.<span class=\"hljs-built_in\">next</span><br></code></pre></td></tr></tbody></table></figure>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>删除链表的节点</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>给定单向链表的头指针和一个要删除的节点的值，定义一个函数删除该节点。返回删除后的链表的头节点。<br>\n注意：此题对比原题有改动</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs makefile\"><span class=\"hljs-section\">输入: head = [4,5,1,9], val = 5</span><br><span class=\"hljs-section\">输出: [4,1,9]</span><br><span class=\"hljs-section\">解释: 给定你链表中值为 5 的第二个节点，那么在调用了你的函数之后，该链表应变为 4 -&gt; 1 -&gt; 9.</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs makefile\"><span class=\"hljs-section\">输入: head = [4,5,1,9], val = 1</span><br><span class=\"hljs-section\">输出: [4,5,9]</span><br><span class=\"hljs-section\">解释: 给定你链表中值为 1 的第三个节点，那么在调用了你的函数之后，该链表应变为 4 -&gt; 5 -&gt; 9.</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>题目保证链表中节点的值互不相同</li>\n<li>若使用 C 或 C++ 语言，你不需要 free 或 delete 被删除的节点</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>常规操作</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\"># Definition for singly-linked list.</span><br><span class=\"hljs-comment\"># class ListNode:</span><br><span class=\"hljs-comment\">#     def __init__(self, x):</span><br><span class=\"hljs-comment\">#         self.val = x</span><br><span class=\"hljs-comment\">#         self.next = None</span><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">deleteNode</span>(<span class=\"hljs-params\">self, head: ListNode, val: <span class=\"hljs-built_in\">int</span></span>) -&gt; ListNode:</span><br>        p = head<br>        <span class=\"hljs-keyword\">if</span>(head.val==val):<span class=\"hljs-keyword\">return</span> p.<span class=\"hljs-built_in\">next</span><br>        <span class=\"hljs-keyword\">while</span>(p.<span class=\"hljs-built_in\">next</span>):<br>            <span class=\"hljs-keyword\">if</span>(p.<span class=\"hljs-built_in\">next</span>.val == val):<br>                p.<span class=\"hljs-built_in\">next</span> = p.<span class=\"hljs-built_in\">next</span>.<span class=\"hljs-built_in\">next</span><br>                <span class=\"hljs-keyword\">return</span> head<br>            p = p.<span class=\"hljs-built_in\">next</span><br></code></pre></td></tr></table></figure>\n"},{"title":"剑指offer19","date":"2021-08-21T07:28:32.000Z","math":true,"_content":"\n> 正则表达式匹配\n\n## 题目\n\n请实现一个函数用来匹配包含'. '和'*'的正则表达式。模式中的字符'.'表示任意一个字符，而'*'表示它前面的字符可以出现任意次（含0次）。在本题中，匹配是指字符串的所有字符匹配整个模式。例如，字符串\"aaa\"与模式\"a.a\"和\"ab*ac*a\"匹配，但与\"aa.a\"和\"ab*a\"均不匹配。\n\n### 示例 1：\n\n```\n输入:\ns = \"aa\"\np = \"a\"\n输出: false\n解释: \"a\" 无法匹配 \"aa\" 整个字符串。\n```\n\n### 示例 2：\n\n```\n输入:\ns = \"aa\"\np = \"a*\"\n输出: true\n解释: 因为 '*' 代表可以匹配零个或多个前面的那一个元素, 在这里前面的元素就是 'a'。因此，字符串 \"aa\" 可被视为 'a' 重复了一次。\n```\n### 示例 3：\n\n```\n输入:\ns = \"ab\"\np = \".*\"\n输出: true\n解释: \".*\" 表示可匹配零个或多个（'*'）任意字符（'.'）。\n```\n\n### 示例 4：\n\n```\n输入:\ns = \"aab\"\np = \"c*a*b\"\n输出: true\n解释: 因为 '*' 表示零个或多个，这里 'c' 为 0 个, 'a' 被重复一次。因此可以匹配字符串 \"aab\"。\n```\n### 示例 5：\n\n```\n输入:\ns = \"mississippi\"\np = \"mis*is*p*.\"\n输出: false\n```\n\n### 提示：\n\n- `s` 可能为空，且只包含从 `a-z` 的小写字母。\n- `p` 可能为空，且只包含从 `a-z` 的小写字母以及字符 `.` 和 `*`，无连续的 `'*'`。\n\n## 题解\n\n动态规划的核心是建立状态转移方程。dp\\[i][j]表示前j个模式串匹配s的前i个字母的匹配情况。\n\n那么就要分情况讨论了，一种是p[j]是`字母`，第二是` .` ,第三是 `*`.\n\n1. `字母`:直接判断是否一致，如果$p[j]==s[i]$就可以转移 $dp[i][j] = dp[i-1][j-1]$\n\n2. ` .` : 可以匹配任意字符直接转移$dp[i][j] = dp[i-1][j-1]$\n\n3.  `*`：如果前一个字符$p[j-1]==s[i]$，那么这个`*`可以选择是匹配s的**一个元素还是多个元素**\n\n    $dp[i][j] = dp[i][j-2] \\quad or \\quad dp[i-1][j]$\n   \n   如果元素不相等，就直接向前匹配（0次匹配）$dp[i][j-2]$\n   \n   > $dp[i][j-2]$是匹配0个；$dp[i-1][j]$是匹配多个，忽略i元素继续向前查找；$dp[i-1][j-2]$是匹配1个是包含于多个$dp[i-1][j]$中\n\n```python\nclass Solution:\n    def isMatch(self, s: str, p: str) -> bool:\n        s = \" \"+s\n        p = \" \"+p\n        dp = [[False for _ in range(len(p))] for _ in range(len(s))]\n        dp[0][0] = True\n        for i in range(0,len(s)):\n            for j in range(1,len(p)):\n                if(p[j]!='*'):\n                    if((p[j]=='.' and s[i]!=\" \") or p[j]==s[i]):\n                        dp[i][j] = dp[i-1][j-1]\n                else:\n                    if(p[j-1]==s[i] or (p[j-1]=='.' and s[i]!=\" \")): dp[i][j] = dp[i][j-2] or dp[i-1][j-2] or dp[i-1][j] \n                    #dp[i][j] = dp[i][j-2] or dp[i-1][j] #直接0次或者多次\n                    else:dp[i][j] = dp[i][j-2]\n        return dp[len(s)-1][len(p)-1]\n```\n\n","source":"_posts/leetcode/leetcode-offer19.md","raw":"---\ntitle: 剑指offer19 \ntags: [剑指,动态规划]\ncategories: [剑指,动态规划]\ndate: 2021-08-21 15:28:32\nmath: true\n---\n\n> 正则表达式匹配\n\n## 题目\n\n请实现一个函数用来匹配包含'. '和'*'的正则表达式。模式中的字符'.'表示任意一个字符，而'*'表示它前面的字符可以出现任意次（含0次）。在本题中，匹配是指字符串的所有字符匹配整个模式。例如，字符串\"aaa\"与模式\"a.a\"和\"ab*ac*a\"匹配，但与\"aa.a\"和\"ab*a\"均不匹配。\n\n### 示例 1：\n\n```\n输入:\ns = \"aa\"\np = \"a\"\n输出: false\n解释: \"a\" 无法匹配 \"aa\" 整个字符串。\n```\n\n### 示例 2：\n\n```\n输入:\ns = \"aa\"\np = \"a*\"\n输出: true\n解释: 因为 '*' 代表可以匹配零个或多个前面的那一个元素, 在这里前面的元素就是 'a'。因此，字符串 \"aa\" 可被视为 'a' 重复了一次。\n```\n### 示例 3：\n\n```\n输入:\ns = \"ab\"\np = \".*\"\n输出: true\n解释: \".*\" 表示可匹配零个或多个（'*'）任意字符（'.'）。\n```\n\n### 示例 4：\n\n```\n输入:\ns = \"aab\"\np = \"c*a*b\"\n输出: true\n解释: 因为 '*' 表示零个或多个，这里 'c' 为 0 个, 'a' 被重复一次。因此可以匹配字符串 \"aab\"。\n```\n### 示例 5：\n\n```\n输入:\ns = \"mississippi\"\np = \"mis*is*p*.\"\n输出: false\n```\n\n### 提示：\n\n- `s` 可能为空，且只包含从 `a-z` 的小写字母。\n- `p` 可能为空，且只包含从 `a-z` 的小写字母以及字符 `.` 和 `*`，无连续的 `'*'`。\n\n## 题解\n\n动态规划的核心是建立状态转移方程。dp\\[i][j]表示前j个模式串匹配s的前i个字母的匹配情况。\n\n那么就要分情况讨论了，一种是p[j]是`字母`，第二是` .` ,第三是 `*`.\n\n1. `字母`:直接判断是否一致，如果$p[j]==s[i]$就可以转移 $dp[i][j] = dp[i-1][j-1]$\n\n2. ` .` : 可以匹配任意字符直接转移$dp[i][j] = dp[i-1][j-1]$\n\n3.  `*`：如果前一个字符$p[j-1]==s[i]$，那么这个`*`可以选择是匹配s的**一个元素还是多个元素**\n\n    $dp[i][j] = dp[i][j-2] \\quad or \\quad dp[i-1][j]$\n   \n   如果元素不相等，就直接向前匹配（0次匹配）$dp[i][j-2]$\n   \n   > $dp[i][j-2]$是匹配0个；$dp[i-1][j]$是匹配多个，忽略i元素继续向前查找；$dp[i-1][j-2]$是匹配1个是包含于多个$dp[i-1][j]$中\n\n```python\nclass Solution:\n    def isMatch(self, s: str, p: str) -> bool:\n        s = \" \"+s\n        p = \" \"+p\n        dp = [[False for _ in range(len(p))] for _ in range(len(s))]\n        dp[0][0] = True\n        for i in range(0,len(s)):\n            for j in range(1,len(p)):\n                if(p[j]!='*'):\n                    if((p[j]=='.' and s[i]!=\" \") or p[j]==s[i]):\n                        dp[i][j] = dp[i-1][j-1]\n                else:\n                    if(p[j-1]==s[i] or (p[j-1]=='.' and s[i]!=\" \")): dp[i][j] = dp[i][j-2] or dp[i-1][j-2] or dp[i-1][j] \n                    #dp[i][j] = dp[i][j-2] or dp[i-1][j] #直接0次或者多次\n                    else:dp[i][j] = dp[i][j-2]\n        return dp[len(s)-1][len(p)-1]\n```\n\n","slug":"leetcode/leetcode-offer19","published":1,"updated":"2021-08-21T07:56:22.691Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxocz002jugx4gihq6x13","content":"<blockquote>\n<p>正则表达式匹配</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>请实现一个函数用来匹配包含’. ‘和’<em>‘的正则表达式。模式中的字符’.‘表示任意一个字符，而’</em>'表示它前面的字符可以出现任意次（含0次）。在本题中，匹配是指字符串的所有字符匹配整个模式。例如，字符串\"aaa\"与模式\"a.a\"和\"ab<em>ac</em>a\"匹配，但与\"aa.a\"和\"ab*a\"均不匹配。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight makefile\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs makefile\"><span class=\"hljs-section\">输入:</span><br>s = <span class=\"hljs-string\">\"aa\"</span><br>p = <span class=\"hljs-string\">\"a\"</span><br><span class=\"hljs-section\">输出: false</span><br><span class=\"hljs-section\">解释: \"a\" 无法匹配 \"aa\" 整个字符串。</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight smalltalk\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs smalltalk\">输入:<br>s = <span class=\"hljs-comment\">\"aa\"</span><br>p = <span class=\"hljs-comment\">\"a*\"</span><br>输出: <span class=\"hljs-keyword\">true</span><br>解释:&nbsp;因为 <span class=\"hljs-string\">'*'</span> 代表可以匹配零个或多个前面的那一个元素, 在这里前面的元素就是 <span class=\"hljs-string\">'a'</span>。因此，字符串 <span class=\"hljs-comment\">\"aa\"</span> 可被视为 <span class=\"hljs-string\">'a'</span> 重复了一次。<br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"示例-3：\">示例 3：</h3>\n<figure class=\"highlight makefile\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs makefile\"><span class=\"hljs-section\">输入:</span><br>s = <span class=\"hljs-string\">\"ab\"</span><br>p = <span class=\"hljs-string\">\".*\"</span><br><span class=\"hljs-section\">输出: true</span><br><span class=\"hljs-section\">解释: \".*\" 表示可匹配零个或多个（'*'）任意字符（'.'）。</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"示例-4：\">示例 4：</h3>\n<figure class=\"highlight smalltalk\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs smalltalk\">输入:<br>s = <span class=\"hljs-comment\">\"aab\"</span><br>p = <span class=\"hljs-comment\">\"c*a*b\"</span><br>输出: <span class=\"hljs-keyword\">true</span><br>解释:&nbsp;因为 <span class=\"hljs-string\">'*'</span> 表示零个或多个，这里 <span class=\"hljs-string\">'c'</span> 为 <span class=\"hljs-number\">0</span> 个, <span class=\"hljs-string\">'a'</span> 被重复一次。因此可以匹配字符串 <span class=\"hljs-comment\">\"aab\"</span>。<br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"示例-5：\">示例 5：</h3>\n<figure class=\"highlight makefile\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs makefile\"><span class=\"hljs-section\">输入:</span><br>s = <span class=\"hljs-string\">\"mississippi\"</span><br>p = <span class=\"hljs-string\">\"mis*is*p*.\"</span><br><span class=\"hljs-section\">输出: false</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li><code>s</code> 可能为空，且只包含从 <code>a-z</code> 的小写字母。</li>\n<li><code>p</code> 可能为空，且只包含从 <code>a-z</code> 的小写字母以及字符 <code>.</code> 和 <code>*</code>，无连续的 <code>'*'</code>。</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>动态规划的核心是建立状态转移方程。dp[i][j]表示前j个模式串匹配s的前i个字母的匹配情况。</p>\n<p>那么就要分情况讨论了，一种是p[j]是<code>字母</code>，第二是<code> .</code> ,第三是 <code>*</code>.</p>\n<ol>\n<li>\n<p><code>字母</code>:直接判断是否一致，如果$p[j]==s[i]$就可以转移 $dp[i][j] = dp[i-1][j-1]$</p>\n</li>\n<li>\n<p><code> .</code> : 可以匹配任意字符直接转移$dp[i][j] = dp[i-1][j-1]$</p>\n</li>\n<li>\n<p><code>*</code>：如果前一个字符$p[j-1]==s[i]$，那么这个<code>*</code>可以选择是匹配s的<strong>一个元素还是多个元素</strong></p>\n<p>$dp[i][j] = dp[i][j-2] \\quad or \\quad dp[i-1][j]$</p>\n</li>\n</ol>\n<p>如果元素不相等，就直接向前匹配（0次匹配）$dp[i][j-2]$</p>\n<blockquote>\n<p>$dp[i][j-2]$是匹配0个；$dp[i-1][j]$是匹配多个，忽略i元素继续向前查找；$dp[i-1][j-2]$是匹配1个是包含于多个$dp[i-1][j]$中</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">isMatch</span>(<span class=\"hljs-params\">self, s: <span class=\"hljs-built_in\">str</span>, p: <span class=\"hljs-built_in\">str</span></span>) -&gt; <span class=\"hljs-built_in\">bool</span>:</span><br>        s = <span class=\"hljs-string\">\" \"</span>+s<br>        p = <span class=\"hljs-string\">\" \"</span>+p<br>        dp = [[<span class=\"hljs-literal\">False</span> <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(p))] <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(s))]<br>        dp[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">0</span>] = <span class=\"hljs-literal\">True</span><br>        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">0</span>,<span class=\"hljs-built_in\">len</span>(s)):<br>            <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">len</span>(p)):<br>                <span class=\"hljs-keyword\">if</span>(p[j]!=<span class=\"hljs-string\">'*'</span>):<br>                    <span class=\"hljs-keyword\">if</span>((p[j]==<span class=\"hljs-string\">'.'</span> <span class=\"hljs-keyword\">and</span> s[i]!=<span class=\"hljs-string\">\" \"</span>) <span class=\"hljs-keyword\">or</span> p[j]==s[i]):<br>                        dp[i][j] = dp[i-<span class=\"hljs-number\">1</span>][j-<span class=\"hljs-number\">1</span>]<br>                <span class=\"hljs-keyword\">else</span>:<br>                    <span class=\"hljs-keyword\">if</span>(p[j-<span class=\"hljs-number\">1</span>]==s[i] <span class=\"hljs-keyword\">or</span> (p[j-<span class=\"hljs-number\">1</span>]==<span class=\"hljs-string\">'.'</span> <span class=\"hljs-keyword\">and</span> s[i]!=<span class=\"hljs-string\">\" \"</span>)): dp[i][j] = dp[i][j-<span class=\"hljs-number\">2</span>] <span class=\"hljs-keyword\">or</span> dp[i-<span class=\"hljs-number\">1</span>][j-<span class=\"hljs-number\">2</span>] <span class=\"hljs-keyword\">or</span> dp[i-<span class=\"hljs-number\">1</span>][j] <br>                    <span class=\"hljs-comment\">#dp[i][j] = dp[i][j-2] or dp[i-1][j] #直接0次或者多次</span><br>                    <span class=\"hljs-keyword\">else</span>:dp[i][j] = dp[i][j-<span class=\"hljs-number\">2</span>]<br>        <span class=\"hljs-keyword\">return</span> dp[<span class=\"hljs-built_in\">len</span>(s)-<span class=\"hljs-number\">1</span>][<span class=\"hljs-built_in\">len</span>(p)-<span class=\"hljs-number\">1</span>]<br></code></pre></td></tr></tbody></table></figure>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>正则表达式匹配</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>请实现一个函数用来匹配包含’. ‘和’<em>‘的正则表达式。模式中的字符’.‘表示任意一个字符，而’</em>'表示它前面的字符可以出现任意次（含0次）。在本题中，匹配是指字符串的所有字符匹配整个模式。例如，字符串&quot;aaa&quot;与模式&quot;a.a&quot;和&quot;ab<em>ac</em>a&quot;匹配，但与&quot;aa.a&quot;和&quot;ab*a&quot;均不匹配。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs makefile\"><span class=\"hljs-section\">输入:</span><br>s = <span class=\"hljs-string\">&quot;aa&quot;</span><br>p = <span class=\"hljs-string\">&quot;a&quot;</span><br><span class=\"hljs-section\">输出: false</span><br><span class=\"hljs-section\">解释: &quot;a&quot; 无法匹配 &quot;aa&quot; 整个字符串。</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight smalltalk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs smalltalk\">输入:<br>s = <span class=\"hljs-comment\">&quot;aa&quot;</span><br>p = <span class=\"hljs-comment\">&quot;a*&quot;</span><br>输出: <span class=\"hljs-keyword\">true</span><br>解释: 因为 <span class=\"hljs-string\">&#x27;*&#x27;</span> 代表可以匹配零个或多个前面的那一个元素, 在这里前面的元素就是 <span class=\"hljs-string\">&#x27;a&#x27;</span>。因此，字符串 <span class=\"hljs-comment\">&quot;aa&quot;</span> 可被视为 <span class=\"hljs-string\">&#x27;a&#x27;</span> 重复了一次。<br></code></pre></td></tr></table></figure>\n<h3 id=\"示例-3：\">示例 3：</h3>\n<figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs makefile\"><span class=\"hljs-section\">输入:</span><br>s = <span class=\"hljs-string\">&quot;ab&quot;</span><br>p = <span class=\"hljs-string\">&quot;.*&quot;</span><br><span class=\"hljs-section\">输出: true</span><br><span class=\"hljs-section\">解释: &quot;.*&quot; 表示可匹配零个或多个（&#x27;*&#x27;）任意字符（&#x27;.&#x27;）。</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"示例-4：\">示例 4：</h3>\n<figure class=\"highlight smalltalk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs smalltalk\">输入:<br>s = <span class=\"hljs-comment\">&quot;aab&quot;</span><br>p = <span class=\"hljs-comment\">&quot;c*a*b&quot;</span><br>输出: <span class=\"hljs-keyword\">true</span><br>解释: 因为 <span class=\"hljs-string\">&#x27;*&#x27;</span> 表示零个或多个，这里 <span class=\"hljs-string\">&#x27;c&#x27;</span> 为 <span class=\"hljs-number\">0</span> 个, <span class=\"hljs-string\">&#x27;a&#x27;</span> 被重复一次。因此可以匹配字符串 <span class=\"hljs-comment\">&quot;aab&quot;</span>。<br></code></pre></td></tr></table></figure>\n<h3 id=\"示例-5：\">示例 5：</h3>\n<figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs makefile\"><span class=\"hljs-section\">输入:</span><br>s = <span class=\"hljs-string\">&quot;mississippi&quot;</span><br>p = <span class=\"hljs-string\">&quot;mis*is*p*.&quot;</span><br><span class=\"hljs-section\">输出: false</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li><code>s</code> 可能为空，且只包含从 <code>a-z</code> 的小写字母。</li>\n<li><code>p</code> 可能为空，且只包含从 <code>a-z</code> 的小写字母以及字符 <code>.</code> 和 <code>*</code>，无连续的 <code>'*'</code>。</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>动态规划的核心是建立状态转移方程。dp[i][j]表示前j个模式串匹配s的前i个字母的匹配情况。</p>\n<p>那么就要分情况讨论了，一种是p[j]是<code>字母</code>，第二是<code> .</code> ,第三是 <code>*</code>.</p>\n<ol>\n<li>\n<p><code>字母</code>:直接判断是否一致，如果$p[j]==s[i]$就可以转移 $dp[i][j] = dp[i-1][j-1]$</p>\n</li>\n<li>\n<p><code> .</code> : 可以匹配任意字符直接转移$dp[i][j] = dp[i-1][j-1]$</p>\n</li>\n<li>\n<p><code>*</code>：如果前一个字符$p[j-1]==s[i]$，那么这个<code>*</code>可以选择是匹配s的<strong>一个元素还是多个元素</strong></p>\n<p>$dp[i][j] = dp[i][j-2] \\quad or \\quad dp[i-1][j]$</p>\n</li>\n</ol>\n<p>如果元素不相等，就直接向前匹配（0次匹配）$dp[i][j-2]$</p>\n<blockquote>\n<p>$dp[i][j-2]$是匹配0个；$dp[i-1][j]$是匹配多个，忽略i元素继续向前查找；$dp[i-1][j-2]$是匹配1个是包含于多个$dp[i-1][j]$中</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">isMatch</span>(<span class=\"hljs-params\">self, s: <span class=\"hljs-built_in\">str</span>, p: <span class=\"hljs-built_in\">str</span></span>) -&gt; <span class=\"hljs-built_in\">bool</span>:</span><br>        s = <span class=\"hljs-string\">&quot; &quot;</span>+s<br>        p = <span class=\"hljs-string\">&quot; &quot;</span>+p<br>        dp = [[<span class=\"hljs-literal\">False</span> <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(p))] <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(s))]<br>        dp[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">0</span>] = <span class=\"hljs-literal\">True</span><br>        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">0</span>,<span class=\"hljs-built_in\">len</span>(s)):<br>            <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>,<span class=\"hljs-built_in\">len</span>(p)):<br>                <span class=\"hljs-keyword\">if</span>(p[j]!=<span class=\"hljs-string\">&#x27;*&#x27;</span>):<br>                    <span class=\"hljs-keyword\">if</span>((p[j]==<span class=\"hljs-string\">&#x27;.&#x27;</span> <span class=\"hljs-keyword\">and</span> s[i]!=<span class=\"hljs-string\">&quot; &quot;</span>) <span class=\"hljs-keyword\">or</span> p[j]==s[i]):<br>                        dp[i][j] = dp[i-<span class=\"hljs-number\">1</span>][j-<span class=\"hljs-number\">1</span>]<br>                <span class=\"hljs-keyword\">else</span>:<br>                    <span class=\"hljs-keyword\">if</span>(p[j-<span class=\"hljs-number\">1</span>]==s[i] <span class=\"hljs-keyword\">or</span> (p[j-<span class=\"hljs-number\">1</span>]==<span class=\"hljs-string\">&#x27;.&#x27;</span> <span class=\"hljs-keyword\">and</span> s[i]!=<span class=\"hljs-string\">&quot; &quot;</span>)): dp[i][j] = dp[i][j-<span class=\"hljs-number\">2</span>] <span class=\"hljs-keyword\">or</span> dp[i-<span class=\"hljs-number\">1</span>][j-<span class=\"hljs-number\">2</span>] <span class=\"hljs-keyword\">or</span> dp[i-<span class=\"hljs-number\">1</span>][j] <br>                    <span class=\"hljs-comment\">#dp[i][j] = dp[i][j-2] or dp[i-1][j] #直接0次或者多次</span><br>                    <span class=\"hljs-keyword\">else</span>:dp[i][j] = dp[i][j-<span class=\"hljs-number\">2</span>]<br>        <span class=\"hljs-keyword\">return</span> dp[<span class=\"hljs-built_in\">len</span>(s)-<span class=\"hljs-number\">1</span>][<span class=\"hljs-built_in\">len</span>(p)-<span class=\"hljs-number\">1</span>]<br></code></pre></td></tr></table></figure>\n"},{"title":"剑指offer20 表示数值的字符串","date":"2021-08-19T01:30:05.000Z","math":true,"_content":"\n> 表示数值的字符串\n\n## 题目\n请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。\n\n**数值**（按顺序）可以分成以下几个部分：\n\n1. 若干空格\n2. 一个 小数 或者 整数\n3. （可选）一个 'e' 或 'E' ，后面跟着一个 整数\n4. 若干空格\n\n**小数**（按顺序）可以分成以下几个部分：\n\n1. （可选）一个符号字符（'+' 或 '-'）\n\n2. 下述格式之一：\n\n   1. 至少一位数字，后面跟着一个点 '.'\n   2. 至少一位数字，后面跟着一个点 '.' ，后面再跟着至少一位数字\n   3. 一个点 '.' ，后面跟着至少一位数字\n\n**整数**（按顺序）可以分成以下几个部分：\n\n1. （可选）一个符号字符（'+' 或 '-'）\n2. 至少一位数字\n\n部分**数值**列举如下：\n- [\"+100\", \"5e2\", \"-123\", \"3.1416\", \"-1E-16\", \"0123\"]\n\n部分非数值列举如下：\n- [\"12e\", \"1a3.14\", \"1.2.3\", \"+-5\", \"12e+5.4\"]\n\n### 示例 1：\n\n```\n输入：s = \"0\"\n输出：true\n\n```\n\n### 示例 2：\n\n```\n输入：s = \"e\"\n输出：false\n\n```\n### 示例 3：\n\n```\n输入：s = \".\"\n输出：false\n```\n### 示例 4：\n\n```\n输入：s = \"    .1  \"\n输出：true\n```\n\n### 提示：\n\n- 1 <= s.length <= 20\n- s 仅含英文字母（大写和小写），数字（0-9），加号 '+' ，减号 '-' ，空格 ' ' 或者点 '.' 。\n\n## 题解\n\n### 解题思路\n\n本题解决方案是有限状态自动机。根据字符类型和合法数值的特点，定义状态，再画出状态转移图。\n\n#### 字符类型\n\n空格:' '，数字:d，正负号:s，小数点:'.'，幂符号：e\n\n#### 状态定义\n\n从左到右可以定义为\n\n   0.左边的`空格`\n\n1. E之前的`正负号`\n2. 小数点前的`数字`\n3. 小数点，小数点之后的`数字`\n4. 小数点前为空格，`小数点`，小数点后为数字\n5. `幂符号`\n6. 幂符号之后的`正负号`\n7. 幂符号之后的`数字`\n8. 结尾的`空格`\n\n![](https://picture.mulindya.com/leetcode-offer20-pic1.png)\n\n#### 结束状态\n\n正常的结束状态有2，3，7，8\n\n### 算法流程\n\n#### 初始化\n\n##### 1，状态转移表status\n\n$states[i]$表示所处的状态，$i$为所处的状态表示，$states[i]$使用哈希表存储从i状态到可转移的状态；使用键值对来表示$(key,value)$：若输入$key$，可从状态$i$转移至状态$value$.\n\n当前状态p：初始状态为0\n\n##### 2，转移循环\n\n还需要**记录字符类型**t，遍历字符串的每个字符c\n\n- 当 c 为正负号时，执行 t = 's' ;\n- 当 c 为数字时，执行 t = 'd' ;\n- 当 c 为 e , E 时，执行 t = 'e' ;\n- 当 c 为 . , 空格 时，执行 t = c （即用字符本身表示字符类型）;\n- 否则，执行 t = '?' ，代表为不属于判断范围的非法字符，后续直接返回 false。\n\n**终止条件**： 若字符类型 t不在哈希表  $states[p]$ 中，说明无法转移至下一状态，因此直接返回 False 。\n**状态转移**： 状态 p 转移至 $states[p][t]$。\n\n```python\nclass Solution:\n    def isNumber(self, s: str) -> bool:\n        states = [\n            { ' ': 0, 's': 1, 'd': 2, '.': 4 }, # 0. start with 'blank'\n            { 'd': 2, '.': 4 } ,                # 1. 'sign' before 'e'\n            { 'd': 2, '.': 3, 'e': 5, ' ': 8 }, # 2. 'digit' before 'dot'\n            { 'd': 3, 'e': 5, ' ': 8 },         # 3. 'digit' after 'dot'\n            { 'd': 3 },                         # 4. 'digit' after 'dot' (‘blank’ before 'dot')\n            { 's': 6, 'd': 7 },                 # 5. 'e'\n            { 'd': 7 },                         # 6. 'sign' after 'e'\n            { 'd': 7, ' ': 8 },                 # 7. 'digit' after 'e'\n            { ' ': 8 }                          # 8. end with 'blank'\n        ]\n        p = 0                           # start with state 0\n        for c in s:\n            if '0' <= c <= '9': t = 'd' # digit\n            elif c in \"+-\": t = 's'     # sign\n            elif c in \"eE\": t = 'e'     # e or E\n            elif c in \". \": t = c       # dot, blank\n            else: t = '?'               # unknown\n            if t not in states[p]: return False\n            p = states[p][t]\n        return p in (2, 3, 7, 8)\n\n```\n\n","source":"_posts/leetcode/leetcode-offer20.md","raw":"---\ntitle: 剑指offer20 表示数值的字符串\ntags: [剑指,有限状态机,idea]\ncategories: [剑指,有限状态机]\ndate: 2021-08-19 09:30:05\nmath: true\n---\n\n> 表示数值的字符串\n\n## 题目\n请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。\n\n**数值**（按顺序）可以分成以下几个部分：\n\n1. 若干空格\n2. 一个 小数 或者 整数\n3. （可选）一个 'e' 或 'E' ，后面跟着一个 整数\n4. 若干空格\n\n**小数**（按顺序）可以分成以下几个部分：\n\n1. （可选）一个符号字符（'+' 或 '-'）\n\n2. 下述格式之一：\n\n   1. 至少一位数字，后面跟着一个点 '.'\n   2. 至少一位数字，后面跟着一个点 '.' ，后面再跟着至少一位数字\n   3. 一个点 '.' ，后面跟着至少一位数字\n\n**整数**（按顺序）可以分成以下几个部分：\n\n1. （可选）一个符号字符（'+' 或 '-'）\n2. 至少一位数字\n\n部分**数值**列举如下：\n- [\"+100\", \"5e2\", \"-123\", \"3.1416\", \"-1E-16\", \"0123\"]\n\n部分非数值列举如下：\n- [\"12e\", \"1a3.14\", \"1.2.3\", \"+-5\", \"12e+5.4\"]\n\n### 示例 1：\n\n```\n输入：s = \"0\"\n输出：true\n\n```\n\n### 示例 2：\n\n```\n输入：s = \"e\"\n输出：false\n\n```\n### 示例 3：\n\n```\n输入：s = \".\"\n输出：false\n```\n### 示例 4：\n\n```\n输入：s = \"    .1  \"\n输出：true\n```\n\n### 提示：\n\n- 1 <= s.length <= 20\n- s 仅含英文字母（大写和小写），数字（0-9），加号 '+' ，减号 '-' ，空格 ' ' 或者点 '.' 。\n\n## 题解\n\n### 解题思路\n\n本题解决方案是有限状态自动机。根据字符类型和合法数值的特点，定义状态，再画出状态转移图。\n\n#### 字符类型\n\n空格:' '，数字:d，正负号:s，小数点:'.'，幂符号：e\n\n#### 状态定义\n\n从左到右可以定义为\n\n   0.左边的`空格`\n\n1. E之前的`正负号`\n2. 小数点前的`数字`\n3. 小数点，小数点之后的`数字`\n4. 小数点前为空格，`小数点`，小数点后为数字\n5. `幂符号`\n6. 幂符号之后的`正负号`\n7. 幂符号之后的`数字`\n8. 结尾的`空格`\n\n![](https://picture.mulindya.com/leetcode-offer20-pic1.png)\n\n#### 结束状态\n\n正常的结束状态有2，3，7，8\n\n### 算法流程\n\n#### 初始化\n\n##### 1，状态转移表status\n\n$states[i]$表示所处的状态，$i$为所处的状态表示，$states[i]$使用哈希表存储从i状态到可转移的状态；使用键值对来表示$(key,value)$：若输入$key$，可从状态$i$转移至状态$value$.\n\n当前状态p：初始状态为0\n\n##### 2，转移循环\n\n还需要**记录字符类型**t，遍历字符串的每个字符c\n\n- 当 c 为正负号时，执行 t = 's' ;\n- 当 c 为数字时，执行 t = 'd' ;\n- 当 c 为 e , E 时，执行 t = 'e' ;\n- 当 c 为 . , 空格 时，执行 t = c （即用字符本身表示字符类型）;\n- 否则，执行 t = '?' ，代表为不属于判断范围的非法字符，后续直接返回 false。\n\n**终止条件**： 若字符类型 t不在哈希表  $states[p]$ 中，说明无法转移至下一状态，因此直接返回 False 。\n**状态转移**： 状态 p 转移至 $states[p][t]$。\n\n```python\nclass Solution:\n    def isNumber(self, s: str) -> bool:\n        states = [\n            { ' ': 0, 's': 1, 'd': 2, '.': 4 }, # 0. start with 'blank'\n            { 'd': 2, '.': 4 } ,                # 1. 'sign' before 'e'\n            { 'd': 2, '.': 3, 'e': 5, ' ': 8 }, # 2. 'digit' before 'dot'\n            { 'd': 3, 'e': 5, ' ': 8 },         # 3. 'digit' after 'dot'\n            { 'd': 3 },                         # 4. 'digit' after 'dot' (‘blank’ before 'dot')\n            { 's': 6, 'd': 7 },                 # 5. 'e'\n            { 'd': 7 },                         # 6. 'sign' after 'e'\n            { 'd': 7, ' ': 8 },                 # 7. 'digit' after 'e'\n            { ' ': 8 }                          # 8. end with 'blank'\n        ]\n        p = 0                           # start with state 0\n        for c in s:\n            if '0' <= c <= '9': t = 'd' # digit\n            elif c in \"+-\": t = 's'     # sign\n            elif c in \"eE\": t = 'e'     # e or E\n            elif c in \". \": t = c       # dot, blank\n            else: t = '?'               # unknown\n            if t not in states[p]: return False\n            p = states[p][t]\n        return p in (2, 3, 7, 8)\n\n```\n\n","slug":"leetcode/leetcode-offer20","published":1,"updated":"2021-08-19T08:04:06.793Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxod0002lugx481bl5jxl","content":"<blockquote>\n<p>表示数值的字符串</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。</p>\n<p><strong>数值</strong>（按顺序）可以分成以下几个部分：</p>\n<ol>\n<li>若干空格</li>\n<li>一个&nbsp;小数&nbsp;或者&nbsp;整数</li>\n<li>（可选）一个&nbsp;‘e’&nbsp;或&nbsp;‘E’&nbsp;，后面跟着一个&nbsp;整数</li>\n<li>若干空格</li>\n</ol>\n<p><strong>小数</strong>（按顺序）可以分成以下几个部分：</p>\n<ol>\n<li>\n<p>（可选）一个符号字符（‘+’ 或 ‘-’）</p>\n</li>\n<li>\n<p>下述格式之一：</p>\n<ol>\n<li>至少一位数字，后面跟着一个点 ‘.’</li>\n<li>至少一位数字，后面跟着一个点 ‘.’ ，后面再跟着至少一位数字</li>\n<li>一个点 ‘.’ ，后面跟着至少一位数字</li>\n</ol>\n</li>\n</ol>\n<p><strong>整数</strong>（按顺序）可以分成以下几个部分：</p>\n<ol>\n<li>（可选）一个符号字符（‘+’ 或 ‘-’）</li>\n<li>至少一位数字</li>\n</ol>\n<p>部分<strong>数值</strong>列举如下：</p>\n<ul>\n<li>[“+100”, “5e2”, “-123”, “3.1416”, “-1E-16”, “0123”]</li>\n</ul>\n<p>部分非数值列举如下：</p>\n<ul>\n<li>[“12e”, “1a3.14”, “1.2.3”, “±5”, “12e+5.4”]</li>\n</ul>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight nix\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">输入：<span class=\"hljs-attr\">s</span> = <span class=\"hljs-string\">\"0\"</span><br>输出：<span class=\"hljs-literal\">true</span><br><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight nix\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">输入：<span class=\"hljs-attr\">s</span> = <span class=\"hljs-string\">\"e\"</span><br>输出：<span class=\"hljs-literal\">false</span><br><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"示例-3：\">示例 3：</h3>\n<figure class=\"highlight nix\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">输入：<span class=\"hljs-attr\">s</span> = <span class=\"hljs-string\">\".\"</span><br>输出：<span class=\"hljs-literal\">false</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"示例-4：\">示例 4：</h3>\n<figure class=\"highlight nix\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">输入：<span class=\"hljs-attr\">s</span> = <span class=\"hljs-string\">\"    .1  \"</span><br>输出：<span class=\"hljs-literal\">true</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>1 &lt;= s.length &lt;= 20</li>\n<li>s 仅含英文字母（大写和小写），数字（0-9），加号 ‘+’ ，减号 ‘-’ ，空格 ’ ’ 或者点 ‘.’ 。</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<h3 id=\"解题思路\">解题思路</h3>\n<p>本题解决方案是有限状态自动机。根据字符类型和合法数值的特点，定义状态，再画出状态转移图。</p>\n<h4 id=\"字符类型\">字符类型</h4>\n<p>空格:’ ‘，数字:d，正负号:s，小数点:’.'，幂符号：e</p>\n<h4 id=\"状态定义\">状态定义</h4>\n<p>从左到右可以定义为</p>\n<p>0.左边的<code>空格</code></p>\n<ol>\n<li>E之前的<code>正负号</code></li>\n<li>小数点前的<code>数字</code></li>\n<li>小数点，小数点之后的<code>数字</code></li>\n<li>小数点前为空格，<code>小数点</code>，小数点后为数字</li>\n<li><code>幂符号</code></li>\n<li>幂符号之后的<code>正负号</code></li>\n<li>幂符号之后的<code>数字</code></li>\n<li>结尾的<code>空格</code></li>\n</ol>\n<p><img src=\"https://picture.mulindya.com/leetcode-offer20-pic1.png\" alt=\"\"></p>\n<h4 id=\"结束状态\">结束状态</h4>\n<p>正常的结束状态有2，3，7，8</p>\n<h3 id=\"算法流程\">算法流程</h3>\n<h4 id=\"初始化\">初始化</h4>\n<h5 id=\"1，状态转移表status\">1，状态转移表status</h5>\n<p>$states[i]$表示所处的状态，$i$为所处的状态表示，$states[i]$使用哈希表存储从i状态到可转移的状态；使用键值对来表示$(key,value)$：若输入$key$，可从状态$i$转移至状态$value$.</p>\n<p>当前状态p：初始状态为0</p>\n<h5 id=\"2，转移循环\">2，转移循环</h5>\n<p>还需要<strong>记录字符类型</strong>t，遍历字符串的每个字符c</p>\n<ul>\n<li>当 c 为正负号时，执行 t = ‘s’ ;</li>\n<li>当 c 为数字时，执行 t = ‘d’ ;</li>\n<li>当 c 为 e , E 时，执行 t = ‘e’ ;</li>\n<li>当 c 为 . , 空格 时，执行 t = c （即用字符本身表示字符类型）;</li>\n<li>否则，执行 t = ‘?’ ，代表为不属于判断范围的非法字符，后续直接返回 false。</li>\n</ul>\n<p><strong>终止条件</strong>： 若字符类型 t不在哈希表  $states[p]$ 中，说明无法转移至下一状态，因此直接返回 False 。<br>\n<strong>状态转移</strong>： 状态 p 转移至 $states[p][t]$。</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">isNumber</span>(<span class=\"hljs-params\">self, s: <span class=\"hljs-built_in\">str</span></span>) -&gt; <span class=\"hljs-built_in\">bool</span>:</span><br>        states = [<br>            { <span class=\"hljs-string\">' '</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">'s'</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'d'</span>: <span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">'.'</span>: <span class=\"hljs-number\">4</span> }, <span class=\"hljs-comment\"># 0. start with 'blank'</span><br>            { <span class=\"hljs-string\">'d'</span>: <span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">'.'</span>: <span class=\"hljs-number\">4</span> } ,                <span class=\"hljs-comment\"># 1. 'sign' before 'e'</span><br>            { <span class=\"hljs-string\">'d'</span>: <span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">'.'</span>: <span class=\"hljs-number\">3</span>, <span class=\"hljs-string\">'e'</span>: <span class=\"hljs-number\">5</span>, <span class=\"hljs-string\">' '</span>: <span class=\"hljs-number\">8</span> }, <span class=\"hljs-comment\"># 2. 'digit' before 'dot'</span><br>            { <span class=\"hljs-string\">'d'</span>: <span class=\"hljs-number\">3</span>, <span class=\"hljs-string\">'e'</span>: <span class=\"hljs-number\">5</span>, <span class=\"hljs-string\">' '</span>: <span class=\"hljs-number\">8</span> },         <span class=\"hljs-comment\"># 3. 'digit' after 'dot'</span><br>            { <span class=\"hljs-string\">'d'</span>: <span class=\"hljs-number\">3</span> },                         <span class=\"hljs-comment\"># 4. 'digit' after 'dot' (‘blank’ before 'dot')</span><br>            { <span class=\"hljs-string\">'s'</span>: <span class=\"hljs-number\">6</span>, <span class=\"hljs-string\">'d'</span>: <span class=\"hljs-number\">7</span> },                 <span class=\"hljs-comment\"># 5. 'e'</span><br>            { <span class=\"hljs-string\">'d'</span>: <span class=\"hljs-number\">7</span> },                         <span class=\"hljs-comment\"># 6. 'sign' after 'e'</span><br>            { <span class=\"hljs-string\">'d'</span>: <span class=\"hljs-number\">7</span>, <span class=\"hljs-string\">' '</span>: <span class=\"hljs-number\">8</span> },                 <span class=\"hljs-comment\"># 7. 'digit' after 'e'</span><br>            { <span class=\"hljs-string\">' '</span>: <span class=\"hljs-number\">8</span> }                          <span class=\"hljs-comment\"># 8. end with 'blank'</span><br>        ]<br>        p = <span class=\"hljs-number\">0</span>                           <span class=\"hljs-comment\"># start with state 0</span><br>        <span class=\"hljs-keyword\">for</span> c <span class=\"hljs-keyword\">in</span> s:<br>            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">'0'</span> &lt;= c &lt;= <span class=\"hljs-string\">'9'</span>: t = <span class=\"hljs-string\">'d'</span> <span class=\"hljs-comment\"># digit</span><br>            <span class=\"hljs-keyword\">elif</span> c <span class=\"hljs-keyword\">in</span> <span class=\"hljs-string\">\"+-\"</span>: t = <span class=\"hljs-string\">'s'</span>     <span class=\"hljs-comment\"># sign</span><br>            <span class=\"hljs-keyword\">elif</span> c <span class=\"hljs-keyword\">in</span> <span class=\"hljs-string\">\"eE\"</span>: t = <span class=\"hljs-string\">'e'</span>     <span class=\"hljs-comment\"># e or E</span><br>            <span class=\"hljs-keyword\">elif</span> c <span class=\"hljs-keyword\">in</span> <span class=\"hljs-string\">\". \"</span>: t = c       <span class=\"hljs-comment\"># dot, blank</span><br>            <span class=\"hljs-keyword\">else</span>: t = <span class=\"hljs-string\">'?'</span>               <span class=\"hljs-comment\"># unknown</span><br>            <span class=\"hljs-keyword\">if</span> t <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">in</span> states[p]: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br>            p = states[p][t]<br>        <span class=\"hljs-keyword\">return</span> p <span class=\"hljs-keyword\">in</span> (<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">8</span>)<br><br></code></pre></td></tr></tbody></table></figure>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>表示数值的字符串</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。</p>\n<p><strong>数值</strong>（按顺序）可以分成以下几个部分：</p>\n<ol>\n<li>若干空格</li>\n<li>一个 小数 或者 整数</li>\n<li>（可选）一个 ‘e’ 或 ‘E’ ，后面跟着一个 整数</li>\n<li>若干空格</li>\n</ol>\n<p><strong>小数</strong>（按顺序）可以分成以下几个部分：</p>\n<ol>\n<li>\n<p>（可选）一个符号字符（‘+’ 或 ‘-’）</p>\n</li>\n<li>\n<p>下述格式之一：</p>\n<ol>\n<li>至少一位数字，后面跟着一个点 ‘.’</li>\n<li>至少一位数字，后面跟着一个点 ‘.’ ，后面再跟着至少一位数字</li>\n<li>一个点 ‘.’ ，后面跟着至少一位数字</li>\n</ol>\n</li>\n</ol>\n<p><strong>整数</strong>（按顺序）可以分成以下几个部分：</p>\n<ol>\n<li>（可选）一个符号字符（‘+’ 或 ‘-’）</li>\n<li>至少一位数字</li>\n</ol>\n<p>部分<strong>数值</strong>列举如下：</p>\n<ul>\n<li>[“+100”, “5e2”, “-123”, “3.1416”, “-1E-16”, “0123”]</li>\n</ul>\n<p>部分非数值列举如下：</p>\n<ul>\n<li>[“12e”, “1a3.14”, “1.2.3”, “±5”, “12e+5.4”]</li>\n</ul>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">输入：<span class=\"hljs-attr\">s</span> = <span class=\"hljs-string\">&quot;0&quot;</span><br>输出：<span class=\"hljs-literal\">true</span><br><br></code></pre></td></tr></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">输入：<span class=\"hljs-attr\">s</span> = <span class=\"hljs-string\">&quot;e&quot;</span><br>输出：<span class=\"hljs-literal\">false</span><br><br></code></pre></td></tr></table></figure>\n<h3 id=\"示例-3：\">示例 3：</h3>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">输入：<span class=\"hljs-attr\">s</span> = <span class=\"hljs-string\">&quot;.&quot;</span><br>输出：<span class=\"hljs-literal\">false</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"示例-4：\">示例 4：</h3>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">输入：<span class=\"hljs-attr\">s</span> = <span class=\"hljs-string\">&quot;    .1  &quot;</span><br>输出：<span class=\"hljs-literal\">true</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>1 &lt;= s.length &lt;= 20</li>\n<li>s 仅含英文字母（大写和小写），数字（0-9），加号 ‘+’ ，减号 ‘-’ ，空格 ’ ’ 或者点 ‘.’ 。</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<h3 id=\"解题思路\">解题思路</h3>\n<p>本题解决方案是有限状态自动机。根据字符类型和合法数值的特点，定义状态，再画出状态转移图。</p>\n<h4 id=\"字符类型\">字符类型</h4>\n<p>空格:’ ‘，数字:d，正负号:s，小数点:’.'，幂符号：e</p>\n<h4 id=\"状态定义\">状态定义</h4>\n<p>从左到右可以定义为</p>\n<p>0.左边的<code>空格</code></p>\n<ol>\n<li>E之前的<code>正负号</code></li>\n<li>小数点前的<code>数字</code></li>\n<li>小数点，小数点之后的<code>数字</code></li>\n<li>小数点前为空格，<code>小数点</code>，小数点后为数字</li>\n<li><code>幂符号</code></li>\n<li>幂符号之后的<code>正负号</code></li>\n<li>幂符号之后的<code>数字</code></li>\n<li>结尾的<code>空格</code></li>\n</ol>\n<p><img src=\"https://picture.mulindya.com/leetcode-offer20-pic1.png\" alt=\"\"></p>\n<h4 id=\"结束状态\">结束状态</h4>\n<p>正常的结束状态有2，3，7，8</p>\n<h3 id=\"算法流程\">算法流程</h3>\n<h4 id=\"初始化\">初始化</h4>\n<h5 id=\"1，状态转移表status\">1，状态转移表status</h5>\n<p>$states[i]$表示所处的状态，$i$为所处的状态表示，$states[i]$使用哈希表存储从i状态到可转移的状态；使用键值对来表示$(key,value)$：若输入$key$，可从状态$i$转移至状态$value$.</p>\n<p>当前状态p：初始状态为0</p>\n<h5 id=\"2，转移循环\">2，转移循环</h5>\n<p>还需要<strong>记录字符类型</strong>t，遍历字符串的每个字符c</p>\n<ul>\n<li>当 c 为正负号时，执行 t = ‘s’ ;</li>\n<li>当 c 为数字时，执行 t = ‘d’ ;</li>\n<li>当 c 为 e , E 时，执行 t = ‘e’ ;</li>\n<li>当 c 为 . , 空格 时，执行 t = c （即用字符本身表示字符类型）;</li>\n<li>否则，执行 t = ‘?’ ，代表为不属于判断范围的非法字符，后续直接返回 false。</li>\n</ul>\n<p><strong>终止条件</strong>： 若字符类型 t不在哈希表  $states[p]$ 中，说明无法转移至下一状态，因此直接返回 False 。<br>\n<strong>状态转移</strong>： 状态 p 转移至 $states[p][t]$。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">isNumber</span>(<span class=\"hljs-params\">self, s: <span class=\"hljs-built_in\">str</span></span>) -&gt; <span class=\"hljs-built_in\">bool</span>:</span><br>        states = [<br>            &#123; <span class=\"hljs-string\">&#x27; &#x27;</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">&#x27;s&#x27;</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">&#x27;d&#x27;</span>: <span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">&#x27;.&#x27;</span>: <span class=\"hljs-number\">4</span> &#125;, <span class=\"hljs-comment\"># 0. start with &#x27;blank&#x27;</span><br>            &#123; <span class=\"hljs-string\">&#x27;d&#x27;</span>: <span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">&#x27;.&#x27;</span>: <span class=\"hljs-number\">4</span> &#125; ,                <span class=\"hljs-comment\"># 1. &#x27;sign&#x27; before &#x27;e&#x27;</span><br>            &#123; <span class=\"hljs-string\">&#x27;d&#x27;</span>: <span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">&#x27;.&#x27;</span>: <span class=\"hljs-number\">3</span>, <span class=\"hljs-string\">&#x27;e&#x27;</span>: <span class=\"hljs-number\">5</span>, <span class=\"hljs-string\">&#x27; &#x27;</span>: <span class=\"hljs-number\">8</span> &#125;, <span class=\"hljs-comment\"># 2. &#x27;digit&#x27; before &#x27;dot&#x27;</span><br>            &#123; <span class=\"hljs-string\">&#x27;d&#x27;</span>: <span class=\"hljs-number\">3</span>, <span class=\"hljs-string\">&#x27;e&#x27;</span>: <span class=\"hljs-number\">5</span>, <span class=\"hljs-string\">&#x27; &#x27;</span>: <span class=\"hljs-number\">8</span> &#125;,         <span class=\"hljs-comment\"># 3. &#x27;digit&#x27; after &#x27;dot&#x27;</span><br>            &#123; <span class=\"hljs-string\">&#x27;d&#x27;</span>: <span class=\"hljs-number\">3</span> &#125;,                         <span class=\"hljs-comment\"># 4. &#x27;digit&#x27; after &#x27;dot&#x27; (‘blank’ before &#x27;dot&#x27;)</span><br>            &#123; <span class=\"hljs-string\">&#x27;s&#x27;</span>: <span class=\"hljs-number\">6</span>, <span class=\"hljs-string\">&#x27;d&#x27;</span>: <span class=\"hljs-number\">7</span> &#125;,                 <span class=\"hljs-comment\"># 5. &#x27;e&#x27;</span><br>            &#123; <span class=\"hljs-string\">&#x27;d&#x27;</span>: <span class=\"hljs-number\">7</span> &#125;,                         <span class=\"hljs-comment\"># 6. &#x27;sign&#x27; after &#x27;e&#x27;</span><br>            &#123; <span class=\"hljs-string\">&#x27;d&#x27;</span>: <span class=\"hljs-number\">7</span>, <span class=\"hljs-string\">&#x27; &#x27;</span>: <span class=\"hljs-number\">8</span> &#125;,                 <span class=\"hljs-comment\"># 7. &#x27;digit&#x27; after &#x27;e&#x27;</span><br>            &#123; <span class=\"hljs-string\">&#x27; &#x27;</span>: <span class=\"hljs-number\">8</span> &#125;                          <span class=\"hljs-comment\"># 8. end with &#x27;blank&#x27;</span><br>        ]<br>        p = <span class=\"hljs-number\">0</span>                           <span class=\"hljs-comment\"># start with state 0</span><br>        <span class=\"hljs-keyword\">for</span> c <span class=\"hljs-keyword\">in</span> s:<br>            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-string\">&#x27;0&#x27;</span> &lt;= c &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>: t = <span class=\"hljs-string\">&#x27;d&#x27;</span> <span class=\"hljs-comment\"># digit</span><br>            <span class=\"hljs-keyword\">elif</span> c <span class=\"hljs-keyword\">in</span> <span class=\"hljs-string\">&quot;+-&quot;</span>: t = <span class=\"hljs-string\">&#x27;s&#x27;</span>     <span class=\"hljs-comment\"># sign</span><br>            <span class=\"hljs-keyword\">elif</span> c <span class=\"hljs-keyword\">in</span> <span class=\"hljs-string\">&quot;eE&quot;</span>: t = <span class=\"hljs-string\">&#x27;e&#x27;</span>     <span class=\"hljs-comment\"># e or E</span><br>            <span class=\"hljs-keyword\">elif</span> c <span class=\"hljs-keyword\">in</span> <span class=\"hljs-string\">&quot;. &quot;</span>: t = c       <span class=\"hljs-comment\"># dot, blank</span><br>            <span class=\"hljs-keyword\">else</span>: t = <span class=\"hljs-string\">&#x27;?&#x27;</span>               <span class=\"hljs-comment\"># unknown</span><br>            <span class=\"hljs-keyword\">if</span> t <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">in</span> states[p]: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br>            p = states[p][t]<br>        <span class=\"hljs-keyword\">return</span> p <span class=\"hljs-keyword\">in</span> (<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">8</span>)<br><br></code></pre></td></tr></table></figure>\n"},{"title":"剑指offer21 调整数组顺序使奇数位于偶数前面","date":"2021-08-18T10:18:43.000Z","_content":"\n> 调整数组顺序使奇数位于偶数前面\n\n## 题目\n\n输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有奇数位于数组的前半部分，所有偶数位于数组的后半部分。\n\n### 示例 1：\n\n```\n输入：nums = [1,2,3,4]\n输出：[1,3,2,4] \n注：[3,1,2,4] 也是正确的答案之一。\n```\n\n### 提示：\n\n- 0 <= nums.length <= 50000\n- 1 <= nums[i] <= 10000\n\n## 题解\n\npython的list的常规操作。\n\n```python\nclass Solution:\n    def exchange(self, nums: List[int]) -> List[int]:\n        odd = []\n        even = []\n        for x in nums:\n            if(x%2):\n                odd.append(x)\n            else:\n                even.append(x)\n        return odd+even\n```\n\n","source":"_posts/leetcode/leetcode-offer21.md","raw":"---\ntitle: 剑指offer21 调整数组顺序使奇数位于偶数前面\ntags: [剑指,数组]\ncategories: [剑指,数组]\ndate: 2021-08-18 18:18:43\n---\n\n> 调整数组顺序使奇数位于偶数前面\n\n## 题目\n\n输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有奇数位于数组的前半部分，所有偶数位于数组的后半部分。\n\n### 示例 1：\n\n```\n输入：nums = [1,2,3,4]\n输出：[1,3,2,4] \n注：[3,1,2,4] 也是正确的答案之一。\n```\n\n### 提示：\n\n- 0 <= nums.length <= 50000\n- 1 <= nums[i] <= 10000\n\n## 题解\n\npython的list的常规操作。\n\n```python\nclass Solution:\n    def exchange(self, nums: List[int]) -> List[int]:\n        odd = []\n        even = []\n        for x in nums:\n            if(x%2):\n                odd.append(x)\n            else:\n                even.append(x)\n        return odd+even\n```\n\n","slug":"leetcode/leetcode-offer21","published":1,"updated":"2021-08-18T10:21:04.666Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxod1002pugx4bwza945u","content":"<blockquote>\n<p>调整数组顺序使奇数位于偶数前面</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有奇数位于数组的前半部分，所有偶数位于数组的后半部分。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight dns\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dns\">输入：nums = [<span class=\"hljs-number\">1,2,3,4</span>]<br>输出：[<span class=\"hljs-number\">1,3,2,4</span>] <br>注：[<span class=\"hljs-number\">3,1,2,4</span>] 也是正确的答案之一。<br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>0 &lt;= nums.length &lt;= 50000</li>\n<li>1 &lt;= nums[i] &lt;= 10000</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>python的list的常规操作。</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">exchange</span>(<span class=\"hljs-params\">self, nums: <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]</span>) -&gt; <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]:</span><br>        odd = []<br>        even = []<br>        <span class=\"hljs-keyword\">for</span> x <span class=\"hljs-keyword\">in</span> nums:<br>            <span class=\"hljs-keyword\">if</span>(x%<span class=\"hljs-number\">2</span>):<br>                odd.append(x)<br>            <span class=\"hljs-keyword\">else</span>:<br>                even.append(x)<br>        <span class=\"hljs-keyword\">return</span> odd+even<br></code></pre></td></tr></tbody></table></figure>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>调整数组顺序使奇数位于偶数前面</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有奇数位于数组的前半部分，所有偶数位于数组的后半部分。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight dns\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dns\">输入：nums = [<span class=\"hljs-number\">1,2,3,4</span>]<br>输出：[<span class=\"hljs-number\">1,3,2,4</span>] <br>注：[<span class=\"hljs-number\">3,1,2,4</span>] 也是正确的答案之一。<br></code></pre></td></tr></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>0 &lt;= nums.length &lt;= 50000</li>\n<li>1 &lt;= nums[i] &lt;= 10000</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>python的list的常规操作。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">exchange</span>(<span class=\"hljs-params\">self, nums: <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]</span>) -&gt; <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]:</span><br>        odd = []<br>        even = []<br>        <span class=\"hljs-keyword\">for</span> x <span class=\"hljs-keyword\">in</span> nums:<br>            <span class=\"hljs-keyword\">if</span>(x%<span class=\"hljs-number\">2</span>):<br>                odd.append(x)<br>            <span class=\"hljs-keyword\">else</span>:<br>                even.append(x)<br>        <span class=\"hljs-keyword\">return</span> odd+even<br></code></pre></td></tr></table></figure>\n"},{"title":"剑指offer22 链表中倒数第k个节点","date":"2021-08-20T03:26:27.000Z","_content":"\n> 链表中倒数第k个节点\n\n## 题目\n\n输入一个链表，输出该链表中倒数第k个节点。为了符合大多数人的习惯，本题从1开始计数，即链表的尾节点是倒数第1个节点。\n\n例如，一个链表有 6 个节点，从头节点开始，它们的值依次是 1、2、3、4、5、6。这个链表的倒数第 3 个节点是值为 4 的节点。\n\n### 示例 1：\n\n```\n给定一个链表: 1->2->3->4->5, 和 k = 2.\n返回链表 4->5.\n```\n\n## 题解\n\n一种方法是先确定链表的长度，然后再移动对应的结点个数。那么就需要O(2n)\n\n```python\nclass Solution:\n    def getKthFromEnd(self, head: ListNode, k: int) -> ListNode:\n        y = x = head\n        cnt = 0\n        while(x):\n            cnt += 1\n            x = x.next\n        t = cnt - k\n        while(t):\n            y = y.next\n            t -= 1\n        return y\n```\n\n使用快慢指针，使得x与y相距k元素，然后x遍历到最后，y就可以得到对应的结果。此时只需要O(n)\n```python\nclass Solution:\n    def getKthFromEnd(self, head: ListNode, k: int) -> ListNode:\n        y = x = head\n        while(x):\n            if(k<=0):y = y.next\n            x = x.next\n            k -= 1\n        return y\n```","source":"_posts/leetcode/leetcode-offer22.md","raw":"---\ntitle: 剑指offer22 链表中倒数第k个节点\ntags: [剑指,链表]\ncategories: [剑指,链表]\ndate: 2021-08-20 11:26:27\n---\n\n> 链表中倒数第k个节点\n\n## 题目\n\n输入一个链表，输出该链表中倒数第k个节点。为了符合大多数人的习惯，本题从1开始计数，即链表的尾节点是倒数第1个节点。\n\n例如，一个链表有 6 个节点，从头节点开始，它们的值依次是 1、2、3、4、5、6。这个链表的倒数第 3 个节点是值为 4 的节点。\n\n### 示例 1：\n\n```\n给定一个链表: 1->2->3->4->5, 和 k = 2.\n返回链表 4->5.\n```\n\n## 题解\n\n一种方法是先确定链表的长度，然后再移动对应的结点个数。那么就需要O(2n)\n\n```python\nclass Solution:\n    def getKthFromEnd(self, head: ListNode, k: int) -> ListNode:\n        y = x = head\n        cnt = 0\n        while(x):\n            cnt += 1\n            x = x.next\n        t = cnt - k\n        while(t):\n            y = y.next\n            t -= 1\n        return y\n```\n\n使用快慢指针，使得x与y相距k元素，然后x遍历到最后，y就可以得到对应的结果。此时只需要O(n)\n```python\nclass Solution:\n    def getKthFromEnd(self, head: ListNode, k: int) -> ListNode:\n        y = x = head\n        while(x):\n            if(k<=0):y = y.next\n            x = x.next\n            k -= 1\n        return y\n```","slug":"leetcode/leetcode-offer22","published":1,"updated":"2021-08-20T06:26:48.747Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxod2002sugx4ci0nd3xv","content":"<blockquote>\n<p>链表中倒数第k个节点</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>输入一个链表，输出该链表中倒数第k个节点。为了符合大多数人的习惯，本题从1开始计数，即链表的尾节点是倒数第1个节点。</p>\n<p>例如，一个链表有 6 个节点，从头节点开始，它们的值依次是 1、2、3、4、5、6。这个链表的倒数第 3 个节点是值为 4 的节点。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight clean\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs clean\">给定一个链表: <span class=\"hljs-number\">1</span>-&gt;<span class=\"hljs-number\">2</span>-&gt;<span class=\"hljs-number\">3</span>-&gt;<span class=\"hljs-number\">4</span>-&gt;<span class=\"hljs-number\">5</span>, 和 k = <span class=\"hljs-number\">2.</span><br>返回链表 <span class=\"hljs-number\">4</span>-&gt;<span class=\"hljs-number\">5.</span><br></code></pre></td></tr></tbody></table></figure>\n<h2 id=\"题解\">题解</h2>\n<p>一种方法是先确定链表的长度，然后再移动对应的结点个数。那么就需要O(2n)</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">getKthFromEnd</span>(<span class=\"hljs-params\">self, head: ListNode, k: <span class=\"hljs-built_in\">int</span></span>) -&gt; ListNode:</span><br>        y = x = head<br>        cnt = <span class=\"hljs-number\">0</span><br>        <span class=\"hljs-keyword\">while</span>(x):<br>            cnt += <span class=\"hljs-number\">1</span><br>            x = x.<span class=\"hljs-built_in\">next</span><br>        t = cnt - k<br>        <span class=\"hljs-keyword\">while</span>(t):<br>            y = y.<span class=\"hljs-built_in\">next</span><br>            t -= <span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">return</span> y<br></code></pre></td></tr></tbody></table></figure>\n<p>使用快慢指针，使得x与y相距k元素，然后x遍历到最后，y就可以得到对应的结果。此时只需要O(n)</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">getKthFromEnd</span>(<span class=\"hljs-params\">self, head: ListNode, k: <span class=\"hljs-built_in\">int</span></span>) -&gt; ListNode:</span><br>        y = x = head<br>        <span class=\"hljs-keyword\">while</span>(x):<br>            <span class=\"hljs-keyword\">if</span>(k&lt;=<span class=\"hljs-number\">0</span>):y = y.<span class=\"hljs-built_in\">next</span><br>            x = x.<span class=\"hljs-built_in\">next</span><br>            k -= <span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">return</span> y<br></code></pre></td></tr></tbody></table></figure>","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>链表中倒数第k个节点</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>输入一个链表，输出该链表中倒数第k个节点。为了符合大多数人的习惯，本题从1开始计数，即链表的尾节点是倒数第1个节点。</p>\n<p>例如，一个链表有 6 个节点，从头节点开始，它们的值依次是 1、2、3、4、5、6。这个链表的倒数第 3 个节点是值为 4 的节点。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs clean\">给定一个链表: <span class=\"hljs-number\">1</span>-&gt;<span class=\"hljs-number\">2</span>-&gt;<span class=\"hljs-number\">3</span>-&gt;<span class=\"hljs-number\">4</span>-&gt;<span class=\"hljs-number\">5</span>, 和 k = <span class=\"hljs-number\">2.</span><br>返回链表 <span class=\"hljs-number\">4</span>-&gt;<span class=\"hljs-number\">5.</span><br></code></pre></td></tr></table></figure>\n<h2 id=\"题解\">题解</h2>\n<p>一种方法是先确定链表的长度，然后再移动对应的结点个数。那么就需要O(2n)</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">getKthFromEnd</span>(<span class=\"hljs-params\">self, head: ListNode, k: <span class=\"hljs-built_in\">int</span></span>) -&gt; ListNode:</span><br>        y = x = head<br>        cnt = <span class=\"hljs-number\">0</span><br>        <span class=\"hljs-keyword\">while</span>(x):<br>            cnt += <span class=\"hljs-number\">1</span><br>            x = x.<span class=\"hljs-built_in\">next</span><br>        t = cnt - k<br>        <span class=\"hljs-keyword\">while</span>(t):<br>            y = y.<span class=\"hljs-built_in\">next</span><br>            t -= <span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">return</span> y<br></code></pre></td></tr></table></figure>\n<p>使用快慢指针，使得x与y相距k元素，然后x遍历到最后，y就可以得到对应的结果。此时只需要O(n)</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">getKthFromEnd</span>(<span class=\"hljs-params\">self, head: ListNode, k: <span class=\"hljs-built_in\">int</span></span>) -&gt; ListNode:</span><br>        y = x = head<br>        <span class=\"hljs-keyword\">while</span>(x):<br>            <span class=\"hljs-keyword\">if</span>(k&lt;=<span class=\"hljs-number\">0</span>):y = y.<span class=\"hljs-built_in\">next</span><br>            x = x.<span class=\"hljs-built_in\">next</span><br>            k -= <span class=\"hljs-number\">1</span><br>        <span class=\"hljs-keyword\">return</span> y<br></code></pre></td></tr></table></figure>"},{"title":"剑指offer24 反转链表","date":"2021-08-21T03:51:30.000Z","_content":"\n> 反转链表\n\n## 题目\n\n定义一个函数，输入一个链表的头节点，反转该链表并输出反转后链表的头节点。\n\n### 示例 1：\n\n```\n输入: 1->2->3->4->5->NULL\n输出: 5->4->3->2->1->NULL\n```\n\n### 提示：\n\n- 0 <= 节点个数 <= 5000\n\n## 题解\n\n比较常规，遍历链表把元素移动到头节点。\n\n```python\n# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def reverseList(self, head: ListNode) -> ListNode:\n        if not(head):return head\n        p = head.next\n        head.next = None\n        while(p):\n            t = p.next\n            p.next = head\n            head = p\n            p = t\n        return head\n```\n\n","source":"_posts/leetcode/leetcode-offer24.md","raw":"---\ntitle: 剑指offer24 反转链表\ntags: [剑指,链表]\ncategories: [剑指,链表]\ndate: 2021-08-21 11:51:30\n---\n\n> 反转链表\n\n## 题目\n\n定义一个函数，输入一个链表的头节点，反转该链表并输出反转后链表的头节点。\n\n### 示例 1：\n\n```\n输入: 1->2->3->4->5->NULL\n输出: 5->4->3->2->1->NULL\n```\n\n### 提示：\n\n- 0 <= 节点个数 <= 5000\n\n## 题解\n\n比较常规，遍历链表把元素移动到头节点。\n\n```python\n# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def reverseList(self, head: ListNode) -> ListNode:\n        if not(head):return head\n        p = head.next\n        head.next = None\n        while(p):\n            t = p.next\n            p.next = head\n            head = p\n            p = t\n        return head\n```\n\n","slug":"leetcode/leetcode-offer24","published":1,"updated":"2021-08-21T04:19:38.422Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxod5002wugx40oo698ne","content":"<blockquote>\n<p>反转链表</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>定义一个函数，输入一个链表的头节点，反转该链表并输出反转后链表的头节点。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight clean\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs clean\">输入: <span class=\"hljs-number\">1</span>-&gt;<span class=\"hljs-number\">2</span>-&gt;<span class=\"hljs-number\">3</span>-&gt;<span class=\"hljs-number\">4</span>-&gt;<span class=\"hljs-number\">5</span>-&gt;NULL<br>输出: <span class=\"hljs-number\">5</span>-&gt;<span class=\"hljs-number\">4</span>-&gt;<span class=\"hljs-number\">3</span>-&gt;<span class=\"hljs-number\">2</span>-&gt;<span class=\"hljs-number\">1</span>-&gt;NULL<br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>0 &lt;= 节点个数 &lt;= 5000</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>比较常规，遍历链表把元素移动到头节点。</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\"># Definition for singly-linked list.</span><br><span class=\"hljs-comment\"># class ListNode:</span><br><span class=\"hljs-comment\">#     def __init__(self, x):</span><br><span class=\"hljs-comment\">#         self.val = x</span><br><span class=\"hljs-comment\">#         self.next = None</span><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">reverseList</span>(<span class=\"hljs-params\">self, head: ListNode</span>) -&gt; ListNode:</span><br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span>(head):<span class=\"hljs-keyword\">return</span> head<br>        p = head.<span class=\"hljs-built_in\">next</span><br>        head.<span class=\"hljs-built_in\">next</span> = <span class=\"hljs-literal\">None</span><br>        <span class=\"hljs-keyword\">while</span>(p):<br>            t = p.<span class=\"hljs-built_in\">next</span><br>            p.<span class=\"hljs-built_in\">next</span> = head<br>            head = p<br>            p = t<br>        <span class=\"hljs-keyword\">return</span> head<br></code></pre></td></tr></tbody></table></figure>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>反转链表</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>定义一个函数，输入一个链表的头节点，反转该链表并输出反转后链表的头节点。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs clean\">输入: <span class=\"hljs-number\">1</span>-&gt;<span class=\"hljs-number\">2</span>-&gt;<span class=\"hljs-number\">3</span>-&gt;<span class=\"hljs-number\">4</span>-&gt;<span class=\"hljs-number\">5</span>-&gt;NULL<br>输出: <span class=\"hljs-number\">5</span>-&gt;<span class=\"hljs-number\">4</span>-&gt;<span class=\"hljs-number\">3</span>-&gt;<span class=\"hljs-number\">2</span>-&gt;<span class=\"hljs-number\">1</span>-&gt;NULL<br></code></pre></td></tr></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>0 &lt;= 节点个数 &lt;= 5000</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>比较常规，遍历链表把元素移动到头节点。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\"># Definition for singly-linked list.</span><br><span class=\"hljs-comment\"># class ListNode:</span><br><span class=\"hljs-comment\">#     def __init__(self, x):</span><br><span class=\"hljs-comment\">#         self.val = x</span><br><span class=\"hljs-comment\">#         self.next = None</span><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">reverseList</span>(<span class=\"hljs-params\">self, head: ListNode</span>) -&gt; ListNode:</span><br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span>(head):<span class=\"hljs-keyword\">return</span> head<br>        p = head.<span class=\"hljs-built_in\">next</span><br>        head.<span class=\"hljs-built_in\">next</span> = <span class=\"hljs-literal\">None</span><br>        <span class=\"hljs-keyword\">while</span>(p):<br>            t = p.<span class=\"hljs-built_in\">next</span><br>            p.<span class=\"hljs-built_in\">next</span> = head<br>            head = p<br>            p = t<br>        <span class=\"hljs-keyword\">return</span> head<br></code></pre></td></tr></table></figure>\n"},{"title":"剑指offer06 合并两个排序的链表","date":"2021-08-16T09:39:21.000Z","_content":"\n>合并两个排序的链表\n\n## 题目\n\n输入两个递增排序的链表，合并这两个链表并使新链表中的节点仍然是递增排序的。\n\n### 示例 1：\n\n```\n输入：1->2->4, 1->3->4\n输出：1->1->2->3->4->4\n```\n\n### 提示：\n\n- 0 <= 链表长度 <= 1000\n\n## 题解\n\n如果直接用p = l.next  那么不能达到“指针”的效果。这样的操作对l没有影响，无法更新。\n\n```python\nclass Solution:\n    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:\n        l = ListNode(0) \n        p = l.next     \n        while(l1 and l2):\n            if(l1.val>l2.val):\n                p = l2\n                l2 = l2.next\n            else:\n                p = l1\n                l1 = l1.next\n            p = p.next\n        p = l1 if l1 else l2\n        return l.next\n```\n\n正确方式，不能使用 p = p.next， 因为next是一个None值，改变p值并不会修改l对应的next。所以首先浅拷贝l，然后再直接改变内部的next，才能对应的改变l的内容。\n\n```python\n# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:\n        p = l = ListNode(0) #先指向同一块空间\n        #p = p.next      \n        # 不能使用p = p.next  因为next是一个None值改变p值并不会修改l对应的next。\n        # 所以首先浅拷贝，然后再直接改变内部的next，才能对应的改变l的内容\n        while(l1 and l2):\n            if(l1.val>l2.val):\n                p.next = l2\n                l2 = l2.next\n            else:\n                p.next = l1\n                l1 = l1.next\n            p = p.next\n        p.next = l1 if l1 else l2\n        return l.next\n```\n\n","source":"_posts/leetcode/leetcode-offer25.md","raw":"---\ntitle: 剑指offer06 合并两个排序的链表\ntags: [剑指,链表]\ncategories: [剑指,链表]\ndate: 2021-08-16 17:39:21\n---\n\n>合并两个排序的链表\n\n## 题目\n\n输入两个递增排序的链表，合并这两个链表并使新链表中的节点仍然是递增排序的。\n\n### 示例 1：\n\n```\n输入：1->2->4, 1->3->4\n输出：1->1->2->3->4->4\n```\n\n### 提示：\n\n- 0 <= 链表长度 <= 1000\n\n## 题解\n\n如果直接用p = l.next  那么不能达到“指针”的效果。这样的操作对l没有影响，无法更新。\n\n```python\nclass Solution:\n    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:\n        l = ListNode(0) \n        p = l.next     \n        while(l1 and l2):\n            if(l1.val>l2.val):\n                p = l2\n                l2 = l2.next\n            else:\n                p = l1\n                l1 = l1.next\n            p = p.next\n        p = l1 if l1 else l2\n        return l.next\n```\n\n正确方式，不能使用 p = p.next， 因为next是一个None值，改变p值并不会修改l对应的next。所以首先浅拷贝l，然后再直接改变内部的next，才能对应的改变l的内容。\n\n```python\n# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:\n        p = l = ListNode(0) #先指向同一块空间\n        #p = p.next      \n        # 不能使用p = p.next  因为next是一个None值改变p值并不会修改l对应的next。\n        # 所以首先浅拷贝，然后再直接改变内部的next，才能对应的改变l的内容\n        while(l1 and l2):\n            if(l1.val>l2.val):\n                p.next = l2\n                l2 = l2.next\n            else:\n                p.next = l1\n                l1 = l1.next\n            p = p.next\n        p.next = l1 if l1 else l2\n        return l.next\n```\n\n","slug":"leetcode/leetcode-offer25","published":1,"updated":"2021-08-16T12:50:16.121Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxod5002yugx47co2f9u0","content":"<blockquote>\n<p>合并两个排序的链表</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>输入两个递增排序的链表，合并这两个链表并使新链表中的节点仍然是递增排序的。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight clean\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs clean\">输入：<span class=\"hljs-number\">1</span>-&gt;<span class=\"hljs-number\">2</span>-&gt;<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1</span>-&gt;<span class=\"hljs-number\">3</span>-&gt;<span class=\"hljs-number\">4</span><br>输出：<span class=\"hljs-number\">1</span>-&gt;<span class=\"hljs-number\">1</span>-&gt;<span class=\"hljs-number\">2</span>-&gt;<span class=\"hljs-number\">3</span>-&gt;<span class=\"hljs-number\">4</span>-&gt;<span class=\"hljs-number\">4</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>0 &lt;= 链表长度 &lt;= 1000</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>如果直接用p = l.next  那么不能达到“指针”的效果。这样的操作对l没有影响，无法更新。</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">mergeTwoLists</span>(<span class=\"hljs-params\">self, l1: ListNode, l2: ListNode</span>) -&gt; ListNode:</span><br>        l = ListNode(<span class=\"hljs-number\">0</span>) <br>        p = l.<span class=\"hljs-built_in\">next</span>     <br>        <span class=\"hljs-keyword\">while</span>(l1 <span class=\"hljs-keyword\">and</span> l2):<br>            <span class=\"hljs-keyword\">if</span>(l1.val&gt;l2.val):<br>                p = l2<br>                l2 = l2.<span class=\"hljs-built_in\">next</span><br>            <span class=\"hljs-keyword\">else</span>:<br>                p = l1<br>                l1 = l1.<span class=\"hljs-built_in\">next</span><br>            p = p.<span class=\"hljs-built_in\">next</span><br>        p = l1 <span class=\"hljs-keyword\">if</span> l1 <span class=\"hljs-keyword\">else</span> l2<br>        <span class=\"hljs-keyword\">return</span> l.<span class=\"hljs-built_in\">next</span><br></code></pre></td></tr></tbody></table></figure>\n<p>正确方式，不能使用 p = p.next， 因为next是一个None值，改变p值并不会修改l对应的next。所以首先浅拷贝l，然后再直接改变内部的next，才能对应的改变l的内容。</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\"># Definition for singly-linked list.</span><br><span class=\"hljs-comment\"># class ListNode:</span><br><span class=\"hljs-comment\">#     def __init__(self, x):</span><br><span class=\"hljs-comment\">#         self.val = x</span><br><span class=\"hljs-comment\">#         self.next = None</span><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">mergeTwoLists</span>(<span class=\"hljs-params\">self, l1: ListNode, l2: ListNode</span>) -&gt; ListNode:</span><br>        p = l = ListNode(<span class=\"hljs-number\">0</span>) <span class=\"hljs-comment\">#先指向同一块空间</span><br>        <span class=\"hljs-comment\">#p = p.next      </span><br>        <span class=\"hljs-comment\"># 不能使用p = p.next  因为next是一个None值改变p值并不会修改l对应的next。</span><br>        <span class=\"hljs-comment\"># 所以首先浅拷贝，然后再直接改变内部的next，才能对应的改变l的内容</span><br>        <span class=\"hljs-keyword\">while</span>(l1 <span class=\"hljs-keyword\">and</span> l2):<br>            <span class=\"hljs-keyword\">if</span>(l1.val&gt;l2.val):<br>                p.<span class=\"hljs-built_in\">next</span> = l2<br>                l2 = l2.<span class=\"hljs-built_in\">next</span><br>            <span class=\"hljs-keyword\">else</span>:<br>                p.<span class=\"hljs-built_in\">next</span> = l1<br>                l1 = l1.<span class=\"hljs-built_in\">next</span><br>            p = p.<span class=\"hljs-built_in\">next</span><br>        p.<span class=\"hljs-built_in\">next</span> = l1 <span class=\"hljs-keyword\">if</span> l1 <span class=\"hljs-keyword\">else</span> l2<br>        <span class=\"hljs-keyword\">return</span> l.<span class=\"hljs-built_in\">next</span><br></code></pre></td></tr></tbody></table></figure>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>合并两个排序的链表</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>输入两个递增排序的链表，合并这两个链表并使新链表中的节点仍然是递增排序的。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight clean\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs clean\">输入：<span class=\"hljs-number\">1</span>-&gt;<span class=\"hljs-number\">2</span>-&gt;<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1</span>-&gt;<span class=\"hljs-number\">3</span>-&gt;<span class=\"hljs-number\">4</span><br>输出：<span class=\"hljs-number\">1</span>-&gt;<span class=\"hljs-number\">1</span>-&gt;<span class=\"hljs-number\">2</span>-&gt;<span class=\"hljs-number\">3</span>-&gt;<span class=\"hljs-number\">4</span>-&gt;<span class=\"hljs-number\">4</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>0 &lt;= 链表长度 &lt;= 1000</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>如果直接用p = l.next  那么不能达到“指针”的效果。这样的操作对l没有影响，无法更新。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">mergeTwoLists</span>(<span class=\"hljs-params\">self, l1: ListNode, l2: ListNode</span>) -&gt; ListNode:</span><br>        l = ListNode(<span class=\"hljs-number\">0</span>) <br>        p = l.<span class=\"hljs-built_in\">next</span>     <br>        <span class=\"hljs-keyword\">while</span>(l1 <span class=\"hljs-keyword\">and</span> l2):<br>            <span class=\"hljs-keyword\">if</span>(l1.val&gt;l2.val):<br>                p = l2<br>                l2 = l2.<span class=\"hljs-built_in\">next</span><br>            <span class=\"hljs-keyword\">else</span>:<br>                p = l1<br>                l1 = l1.<span class=\"hljs-built_in\">next</span><br>            p = p.<span class=\"hljs-built_in\">next</span><br>        p = l1 <span class=\"hljs-keyword\">if</span> l1 <span class=\"hljs-keyword\">else</span> l2<br>        <span class=\"hljs-keyword\">return</span> l.<span class=\"hljs-built_in\">next</span><br></code></pre></td></tr></table></figure>\n<p>正确方式，不能使用 p = p.next， 因为next是一个None值，改变p值并不会修改l对应的next。所以首先浅拷贝l，然后再直接改变内部的next，才能对应的改变l的内容。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\"># Definition for singly-linked list.</span><br><span class=\"hljs-comment\"># class ListNode:</span><br><span class=\"hljs-comment\">#     def __init__(self, x):</span><br><span class=\"hljs-comment\">#         self.val = x</span><br><span class=\"hljs-comment\">#         self.next = None</span><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">mergeTwoLists</span>(<span class=\"hljs-params\">self, l1: ListNode, l2: ListNode</span>) -&gt; ListNode:</span><br>        p = l = ListNode(<span class=\"hljs-number\">0</span>) <span class=\"hljs-comment\">#先指向同一块空间</span><br>        <span class=\"hljs-comment\">#p = p.next      </span><br>        <span class=\"hljs-comment\"># 不能使用p = p.next  因为next是一个None值改变p值并不会修改l对应的next。</span><br>        <span class=\"hljs-comment\"># 所以首先浅拷贝，然后再直接改变内部的next，才能对应的改变l的内容</span><br>        <span class=\"hljs-keyword\">while</span>(l1 <span class=\"hljs-keyword\">and</span> l2):<br>            <span class=\"hljs-keyword\">if</span>(l1.val&gt;l2.val):<br>                p.<span class=\"hljs-built_in\">next</span> = l2<br>                l2 = l2.<span class=\"hljs-built_in\">next</span><br>            <span class=\"hljs-keyword\">else</span>:<br>                p.<span class=\"hljs-built_in\">next</span> = l1<br>                l1 = l1.<span class=\"hljs-built_in\">next</span><br>            p = p.<span class=\"hljs-built_in\">next</span><br>        p.<span class=\"hljs-built_in\">next</span> = l1 <span class=\"hljs-keyword\">if</span> l1 <span class=\"hljs-keyword\">else</span> l2<br>        <span class=\"hljs-keyword\">return</span> l.<span class=\"hljs-built_in\">next</span><br></code></pre></td></tr></table></figure>\n"},{"title":"剑指offer26 树的子结构","date":"2021-08-18T09:13:56.000Z","_content":"\n> 树的子结构\n\n## 题目\n输入两棵二叉树A和B，判断B是不是A的子结构。(约定空树不是任意一个树的子结构)\nB是A的子结构， 即 A中有出现和B相同的结构和节点值。\n\n例如:\n给定的树 A:\n\n     3\n    / \\\n   4   5\n  / \\\n 1   2\n给定的树 B：\n\n   4 \n  /\n 1\n返回 true，因为 B 与 A 的一个子树拥有相同的结构和节点值。\n\n### 示例 1：\n\n```\n输入：A = [1,2,3], B = [3,1]\n输出：false\n```\n\n### 示例 2：\n\n```\n输入：A = [3,4,5,1,2], B = [4,1]\n输出：true\n```\n\n### 提示：\n\n- 0 <= 节点个数 <= 10000\n\n## 题解\n\npython代码真的！好！简洁！\n\n`isSubStructure`的作用是先序查找A，B的匹配情况。而在内部会对匹配的`judgechildren(A,B)`进行判断，查看是否为其子结构。\n\n如果B为空了则表示匹配成功。如果根节点不匹配或者A为空了就直接返回失败。如果可以继续判断，就继续判断对应的左右子树。\n\n`(judgechildren(A,B) or self.isSubStructure(A.left,B) or self.isSubStructure(A.right,B))` 判断AB两子树；先序判断左右子树，`注意这里是self.isSubStructure`进行递归哦~~\n\n```python\n# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def isSubStructure(self, A: TreeNode, B: TreeNode) -> bool:\n        def judgechildren(A,B): #判断以AB为根节点的条件下，B是否为A的子结构\n            if not(B): return True\n            if (not A) or (A.val!=B.val): return False\n            return judgechildren(A.right,B.right) and judgechildren(A.left,B.left)\n        return bool(A and B) and (judgechildren(A,B) or self.isSubStructure(A.left,B) or self.isSubStructure(A.right,B))\n```\n\n> bool(A and B)注意要转换为bool变量\n\n- 时间复杂度为O(MN)\n\n- 空间复杂度 O(M)： 当树 A和树 B 都退化为链表时，递归调用深度最大。当 M≤N 时，遍历树 A 与递归判断的总递归深度为 M ；当 M>N 时，最差情况为遍历至树 A叶子节点，此时总递归深度为 M。\n\n\n","source":"_posts/leetcode/leetcode-offer26.md","raw":"---\ntitle: 剑指offer26 树的子结构\ntags: [剑指,树,idea]\ncategories: [剑指,树]\ndate: 2021-08-18 17:13:56\n---\n\n> 树的子结构\n\n## 题目\n输入两棵二叉树A和B，判断B是不是A的子结构。(约定空树不是任意一个树的子结构)\nB是A的子结构， 即 A中有出现和B相同的结构和节点值。\n\n例如:\n给定的树 A:\n\n     3\n    / \\\n   4   5\n  / \\\n 1   2\n给定的树 B：\n\n   4 \n  /\n 1\n返回 true，因为 B 与 A 的一个子树拥有相同的结构和节点值。\n\n### 示例 1：\n\n```\n输入：A = [1,2,3], B = [3,1]\n输出：false\n```\n\n### 示例 2：\n\n```\n输入：A = [3,4,5,1,2], B = [4,1]\n输出：true\n```\n\n### 提示：\n\n- 0 <= 节点个数 <= 10000\n\n## 题解\n\npython代码真的！好！简洁！\n\n`isSubStructure`的作用是先序查找A，B的匹配情况。而在内部会对匹配的`judgechildren(A,B)`进行判断，查看是否为其子结构。\n\n如果B为空了则表示匹配成功。如果根节点不匹配或者A为空了就直接返回失败。如果可以继续判断，就继续判断对应的左右子树。\n\n`(judgechildren(A,B) or self.isSubStructure(A.left,B) or self.isSubStructure(A.right,B))` 判断AB两子树；先序判断左右子树，`注意这里是self.isSubStructure`进行递归哦~~\n\n```python\n# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def isSubStructure(self, A: TreeNode, B: TreeNode) -> bool:\n        def judgechildren(A,B): #判断以AB为根节点的条件下，B是否为A的子结构\n            if not(B): return True\n            if (not A) or (A.val!=B.val): return False\n            return judgechildren(A.right,B.right) and judgechildren(A.left,B.left)\n        return bool(A and B) and (judgechildren(A,B) or self.isSubStructure(A.left,B) or self.isSubStructure(A.right,B))\n```\n\n> bool(A and B)注意要转换为bool变量\n\n- 时间复杂度为O(MN)\n\n- 空间复杂度 O(M)： 当树 A和树 B 都退化为链表时，递归调用深度最大。当 M≤N 时，遍历树 A 与递归判断的总递归深度为 M ；当 M>N 时，最差情况为遍历至树 A叶子节点，此时总递归深度为 M。\n\n\n","slug":"leetcode/leetcode-offer26","published":1,"updated":"2021-08-18T09:38:19.861Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxod60031ugx4dv7sbvml","content":"<blockquote>\n<p>树的子结构</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>输入两棵二叉树A和B，判断B是不是A的子结构。(约定空树不是任意一个树的子结构)<br>\nB是A的子结构， 即 A中有出现和B相同的结构和节点值。</p>\n<p>例如:<br>\n给定的树 A:</p>\n<p>3<br>\n&nbsp; &nbsp; / <br>\n&nbsp; &nbsp;4 &nbsp; 5<br>\n&nbsp; / <br>\n&nbsp;1 &nbsp; 2<br>\n给定的树 B：</p>\n<p>4&nbsp;<br>\n&nbsp; /<br>\n&nbsp;1<br>\n返回 true，因为 B 与 A 的一个子树拥有相同的结构和节点值。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight nix\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">输入：<span class=\"hljs-attr\">A</span> = [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], <span class=\"hljs-attr\">B</span> = [<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">1</span>]<br>输出：<span class=\"hljs-literal\">false</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight nix\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">输入：<span class=\"hljs-attr\">A</span> = [<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>], <span class=\"hljs-attr\">B</span> = [<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1</span>]<br>输出：<span class=\"hljs-literal\">true</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>0 &lt;= 节点个数 &lt;= 10000</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>python代码真的！好！简洁！</p>\n<p><code>isSubStructure</code>的作用是先序查找A，B的匹配情况。而在内部会对匹配的<code>judgechildren(A,B)</code>进行判断，查看是否为其子结构。</p>\n<p>如果B为空了则表示匹配成功。如果根节点不匹配或者A为空了就直接返回失败。如果可以继续判断，就继续判断对应的左右子树。</p>\n<p><code>(judgechildren(A,B) or self.isSubStructure(A.left,B) or self.isSubStructure(A.right,B))</code> 判断AB两子树；先序判断左右子树，<code>注意这里是self.isSubStructure</code>进行递归哦~~</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\"># Definition for a binary tree node.</span><br><span class=\"hljs-comment\"># class TreeNode:</span><br><span class=\"hljs-comment\">#     def __init__(self, x):</span><br><span class=\"hljs-comment\">#         self.val = x</span><br><span class=\"hljs-comment\">#         self.left = None</span><br><span class=\"hljs-comment\">#         self.right = None</span><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">isSubStructure</span>(<span class=\"hljs-params\">self, A: TreeNode, B: TreeNode</span>) -&gt; <span class=\"hljs-built_in\">bool</span>:</span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">judgechildren</span>(<span class=\"hljs-params\">A,B</span>):</span> <span class=\"hljs-comment\">#判断以AB为根节点的条件下，B是否为A的子结构</span><br>            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span>(B): <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span><br>            <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">not</span> A) <span class=\"hljs-keyword\">or</span> (A.val!=B.val): <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br>            <span class=\"hljs-keyword\">return</span> judgechildren(A.right,B.right) <span class=\"hljs-keyword\">and</span> judgechildren(A.left,B.left)<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">bool</span>(A <span class=\"hljs-keyword\">and</span> B) <span class=\"hljs-keyword\">and</span> (judgechildren(A,B) <span class=\"hljs-keyword\">or</span> self.isSubStructure(A.left,B) <span class=\"hljs-keyword\">or</span> self.isSubStructure(A.right,B))<br></code></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>bool(A and B)注意要转换为bool变量</p>\n</blockquote>\n<ul>\n<li>\n<p>时间复杂度为O(MN)</p>\n</li>\n<li>\n<p>空间复杂度 O(M)： 当树 A和树 B 都退化为链表时，递归调用深度最大。当 M≤N 时，遍历树 A 与递归判断的总递归深度为 M ；当 M&gt;N 时，最差情况为遍历至树 A叶子节点，此时总递归深度为 M。</p>\n</li>\n</ul>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>树的子结构</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>输入两棵二叉树A和B，判断B是不是A的子结构。(约定空树不是任意一个树的子结构)<br>\nB是A的子结构， 即 A中有出现和B相同的结构和节点值。</p>\n<p>例如:<br>\n给定的树 A:</p>\n<p>3<br>\n    / <br>\n   4   5<br>\n  / <br>\n 1   2<br>\n给定的树 B：</p>\n<p>4 <br>\n  /<br>\n 1<br>\n返回 true，因为 B 与 A 的一个子树拥有相同的结构和节点值。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">输入：<span class=\"hljs-attr\">A</span> = [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>], <span class=\"hljs-attr\">B</span> = [<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">1</span>]<br>输出：<span class=\"hljs-literal\">false</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">输入：<span class=\"hljs-attr\">A</span> = [<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>], <span class=\"hljs-attr\">B</span> = [<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">1</span>]<br>输出：<span class=\"hljs-literal\">true</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>0 &lt;= 节点个数 &lt;= 10000</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>python代码真的！好！简洁！</p>\n<p><code>isSubStructure</code>的作用是先序查找A，B的匹配情况。而在内部会对匹配的<code>judgechildren(A,B)</code>进行判断，查看是否为其子结构。</p>\n<p>如果B为空了则表示匹配成功。如果根节点不匹配或者A为空了就直接返回失败。如果可以继续判断，就继续判断对应的左右子树。</p>\n<p><code>(judgechildren(A,B) or self.isSubStructure(A.left,B) or self.isSubStructure(A.right,B))</code> 判断AB两子树；先序判断左右子树，<code>注意这里是self.isSubStructure</code>进行递归哦~~</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\"># Definition for a binary tree node.</span><br><span class=\"hljs-comment\"># class TreeNode:</span><br><span class=\"hljs-comment\">#     def __init__(self, x):</span><br><span class=\"hljs-comment\">#         self.val = x</span><br><span class=\"hljs-comment\">#         self.left = None</span><br><span class=\"hljs-comment\">#         self.right = None</span><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">isSubStructure</span>(<span class=\"hljs-params\">self, A: TreeNode, B: TreeNode</span>) -&gt; <span class=\"hljs-built_in\">bool</span>:</span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">judgechildren</span>(<span class=\"hljs-params\">A,B</span>):</span> <span class=\"hljs-comment\">#判断以AB为根节点的条件下，B是否为A的子结构</span><br>            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span>(B): <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span><br>            <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">not</span> A) <span class=\"hljs-keyword\">or</span> (A.val!=B.val): <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br>            <span class=\"hljs-keyword\">return</span> judgechildren(A.right,B.right) <span class=\"hljs-keyword\">and</span> judgechildren(A.left,B.left)<br>        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">bool</span>(A <span class=\"hljs-keyword\">and</span> B) <span class=\"hljs-keyword\">and</span> (judgechildren(A,B) <span class=\"hljs-keyword\">or</span> self.isSubStructure(A.left,B) <span class=\"hljs-keyword\">or</span> self.isSubStructure(A.right,B))<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>bool(A and B)注意要转换为bool变量</p>\n</blockquote>\n<ul>\n<li>\n<p>时间复杂度为O(MN)</p>\n</li>\n<li>\n<p>空间复杂度 O(M)： 当树 A和树 B 都退化为链表时，递归调用深度最大。当 M≤N 时，遍历树 A 与递归判断的总递归深度为 M ；当 M&gt;N 时，最差情况为遍历至树 A叶子节点，此时总递归深度为 M。</p>\n</li>\n</ul>\n"},{"title":"剑指offer27 二叉树的镜像","date":"2021-08-16T13:01:18.000Z","_content":"\n>二叉树的镜像\n\n## 题目\n\n请完成一个函数，输入一个二叉树，该函数输出它的镜像。\n\n例如输入：\n\n​     4\n  2     7\n1   3  6   9\n镜像输出：\n\n​     4\n  7     2\n9   6 3   1\n\n### 示例 1：\n\n```\n输入：root = [4,2,7,1,3,6,9]\n输出：[4,7,2,9,6,3,1]\n```\n\n### 提示：\n\n- 0 <= 节点个数 <= 1000\n\n## 题解\n\n如果为空树就返回空。然后保存左子树，翻转右子树后赋值为左节点，翻转左子树赋值为右节点。\n\n**if not(root.left or root.right): return root #为单一节点就直接返回 可以省略，因为已经包含在内**\n\n```python\n# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def mirrorTree(self, root: TreeNode) -> TreeNode:\n        if not(root): return None\n        x = root.left\n        root.left = self.mirrorTree(root.right)\n        root.right = self.mirrorTree(x)\n        return root\n```\n\n","source":"_posts/leetcode/leetcode-offer27.md","raw":"---\ntitle: 剑指offer27 二叉树的镜像\ntags: [剑指,树]\ncategories: [剑指,树]\ndate: 2021-08-16 21:01:18\n---\n\n>二叉树的镜像\n\n## 题目\n\n请完成一个函数，输入一个二叉树，该函数输出它的镜像。\n\n例如输入：\n\n​     4\n  2     7\n1   3  6   9\n镜像输出：\n\n​     4\n  7     2\n9   6 3   1\n\n### 示例 1：\n\n```\n输入：root = [4,2,7,1,3,6,9]\n输出：[4,7,2,9,6,3,1]\n```\n\n### 提示：\n\n- 0 <= 节点个数 <= 1000\n\n## 题解\n\n如果为空树就返回空。然后保存左子树，翻转右子树后赋值为左节点，翻转左子树赋值为右节点。\n\n**if not(root.left or root.right): return root #为单一节点就直接返回 可以省略，因为已经包含在内**\n\n```python\n# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def mirrorTree(self, root: TreeNode) -> TreeNode:\n        if not(root): return None\n        x = root.left\n        root.left = self.mirrorTree(root.right)\n        root.right = self.mirrorTree(x)\n        return root\n```\n\n","slug":"leetcode/leetcode-offer27","published":1,"updated":"2021-08-17T06:55:37.145Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxod70034ugx45n4zgo99","content":"<blockquote>\n<p>二叉树的镜像</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>请完成一个函数，输入一个二叉树，该函数输出它的镜像。</p>\n<p>例如输入：</p>\n<p>​     4<br>\n2     7<br>\n1   3  6   9<br>\n镜像输出：</p>\n<p>​     4<br>\n7     2<br>\n9   6 3   1</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight accesslog\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs accesslog\">输入：root = <span class=\"hljs-string\">[4,2,7,1,3,6,9]</span><br>输出：<span class=\"hljs-string\">[4,7,2,9,6,3,1]</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>0 &lt;= 节点个数 &lt;= 1000</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>如果为空树就返回空。然后保存左子树，翻转右子树后赋值为左节点，翻转左子树赋值为右节点。</p>\n<p><strong>if not(root.left or root.right): return root #为单一节点就直接返回 可以省略，因为已经包含在内</strong></p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\"># Definition for a binary tree node.</span><br><span class=\"hljs-comment\"># class TreeNode:</span><br><span class=\"hljs-comment\">#     def __init__(self, x):</span><br><span class=\"hljs-comment\">#         self.val = x</span><br><span class=\"hljs-comment\">#         self.left = None</span><br><span class=\"hljs-comment\">#         self.right = None</span><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">mirrorTree</span>(<span class=\"hljs-params\">self, root: TreeNode</span>) -&gt; TreeNode:</span><br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span>(root): <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">None</span><br>        x = root.left<br>        root.left = self.mirrorTree(root.right)<br>        root.right = self.mirrorTree(x)<br>        <span class=\"hljs-keyword\">return</span> root<br></code></pre></td></tr></tbody></table></figure>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>二叉树的镜像</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>请完成一个函数，输入一个二叉树，该函数输出它的镜像。</p>\n<p>例如输入：</p>\n<p>​     4<br>\n2     7<br>\n1   3  6   9<br>\n镜像输出：</p>\n<p>​     4<br>\n7     2<br>\n9   6 3   1</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs accesslog\">输入：root = <span class=\"hljs-string\">[4,2,7,1,3,6,9]</span><br>输出：<span class=\"hljs-string\">[4,7,2,9,6,3,1]</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>0 &lt;= 节点个数 &lt;= 1000</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>如果为空树就返回空。然后保存左子树，翻转右子树后赋值为左节点，翻转左子树赋值为右节点。</p>\n<p><strong>if not(root.left or root.right): return root #为单一节点就直接返回 可以省略，因为已经包含在内</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\"># Definition for a binary tree node.</span><br><span class=\"hljs-comment\"># class TreeNode:</span><br><span class=\"hljs-comment\">#     def __init__(self, x):</span><br><span class=\"hljs-comment\">#         self.val = x</span><br><span class=\"hljs-comment\">#         self.left = None</span><br><span class=\"hljs-comment\">#         self.right = None</span><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">mirrorTree</span>(<span class=\"hljs-params\">self, root: TreeNode</span>) -&gt; TreeNode:</span><br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span>(root): <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">None</span><br>        x = root.left<br>        root.left = self.mirrorTree(root.right)<br>        root.right = self.mirrorTree(x)<br>        <span class=\"hljs-keyword\">return</span> root<br></code></pre></td></tr></table></figure>\n"},{"title":"剑指offer28 对称的二叉树","date":"2021-08-18T09:58:39.000Z","_content":"\n>对称的二叉树\n\n## 题目\n请实现一个函数，用来判断一棵二叉树是不是对称的。如果一棵二叉树和它的镜像一样，那么它是对称的。\n\n例如，二叉树 [1,2,2,3,4,4,3] 是对称的。\n\n    1\n   / \\\n  2   2\n / \\ / \\\n3  4 4  3\n但是下面这个 [1,2,2,null,3,null,3] 则不是镜像对称的:\n\n    1\n   / \\\n  2   2\n   \\   \\\n   3    3\n\n### 示例 1：\n\n```\n输入：root = [1,2,2,3,4,4,3]\n输出：true\n```\n\n### 示例 2：\n\n```\n输入：root = [1,2,2,null,3,null,3]\n输出：false\n```\n\n### 提示：\n\n- 0 <= 节点个数 <= 1000\n\n## 题解\n\n如果root为空就直接返回True，然后判断其左右子树是否为镜像结构。如果两个子节点为空则为真，如果一空则为假，然后分别判断其对称结构。 `judge(A.left,B.right) and judge(A.right,B.left)` 注意是镜像因此左右时相反的呢\n\n```python\n# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def isSymmetric(self, root: TreeNode) -> bool:\n        if not root: return True\n        def judge(A,B):\n            if not (A or B): return True\n            if not (A and B) or (A.val!=B.val): return False\n            return judge(A.left,B.right) and judge(A.right,B.left) \n        return judge(root.left,root.right)\n```\n\n","source":"_posts/leetcode/leetcode-offer28.md","raw":"---\ntitle: 剑指offer28 对称的二叉树\ntags: [剑指,树]\ncategories: [剑指,树]\ndate: 2021-08-18 17:58:39\n---\n\n>对称的二叉树\n\n## 题目\n请实现一个函数，用来判断一棵二叉树是不是对称的。如果一棵二叉树和它的镜像一样，那么它是对称的。\n\n例如，二叉树 [1,2,2,3,4,4,3] 是对称的。\n\n    1\n   / \\\n  2   2\n / \\ / \\\n3  4 4  3\n但是下面这个 [1,2,2,null,3,null,3] 则不是镜像对称的:\n\n    1\n   / \\\n  2   2\n   \\   \\\n   3    3\n\n### 示例 1：\n\n```\n输入：root = [1,2,2,3,4,4,3]\n输出：true\n```\n\n### 示例 2：\n\n```\n输入：root = [1,2,2,null,3,null,3]\n输出：false\n```\n\n### 提示：\n\n- 0 <= 节点个数 <= 1000\n\n## 题解\n\n如果root为空就直接返回True，然后判断其左右子树是否为镜像结构。如果两个子节点为空则为真，如果一空则为假，然后分别判断其对称结构。 `judge(A.left,B.right) and judge(A.right,B.left)` 注意是镜像因此左右时相反的呢\n\n```python\n# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def isSymmetric(self, root: TreeNode) -> bool:\n        if not root: return True\n        def judge(A,B):\n            if not (A or B): return True\n            if not (A and B) or (A.val!=B.val): return False\n            return judge(A.left,B.right) and judge(A.right,B.left) \n        return judge(root.left,root.right)\n```\n\n","slug":"leetcode/leetcode-offer28","published":1,"updated":"2021-08-18T10:11:58.511Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxod90035ugx4gfko6laz","content":"<blockquote>\n<p>对称的二叉树</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>请实现一个函数，用来判断一棵二叉树是不是对称的。如果一棵二叉树和它的镜像一样，那么它是对称的。</p>\n<p>例如，二叉树&nbsp;[1,2,2,3,4,4,3] 是对称的。</p>\n<p>1<br>\n&nbsp; &nbsp;/ <br>\n&nbsp; 2 &nbsp; 2<br>\n&nbsp;/ \\ / <br>\n3 &nbsp;4 4 &nbsp;3<br>\n但是下面这个&nbsp;[1,2,2,null,3,null,3] 则不是镜像对称的:</p>\n<p>1<br>\n&nbsp; &nbsp;/ <br>\n&nbsp; 2 &nbsp; 2<br>\n&nbsp; &nbsp;\\ &nbsp; <br>\n&nbsp; &nbsp;3 &nbsp; &nbsp;3</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight nix\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">输入：<span class=\"hljs-attr\">root</span> = [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">3</span>]<br>输出：<span class=\"hljs-literal\">true</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight nix\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">输入：<span class=\"hljs-attr\">root</span> = [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-number\">3</span>]<br>输出：<span class=\"hljs-literal\">false</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>0 &lt;= 节点个数 &lt;= 1000</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>如果root为空就直接返回True，然后判断其左右子树是否为镜像结构。如果两个子节点为空则为真，如果一空则为假，然后分别判断其对称结构。 <code>judge(A.left,B.right) and judge(A.right,B.left)</code> 注意是镜像因此左右时相反的呢</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\"># Definition for a binary tree node.</span><br><span class=\"hljs-comment\"># class TreeNode:</span><br><span class=\"hljs-comment\">#     def __init__(self, x):</span><br><span class=\"hljs-comment\">#         self.val = x</span><br><span class=\"hljs-comment\">#         self.left = None</span><br><span class=\"hljs-comment\">#         self.right = None</span><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">isSymmetric</span>(<span class=\"hljs-params\">self, root: TreeNode</span>) -&gt; <span class=\"hljs-built_in\">bool</span>:</span><br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> root: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">judge</span>(<span class=\"hljs-params\">A,B</span>):</span><br>            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> (A <span class=\"hljs-keyword\">or</span> B): <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span><br>            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> (A <span class=\"hljs-keyword\">and</span> B) <span class=\"hljs-keyword\">or</span> (A.val!=B.val): <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br>            <span class=\"hljs-keyword\">return</span> judge(A.left,B.right) <span class=\"hljs-keyword\">and</span> judge(A.right,B.left) <br>        <span class=\"hljs-keyword\">return</span> judge(root.left,root.right)<br></code></pre></td></tr></tbody></table></figure>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>对称的二叉树</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>请实现一个函数，用来判断一棵二叉树是不是对称的。如果一棵二叉树和它的镜像一样，那么它是对称的。</p>\n<p>例如，二叉树 [1,2,2,3,4,4,3] 是对称的。</p>\n<p>1<br>\n   / <br>\n  2   2<br>\n / \\ / <br>\n3  4 4  3<br>\n但是下面这个 [1,2,2,null,3,null,3] 则不是镜像对称的:</p>\n<p>1<br>\n   / <br>\n  2   2<br>\n   \\   <br>\n   3    3</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">输入：<span class=\"hljs-attr\">root</span> = [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">3</span>]<br>输出：<span class=\"hljs-literal\">true</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight nix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nix\">输入：<span class=\"hljs-attr\">root</span> = [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-literal\">null</span>,<span class=\"hljs-number\">3</span>]<br>输出：<span class=\"hljs-literal\">false</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>0 &lt;= 节点个数 &lt;= 1000</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>如果root为空就直接返回True，然后判断其左右子树是否为镜像结构。如果两个子节点为空则为真，如果一空则为假，然后分别判断其对称结构。 <code>judge(A.left,B.right) and judge(A.right,B.left)</code> 注意是镜像因此左右时相反的呢</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\"># Definition for a binary tree node.</span><br><span class=\"hljs-comment\"># class TreeNode:</span><br><span class=\"hljs-comment\">#     def __init__(self, x):</span><br><span class=\"hljs-comment\">#         self.val = x</span><br><span class=\"hljs-comment\">#         self.left = None</span><br><span class=\"hljs-comment\">#         self.right = None</span><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">isSymmetric</span>(<span class=\"hljs-params\">self, root: TreeNode</span>) -&gt; <span class=\"hljs-built_in\">bool</span>:</span><br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> root: <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">judge</span>(<span class=\"hljs-params\">A,B</span>):</span><br>            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> (A <span class=\"hljs-keyword\">or</span> B): <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span><br>            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> (A <span class=\"hljs-keyword\">and</span> B) <span class=\"hljs-keyword\">or</span> (A.val!=B.val): <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span><br>            <span class=\"hljs-keyword\">return</span> judge(A.left,B.right) <span class=\"hljs-keyword\">and</span> judge(A.right,B.left) <br>        <span class=\"hljs-keyword\">return</span> judge(root.left,root.right)<br></code></pre></td></tr></table></figure>\n"},{"title":"剑指offer29 顺时针打印矩阵","date":"2021-08-19T13:00:34.000Z","math":true,"_content":"\n>  顺时针打印矩阵\n\n## 题目\n\n输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字。\n\n### 示例 1：\n\n```\n输入：matrix = [[1,2,3],[4,5,6],[7,8,9]]\n输出：[1,2,3,6,9,8,7,4,5]\n```\n\n### 示例 2：\n\n```\n输入：matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]\n输出：[1,2,3,4,8,12,11,10,9,5,6,7]\n```\n\n### 提示：\n\n- `0 <= matrix.length <= 100`\n- `0 <= matrix[i].length <= 100`\n\n## 题解\n\n一种是对数组进行常规操作，安装题目要求进行遍历判断。\n\n```python\nclass Solution:\n    def spiralOrder(self, matrix: List[List[int]]) -> List[int]:\n        if not matrix: return []\n        l, r, t, b, res = 0, len(matrix[0]) - 1, 0, len(matrix) - 1, []\n        while True:\n            for i in range(l, r + 1): res.append(matrix[t][i]) # left to right\n            t += 1\n            if t > b: break\n            for i in range(t, b + 1): res.append(matrix[i][r]) # top to bottom\n            r -= 1\n            if l > r: break\n            for i in range(r, l - 1, -1): res.append(matrix[b][i]) # right to left\n            b -= 1\n            if t > b: break\n            for i in range(b, t - 1, -1): res.append(matrix[i][l]) # bottom to top\n            l += 1\n            if l > r: break\n        return res\n\n```\n第二种是采用相关的方法，`pop(0)`可以弹出第一个元素。使用$zip(*)$相当于对矩阵转置。`list(zip(*matrix))[::-1]`就是对矩阵逆旋转90度。zip和zip(*)也是一对逆操作；前者表示压缩，后者表示解压。\n```python\nclass Solution:\n    def spiralOrder(self, matrix: List[List[int]]) -> List[int]:\n        res = []\n        while matrix:\n            res += matrix.pop(0)\n            matrix = list(zip(*matrix))[::-1]\n        return res\n```\n\n> pop & zip知识参考\n>\n> https://blog.csdn.net/zhanshen112/article/details/90341177\n>\n> https://www.cnblogs.com/Aurora-Twinkle/p/8660778.html\n","source":"_posts/leetcode/leetcode-offer29.md","raw":"---\ntitle: 剑指offer29 顺时针打印矩阵\ntags: [剑指,数组]\ncategories: [剑指,数组]\ndate: 2021-08-19 21:00:34\nmath: true\n---\n\n>  顺时针打印矩阵\n\n## 题目\n\n输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字。\n\n### 示例 1：\n\n```\n输入：matrix = [[1,2,3],[4,5,6],[7,8,9]]\n输出：[1,2,3,6,9,8,7,4,5]\n```\n\n### 示例 2：\n\n```\n输入：matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]\n输出：[1,2,3,4,8,12,11,10,9,5,6,7]\n```\n\n### 提示：\n\n- `0 <= matrix.length <= 100`\n- `0 <= matrix[i].length <= 100`\n\n## 题解\n\n一种是对数组进行常规操作，安装题目要求进行遍历判断。\n\n```python\nclass Solution:\n    def spiralOrder(self, matrix: List[List[int]]) -> List[int]:\n        if not matrix: return []\n        l, r, t, b, res = 0, len(matrix[0]) - 1, 0, len(matrix) - 1, []\n        while True:\n            for i in range(l, r + 1): res.append(matrix[t][i]) # left to right\n            t += 1\n            if t > b: break\n            for i in range(t, b + 1): res.append(matrix[i][r]) # top to bottom\n            r -= 1\n            if l > r: break\n            for i in range(r, l - 1, -1): res.append(matrix[b][i]) # right to left\n            b -= 1\n            if t > b: break\n            for i in range(b, t - 1, -1): res.append(matrix[i][l]) # bottom to top\n            l += 1\n            if l > r: break\n        return res\n\n```\n第二种是采用相关的方法，`pop(0)`可以弹出第一个元素。使用$zip(*)$相当于对矩阵转置。`list(zip(*matrix))[::-1]`就是对矩阵逆旋转90度。zip和zip(*)也是一对逆操作；前者表示压缩，后者表示解压。\n```python\nclass Solution:\n    def spiralOrder(self, matrix: List[List[int]]) -> List[int]:\n        res = []\n        while matrix:\n            res += matrix.pop(0)\n            matrix = list(zip(*matrix))[::-1]\n        return res\n```\n\n> pop & zip知识参考\n>\n> https://blog.csdn.net/zhanshen112/article/details/90341177\n>\n> https://www.cnblogs.com/Aurora-Twinkle/p/8660778.html\n","slug":"leetcode/leetcode-offer29","published":1,"updated":"2021-08-20T02:41:36.284Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxoda0037ugx45geahkfv","content":"<blockquote>\n<p>顺时针打印矩阵</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight inform7\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs inform7\">输入：matrix = <span class=\"hljs-comment\">[<span class=\"hljs-comment\">[1,2,3]</span>,<span class=\"hljs-comment\">[4,5,6]</span>,<span class=\"hljs-comment\">[7,8,9]</span>]</span><br>输出：<span class=\"hljs-comment\">[1,2,3,6,9,8,7,4,5]</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight dns\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dns\">输入：matrix = [[<span class=\"hljs-number\">1,2,3,4</span>],[<span class=\"hljs-number\">5,6,7,8</span>],[<span class=\"hljs-number\">9,10,11,12</span>]]<br>输出：[<span class=\"hljs-number\">1,2,3,4</span>,<span class=\"hljs-number\">8,12,11,10</span>,<span class=\"hljs-number\">9,5,6,7</span>]<br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li><code>0 &lt;= matrix.length &lt;= 100</code></li>\n<li><code>0 &lt;= matrix[i].length &lt;= 100</code></li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>一种是对数组进行常规操作，安装题目要求进行遍历判断。</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">spiralOrder</span>(<span class=\"hljs-params\">self, matrix: <span class=\"hljs-type\">List</span>[<span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]]</span>) -&gt; <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]:</span><br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> matrix: <span class=\"hljs-keyword\">return</span> []<br>        l, r, t, b, res = <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">len</span>(matrix[<span class=\"hljs-number\">0</span>]) - <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">len</span>(matrix) - <span class=\"hljs-number\">1</span>, []<br>        <span class=\"hljs-keyword\">while</span> <span class=\"hljs-literal\">True</span>:<br>            <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(l, r + <span class=\"hljs-number\">1</span>): res.append(matrix[t][i]) <span class=\"hljs-comment\"># left to right</span><br>            t += <span class=\"hljs-number\">1</span><br>            <span class=\"hljs-keyword\">if</span> t &gt; b: <span class=\"hljs-keyword\">break</span><br>            <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(t, b + <span class=\"hljs-number\">1</span>): res.append(matrix[i][r]) <span class=\"hljs-comment\"># top to bottom</span><br>            r -= <span class=\"hljs-number\">1</span><br>            <span class=\"hljs-keyword\">if</span> l &gt; r: <span class=\"hljs-keyword\">break</span><br>            <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(r, l - <span class=\"hljs-number\">1</span>, -<span class=\"hljs-number\">1</span>): res.append(matrix[b][i]) <span class=\"hljs-comment\"># right to left</span><br>            b -= <span class=\"hljs-number\">1</span><br>            <span class=\"hljs-keyword\">if</span> t &gt; b: <span class=\"hljs-keyword\">break</span><br>            <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(b, t - <span class=\"hljs-number\">1</span>, -<span class=\"hljs-number\">1</span>): res.append(matrix[i][l]) <span class=\"hljs-comment\"># bottom to top</span><br>            l += <span class=\"hljs-number\">1</span><br>            <span class=\"hljs-keyword\">if</span> l &gt; r: <span class=\"hljs-keyword\">break</span><br>        <span class=\"hljs-keyword\">return</span> res<br><br></code></pre></td></tr></tbody></table></figure>\n<p>第二种是采用相关的方法，<code>pop(0)</code>可以弹出第一个元素。使用$zip(<em>)$相当于对矩阵转置。<code>list(zip(*matrix))[::-1]</code>就是对矩阵逆旋转90度。zip和zip(</em>)也是一对逆操作；前者表示压缩，后者表示解压。</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">spiralOrder</span>(<span class=\"hljs-params\">self, matrix: <span class=\"hljs-type\">List</span>[<span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]]</span>) -&gt; <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]:</span><br>        res = []<br>        <span class=\"hljs-keyword\">while</span> matrix:<br>            res += matrix.pop(<span class=\"hljs-number\">0</span>)<br>            matrix = <span class=\"hljs-built_in\">list</span>(<span class=\"hljs-built_in\">zip</span>(*matrix))[::-<span class=\"hljs-number\">1</span>]<br>        <span class=\"hljs-keyword\">return</span> res<br></code></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>pop &amp; zip知识参考</p>\n<p><a href=\"https://blog.csdn.net/zhanshen112/article/details/90341177\">https://blog.csdn.net/zhanshen112/article/details/90341177</a></p>\n<p><a href=\"https://www.cnblogs.com/Aurora-Twinkle/p/8660778.html\">https://www.cnblogs.com/Aurora-Twinkle/p/8660778.html</a></p>\n</blockquote>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>顺时针打印矩阵</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight inform7\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs inform7\">输入：matrix = <span class=\"hljs-comment\">[<span class=\"hljs-comment\">[1,2,3]</span>,<span class=\"hljs-comment\">[4,5,6]</span>,<span class=\"hljs-comment\">[7,8,9]</span>]</span><br>输出：<span class=\"hljs-comment\">[1,2,3,6,9,8,7,4,5]</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight dns\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dns\">输入：matrix = [[<span class=\"hljs-number\">1,2,3,4</span>],[<span class=\"hljs-number\">5,6,7,8</span>],[<span class=\"hljs-number\">9,10,11,12</span>]]<br>输出：[<span class=\"hljs-number\">1,2,3,4</span>,<span class=\"hljs-number\">8,12,11,10</span>,<span class=\"hljs-number\">9,5,6,7</span>]<br></code></pre></td></tr></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li><code>0 &lt;= matrix.length &lt;= 100</code></li>\n<li><code>0 &lt;= matrix[i].length &lt;= 100</code></li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>一种是对数组进行常规操作，安装题目要求进行遍历判断。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">spiralOrder</span>(<span class=\"hljs-params\">self, matrix: <span class=\"hljs-type\">List</span>[<span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]]</span>) -&gt; <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]:</span><br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> matrix: <span class=\"hljs-keyword\">return</span> []<br>        l, r, t, b, res = <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">len</span>(matrix[<span class=\"hljs-number\">0</span>]) - <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">len</span>(matrix) - <span class=\"hljs-number\">1</span>, []<br>        <span class=\"hljs-keyword\">while</span> <span class=\"hljs-literal\">True</span>:<br>            <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(l, r + <span class=\"hljs-number\">1</span>): res.append(matrix[t][i]) <span class=\"hljs-comment\"># left to right</span><br>            t += <span class=\"hljs-number\">1</span><br>            <span class=\"hljs-keyword\">if</span> t &gt; b: <span class=\"hljs-keyword\">break</span><br>            <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(t, b + <span class=\"hljs-number\">1</span>): res.append(matrix[i][r]) <span class=\"hljs-comment\"># top to bottom</span><br>            r -= <span class=\"hljs-number\">1</span><br>            <span class=\"hljs-keyword\">if</span> l &gt; r: <span class=\"hljs-keyword\">break</span><br>            <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(r, l - <span class=\"hljs-number\">1</span>, -<span class=\"hljs-number\">1</span>): res.append(matrix[b][i]) <span class=\"hljs-comment\"># right to left</span><br>            b -= <span class=\"hljs-number\">1</span><br>            <span class=\"hljs-keyword\">if</span> t &gt; b: <span class=\"hljs-keyword\">break</span><br>            <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(b, t - <span class=\"hljs-number\">1</span>, -<span class=\"hljs-number\">1</span>): res.append(matrix[i][l]) <span class=\"hljs-comment\"># bottom to top</span><br>            l += <span class=\"hljs-number\">1</span><br>            <span class=\"hljs-keyword\">if</span> l &gt; r: <span class=\"hljs-keyword\">break</span><br>        <span class=\"hljs-keyword\">return</span> res<br><br></code></pre></td></tr></table></figure>\n<p>第二种是采用相关的方法，<code>pop(0)</code>可以弹出第一个元素。使用$zip(<em>)$相当于对矩阵转置。<code>list(zip(*matrix))[::-1]</code>就是对矩阵逆旋转90度。zip和zip(</em>)也是一对逆操作；前者表示压缩，后者表示解压。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">spiralOrder</span>(<span class=\"hljs-params\">self, matrix: <span class=\"hljs-type\">List</span>[<span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]]</span>) -&gt; <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]:</span><br>        res = []<br>        <span class=\"hljs-keyword\">while</span> matrix:<br>            res += matrix.pop(<span class=\"hljs-number\">0</span>)<br>            matrix = <span class=\"hljs-built_in\">list</span>(<span class=\"hljs-built_in\">zip</span>(*matrix))[::-<span class=\"hljs-number\">1</span>]<br>        <span class=\"hljs-keyword\">return</span> res<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>pop &amp; zip知识参考</p>\n<p><a href=\"https://blog.csdn.net/zhanshen112/article/details/90341177\">https://blog.csdn.net/zhanshen112/article/details/90341177</a></p>\n<p><a href=\"https://www.cnblogs.com/Aurora-Twinkle/p/8660778.html\">https://www.cnblogs.com/Aurora-Twinkle/p/8660778.html</a></p>\n</blockquote>\n"},{"title":"剑指offer40 最小的k个数","date":"2021-08-24T13:17:18.000Z","_content":"\n> 最小的k个数\n\n## 题目\n\n输入整数数组 arr ，找出其中最小的 k 个数。例如，输入4、5、1、6、2、7、3、8这8个数字，则最小的4个数字是1、2、3、4。\n\n### 示例 1：\n\n```\n输入：arr = [3,2,1], k = 2\n输出：[1,2] 或者 [2,1]\n```\n\n### 示例 2：\n\n```\n输入：arr = [0,1,2,1], k = 1\n输出：[0]\n```\n\n### 提示：\n\n- 0 <= k <= arr.length <= 10000\n- 0 <= arr[i] <= 10000\n\n## 题解\n\n使用封装的sorted函数，这种方法需要排序O(NlogN)\n\n```python\nclass Solution:\n    def getLeastNumbers(self, arr: List[int], k: int) -> List[int]:\n         return sorted(arr)[0:k]\n```\n\n还有一种方法是采取快速排序的思想，可以将复杂度降到O(N)\n首先复习一下快速排序的代码。K神的方法是i<j的情况下就进行比对，这种方式要注意j的收缩要在i的扩张之前；这样可以保证最后停止的时候i，j指向都是比较小的那个数值。(最后交换时i,j都可以，因为结束时一定有i和j相等)\n\n```python\ndef quicksort(l,r):\n    if l>=r: return\n    pivot = arr[l]\n    i,j = l,r\n    while (i<j):\n        while i<j and arr[j]>=pivot:j -= 1 #在i<j的约束下 j在i的移动前面\n        while i<j and arr[i]<=pivot:i += 1         \n        arr[i],arr[j] = arr[j],arr[i]\n    arr[l], arr[j] = arr[j], arr[l]\n    quicksort(l,j-1)\n    quicksort(j+1,r)\n```\n\n最后交换的时候只能是j并且一定要保证i和j不可越界，也就是说在i和j到临界值的时候就不用移动了\n\n```python\ndef quicksort(l,r):\n    if l>=r: return\n    pivot = arr[l]\n    i,j = l,r\n    while (True):\n        while j>l and arr[j]>=pivot:j -= 1 \n        while i<r and arr[i]<=pivot:i += 1   \n        if(i>=j):break\n        arr[i],arr[j] = arr[j],arr[i]\n    arr[l], arr[j] = arr[j], arr[l]\n    quicksort(l,j-1)\n    quicksort(j+1,r)\n```\n\n那么这个题目借用这种思想只要找到这个pivot他原本所在的位置下标为k，那么他的左边的部分就是要找的部分哦~~:wink:\n\n```python\nclass Solution:\n    def getLeastNumbers(self, arr: List[int], k: int) -> List[int]:\n        def quicksort(l,r):\n            if l>=r: return\n            pivot = arr[l]\n            i,j = l,r\n            while (i<j):\n                while i<j and arr[j]>=pivot:j -= 1 #在i<j的约束下 j在i的移动前面\n                while i<j and arr[i]<=pivot:i += 1         \n                arr[i],arr[j] = arr[j],arr[i]\n            arr[l], arr[j] = arr[j], arr[l]\n            if(k>j):quicksort(j+1,r)\n            if(k<j):quicksort(l,j-1)            \n        quicksort(0,len(arr)-1)\n        return arr[:k]\n```\n\n这种方法的复杂度是N+N/2+N/4+N/8+.... = N(1/2+1/4+1/8+....) ~ 2N\n","source":"_posts/leetcode/leetcode-offer40.md","raw":"---\ntitle: 剑指offer40 最小的k个数\ntags: [剑指,快速排序]\ncategories: [剑指,快速排序]\ndate: 2021-08-24 21:17:18\n---\n\n> 最小的k个数\n\n## 题目\n\n输入整数数组 arr ，找出其中最小的 k 个数。例如，输入4、5、1、6、2、7、3、8这8个数字，则最小的4个数字是1、2、3、4。\n\n### 示例 1：\n\n```\n输入：arr = [3,2,1], k = 2\n输出：[1,2] 或者 [2,1]\n```\n\n### 示例 2：\n\n```\n输入：arr = [0,1,2,1], k = 1\n输出：[0]\n```\n\n### 提示：\n\n- 0 <= k <= arr.length <= 10000\n- 0 <= arr[i] <= 10000\n\n## 题解\n\n使用封装的sorted函数，这种方法需要排序O(NlogN)\n\n```python\nclass Solution:\n    def getLeastNumbers(self, arr: List[int], k: int) -> List[int]:\n         return sorted(arr)[0:k]\n```\n\n还有一种方法是采取快速排序的思想，可以将复杂度降到O(N)\n首先复习一下快速排序的代码。K神的方法是i<j的情况下就进行比对，这种方式要注意j的收缩要在i的扩张之前；这样可以保证最后停止的时候i，j指向都是比较小的那个数值。(最后交换时i,j都可以，因为结束时一定有i和j相等)\n\n```python\ndef quicksort(l,r):\n    if l>=r: return\n    pivot = arr[l]\n    i,j = l,r\n    while (i<j):\n        while i<j and arr[j]>=pivot:j -= 1 #在i<j的约束下 j在i的移动前面\n        while i<j and arr[i]<=pivot:i += 1         \n        arr[i],arr[j] = arr[j],arr[i]\n    arr[l], arr[j] = arr[j], arr[l]\n    quicksort(l,j-1)\n    quicksort(j+1,r)\n```\n\n最后交换的时候只能是j并且一定要保证i和j不可越界，也就是说在i和j到临界值的时候就不用移动了\n\n```python\ndef quicksort(l,r):\n    if l>=r: return\n    pivot = arr[l]\n    i,j = l,r\n    while (True):\n        while j>l and arr[j]>=pivot:j -= 1 \n        while i<r and arr[i]<=pivot:i += 1   \n        if(i>=j):break\n        arr[i],arr[j] = arr[j],arr[i]\n    arr[l], arr[j] = arr[j], arr[l]\n    quicksort(l,j-1)\n    quicksort(j+1,r)\n```\n\n那么这个题目借用这种思想只要找到这个pivot他原本所在的位置下标为k，那么他的左边的部分就是要找的部分哦~~:wink:\n\n```python\nclass Solution:\n    def getLeastNumbers(self, arr: List[int], k: int) -> List[int]:\n        def quicksort(l,r):\n            if l>=r: return\n            pivot = arr[l]\n            i,j = l,r\n            while (i<j):\n                while i<j and arr[j]>=pivot:j -= 1 #在i<j的约束下 j在i的移动前面\n                while i<j and arr[i]<=pivot:i += 1         \n                arr[i],arr[j] = arr[j],arr[i]\n            arr[l], arr[j] = arr[j], arr[l]\n            if(k>j):quicksort(j+1,r)\n            if(k<j):quicksort(l,j-1)            \n        quicksort(0,len(arr)-1)\n        return arr[:k]\n```\n\n这种方法的复杂度是N+N/2+N/4+N/8+.... = N(1/2+1/4+1/8+....) ~ 2N\n","slug":"leetcode/leetcode-offer40","published":1,"updated":"2021-08-25T02:51:10.126Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxoda0039ugx4559oh924","content":"<blockquote>\n<p>最小的k个数</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>输入整数数组 arr ，找出其中最小的 k 个数。例如，输入4、5、1、6、2、7、3、8这8个数字，则最小的4个数字是1、2、3、4。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight inform7\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs inform7\">输入：arr = <span class=\"hljs-comment\">[3,2,1]</span>, k = 2<br>输出：<span class=\"hljs-comment\">[1,2]</span> 或者 <span class=\"hljs-comment\">[2,1]</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight inform7\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs inform7\">输入：arr = <span class=\"hljs-comment\">[0,1,2,1]</span>, k = 1<br>输出：<span class=\"hljs-comment\">[0]</span><br></code></pre></td></tr></tbody></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>0 &lt;= k &lt;= arr.length &lt;= 10000</li>\n<li>0 &lt;= arr[i] &lt;= 10000</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>使用封装的sorted函数，这种方法需要排序O(NlogN)</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">getLeastNumbers</span>(<span class=\"hljs-params\">self, arr: <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>], k: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]:</span><br>         <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">sorted</span>(arr)[<span class=\"hljs-number\">0</span>:k]<br></code></pre></td></tr></tbody></table></figure>\n<p>还有一种方法是采取快速排序的思想，可以将复杂度降到O(N)<br>\n首先复习一下快速排序的代码。K神的方法是i&lt;j的情况下就进行比对，这种方式要注意j的收缩要在i的扩张之前；这样可以保证最后停止的时候i，j指向都是比较小的那个数值。(最后交换时i,j都可以，因为结束时一定有i和j相等)</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">quicksort</span>(<span class=\"hljs-params\">l,r</span>):</span><br>    <span class=\"hljs-keyword\">if</span> l&gt;=r: <span class=\"hljs-keyword\">return</span><br>    pivot = arr[l]<br>    i,j = l,r<br>    <span class=\"hljs-keyword\">while</span> (i&lt;j):<br>        <span class=\"hljs-keyword\">while</span> i&lt;j <span class=\"hljs-keyword\">and</span> arr[j]&gt;=pivot:j -= <span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">#在i&lt;j的约束下 j在i的移动前面</span><br>        <span class=\"hljs-keyword\">while</span> i&lt;j <span class=\"hljs-keyword\">and</span> arr[i]&lt;=pivot:i += <span class=\"hljs-number\">1</span>         <br>        arr[i],arr[j] = arr[j],arr[i]<br>    arr[l], arr[j] = arr[j], arr[l]<br>    quicksort(l,j-<span class=\"hljs-number\">1</span>)<br>    quicksort(j+<span class=\"hljs-number\">1</span>,r)<br></code></pre></td></tr></tbody></table></figure>\n<p>最后交换的时候只能是j并且一定要保证i和j不可越界，也就是说在i和j到临界值的时候就不用移动了</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">quicksort</span>(<span class=\"hljs-params\">l,r</span>):</span><br>    <span class=\"hljs-keyword\">if</span> l&gt;=r: <span class=\"hljs-keyword\">return</span><br>    pivot = arr[l]<br>    i,j = l,r<br>    <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-literal\">True</span>):<br>        <span class=\"hljs-keyword\">while</span> j&gt;l <span class=\"hljs-keyword\">and</span> arr[j]&gt;=pivot:j -= <span class=\"hljs-number\">1</span> <br>        <span class=\"hljs-keyword\">while</span> i&lt;r <span class=\"hljs-keyword\">and</span> arr[i]&lt;=pivot:i += <span class=\"hljs-number\">1</span>   <br>        <span class=\"hljs-keyword\">if</span>(i&gt;=j):<span class=\"hljs-keyword\">break</span><br>        arr[i],arr[j] = arr[j],arr[i]<br>    arr[l], arr[j] = arr[j], arr[l]<br>    quicksort(l,j-<span class=\"hljs-number\">1</span>)<br>    quicksort(j+<span class=\"hljs-number\">1</span>,r)<br></code></pre></td></tr></tbody></table></figure>\n<p>那么这个题目借用这种思想只要找到这个pivot他原本所在的位置下标为k，那么他的左边的部分就是要找的部分哦~~😉</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">getLeastNumbers</span>(<span class=\"hljs-params\">self, arr: <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>], k: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]:</span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">quicksort</span>(<span class=\"hljs-params\">l,r</span>):</span><br>            <span class=\"hljs-keyword\">if</span> l&gt;=r: <span class=\"hljs-keyword\">return</span><br>            pivot = arr[l]<br>            i,j = l,r<br>            <span class=\"hljs-keyword\">while</span> (i&lt;j):<br>                <span class=\"hljs-keyword\">while</span> i&lt;j <span class=\"hljs-keyword\">and</span> arr[j]&gt;=pivot:j -= <span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">#在i&lt;j的约束下 j在i的移动前面</span><br>                <span class=\"hljs-keyword\">while</span> i&lt;j <span class=\"hljs-keyword\">and</span> arr[i]&lt;=pivot:i += <span class=\"hljs-number\">1</span>         <br>                arr[i],arr[j] = arr[j],arr[i]<br>            arr[l], arr[j] = arr[j], arr[l]<br>            <span class=\"hljs-keyword\">if</span>(k&gt;j):quicksort(j+<span class=\"hljs-number\">1</span>,r)<br>            <span class=\"hljs-keyword\">if</span>(k&lt;j):quicksort(l,j-<span class=\"hljs-number\">1</span>)            <br>        quicksort(<span class=\"hljs-number\">0</span>,<span class=\"hljs-built_in\">len</span>(arr)-<span class=\"hljs-number\">1</span>)<br>        <span class=\"hljs-keyword\">return</span> arr[:k]<br></code></pre></td></tr></tbody></table></figure>\n<p>这种方法的复杂度是N+N/2+N/4+N/8+… = N(1/2+1/4+1/8+…) ~ 2N</p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>最小的k个数</p>\n</blockquote>\n<h2 id=\"题目\">题目</h2>\n<p>输入整数数组 arr ，找出其中最小的 k 个数。例如，输入4、5、1、6、2、7、3、8这8个数字，则最小的4个数字是1、2、3、4。</p>\n<h3 id=\"示例-1：\">示例 1：</h3>\n<figure class=\"highlight inform7\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs inform7\">输入：arr = <span class=\"hljs-comment\">[3,2,1]</span>, k = 2<br>输出：<span class=\"hljs-comment\">[1,2]</span> 或者 <span class=\"hljs-comment\">[2,1]</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"示例-2：\">示例 2：</h3>\n<figure class=\"highlight inform7\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs inform7\">输入：arr = <span class=\"hljs-comment\">[0,1,2,1]</span>, k = 1<br>输出：<span class=\"hljs-comment\">[0]</span><br></code></pre></td></tr></table></figure>\n<h3 id=\"提示：\">提示：</h3>\n<ul>\n<li>0 &lt;= k &lt;= arr.length &lt;= 10000</li>\n<li>0 &lt;= arr[i] &lt;= 10000</li>\n</ul>\n<h2 id=\"题解\">题解</h2>\n<p>使用封装的sorted函数，这种方法需要排序O(NlogN)</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">getLeastNumbers</span>(<span class=\"hljs-params\">self, arr: <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>], k: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]:</span><br>         <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">sorted</span>(arr)[<span class=\"hljs-number\">0</span>:k]<br></code></pre></td></tr></table></figure>\n<p>还有一种方法是采取快速排序的思想，可以将复杂度降到O(N)<br>\n首先复习一下快速排序的代码。K神的方法是i&lt;j的情况下就进行比对，这种方式要注意j的收缩要在i的扩张之前；这样可以保证最后停止的时候i，j指向都是比较小的那个数值。(最后交换时i,j都可以，因为结束时一定有i和j相等)</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">quicksort</span>(<span class=\"hljs-params\">l,r</span>):</span><br>    <span class=\"hljs-keyword\">if</span> l&gt;=r: <span class=\"hljs-keyword\">return</span><br>    pivot = arr[l]<br>    i,j = l,r<br>    <span class=\"hljs-keyword\">while</span> (i&lt;j):<br>        <span class=\"hljs-keyword\">while</span> i&lt;j <span class=\"hljs-keyword\">and</span> arr[j]&gt;=pivot:j -= <span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">#在i&lt;j的约束下 j在i的移动前面</span><br>        <span class=\"hljs-keyword\">while</span> i&lt;j <span class=\"hljs-keyword\">and</span> arr[i]&lt;=pivot:i += <span class=\"hljs-number\">1</span>         <br>        arr[i],arr[j] = arr[j],arr[i]<br>    arr[l], arr[j] = arr[j], arr[l]<br>    quicksort(l,j-<span class=\"hljs-number\">1</span>)<br>    quicksort(j+<span class=\"hljs-number\">1</span>,r)<br></code></pre></td></tr></table></figure>\n<p>最后交换的时候只能是j并且一定要保证i和j不可越界，也就是说在i和j到临界值的时候就不用移动了</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">quicksort</span>(<span class=\"hljs-params\">l,r</span>):</span><br>    <span class=\"hljs-keyword\">if</span> l&gt;=r: <span class=\"hljs-keyword\">return</span><br>    pivot = arr[l]<br>    i,j = l,r<br>    <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-literal\">True</span>):<br>        <span class=\"hljs-keyword\">while</span> j&gt;l <span class=\"hljs-keyword\">and</span> arr[j]&gt;=pivot:j -= <span class=\"hljs-number\">1</span> <br>        <span class=\"hljs-keyword\">while</span> i&lt;r <span class=\"hljs-keyword\">and</span> arr[i]&lt;=pivot:i += <span class=\"hljs-number\">1</span>   <br>        <span class=\"hljs-keyword\">if</span>(i&gt;=j):<span class=\"hljs-keyword\">break</span><br>        arr[i],arr[j] = arr[j],arr[i]<br>    arr[l], arr[j] = arr[j], arr[l]<br>    quicksort(l,j-<span class=\"hljs-number\">1</span>)<br>    quicksort(j+<span class=\"hljs-number\">1</span>,r)<br></code></pre></td></tr></table></figure>\n<p>那么这个题目借用这种思想只要找到这个pivot他原本所在的位置下标为k，那么他的左边的部分就是要找的部分哦~~😉</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Solution</span>:</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">getLeastNumbers</span>(<span class=\"hljs-params\">self, arr: <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>], k: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-type\">List</span>[<span class=\"hljs-built_in\">int</span>]:</span><br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">quicksort</span>(<span class=\"hljs-params\">l,r</span>):</span><br>            <span class=\"hljs-keyword\">if</span> l&gt;=r: <span class=\"hljs-keyword\">return</span><br>            pivot = arr[l]<br>            i,j = l,r<br>            <span class=\"hljs-keyword\">while</span> (i&lt;j):<br>                <span class=\"hljs-keyword\">while</span> i&lt;j <span class=\"hljs-keyword\">and</span> arr[j]&gt;=pivot:j -= <span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">#在i&lt;j的约束下 j在i的移动前面</span><br>                <span class=\"hljs-keyword\">while</span> i&lt;j <span class=\"hljs-keyword\">and</span> arr[i]&lt;=pivot:i += <span class=\"hljs-number\">1</span>         <br>                arr[i],arr[j] = arr[j],arr[i]<br>            arr[l], arr[j] = arr[j], arr[l]<br>            <span class=\"hljs-keyword\">if</span>(k&gt;j):quicksort(j+<span class=\"hljs-number\">1</span>,r)<br>            <span class=\"hljs-keyword\">if</span>(k&lt;j):quicksort(l,j-<span class=\"hljs-number\">1</span>)            <br>        quicksort(<span class=\"hljs-number\">0</span>,<span class=\"hljs-built_in\">len</span>(arr)-<span class=\"hljs-number\">1</span>)<br>        <span class=\"hljs-keyword\">return</span> arr[:k]<br></code></pre></td></tr></table></figure>\n<p>这种方法的复杂度是N+N/2+N/4+N/8+… = N(1/2+1/4+1/8+…) ~ 2N</p>\n"},{"title":"Eckark_young定理","date":"2021-08-09T02:57:16.000Z","math":true,"_content":"\n最佳低秩逼近和奇异值的关系(*Eckart*-*Young定理*)\n### 定理\nSuppose a matrix $A\\in \\mathbb{R}^{m\\times n}$has an SVD-decomposition$A=U\\Sigma V^T$. Let $k < r= \\mathsf{rank}(A)$and truncated matrix\n$$\nA_k = \\sum_{i=1}^k \\sigma_i \\mathbf u_i \\mathbf v_i^T,\n$$\nthen, for any matrix B of rank k , the minimal error is achieved with $A_k$:\n\n{% raw %}\n$$\n\\min_{\\mathsf{rank}(B)=k}||A-B||_2 = || A - A_k||_2 = \\sigma_{k+1}.\n$$\n{% endraw %}\n\nThe same holds for Frobenius norm as well\n\n{% raw %}\n$$\n\\min_{\\mathsf{rank}(B)=k}||A-B||_F = || A - A_k||_F = \\sqrt{\\sigma_{k+1}^2 + \\cdots + \\sigma_p^2}.\n$$\n\n{% endraw %}\n\n### 证明 (2-norm case)\n\nSince $U^\\ A_k V = \\mathrm{diag}(\\sigma_1,\\ldots, \\sigma_k,0,\\ldots,0)$ it means that $A_k$ is rank K. Moreover, $U^T (A-A_k) V =  \\mathrm{diag}(0,\\ldots, 0,\\sigma_{k+1},\\ldots, \\sigma_p)$with the largest singular value is $\\sigma_{k+1}$ and thus {% raw %}$||A-A_k||_2 = \\sigma_{k+1}$.{% endraw %}\n\n### 证明 (Frobenius norm case)\n\n> Lemma: If $A,B \\in \\mathbb{R}^{m\\times n}$ , with B having rank K , then $\\sigma_{k+i}(A) \\le \\sigma_i(A-B) \\text{ for all }\\; i.$\n\nTo prove the lemma, first consider the case i=1, we have proved that $\\sigma_{k+1}(A) \\le \\sigma_1(A-B) = ||A-B||_2$in the 2-norm case. Then we do the general case:\n\n{% raw %}\n$$\n\\begin{aligned} \t\\sigma_i(A-B) = & \\sigma_i(A-B) + \\sigma_1(B-B_k)\\qquad\\text{since } B=B_k\\\\ \t=& \\sigma_1(A-B - (A-B)_{i-1}) + \\sigma_1(B-B_k)\\qquad\\\\ \t\\ge & \\sigma_1(A-B - (A-B)_{i-1}+B-B_k)   \\\\ \t=& \\sigma_1(A  - (A-B)_{i-1} -B_k)\\\\ \t\\ge & \\sigma_1(A - A_{k+i-1})\\\\ \t=& \\sigma_{k+i}(A)   \\end{aligned} \n$$\n{% endraw %}\n\n\n\n> https://zhuanlan.zhihu.com/p/361938622\n>\n> https://zhuanlan.zhihu.com/p/75283604\n","source":"_posts/math/Eckark-young.md","raw":"---\ntitle: Eckark_young定理\ndate: 2021-08-09 10:57:16\ntags: [math,线性代数]\ncategories: [math,线性代数]\nmath: true\n---\n\n最佳低秩逼近和奇异值的关系(*Eckart*-*Young定理*)\n### 定理\nSuppose a matrix $A\\in \\mathbb{R}^{m\\times n}$has an SVD-decomposition$A=U\\Sigma V^T$. Let $k < r= \\mathsf{rank}(A)$and truncated matrix\n$$\nA_k = \\sum_{i=1}^k \\sigma_i \\mathbf u_i \\mathbf v_i^T,\n$$\nthen, for any matrix B of rank k , the minimal error is achieved with $A_k$:\n\n{% raw %}\n$$\n\\min_{\\mathsf{rank}(B)=k}||A-B||_2 = || A - A_k||_2 = \\sigma_{k+1}.\n$$\n{% endraw %}\n\nThe same holds for Frobenius norm as well\n\n{% raw %}\n$$\n\\min_{\\mathsf{rank}(B)=k}||A-B||_F = || A - A_k||_F = \\sqrt{\\sigma_{k+1}^2 + \\cdots + \\sigma_p^2}.\n$$\n\n{% endraw %}\n\n### 证明 (2-norm case)\n\nSince $U^\\ A_k V = \\mathrm{diag}(\\sigma_1,\\ldots, \\sigma_k,0,\\ldots,0)$ it means that $A_k$ is rank K. Moreover, $U^T (A-A_k) V =  \\mathrm{diag}(0,\\ldots, 0,\\sigma_{k+1},\\ldots, \\sigma_p)$with the largest singular value is $\\sigma_{k+1}$ and thus {% raw %}$||A-A_k||_2 = \\sigma_{k+1}$.{% endraw %}\n\n### 证明 (Frobenius norm case)\n\n> Lemma: If $A,B \\in \\mathbb{R}^{m\\times n}$ , with B having rank K , then $\\sigma_{k+i}(A) \\le \\sigma_i(A-B) \\text{ for all }\\; i.$\n\nTo prove the lemma, first consider the case i=1, we have proved that $\\sigma_{k+1}(A) \\le \\sigma_1(A-B) = ||A-B||_2$in the 2-norm case. Then we do the general case:\n\n{% raw %}\n$$\n\\begin{aligned} \t\\sigma_i(A-B) = & \\sigma_i(A-B) + \\sigma_1(B-B_k)\\qquad\\text{since } B=B_k\\\\ \t=& \\sigma_1(A-B - (A-B)_{i-1}) + \\sigma_1(B-B_k)\\qquad\\\\ \t\\ge & \\sigma_1(A-B - (A-B)_{i-1}+B-B_k)   \\\\ \t=& \\sigma_1(A  - (A-B)_{i-1} -B_k)\\\\ \t\\ge & \\sigma_1(A - A_{k+i-1})\\\\ \t=& \\sigma_{k+i}(A)   \\end{aligned} \n$$\n{% endraw %}\n\n\n\n> https://zhuanlan.zhihu.com/p/361938622\n>\n> https://zhuanlan.zhihu.com/p/75283604\n","slug":"math/Eckark-young","published":1,"updated":"2021-08-14T10:08:10.542Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxodc003bugx44ngyerkg","content":"<p>最佳低秩逼近和奇异值的关系(<em>Eckart</em>-<em>Young定理</em>)</p>\n<h3 id=\"定理\">定理</h3>\n<p>Suppose a matrix $A\\in \\mathbb{R}^{m\\times n}$has an SVD-decomposition$A=U\\Sigma V^T$. Let $k &lt; r= \\mathsf{rank}(A)$and truncated matrix<br>\n$$<br>\nA_k = \\sum_{i=1}^k \\sigma_i \\mathbf u_i \\mathbf v_i^T,<br>\n$$<br>\nthen, for any matrix B of rank k , the minimal error is achieved with $A_k$:</p>\n\n$$\n\\min_{\\mathsf{rank}(B)=k}||A-B||_2 = || A - A_k||_2 = \\sigma_{k+1}.\n$$\n\n<p>The same holds for Frobenius norm as well</p>\n\n$$\n\\min_{\\mathsf{rank}(B)=k}||A-B||_F = || A - A_k||_F = \\sqrt{\\sigma_{k+1}^2 + \\cdots + \\sigma_p^2}.\n$$\n\n\n<h3 id=\"证明-2-norm-case\">证明 (2-norm case)</h3>\n<p>Since $U^\\ A_k V = \\mathrm{diag}(\\sigma_1,\\ldots, \\sigma_k,0,\\ldots,0)$ it means that $A_k$ is rank K. Moreover, $U^T (A-A_k) V =  \\mathrm{diag}(0,\\ldots, 0,\\sigma_{k+1},\\ldots, \\sigma_p)$with the largest singular value is $\\sigma_{k+1}$ and thus $||A-A_k||_2 = \\sigma_{k+1}$.</p>\n<h3 id=\"证明-Frobenius-norm-case\">证明 (Frobenius norm case)</h3>\n<blockquote>\n<p>Lemma: If $A,B \\in \\mathbb{R}^{m\\times n}$ , with B having rank K , then $\\sigma_{k+i}(A) \\le \\sigma_i(A-B) \\text{ for all }; i.$</p>\n</blockquote>\n<p>To prove the lemma, first consider the case i=1, we have proved that $\\sigma_{k+1}(A) \\le \\sigma_1(A-B) = ||A-B||_2$in the 2-norm case. Then we do the general case:</p>\n\n$$\n\\begin{aligned} \t\\sigma_i(A-B) = &amp; \\sigma_i(A-B) + \\sigma_1(B-B_k)\\qquad\\text{since } B=B_k\\\\ \t=&amp; \\sigma_1(A-B - (A-B)_{i-1}) + \\sigma_1(B-B_k)\\qquad\\\\ \t\\ge &amp; \\sigma_1(A-B - (A-B)_{i-1}+B-B_k)   \\\\ \t=&amp; \\sigma_1(A  - (A-B)_{i-1} -B_k)\\\\ \t\\ge &amp; \\sigma_1(A - A_{k+i-1})\\\\ \t=&amp; \\sigma_{k+i}(A)   \\end{aligned} \n$$\n\n<blockquote>\n<p><a href=\"https://zhuanlan.zhihu.com/p/361938622\">https://zhuanlan.zhihu.com/p/361938622</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/75283604\">https://zhuanlan.zhihu.com/p/75283604</a></p>\n</blockquote>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<p>最佳低秩逼近和奇异值的关系(<em>Eckart</em>-<em>Young定理</em>)</p>\n<h3 id=\"定理\">定理</h3>\n<p>Suppose a matrix $A\\in \\mathbb{R}^{m\\times n}$has an SVD-decomposition$A=U\\Sigma V^T$. Let $k &lt; r= \\mathsf{rank}(A)$and truncated matrix<br>\n$$<br>\nA_k = \\sum_{i=1}^k \\sigma_i \\mathbf u_i \\mathbf v_i^T,<br>\n$$<br>\nthen, for any matrix B of rank k , the minimal error is achieved with $A_k$:</p>\n\n$$\n\\min_{\\mathsf{rank}(B)=k}||A-B||_2 = || A - A_k||_2 = \\sigma_{k+1}.\n$$\n\n<p>The same holds for Frobenius norm as well</p>\n\n$$\n\\min_{\\mathsf{rank}(B)=k}||A-B||_F = || A - A_k||_F = \\sqrt{\\sigma_{k+1}^2 + \\cdots + \\sigma_p^2}.\n$$\n\n\n<h3 id=\"证明-2-norm-case\">证明 (2-norm case)</h3>\n<p>Since $U^\\ A_k V = \\mathrm{diag}(\\sigma_1,\\ldots, \\sigma_k,0,\\ldots,0)$ it means that $A_k$ is rank K. Moreover, $U^T (A-A_k) V =  \\mathrm{diag}(0,\\ldots, 0,\\sigma_{k+1},\\ldots, \\sigma_p)$with the largest singular value is $\\sigma_{k+1}$ and thus $||A-A_k||_2 = \\sigma_{k+1}$.</p>\n<h3 id=\"证明-Frobenius-norm-case\">证明 (Frobenius norm case)</h3>\n<blockquote>\n<p>Lemma: If $A,B \\in \\mathbb{R}^{m\\times n}$ , with B having rank K , then $\\sigma_{k+i}(A) \\le \\sigma_i(A-B) \\text{ for all }; i.$</p>\n</blockquote>\n<p>To prove the lemma, first consider the case i=1, we have proved that $\\sigma_{k+1}(A) \\le \\sigma_1(A-B) = ||A-B||_2$in the 2-norm case. Then we do the general case:</p>\n\n$$\n\\begin{aligned} \t\\sigma_i(A-B) = & \\sigma_i(A-B) + \\sigma_1(B-B_k)\\qquad\\text{since } B=B_k\\\\ \t=& \\sigma_1(A-B - (A-B)_{i-1}) + \\sigma_1(B-B_k)\\qquad\\\\ \t\\ge & \\sigma_1(A-B - (A-B)_{i-1}+B-B_k)   \\\\ \t=& \\sigma_1(A  - (A-B)_{i-1} -B_k)\\\\ \t\\ge & \\sigma_1(A - A_{k+i-1})\\\\ \t=& \\sigma_{k+i}(A)   \\end{aligned} \n$$\n\n<blockquote>\n<p><a href=\"https://zhuanlan.zhihu.com/p/361938622\">https://zhuanlan.zhihu.com/p/361938622</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/75283604\">https://zhuanlan.zhihu.com/p/75283604</a></p>\n</blockquote>\n"},{"title":"Mahalanobis_distance","date":"2021-08-09T06:58:56.000Z","math":true,"_content":"\n> 马氏距离(Mahalanobis Distance)是度量学习中一种常用的距离指标，同欧氏距离、曼哈顿距离、汉明距离等一样被用作评定数据之间的相似度指标。但却可以应对高维线性分布的数据中各维度间非独立同分布的问题。\n\n*使用马氏距离，对高维非独立分布的数据进行距离度量。*\n\n**那我们为什么要用马氏距离呢？**\n马氏距离有很多**优点：** **马氏距离不受量纲的影响**，两点之间的马氏距离与原始数据的测量单位无关；由标准化数据和中心化数据(即原始数据与均值之差）计算出的二点之间的马氏距离相同。**马氏距离还可以排除变量之间的相关性的干扰**。\n\n## 什么是马氏距离\n\n马氏距离(Mahalanobis Distance)是一种距离的度量，可以看作是欧氏距离的一种修正，修正了欧式距离中各个维度尺度不一致且相关的问题。\n\n单个数据点的马氏距离\n\n![](https://picture.mulindya.com/Mahalanobis-distance-pic1.png)\n\n\n\n数据点x, y之间的马氏距离\n\n\n\n![](https://picture.mulindya.com/Mahalanobis-distance-pic2.png)\n\n\n\n*其中Σ是多维随机变量的协方差矩阵，μ为样本均值，如果协方差矩阵是单位向量，也就是各维度独立同分布，马氏距离就变成了欧氏距离。*\n\n## 马氏距离实际意义\n\n那么马氏距离就能能干什么？它比欧氏距离好在哪里？举几个栗子\n\n**欧式距离近就一定相似？**\n\n先举个比较常用的例子，身高和体重，这两个变量拥有不同的单位标准，也就是有不同的scale。比如身高用毫米计算，而体重用千克计算，显然差10mm的身高与差10kg的体重是完全不同的。但在普通的欧氏距离中，这将会算作相同的差距。\n\n**归一化后欧氏距离近就一定相似？**\n\n当然我们可以先做归一化来消除这种维度间scale不同的问题，但是样本分布也会影响分类\n\n举个一维的栗子，现在有两个类别，统一单位，第一个类别均值为0，方差为0.1，第二个类别均值为5，方差为5。那么一个值为2的点属于第一类的概率大还是第二类的概率大？距离上说应该是第一类，但是直觉上显然是第二类，因为第一类不太可能到达2这个位置。\n\n所以，在一个方差较小的维度下很小的差别就有可能成为离群点。就像下图一样，A与B相对于原点的距离是相同的。但是由于样本总体沿着横轴分布，所以B点更有可能是这个样本中的点，而A则更有可能是离群点。\n\n![](https://picture.mulindya.com/Mahalanobis-distance-pic3.png)\n\n\n\n**算上维度的方差就够了？**\n\n还有一个问题——如果维度间不独立同分布，样本点一定与欧氏距离近的样本点同类的概率更大吗？\n\n\n\n![](https://picture.mulindya.com/Mahalanobis-distance-pic4.png)\n\n\n\n可以看到样本基本服从f(x) = x的线性分布，A与B相对于原点的距离依旧相等，显然A更像是一个离群点\n\n即使数据已经经过了标准化，也不会改变AB与原点间距离大小的相互关系。所以要本质上解决这个问题，就要针对[主成分分析](https://link.zhihu.com/?target=https%3A//www.ph0en1x.space/2018/03/06/PCA/)中的`主成分`来进行标准化。\n\n## 马氏距离的几何意义\n\n上面搞懂了，马氏距离就好理解了，<u>只需要将变量`按照主成分进行旋转`，让维度间相互**独立**，然后进行`标准化`</u>，让维度**同分布**就可以了。\n\n由主成分分析可知，由于主成分就是特征向量方向，每个方向的方差就是对应的特征值，所以只需要按照特征向量的方向旋转，然后缩放特征值倍就可以了，可以得到以下的结果：\n\n\n\n![](https://picture.mulindya.com/Mahalanobis-distance-pic5.png)\n\n\n\n离群点就被成功分离，这时候的欧式距离就是马氏距离。\n\n## 马氏距离的推导\n\n首先要对数据点进行*旋转*，旋转至主成分，维度间线性无关，假设新的坐标为\n\n![](https://picture.mulindya.com/Mahalanobis-distance-pic6.png)\n\n\n\n又变换后*维度间线性无关且每个维度自己的方差为特征值*，所以满足：\n\n\n\n![](https://picture.mulindya.com/Mahalanobis-distance-pic7.png)\n\n\n\n马氏距离是旋转变换缩放之后的欧式距离，所以马氏距离的计算公式为：\n\n![](https://picture.mulindya.com/Mahalanobis-distance-pic8.png)\n\n这就是之前提到的马氏距离的公式\n\n## 马氏距离的问题\n\n- 协方差矩阵必须满秩\n\n里面有求逆矩阵的过程，不满秩不行，要求数据要有原维度个特征值，如果没有可以考虑先进行PCA，这种情况下PCA不会损失信息\n\n- 不能处理非线性流形(manifold)上的问题\n\n只对线性空间有效，如果要处理流形，只能在局部定义，可以用来建立KNN图\n\n> 参考：\n>\n> https://zhuanlan.zhihu.com/p/46626607\n","source":"_posts/math/Mahalanobis-distance.md","raw":"---\ntitle: Mahalanobis_distance\ndate: 2021-08-09 14:58:56\ntags: 马氏距离\ncategories: [math,概率论]\nmath: true\n---\n\n> 马氏距离(Mahalanobis Distance)是度量学习中一种常用的距离指标，同欧氏距离、曼哈顿距离、汉明距离等一样被用作评定数据之间的相似度指标。但却可以应对高维线性分布的数据中各维度间非独立同分布的问题。\n\n*使用马氏距离，对高维非独立分布的数据进行距离度量。*\n\n**那我们为什么要用马氏距离呢？**\n马氏距离有很多**优点：** **马氏距离不受量纲的影响**，两点之间的马氏距离与原始数据的测量单位无关；由标准化数据和中心化数据(即原始数据与均值之差）计算出的二点之间的马氏距离相同。**马氏距离还可以排除变量之间的相关性的干扰**。\n\n## 什么是马氏距离\n\n马氏距离(Mahalanobis Distance)是一种距离的度量，可以看作是欧氏距离的一种修正，修正了欧式距离中各个维度尺度不一致且相关的问题。\n\n单个数据点的马氏距离\n\n![](https://picture.mulindya.com/Mahalanobis-distance-pic1.png)\n\n\n\n数据点x, y之间的马氏距离\n\n\n\n![](https://picture.mulindya.com/Mahalanobis-distance-pic2.png)\n\n\n\n*其中Σ是多维随机变量的协方差矩阵，μ为样本均值，如果协方差矩阵是单位向量，也就是各维度独立同分布，马氏距离就变成了欧氏距离。*\n\n## 马氏距离实际意义\n\n那么马氏距离就能能干什么？它比欧氏距离好在哪里？举几个栗子\n\n**欧式距离近就一定相似？**\n\n先举个比较常用的例子，身高和体重，这两个变量拥有不同的单位标准，也就是有不同的scale。比如身高用毫米计算，而体重用千克计算，显然差10mm的身高与差10kg的体重是完全不同的。但在普通的欧氏距离中，这将会算作相同的差距。\n\n**归一化后欧氏距离近就一定相似？**\n\n当然我们可以先做归一化来消除这种维度间scale不同的问题，但是样本分布也会影响分类\n\n举个一维的栗子，现在有两个类别，统一单位，第一个类别均值为0，方差为0.1，第二个类别均值为5，方差为5。那么一个值为2的点属于第一类的概率大还是第二类的概率大？距离上说应该是第一类，但是直觉上显然是第二类，因为第一类不太可能到达2这个位置。\n\n所以，在一个方差较小的维度下很小的差别就有可能成为离群点。就像下图一样，A与B相对于原点的距离是相同的。但是由于样本总体沿着横轴分布，所以B点更有可能是这个样本中的点，而A则更有可能是离群点。\n\n![](https://picture.mulindya.com/Mahalanobis-distance-pic3.png)\n\n\n\n**算上维度的方差就够了？**\n\n还有一个问题——如果维度间不独立同分布，样本点一定与欧氏距离近的样本点同类的概率更大吗？\n\n\n\n![](https://picture.mulindya.com/Mahalanobis-distance-pic4.png)\n\n\n\n可以看到样本基本服从f(x) = x的线性分布，A与B相对于原点的距离依旧相等，显然A更像是一个离群点\n\n即使数据已经经过了标准化，也不会改变AB与原点间距离大小的相互关系。所以要本质上解决这个问题，就要针对[主成分分析](https://link.zhihu.com/?target=https%3A//www.ph0en1x.space/2018/03/06/PCA/)中的`主成分`来进行标准化。\n\n## 马氏距离的几何意义\n\n上面搞懂了，马氏距离就好理解了，<u>只需要将变量`按照主成分进行旋转`，让维度间相互**独立**，然后进行`标准化`</u>，让维度**同分布**就可以了。\n\n由主成分分析可知，由于主成分就是特征向量方向，每个方向的方差就是对应的特征值，所以只需要按照特征向量的方向旋转，然后缩放特征值倍就可以了，可以得到以下的结果：\n\n\n\n![](https://picture.mulindya.com/Mahalanobis-distance-pic5.png)\n\n\n\n离群点就被成功分离，这时候的欧式距离就是马氏距离。\n\n## 马氏距离的推导\n\n首先要对数据点进行*旋转*，旋转至主成分，维度间线性无关，假设新的坐标为\n\n![](https://picture.mulindya.com/Mahalanobis-distance-pic6.png)\n\n\n\n又变换后*维度间线性无关且每个维度自己的方差为特征值*，所以满足：\n\n\n\n![](https://picture.mulindya.com/Mahalanobis-distance-pic7.png)\n\n\n\n马氏距离是旋转变换缩放之后的欧式距离，所以马氏距离的计算公式为：\n\n![](https://picture.mulindya.com/Mahalanobis-distance-pic8.png)\n\n这就是之前提到的马氏距离的公式\n\n## 马氏距离的问题\n\n- 协方差矩阵必须满秩\n\n里面有求逆矩阵的过程，不满秩不行，要求数据要有原维度个特征值，如果没有可以考虑先进行PCA，这种情况下PCA不会损失信息\n\n- 不能处理非线性流形(manifold)上的问题\n\n只对线性空间有效，如果要处理流形，只能在局部定义，可以用来建立KNN图\n\n> 参考：\n>\n> https://zhuanlan.zhihu.com/p/46626607\n","slug":"math/Mahalanobis-distance","published":1,"updated":"2021-08-19T08:24:43.505Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxodd003dugx48zhh95rc","content":"<blockquote>\n<p>马氏距离(Mahalanobis Distance)是度量学习中一种常用的距离指标，同欧氏距离、曼哈顿距离、汉明距离等一样被用作评定数据之间的相似度指标。但却可以应对高维线性分布的数据中各维度间非独立同分布的问题。</p>\n</blockquote>\n<p><em>使用马氏距离，对高维非独立分布的数据进行距离度量。</em></p>\n<p><strong>那我们为什么要用马氏距离呢？</strong><br>\n马氏距离有很多<strong>优点：</strong> <strong>马氏距离不受量纲的影响</strong>，两点之间的马氏距离与原始数据的测量单位无关；由标准化数据和中心化数据(即原始数据与均值之差）计算出的二点之间的马氏距离相同。<strong>马氏距离还可以排除变量之间的相关性的干扰</strong>。</p>\n<h2 id=\"什么是马氏距离\">什么是马氏距离</h2>\n<p>马氏距离(Mahalanobis Distance)是一种距离的度量，可以看作是欧氏距离的一种修正，修正了欧式距离中各个维度尺度不一致且相关的问题。</p>\n<p>单个数据点的马氏距离</p>\n<p><img src=\"https://picture.mulindya.com/Mahalanobis-distance-pic1.png\" alt=\"\"></p>\n<p>数据点x, y之间的马氏距离</p>\n<p><img src=\"https://picture.mulindya.com/Mahalanobis-distance-pic2.png\" alt=\"\"></p>\n<p><em>其中Σ是多维随机变量的协方差矩阵，μ为样本均值，如果协方差矩阵是单位向量，也就是各维度独立同分布，马氏距离就变成了欧氏距离。</em></p>\n<h2 id=\"马氏距离实际意义\">马氏距离实际意义</h2>\n<p>那么马氏距离就能能干什么？它比欧氏距离好在哪里？举几个栗子</p>\n<p><strong>欧式距离近就一定相似？</strong></p>\n<p>先举个比较常用的例子，身高和体重，这两个变量拥有不同的单位标准，也就是有不同的scale。比如身高用毫米计算，而体重用千克计算，显然差10mm的身高与差10kg的体重是完全不同的。但在普通的欧氏距离中，这将会算作相同的差距。</p>\n<p><strong>归一化后欧氏距离近就一定相似？</strong></p>\n<p>当然我们可以先做归一化来消除这种维度间scale不同的问题，但是样本分布也会影响分类</p>\n<p>举个一维的栗子，现在有两个类别，统一单位，第一个类别均值为0，方差为0.1，第二个类别均值为5，方差为5。那么一个值为2的点属于第一类的概率大还是第二类的概率大？距离上说应该是第一类，但是直觉上显然是第二类，因为第一类不太可能到达2这个位置。</p>\n<p>所以，在一个方差较小的维度下很小的差别就有可能成为离群点。就像下图一样，A与B相对于原点的距离是相同的。但是由于样本总体沿着横轴分布，所以B点更有可能是这个样本中的点，而A则更有可能是离群点。</p>\n<p><img src=\"https://picture.mulindya.com/Mahalanobis-distance-pic3.png\" alt=\"\"></p>\n<p><strong>算上维度的方差就够了？</strong></p>\n<p>还有一个问题——如果维度间不独立同分布，样本点一定与欧氏距离近的样本点同类的概率更大吗？</p>\n<p><img src=\"https://picture.mulindya.com/Mahalanobis-distance-pic4.png\" alt=\"\"></p>\n<p>可以看到样本基本服从f(x) = x的线性分布，A与B相对于原点的距离依旧相等，显然A更像是一个离群点</p>\n<p>即使数据已经经过了标准化，也不会改变AB与原点间距离大小的相互关系。所以要本质上解决这个问题，就要针对<a href=\"https://link.zhihu.com/?target=https%3A//www.ph0en1x.space/2018/03/06/PCA/\">主成分分析</a>中的<code>主成分</code>来进行标准化。</p>\n<h2 id=\"马氏距离的几何意义\">马氏距离的几何意义</h2>\n<p>上面搞懂了，马氏距离就好理解了，<u>只需要将变量<code>按照主成分进行旋转</code>，让维度间相互<strong>独立</strong>，然后进行<code>标准化</code></u>，让维度<strong>同分布</strong>就可以了。</p>\n<p>由主成分分析可知，由于主成分就是特征向量方向，每个方向的方差就是对应的特征值，所以只需要按照特征向量的方向旋转，然后缩放特征值倍就可以了，可以得到以下的结果：</p>\n<p><img src=\"https://picture.mulindya.com/Mahalanobis-distance-pic5.png\" alt=\"\"></p>\n<p>离群点就被成功分离，这时候的欧式距离就是马氏距离。</p>\n<h2 id=\"马氏距离的推导\">马氏距离的推导</h2>\n<p>首先要对数据点进行<em>旋转</em>，旋转至主成分，维度间线性无关，假设新的坐标为</p>\n<p><img src=\"https://picture.mulindya.com/Mahalanobis-distance-pic6.png\" alt=\"\"></p>\n<p>又变换后<em>维度间线性无关且每个维度自己的方差为特征值</em>，所以满足：</p>\n<p><img src=\"https://picture.mulindya.com/Mahalanobis-distance-pic7.png\" alt=\"\"></p>\n<p>马氏距离是旋转变换缩放之后的欧式距离，所以马氏距离的计算公式为：</p>\n<p><img src=\"https://picture.mulindya.com/Mahalanobis-distance-pic8.png\" alt=\"\"></p>\n<p>这就是之前提到的马氏距离的公式</p>\n<h2 id=\"马氏距离的问题\">马氏距离的问题</h2>\n<ul>\n<li>协方差矩阵必须满秩</li>\n</ul>\n<p>里面有求逆矩阵的过程，不满秩不行，要求数据要有原维度个特征值，如果没有可以考虑先进行PCA，这种情况下PCA不会损失信息</p>\n<ul>\n<li>不能处理非线性流形(manifold)上的问题</li>\n</ul>\n<p>只对线性空间有效，如果要处理流形，只能在局部定义，可以用来建立KNN图</p>\n<blockquote>\n<p>参考：</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/46626607\">https://zhuanlan.zhihu.com/p/46626607</a></p>\n</blockquote>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>马氏距离(Mahalanobis Distance)是度量学习中一种常用的距离指标，同欧氏距离、曼哈顿距离、汉明距离等一样被用作评定数据之间的相似度指标。但却可以应对高维线性分布的数据中各维度间非独立同分布的问题。</p>\n</blockquote>\n<p><em>使用马氏距离，对高维非独立分布的数据进行距离度量。</em></p>\n<p><strong>那我们为什么要用马氏距离呢？</strong><br>\n马氏距离有很多<strong>优点：</strong> <strong>马氏距离不受量纲的影响</strong>，两点之间的马氏距离与原始数据的测量单位无关；由标准化数据和中心化数据(即原始数据与均值之差）计算出的二点之间的马氏距离相同。<strong>马氏距离还可以排除变量之间的相关性的干扰</strong>。</p>\n<h2 id=\"什么是马氏距离\">什么是马氏距离</h2>\n<p>马氏距离(Mahalanobis Distance)是一种距离的度量，可以看作是欧氏距离的一种修正，修正了欧式距离中各个维度尺度不一致且相关的问题。</p>\n<p>单个数据点的马氏距离</p>\n<p><img src=\"https://picture.mulindya.com/Mahalanobis-distance-pic1.png\" alt=\"\"></p>\n<p>数据点x, y之间的马氏距离</p>\n<p><img src=\"https://picture.mulindya.com/Mahalanobis-distance-pic2.png\" alt=\"\"></p>\n<p><em>其中Σ是多维随机变量的协方差矩阵，μ为样本均值，如果协方差矩阵是单位向量，也就是各维度独立同分布，马氏距离就变成了欧氏距离。</em></p>\n<h2 id=\"马氏距离实际意义\">马氏距离实际意义</h2>\n<p>那么马氏距离就能能干什么？它比欧氏距离好在哪里？举几个栗子</p>\n<p><strong>欧式距离近就一定相似？</strong></p>\n<p>先举个比较常用的例子，身高和体重，这两个变量拥有不同的单位标准，也就是有不同的scale。比如身高用毫米计算，而体重用千克计算，显然差10mm的身高与差10kg的体重是完全不同的。但在普通的欧氏距离中，这将会算作相同的差距。</p>\n<p><strong>归一化后欧氏距离近就一定相似？</strong></p>\n<p>当然我们可以先做归一化来消除这种维度间scale不同的问题，但是样本分布也会影响分类</p>\n<p>举个一维的栗子，现在有两个类别，统一单位，第一个类别均值为0，方差为0.1，第二个类别均值为5，方差为5。那么一个值为2的点属于第一类的概率大还是第二类的概率大？距离上说应该是第一类，但是直觉上显然是第二类，因为第一类不太可能到达2这个位置。</p>\n<p>所以，在一个方差较小的维度下很小的差别就有可能成为离群点。就像下图一样，A与B相对于原点的距离是相同的。但是由于样本总体沿着横轴分布，所以B点更有可能是这个样本中的点，而A则更有可能是离群点。</p>\n<p><img src=\"https://picture.mulindya.com/Mahalanobis-distance-pic3.png\" alt=\"\"></p>\n<p><strong>算上维度的方差就够了？</strong></p>\n<p>还有一个问题——如果维度间不独立同分布，样本点一定与欧氏距离近的样本点同类的概率更大吗？</p>\n<p><img src=\"https://picture.mulindya.com/Mahalanobis-distance-pic4.png\" alt=\"\"></p>\n<p>可以看到样本基本服从f(x) = x的线性分布，A与B相对于原点的距离依旧相等，显然A更像是一个离群点</p>\n<p>即使数据已经经过了标准化，也不会改变AB与原点间距离大小的相互关系。所以要本质上解决这个问题，就要针对<a href=\"https://link.zhihu.com/?target=https%3A//www.ph0en1x.space/2018/03/06/PCA/\">主成分分析</a>中的<code>主成分</code>来进行标准化。</p>\n<h2 id=\"马氏距离的几何意义\">马氏距离的几何意义</h2>\n<p>上面搞懂了，马氏距离就好理解了，<u>只需要将变量<code>按照主成分进行旋转</code>，让维度间相互<strong>独立</strong>，然后进行<code>标准化</code></u>，让维度<strong>同分布</strong>就可以了。</p>\n<p>由主成分分析可知，由于主成分就是特征向量方向，每个方向的方差就是对应的特征值，所以只需要按照特征向量的方向旋转，然后缩放特征值倍就可以了，可以得到以下的结果：</p>\n<p><img src=\"https://picture.mulindya.com/Mahalanobis-distance-pic5.png\" alt=\"\"></p>\n<p>离群点就被成功分离，这时候的欧式距离就是马氏距离。</p>\n<h2 id=\"马氏距离的推导\">马氏距离的推导</h2>\n<p>首先要对数据点进行<em>旋转</em>，旋转至主成分，维度间线性无关，假设新的坐标为</p>\n<p><img src=\"https://picture.mulindya.com/Mahalanobis-distance-pic6.png\" alt=\"\"></p>\n<p>又变换后<em>维度间线性无关且每个维度自己的方差为特征值</em>，所以满足：</p>\n<p><img src=\"https://picture.mulindya.com/Mahalanobis-distance-pic7.png\" alt=\"\"></p>\n<p>马氏距离是旋转变换缩放之后的欧式距离，所以马氏距离的计算公式为：</p>\n<p><img src=\"https://picture.mulindya.com/Mahalanobis-distance-pic8.png\" alt=\"\"></p>\n<p>这就是之前提到的马氏距离的公式</p>\n<h2 id=\"马氏距离的问题\">马氏距离的问题</h2>\n<ul>\n<li>协方差矩阵必须满秩</li>\n</ul>\n<p>里面有求逆矩阵的过程，不满秩不行，要求数据要有原维度个特征值，如果没有可以考虑先进行PCA，这种情况下PCA不会损失信息</p>\n<ul>\n<li>不能处理非线性流形(manifold)上的问题</li>\n</ul>\n<p>只对线性空间有效，如果要处理流形，只能在局部定义，可以用来建立KNN图</p>\n<blockquote>\n<p>参考：</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/46626607\">https://zhuanlan.zhihu.com/p/46626607</a></p>\n</blockquote>\n"},{"title":"直观理解协方差矩阵","date":"2021-08-05T03:26:21.000Z","math":true,"_content":"\n> 原文出自 https://zhuanlan.zhihu.com/p/349802953\n\n## 1 概率论中的定义\n\n### 随机变量：\n\n随机变量(Random Variable) X 是一个映射，把随机试验的结果与实数建立起了一一对应的关系。而期望与方差是随机变量的两个重要的数字特征。\n\n### 数学期望：\n\n在概率论和统计学中，数学期望(mean)(或均值，亦简称期望(Expectation, or expected value))是试验中每次可能结果的概率乘以其结果的总和，是最基本的数学特征之一。它反映随机变量平均取值的大小。 期望值是该变量输出值的平均数。期望值并不一定包含于变量的输出值集合里。\n\n大数定律规定，随着重复次数接近无穷大，数值的算术平均值几乎肯定地收敛于期望值。\n\n### 方差：\n\n方差(Variance)是在概率论和统计方差衡量随机变量或一组数据时离散程度的度量。概率论中方差用来度量随机变量和其数学期望(即均值)之间的偏离程度。统计中的方差(样本方差)是每个样本值与全体样本值的平均数之差的平方值的平均数。\n\n设$X$为随机变量， 如果$\\mathrm{E}[X]$，则随机变量$X$的方差为：\n$$\n\\mu=\\mathrm{E}[X]\n$$\n\n方差也记为 $\\sigma_{X}^{2}$。\n\n样本方差计算公式：\n\n$$\nS^{2}=\\Sigma\\left(X-\\overline{X}\\right)^{2}/\\left(n-1\\right)\n$$\n\n其中，$S^{2}$为样本方差，$X$ 为变量，$\\overline{X}$为样本均值，$n$ 为样本例数。如果要了解为什么要除以$n-1$，请看[这篇文章](https://link.zhihu.com/?target=https%3A//www.visiondummy.com/2014/03/divide-variance-n-1/)。\n\n### 标准差：\n\n标准差(Standard Deviation)是离均差平方的算术平均数(即：方差)的算术平方根，用$\\sigma$表示。标准差也被称为标准偏差，或者实验标准差，在概率统计中最常使用作为统计分布程度上的测量依据。 见下图：\n\n![](https://picture.mulindya.com/covariance-matrix-pic1.jpg)\n\n标准差是方差的算术平方根。标准差能反映一个数据集的离散程度。平均数相同的两组数据，标准差未必相同。\n\n### 协方差：\n\n**协方差(Covariance)在概率论和统计学中用于衡量两个变量的总体误差。而方差是协方差的一种特殊情况，即当两个变量是相同的情况。**\n\n期望值分别为$ E[X]$与$[Y]$的两个实随机变量$X$与$Y$之间的协方差 $\\mathrm{Cov}(X,Y)$ 定义为：\n\n{% raw %}\n$$\n\\begin{aligned}\n\\mathrm{Cov}(X,Y)&=\\mathrm{E}\\left[\\left(X\\mathrm{E}\\left[X\\right]\\right)\\left(Y-\\mathrm{E}\\left[Y\\right]\\right)\\right]  \n\\\\&=\\mathrm{E}\\left[XY\\right]-2\\mathrm{E}\\left[Y\\right]\\mathrm{E}\\left[X\\right]+\\mathrm{E}\\left[X\\right]\\mathrm{E}\\left[Y\\right]\n\\\\&=\\mathrm{E}\\left[XY\\right]-\\mathrm{E}\\left[X\\right]\\mathrm{E}\\left[Y\\right] \n\\\\&=\\mathrm{E}\\left[XY\\right]-\\mathrm{E}\\left[X\\right]\\mathrm{E}\\left[Y\\right]\n\\end{aligned}\n$$\n{% endraw %}\n\n协方差表示的是两个变量总体误差的期望。 如果两个变量的变化趋势一致，也就是说如果其中一个大于自身的期望值，另外一个也大于自身的期望值，那么两个变量之间的协方差就是正值。 如果两个变量的变化趋势相反，即其中一个大于自身的期望值，另外一个却小于自身的期望值，那么两个变量之间的协方差就是负值。\n\n如果$X$与$Y$是统计独立的，那么二者之间的协方差就是0，因为两个独立的随机变量满足$\\mathrm{E}[XY]=\\mathrm{E}[X]\\mathrm{E}[Y]$。但是，反过来并不成立。即如果$X$与$Y$的协方差为0，二者并不一定是统计独立的。\n\n**协方差为0的两个随机变量称为是不相关的。**\n\n### 协方差矩阵：\n\n在统计学与概率论中，协方差矩阵(Covariance matrix)的每个元素是各个向量元素之间的协方差，是从标量随机变量到高维度随机向量的自然推广。\n\n设$X=\\left(X_{1},X_{2},\\ldots,X_{n}\\right)^{\\mathrm{T}}$为$n$ 维随机变量，称矩阵\n\n{% raw %}\n$$\nC=\\left(\\begin{array}{cccc} c_{11} & c_{12} & \\cdots & c_{1n}\\\\ c_{21} & c_{22} & \\cdots & c_{2n}\\\\ \\vdots & \\vdots & \\ddots & \\vdots\\\\ c_{n1} & c_{n2} & \\cdots & c_{nn} \\end{array}\\right)\n$$\n{% endraw %}\n\n为 n 维随机变量x的协方差矩阵，也记为 $D\\left(X\\right)$ ，其中\n$$\nc_{ij}=\\mathrm{Cov}(X_{i},X_{j}),\\quad i,j=1,2,\\ldots,n\n$$\n为X的分量$X_{i}$和$X_{j}$的协方差。*并且对角线上的元素为各个随机变量的方差：*\n\n$$\nc_{ii}=\\mathrm{Cov}(X_{i},X_{i}),\\quad i=1,2,\\ldots,n\n$$\n\n协方差矩阵是对称半正定矩阵。协方差矩阵的对称性，可从定义得知。对于半正定特性，证明如下：\n\n现给定任意一个非零向量$\\boldsymbol{x}$，则\n\n{% raw %}\n$$\n\\begin{aligned}\n\\boldsymbol{x}^{\\mathrm{T}}C\\boldsymbol{x}\t&=\\boldsymbol{x}^{\\mathrm{T}}\\mathrm{E}\\left[\\left(X-\\mu\\right)\\left(X-\\mu\\right)^{\\mathrm{T}}\\right]\\boldsymbol{x} \t\n\\\\&=\\mathrm{E}\\left[\\boldsymbol{x}^{\\mathrm{T}}\\left(X-\\mu\\right)\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right] \t\\\\&=\\mathrm{E}\\left[\\left(\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right)^{\\mathrm{T}}\\left(\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right)\\right] \t\n\\\\&=\\mathrm{E}\\left(\\left\\Vert \\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right\\Vert ^{2}\\right) \t\n\\\\&=\\sigma_{X}^{2}\n\\end{aligned}\n$$\n{% endraw %}\n\n其中，\n$$\n\\sigma_{X}=\\left(X-\\mu \\right)^{\\mathrm{T}}\\boldsymbol{x}\n$$\n由于 $\\sigma_{X}^{2}\\geq0$，因此$\\boldsymbol{x}^{\\mathrm{T}}C\\boldsymbol{x}\\geq0$，因此协方差矩阵$C$ 是半正定矩阵。\n\n","source":"_posts/math/covariance-matrix.md","raw":"---\ntitle: 直观理解协方差矩阵\ndate: 2021-08-05 11:26:21\ntags: [math,概率论]\ncategories: [math,概率论]\nmath: true\n---\n\n> 原文出自 https://zhuanlan.zhihu.com/p/349802953\n\n## 1 概率论中的定义\n\n### 随机变量：\n\n随机变量(Random Variable) X 是一个映射，把随机试验的结果与实数建立起了一一对应的关系。而期望与方差是随机变量的两个重要的数字特征。\n\n### 数学期望：\n\n在概率论和统计学中，数学期望(mean)(或均值，亦简称期望(Expectation, or expected value))是试验中每次可能结果的概率乘以其结果的总和，是最基本的数学特征之一。它反映随机变量平均取值的大小。 期望值是该变量输出值的平均数。期望值并不一定包含于变量的输出值集合里。\n\n大数定律规定，随着重复次数接近无穷大，数值的算术平均值几乎肯定地收敛于期望值。\n\n### 方差：\n\n方差(Variance)是在概率论和统计方差衡量随机变量或一组数据时离散程度的度量。概率论中方差用来度量随机变量和其数学期望(即均值)之间的偏离程度。统计中的方差(样本方差)是每个样本值与全体样本值的平均数之差的平方值的平均数。\n\n设$X$为随机变量， 如果$\\mathrm{E}[X]$，则随机变量$X$的方差为：\n$$\n\\mu=\\mathrm{E}[X]\n$$\n\n方差也记为 $\\sigma_{X}^{2}$。\n\n样本方差计算公式：\n\n$$\nS^{2}=\\Sigma\\left(X-\\overline{X}\\right)^{2}/\\left(n-1\\right)\n$$\n\n其中，$S^{2}$为样本方差，$X$ 为变量，$\\overline{X}$为样本均值，$n$ 为样本例数。如果要了解为什么要除以$n-1$，请看[这篇文章](https://link.zhihu.com/?target=https%3A//www.visiondummy.com/2014/03/divide-variance-n-1/)。\n\n### 标准差：\n\n标准差(Standard Deviation)是离均差平方的算术平均数(即：方差)的算术平方根，用$\\sigma$表示。标准差也被称为标准偏差，或者实验标准差，在概率统计中最常使用作为统计分布程度上的测量依据。 见下图：\n\n![](https://picture.mulindya.com/covariance-matrix-pic1.jpg)\n\n标准差是方差的算术平方根。标准差能反映一个数据集的离散程度。平均数相同的两组数据，标准差未必相同。\n\n### 协方差：\n\n**协方差(Covariance)在概率论和统计学中用于衡量两个变量的总体误差。而方差是协方差的一种特殊情况，即当两个变量是相同的情况。**\n\n期望值分别为$ E[X]$与$[Y]$的两个实随机变量$X$与$Y$之间的协方差 $\\mathrm{Cov}(X,Y)$ 定义为：\n\n{% raw %}\n$$\n\\begin{aligned}\n\\mathrm{Cov}(X,Y)&=\\mathrm{E}\\left[\\left(X\\mathrm{E}\\left[X\\right]\\right)\\left(Y-\\mathrm{E}\\left[Y\\right]\\right)\\right]  \n\\\\&=\\mathrm{E}\\left[XY\\right]-2\\mathrm{E}\\left[Y\\right]\\mathrm{E}\\left[X\\right]+\\mathrm{E}\\left[X\\right]\\mathrm{E}\\left[Y\\right]\n\\\\&=\\mathrm{E}\\left[XY\\right]-\\mathrm{E}\\left[X\\right]\\mathrm{E}\\left[Y\\right] \n\\\\&=\\mathrm{E}\\left[XY\\right]-\\mathrm{E}\\left[X\\right]\\mathrm{E}\\left[Y\\right]\n\\end{aligned}\n$$\n{% endraw %}\n\n协方差表示的是两个变量总体误差的期望。 如果两个变量的变化趋势一致，也就是说如果其中一个大于自身的期望值，另外一个也大于自身的期望值，那么两个变量之间的协方差就是正值。 如果两个变量的变化趋势相反，即其中一个大于自身的期望值，另外一个却小于自身的期望值，那么两个变量之间的协方差就是负值。\n\n如果$X$与$Y$是统计独立的，那么二者之间的协方差就是0，因为两个独立的随机变量满足$\\mathrm{E}[XY]=\\mathrm{E}[X]\\mathrm{E}[Y]$。但是，反过来并不成立。即如果$X$与$Y$的协方差为0，二者并不一定是统计独立的。\n\n**协方差为0的两个随机变量称为是不相关的。**\n\n### 协方差矩阵：\n\n在统计学与概率论中，协方差矩阵(Covariance matrix)的每个元素是各个向量元素之间的协方差，是从标量随机变量到高维度随机向量的自然推广。\n\n设$X=\\left(X_{1},X_{2},\\ldots,X_{n}\\right)^{\\mathrm{T}}$为$n$ 维随机变量，称矩阵\n\n{% raw %}\n$$\nC=\\left(\\begin{array}{cccc} c_{11} & c_{12} & \\cdots & c_{1n}\\\\ c_{21} & c_{22} & \\cdots & c_{2n}\\\\ \\vdots & \\vdots & \\ddots & \\vdots\\\\ c_{n1} & c_{n2} & \\cdots & c_{nn} \\end{array}\\right)\n$$\n{% endraw %}\n\n为 n 维随机变量x的协方差矩阵，也记为 $D\\left(X\\right)$ ，其中\n$$\nc_{ij}=\\mathrm{Cov}(X_{i},X_{j}),\\quad i,j=1,2,\\ldots,n\n$$\n为X的分量$X_{i}$和$X_{j}$的协方差。*并且对角线上的元素为各个随机变量的方差：*\n\n$$\nc_{ii}=\\mathrm{Cov}(X_{i},X_{i}),\\quad i=1,2,\\ldots,n\n$$\n\n协方差矩阵是对称半正定矩阵。协方差矩阵的对称性，可从定义得知。对于半正定特性，证明如下：\n\n现给定任意一个非零向量$\\boldsymbol{x}$，则\n\n{% raw %}\n$$\n\\begin{aligned}\n\\boldsymbol{x}^{\\mathrm{T}}C\\boldsymbol{x}\t&=\\boldsymbol{x}^{\\mathrm{T}}\\mathrm{E}\\left[\\left(X-\\mu\\right)\\left(X-\\mu\\right)^{\\mathrm{T}}\\right]\\boldsymbol{x} \t\n\\\\&=\\mathrm{E}\\left[\\boldsymbol{x}^{\\mathrm{T}}\\left(X-\\mu\\right)\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right] \t\\\\&=\\mathrm{E}\\left[\\left(\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right)^{\\mathrm{T}}\\left(\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right)\\right] \t\n\\\\&=\\mathrm{E}\\left(\\left\\Vert \\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right\\Vert ^{2}\\right) \t\n\\\\&=\\sigma_{X}^{2}\n\\end{aligned}\n$$\n{% endraw %}\n\n其中，\n$$\n\\sigma_{X}=\\left(X-\\mu \\right)^{\\mathrm{T}}\\boldsymbol{x}\n$$\n由于 $\\sigma_{X}^{2}\\geq0$，因此$\\boldsymbol{x}^{\\mathrm{T}}C\\boldsymbol{x}\\geq0$，因此协方差矩阵$C$ 是半正定矩阵。\n\n","slug":"math/covariance-matrix","published":1,"updated":"2021-08-19T08:37:30.444Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxodf003gugx4gwc97ddn","content":"<blockquote>\n<p>原文出自 <a href=\"https://zhuanlan.zhihu.com/p/349802953\">https://zhuanlan.zhihu.com/p/349802953</a></p>\n</blockquote>\n<h2 id=\"1-概率论中的定义\">1 概率论中的定义</h2>\n<h3 id=\"随机变量：\">随机变量：</h3>\n<p>随机变量(Random Variable) X 是一个映射，把随机试验的结果与实数建立起了一一对应的关系。而期望与方差是随机变量的两个重要的数字特征。</p>\n<h3 id=\"数学期望：\">数学期望：</h3>\n<p>在概率论和统计学中，数学期望(mean)(或均值，亦简称期望(Expectation, or expected value))是试验中每次可能结果的概率乘以其结果的总和，是最基本的数学特征之一。它反映随机变量平均取值的大小。 期望值是该变量输出值的平均数。期望值并不一定包含于变量的输出值集合里。</p>\n<p>大数定律规定，随着重复次数接近无穷大，数值的算术平均值几乎肯定地收敛于期望值。</p>\n<h3 id=\"方差：\">方差：</h3>\n<p>方差(Variance)是在概率论和统计方差衡量随机变量或一组数据时离散程度的度量。概率论中方差用来度量随机变量和其数学期望(即均值)之间的偏离程度。统计中的方差(样本方差)是每个样本值与全体样本值的平均数之差的平方值的平均数。</p>\n<p>设$X$为随机变量， 如果$\\mathrm{E}[X]$，则随机变量$X$的方差为：<br>\n$$<br>\n\\mu=\\mathrm{E}[X]<br>\n$$</p>\n<p>方差也记为 $\\sigma_{X}^{2}$。</p>\n<p>样本方差计算公式：</p>\n<p>$$<br>\nS<sup>{2}=\\Sigma\\left(X-\\overline{X}\\right)</sup>{2}/\\left(n-1\\right)<br>\n$$</p>\n<p>其中，$S^{2}$为样本方差，$X$ 为变量，$\\overline{X}$为样本均值，$n$ 为样本例数。如果要了解为什么要除以$n-1$，请看<a href=\"https://link.zhihu.com/?target=https%3A//www.visiondummy.com/2014/03/divide-variance-n-1/\">这篇文章</a>。</p>\n<h3 id=\"标准差：\">标准差：</h3>\n<p>标准差(Standard Deviation)是离均差平方的算术平均数(即：方差)的算术平方根，用$\\sigma$表示。标准差也被称为标准偏差，或者实验标准差，在概率统计中最常使用作为统计分布程度上的测量依据。 见下图：</p>\n<p><img src=\"https://picture.mulindya.com/covariance-matrix-pic1.jpg\" alt=\"\"></p>\n<p>标准差是方差的算术平方根。标准差能反映一个数据集的离散程度。平均数相同的两组数据，标准差未必相同。</p>\n<h3 id=\"协方差：\">协方差：</h3>\n<p><strong>协方差(Covariance)在概率论和统计学中用于衡量两个变量的总体误差。而方差是协方差的一种特殊情况，即当两个变量是相同的情况。</strong></p>\n<p>期望值分别为$ E[X]$与$[Y]$的两个实随机变量$X$与$Y$之间的协方差 $\\mathrm{Cov}(X,Y)$ 定义为：</p>\n\n$$\n\\begin{aligned}\n\\mathrm{Cov}(X,Y)&amp;=\\mathrm{E}\\left[\\left(X\\mathrm{E}\\left[X\\right]\\right)\\left(Y-\\mathrm{E}\\left[Y\\right]\\right)\\right]  \n\\\\&amp;=\\mathrm{E}\\left[XY\\right]-2\\mathrm{E}\\left[Y\\right]\\mathrm{E}\\left[X\\right]+\\mathrm{E}\\left[X\\right]\\mathrm{E}\\left[Y\\right]\n\\\\&amp;=\\mathrm{E}\\left[XY\\right]-\\mathrm{E}\\left[X\\right]\\mathrm{E}\\left[Y\\right] \n\\\\&amp;=\\mathrm{E}\\left[XY\\right]-\\mathrm{E}\\left[X\\right]\\mathrm{E}\\left[Y\\right]\n\\end{aligned}\n$$\n\n<p>协方差表示的是两个变量总体误差的期望。 如果两个变量的变化趋势一致，也就是说如果其中一个大于自身的期望值，另外一个也大于自身的期望值，那么两个变量之间的协方差就是正值。 如果两个变量的变化趋势相反，即其中一个大于自身的期望值，另外一个却小于自身的期望值，那么两个变量之间的协方差就是负值。</p>\n<p>如果$X$与$Y$是统计独立的，那么二者之间的协方差就是0，因为两个独立的随机变量满足$\\mathrm{E}[XY]=\\mathrm{E}[X]\\mathrm{E}[Y]$。但是，反过来并不成立。即如果$X$与$Y$的协方差为0，二者并不一定是统计独立的。</p>\n<p><strong>协方差为0的两个随机变量称为是不相关的。</strong></p>\n<h3 id=\"协方差矩阵：\">协方差矩阵：</h3>\n<p>在统计学与概率论中，协方差矩阵(Covariance matrix)的每个元素是各个向量元素之间的协方差，是从标量随机变量到高维度随机向量的自然推广。</p>\n<p>设$X=\\left(X_{1},X_{2},\\ldots,X_{n}\\right)^{\\mathrm{T}}$为$n$ 维随机变量，称矩阵</p>\n\n$$\nC=\\left(\\begin{array}{cccc} c_{11} &amp; c_{12} &amp; \\cdots &amp; c_{1n}\\\\ c_{21} &amp; c_{22} &amp; \\cdots &amp; c_{2n}\\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots\\\\ c_{n1} &amp; c_{n2} &amp; \\cdots &amp; c_{nn} \\end{array}\\right)\n$$\n\n<p>为 n 维随机变量x的协方差矩阵，也记为 $D\\left(X\\right)$ ，其中<br>\n$$<br>\nc_{ij}=\\mathrm{Cov}(X_{i},X_{j}),\\quad i,j=1,2,\\ldots,n<br>\n$$<br>\n为X的分量$X_{i}$和$X_{j}$的协方差。<em>并且对角线上的元素为各个随机变量的方差：</em></p>\n<p>$$<br>\nc_{ii}=\\mathrm{Cov}(X_{i},X_{i}),\\quad i=1,2,\\ldots,n<br>\n$$</p>\n<p>协方差矩阵是对称半正定矩阵。协方差矩阵的对称性，可从定义得知。对于半正定特性，证明如下：</p>\n<p>现给定任意一个非零向量$\\boldsymbol{x}$，则</p>\n\n$$\n\\begin{aligned}\n\\boldsymbol{x}^{\\mathrm{T}}C\\boldsymbol{x}\t&amp;=\\boldsymbol{x}^{\\mathrm{T}}\\mathrm{E}\\left[\\left(X-\\mu\\right)\\left(X-\\mu\\right)^{\\mathrm{T}}\\right]\\boldsymbol{x} \t\n\\\\&amp;=\\mathrm{E}\\left[\\boldsymbol{x}^{\\mathrm{T}}\\left(X-\\mu\\right)\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right] \t\\\\&amp;=\\mathrm{E}\\left[\\left(\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right)^{\\mathrm{T}}\\left(\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right)\\right] \t\n\\\\&amp;=\\mathrm{E}\\left(\\left\\Vert \\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right\\Vert ^{2}\\right) \t\n\\\\&amp;=\\sigma_{X}^{2}\n\\end{aligned}\n$$\n\n<p>其中，<br>\n$$<br>\n\\sigma_{X}=\\left(X-\\mu \\right)^{\\mathrm{T}}\\boldsymbol{x}<br>\n$$<br>\n由于 $\\sigma_{X}<sup>{2}\\geq0$，因此$\\boldsymbol{x}</sup>{\\mathrm{T}}C\\boldsymbol{x}\\geq0$，因此协方差矩阵$C$ 是半正定矩阵。</p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>原文出自 <a href=\"https://zhuanlan.zhihu.com/p/349802953\">https://zhuanlan.zhihu.com/p/349802953</a></p>\n</blockquote>\n<h2 id=\"1-概率论中的定义\">1 概率论中的定义</h2>\n<h3 id=\"随机变量：\">随机变量：</h3>\n<p>随机变量(Random Variable) X 是一个映射，把随机试验的结果与实数建立起了一一对应的关系。而期望与方差是随机变量的两个重要的数字特征。</p>\n<h3 id=\"数学期望：\">数学期望：</h3>\n<p>在概率论和统计学中，数学期望(mean)(或均值，亦简称期望(Expectation, or expected value))是试验中每次可能结果的概率乘以其结果的总和，是最基本的数学特征之一。它反映随机变量平均取值的大小。 期望值是该变量输出值的平均数。期望值并不一定包含于变量的输出值集合里。</p>\n<p>大数定律规定，随着重复次数接近无穷大，数值的算术平均值几乎肯定地收敛于期望值。</p>\n<h3 id=\"方差：\">方差：</h3>\n<p>方差(Variance)是在概率论和统计方差衡量随机变量或一组数据时离散程度的度量。概率论中方差用来度量随机变量和其数学期望(即均值)之间的偏离程度。统计中的方差(样本方差)是每个样本值与全体样本值的平均数之差的平方值的平均数。</p>\n<p>设$X$为随机变量， 如果$\\mathrm{E}[X]$，则随机变量$X$的方差为：<br>\n$$<br>\n\\mu=\\mathrm{E}[X]<br>\n$$</p>\n<p>方差也记为 $\\sigma_{X}^{2}$。</p>\n<p>样本方差计算公式：</p>\n<p>$$<br>\nS<sup>{2}=\\Sigma\\left(X-\\overline{X}\\right)</sup>{2}/\\left(n-1\\right)<br>\n$$</p>\n<p>其中，$S^{2}$为样本方差，$X$ 为变量，$\\overline{X}$为样本均值，$n$ 为样本例数。如果要了解为什么要除以$n-1$，请看<a href=\"https://link.zhihu.com/?target=https%3A//www.visiondummy.com/2014/03/divide-variance-n-1/\">这篇文章</a>。</p>\n<h3 id=\"标准差：\">标准差：</h3>\n<p>标准差(Standard Deviation)是离均差平方的算术平均数(即：方差)的算术平方根，用$\\sigma$表示。标准差也被称为标准偏差，或者实验标准差，在概率统计中最常使用作为统计分布程度上的测量依据。 见下图：</p>\n<p><img src=\"https://picture.mulindya.com/covariance-matrix-pic1.jpg\" alt=\"\"></p>\n<p>标准差是方差的算术平方根。标准差能反映一个数据集的离散程度。平均数相同的两组数据，标准差未必相同。</p>\n<h3 id=\"协方差：\">协方差：</h3>\n<p><strong>协方差(Covariance)在概率论和统计学中用于衡量两个变量的总体误差。而方差是协方差的一种特殊情况，即当两个变量是相同的情况。</strong></p>\n<p>期望值分别为$ E[X]$与$[Y]$的两个实随机变量$X$与$Y$之间的协方差 $\\mathrm{Cov}(X,Y)$ 定义为：</p>\n\n$$\n\\begin{aligned}\n\\mathrm{Cov}(X,Y)&=\\mathrm{E}\\left[\\left(X\\mathrm{E}\\left[X\\right]\\right)\\left(Y-\\mathrm{E}\\left[Y\\right]\\right)\\right]  \n\\\\&=\\mathrm{E}\\left[XY\\right]-2\\mathrm{E}\\left[Y\\right]\\mathrm{E}\\left[X\\right]+\\mathrm{E}\\left[X\\right]\\mathrm{E}\\left[Y\\right]\n\\\\&=\\mathrm{E}\\left[XY\\right]-\\mathrm{E}\\left[X\\right]\\mathrm{E}\\left[Y\\right] \n\\\\&=\\mathrm{E}\\left[XY\\right]-\\mathrm{E}\\left[X\\right]\\mathrm{E}\\left[Y\\right]\n\\end{aligned}\n$$\n\n<p>协方差表示的是两个变量总体误差的期望。 如果两个变量的变化趋势一致，也就是说如果其中一个大于自身的期望值，另外一个也大于自身的期望值，那么两个变量之间的协方差就是正值。 如果两个变量的变化趋势相反，即其中一个大于自身的期望值，另外一个却小于自身的期望值，那么两个变量之间的协方差就是负值。</p>\n<p>如果$X$与$Y$是统计独立的，那么二者之间的协方差就是0，因为两个独立的随机变量满足$\\mathrm{E}[XY]=\\mathrm{E}[X]\\mathrm{E}[Y]$。但是，反过来并不成立。即如果$X$与$Y$的协方差为0，二者并不一定是统计独立的。</p>\n<p><strong>协方差为0的两个随机变量称为是不相关的。</strong></p>\n<h3 id=\"协方差矩阵：\">协方差矩阵：</h3>\n<p>在统计学与概率论中，协方差矩阵(Covariance matrix)的每个元素是各个向量元素之间的协方差，是从标量随机变量到高维度随机向量的自然推广。</p>\n<p>设$X=\\left(X_{1},X_{2},\\ldots,X_{n}\\right)^{\\mathrm{T}}$为$n$ 维随机变量，称矩阵</p>\n\n$$\nC=\\left(\\begin{array}{cccc} c_{11} & c_{12} & \\cdots & c_{1n}\\\\ c_{21} & c_{22} & \\cdots & c_{2n}\\\\ \\vdots & \\vdots & \\ddots & \\vdots\\\\ c_{n1} & c_{n2} & \\cdots & c_{nn} \\end{array}\\right)\n$$\n\n<p>为 n 维随机变量x的协方差矩阵，也记为 $D\\left(X\\right)$ ，其中<br>\n$$<br>\nc_{ij}=\\mathrm{Cov}(X_{i},X_{j}),\\quad i,j=1,2,\\ldots,n<br>\n$$<br>\n为X的分量$X_{i}$和$X_{j}$的协方差。<em>并且对角线上的元素为各个随机变量的方差：</em></p>\n<p>$$<br>\nc_{ii}=\\mathrm{Cov}(X_{i},X_{i}),\\quad i=1,2,\\ldots,n<br>\n$$</p>\n<p>协方差矩阵是对称半正定矩阵。协方差矩阵的对称性，可从定义得知。对于半正定特性，证明如下：</p>\n<p>现给定任意一个非零向量$\\boldsymbol{x}$，则</p>\n\n$$\n\\begin{aligned}\n\\boldsymbol{x}^{\\mathrm{T}}C\\boldsymbol{x}\t&=\\boldsymbol{x}^{\\mathrm{T}}\\mathrm{E}\\left[\\left(X-\\mu\\right)\\left(X-\\mu\\right)^{\\mathrm{T}}\\right]\\boldsymbol{x} \t\n\\\\&=\\mathrm{E}\\left[\\boldsymbol{x}^{\\mathrm{T}}\\left(X-\\mu\\right)\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right] \t\\\\&=\\mathrm{E}\\left[\\left(\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right)^{\\mathrm{T}}\\left(\\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right)\\right] \t\n\\\\&=\\mathrm{E}\\left(\\left\\Vert \\left(X-\\mu\\right)^{\\mathrm{T}}\\boldsymbol{x}\\right\\Vert ^{2}\\right) \t\n\\\\&=\\sigma_{X}^{2}\n\\end{aligned}\n$$\n\n<p>其中，<br>\n$$<br>\n\\sigma_{X}=\\left(X-\\mu \\right)^{\\mathrm{T}}\\boldsymbol{x}<br>\n$$<br>\n由于 $\\sigma_{X}<sup>{2}\\geq0$，因此$\\boldsymbol{x}</sup>{\\mathrm{T}}C\\boldsymbol{x}\\geq0$，因此协方差矩阵$C$ 是半正定矩阵。</p>\n"},{"title":"低秩逼近的思考","date":"2021-08-06T08:38:25.000Z","math":true,"_content":"\n> 阅读文章**Semi-orthogonal Embedding for Effificient Unsupervised Anomaly Segmentation**时出现一个概念--**Low-rank approximation** ，就此进行相关讨论。\n\n### 低秩（Low-Rank）\n\n如果X是一个m行n列的数值矩阵，rank(X)是X的秩，假如rank (X)远小于m和n，则我们称X是低秩矩阵。低秩矩阵每行或每列都可以用其他的行或列线性表出，可见它包含大量的冗余信息。利用这种冗余信息，可以对缺失数据进行恢复，也可以对数据进行特征提取。\n\n图像处理中，*rank可以理解为图像所包含的信息的丰富程度*，在显示生活中，一张图片中大部分成分是相似的。比如给一张大草原的图片\n\n![](https://picture.mulindya.com/low-rank-app-pic1.png)\n\n\n\n草原是由很多草组成的，而草是相似的，所以如果全是草，那么这张图所包含的信息量是很少的的，因为可以理解为草是草的复制品。而上图的蒙古包，人，马之类的则可以理解为图片所包含的信息，实际上，相对于只有草的草原图片和有草和蒙古包的草原图片，后者的秩是较高的。也就是说，图片中比较突兀的成分，比如蒙古包，比如人像照片中的红眼亮点，会增加图像矩阵的秩。而现实生活中一张不错的图片的秩其实是比较低的，如果图像的秩比较高，往往是因为图像中的噪声比较严重。比如拍照的时候ISO感光度设置过高造成噪点太过泛滥之类的。所以，*图像处理的低秩性其实可以拿来去除照片中的噪点*。\n\n### 低秩和稀疏\n\n我们认为图像有一些公共的模式，所有图像都由这些基本的模式组成。例如，如果图像是一个叉，可以看成是一个正斜线和反斜线的叠加。**只要我们找到了所有的基底（称作字典**，就是上面说的正斜线和反斜线之类的东西）**，就能通过基底的线性组合表示出所有的图像。**这就好像学画画，先学会基本的画正方体、球体、圆柱体等等，就可以组合出各种各样的复杂形状。\n\n**在很多情形下，基底的数量是很少的**，比如一张照片拍的是一面砖墙，那么它显然具有周期重复的特点，换句话说低秩。即使整个图不低秩，往往也能找出一些相似的块，这些块是低秩的。再退一步，就算这也做不到，往往也可以把已有的数据看成一组低维的结果加上噪声，也即原来的数据**可以被低秩矩阵很好的逼近**。**稀疏性**的意思是（以稀疏表示为例），任给一个图像，**字典可能是过完备的**，从而用字典里的基向量表出这幅图有很多种不同的方案。我们希望**选取使用基底数量最少的那种方案**，\n\n应用：\n\n***1）矩阵填充(Matrix Completion)***\n\n***2）鲁棒PCA***\n\n***3）背景建模***\n\n***4）变换不变低秩纹理（TILT）***\n\n> 在论文 **Semi-orthogonal Embedding for Effificient Unsupervised Anomaly Segmentation**中有一段可以参考。\n\n**Low-rank approximation of precision matrix**\n\nThe feature data **X** is subject to low-rank approximation due to the narrower target domain for anomaly-free images than the ImageNet dataset’s. The multi-scale features from different layers may also contribute to it due to the inter-dependency among the features from the layers. Inspired by the truncated SVD of a precision matrix, a low-rank embedding of input features with $W \\in R^{F \\times k}$,where *F > k*, is considered as follows:\n$$\nd^2_{i,j} = X^TW(W^TC_{i,j}W)^{−1}W^TX\n$$\nwhere the below Theorem 1 shows the optimal **W*** is the eigenvectors related to the *k*-smallest eigenvalues of $C_{i,j}$ . Notice that 1) the computational complexity of the equation is cubically reduced to *O*($HWk^3$) set aside the cost of SVD, although which is the concern, 2) PCA embedding would fail to minimize approximation error since it uses the *k*-largest eigenvectors [14], and 3) near-zero eigenvalues may induce substantial anomaly scores.\n\n选取协方差矩阵的k个最小的特征值对应的特征向量，进行低秩逼近\n\n> 参考\n>\n>  https://www.zhihu.com/question/28630628\n>\n> https://blog.csdn.net/zouxy09/article/details/24972869\n","source":"_posts/math/low-rank-app.md","raw":"---\ntitle: 低秩逼近的思考\ndate: 2021-08-06 16:38:25\ntags: [math,线性代数]\ncategories: [math,线性代数]\nmath: true\n---\n\n> 阅读文章**Semi-orthogonal Embedding for Effificient Unsupervised Anomaly Segmentation**时出现一个概念--**Low-rank approximation** ，就此进行相关讨论。\n\n### 低秩（Low-Rank）\n\n如果X是一个m行n列的数值矩阵，rank(X)是X的秩，假如rank (X)远小于m和n，则我们称X是低秩矩阵。低秩矩阵每行或每列都可以用其他的行或列线性表出，可见它包含大量的冗余信息。利用这种冗余信息，可以对缺失数据进行恢复，也可以对数据进行特征提取。\n\n图像处理中，*rank可以理解为图像所包含的信息的丰富程度*，在显示生活中，一张图片中大部分成分是相似的。比如给一张大草原的图片\n\n![](https://picture.mulindya.com/low-rank-app-pic1.png)\n\n\n\n草原是由很多草组成的，而草是相似的，所以如果全是草，那么这张图所包含的信息量是很少的的，因为可以理解为草是草的复制品。而上图的蒙古包，人，马之类的则可以理解为图片所包含的信息，实际上，相对于只有草的草原图片和有草和蒙古包的草原图片，后者的秩是较高的。也就是说，图片中比较突兀的成分，比如蒙古包，比如人像照片中的红眼亮点，会增加图像矩阵的秩。而现实生活中一张不错的图片的秩其实是比较低的，如果图像的秩比较高，往往是因为图像中的噪声比较严重。比如拍照的时候ISO感光度设置过高造成噪点太过泛滥之类的。所以，*图像处理的低秩性其实可以拿来去除照片中的噪点*。\n\n### 低秩和稀疏\n\n我们认为图像有一些公共的模式，所有图像都由这些基本的模式组成。例如，如果图像是一个叉，可以看成是一个正斜线和反斜线的叠加。**只要我们找到了所有的基底（称作字典**，就是上面说的正斜线和反斜线之类的东西）**，就能通过基底的线性组合表示出所有的图像。**这就好像学画画，先学会基本的画正方体、球体、圆柱体等等，就可以组合出各种各样的复杂形状。\n\n**在很多情形下，基底的数量是很少的**，比如一张照片拍的是一面砖墙，那么它显然具有周期重复的特点，换句话说低秩。即使整个图不低秩，往往也能找出一些相似的块，这些块是低秩的。再退一步，就算这也做不到，往往也可以把已有的数据看成一组低维的结果加上噪声，也即原来的数据**可以被低秩矩阵很好的逼近**。**稀疏性**的意思是（以稀疏表示为例），任给一个图像，**字典可能是过完备的**，从而用字典里的基向量表出这幅图有很多种不同的方案。我们希望**选取使用基底数量最少的那种方案**，\n\n应用：\n\n***1）矩阵填充(Matrix Completion)***\n\n***2）鲁棒PCA***\n\n***3）背景建模***\n\n***4）变换不变低秩纹理（TILT）***\n\n> 在论文 **Semi-orthogonal Embedding for Effificient Unsupervised Anomaly Segmentation**中有一段可以参考。\n\n**Low-rank approximation of precision matrix**\n\nThe feature data **X** is subject to low-rank approximation due to the narrower target domain for anomaly-free images than the ImageNet dataset’s. The multi-scale features from different layers may also contribute to it due to the inter-dependency among the features from the layers. Inspired by the truncated SVD of a precision matrix, a low-rank embedding of input features with $W \\in R^{F \\times k}$,where *F > k*, is considered as follows:\n$$\nd^2_{i,j} = X^TW(W^TC_{i,j}W)^{−1}W^TX\n$$\nwhere the below Theorem 1 shows the optimal **W*** is the eigenvectors related to the *k*-smallest eigenvalues of $C_{i,j}$ . Notice that 1) the computational complexity of the equation is cubically reduced to *O*($HWk^3$) set aside the cost of SVD, although which is the concern, 2) PCA embedding would fail to minimize approximation error since it uses the *k*-largest eigenvectors [14], and 3) near-zero eigenvalues may induce substantial anomaly scores.\n\n选取协方差矩阵的k个最小的特征值对应的特征向量，进行低秩逼近\n\n> 参考\n>\n>  https://www.zhihu.com/question/28630628\n>\n> https://blog.csdn.net/zouxy09/article/details/24972869\n","slug":"math/low-rank-app","published":1,"updated":"2021-08-19T08:33:50.992Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxodg003jugx47v6ob78a","content":"<blockquote>\n<p>阅读文章<strong>Semi-orthogonal Embedding for Effificient Unsupervised Anomaly Segmentation</strong>时出现一个概念–<strong>Low-rank approximation</strong> ，就此进行相关讨论。</p>\n</blockquote>\n<h3 id=\"低秩（Low-Rank）\">低秩（Low-Rank）</h3>\n<p>如果X是一个m行n列的数值矩阵，rank(X)是X的秩，假如rank (X)远小于m和n，则我们称X是低秩矩阵。低秩矩阵每行或每列都可以用其他的行或列线性表出，可见它包含大量的冗余信息。利用这种冗余信息，可以对缺失数据进行恢复，也可以对数据进行特征提取。</p>\n<p>图像处理中，<em>rank可以理解为图像所包含的信息的丰富程度</em>，在显示生活中，一张图片中大部分成分是相似的。比如给一张大草原的图片</p>\n<p><img src=\"https://picture.mulindya.com/low-rank-app-pic1.png\" alt=\"\"></p>\n<p>草原是由很多草组成的，而草是相似的，所以如果全是草，那么这张图所包含的信息量是很少的的，因为可以理解为草是草的复制品。而上图的蒙古包，人，马之类的则可以理解为图片所包含的信息，实际上，相对于只有草的草原图片和有草和蒙古包的草原图片，后者的秩是较高的。也就是说，图片中比较突兀的成分，比如蒙古包，比如人像照片中的红眼亮点，会增加图像矩阵的秩。而现实生活中一张不错的图片的秩其实是比较低的，如果图像的秩比较高，往往是因为图像中的噪声比较严重。比如拍照的时候ISO感光度设置过高造成噪点太过泛滥之类的。所以，<em>图像处理的低秩性其实可以拿来去除照片中的噪点</em>。</p>\n<h3 id=\"低秩和稀疏\">低秩和稀疏</h3>\n<p>我们认为图像有一些公共的模式，所有图像都由这些基本的模式组成。例如，如果图像是一个叉，可以看成是一个正斜线和反斜线的叠加。<strong>只要我们找到了所有的基底（称作字典</strong>，就是上面说的正斜线和反斜线之类的东西）**，就能通过基底的线性组合表示出所有的图像。**这就好像学画画，先学会基本的画正方体、球体、圆柱体等等，就可以组合出各种各样的复杂形状。</p>\n<p><strong>在很多情形下，基底的数量是很少的</strong>，比如一张照片拍的是一面砖墙，那么它显然具有周期重复的特点，换句话说低秩。即使整个图不低秩，往往也能找出一些相似的块，这些块是低秩的。再退一步，就算这也做不到，往往也可以把已有的数据看成一组低维的结果加上噪声，也即原来的数据<strong>可以被低秩矩阵很好的逼近</strong>。<strong>稀疏性</strong>的意思是（以稀疏表示为例），任给一个图像，<strong>字典可能是过完备的</strong>，从而用字典里的基向量表出这幅图有很多种不同的方案。我们希望<strong>选取使用基底数量最少的那种方案</strong>，</p>\n<p>应用：</p>\n<p><em><strong>1）矩阵填充(Matrix Completion)</strong></em></p>\n<p><em><strong>2）鲁棒PCA</strong></em></p>\n<p><em><strong>3）背景建模</strong></em></p>\n<p><em><strong>4）变换不变低秩纹理（TILT）</strong></em></p>\n<blockquote>\n<p>在论文 <strong>Semi-orthogonal Embedding for Effificient Unsupervised Anomaly Segmentation</strong>中有一段可以参考。</p>\n</blockquote>\n<p><strong>Low-rank approximation of precision matrix</strong></p>\n<p>The feature data <strong>X</strong> is subject to low-rank approximation due to the narrower target domain for anomaly-free images than the ImageNet dataset’s. The multi-scale features from different layers may also contribute to it due to the inter-dependency among the features from the layers. Inspired by the truncated SVD of a precision matrix, a low-rank embedding of input features with $W \\in R^{F \\times k}$,where <em>F &gt; k</em>, is considered as follows:<br>\n$$<br>\nd^2_{i,j} = X<sup>TW(W</sup>TC_{i,j}W)<sup>{−1}W</sup>TX<br>\n$$<br>\nwhere the below Theorem 1 shows the optimal <strong>W</strong>* is the eigenvectors related to the <em>k</em>-smallest eigenvalues of $C_{i,j}$ . Notice that 1) the computational complexity of the equation is cubically reduced to <em>O</em>($HWk^3$) set aside the cost of SVD, although which is the concern, 2) PCA embedding would fail to minimize approximation error since it uses the <em>k</em>-largest eigenvectors [14], and 3) near-zero eigenvalues may induce substantial anomaly scores.</p>\n<p>选取协方差矩阵的k个最小的特征值对应的特征向量，进行低秩逼近</p>\n<blockquote>\n<p>参考</p>\n<p><a href=\"https://www.zhihu.com/question/28630628\">https://www.zhihu.com/question/28630628</a></p>\n<p><a href=\"https://blog.csdn.net/zouxy09/article/details/24972869\">https://blog.csdn.net/zouxy09/article/details/24972869</a></p>\n</blockquote>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>阅读文章<strong>Semi-orthogonal Embedding for Effificient Unsupervised Anomaly Segmentation</strong>时出现一个概念–<strong>Low-rank approximation</strong> ，就此进行相关讨论。</p>\n</blockquote>\n<h3 id=\"低秩（Low-Rank）\">低秩（Low-Rank）</h3>\n<p>如果X是一个m行n列的数值矩阵，rank(X)是X的秩，假如rank (X)远小于m和n，则我们称X是低秩矩阵。低秩矩阵每行或每列都可以用其他的行或列线性表出，可见它包含大量的冗余信息。利用这种冗余信息，可以对缺失数据进行恢复，也可以对数据进行特征提取。</p>\n<p>图像处理中，<em>rank可以理解为图像所包含的信息的丰富程度</em>，在显示生活中，一张图片中大部分成分是相似的。比如给一张大草原的图片</p>\n<p><img src=\"https://picture.mulindya.com/low-rank-app-pic1.png\" alt=\"\"></p>\n<p>草原是由很多草组成的，而草是相似的，所以如果全是草，那么这张图所包含的信息量是很少的的，因为可以理解为草是草的复制品。而上图的蒙古包，人，马之类的则可以理解为图片所包含的信息，实际上，相对于只有草的草原图片和有草和蒙古包的草原图片，后者的秩是较高的。也就是说，图片中比较突兀的成分，比如蒙古包，比如人像照片中的红眼亮点，会增加图像矩阵的秩。而现实生活中一张不错的图片的秩其实是比较低的，如果图像的秩比较高，往往是因为图像中的噪声比较严重。比如拍照的时候ISO感光度设置过高造成噪点太过泛滥之类的。所以，<em>图像处理的低秩性其实可以拿来去除照片中的噪点</em>。</p>\n<h3 id=\"低秩和稀疏\">低秩和稀疏</h3>\n<p>我们认为图像有一些公共的模式，所有图像都由这些基本的模式组成。例如，如果图像是一个叉，可以看成是一个正斜线和反斜线的叠加。<strong>只要我们找到了所有的基底（称作字典</strong>，就是上面说的正斜线和反斜线之类的东西）**，就能通过基底的线性组合表示出所有的图像。**这就好像学画画，先学会基本的画正方体、球体、圆柱体等等，就可以组合出各种各样的复杂形状。</p>\n<p><strong>在很多情形下，基底的数量是很少的</strong>，比如一张照片拍的是一面砖墙，那么它显然具有周期重复的特点，换句话说低秩。即使整个图不低秩，往往也能找出一些相似的块，这些块是低秩的。再退一步，就算这也做不到，往往也可以把已有的数据看成一组低维的结果加上噪声，也即原来的数据<strong>可以被低秩矩阵很好的逼近</strong>。<strong>稀疏性</strong>的意思是（以稀疏表示为例），任给一个图像，<strong>字典可能是过完备的</strong>，从而用字典里的基向量表出这幅图有很多种不同的方案。我们希望<strong>选取使用基底数量最少的那种方案</strong>，</p>\n<p>应用：</p>\n<p><em><strong>1）矩阵填充(Matrix Completion)</strong></em></p>\n<p><em><strong>2）鲁棒PCA</strong></em></p>\n<p><em><strong>3）背景建模</strong></em></p>\n<p><em><strong>4）变换不变低秩纹理（TILT）</strong></em></p>\n<blockquote>\n<p>在论文 <strong>Semi-orthogonal Embedding for Effificient Unsupervised Anomaly Segmentation</strong>中有一段可以参考。</p>\n</blockquote>\n<p><strong>Low-rank approximation of precision matrix</strong></p>\n<p>The feature data <strong>X</strong> is subject to low-rank approximation due to the narrower target domain for anomaly-free images than the ImageNet dataset’s. The multi-scale features from different layers may also contribute to it due to the inter-dependency among the features from the layers. Inspired by the truncated SVD of a precision matrix, a low-rank embedding of input features with $W \\in R^{F \\times k}$,where <em>F &gt; k</em>, is considered as follows:<br>\n$$<br>\nd^2_{i,j} = X<sup>TW(W</sup>TC_{i,j}W)<sup>{−1}W</sup>TX<br>\n$$<br>\nwhere the below Theorem 1 shows the optimal <strong>W</strong>* is the eigenvectors related to the <em>k</em>-smallest eigenvalues of $C_{i,j}$ . Notice that 1) the computational complexity of the equation is cubically reduced to <em>O</em>($HWk^3$) set aside the cost of SVD, although which is the concern, 2) PCA embedding would fail to minimize approximation error since it uses the <em>k</em>-largest eigenvectors [14], and 3) near-zero eigenvalues may induce substantial anomaly scores.</p>\n<p>选取协方差矩阵的k个最小的特征值对应的特征向量，进行低秩逼近</p>\n<blockquote>\n<p>参考</p>\n<p><a href=\"https://www.zhihu.com/question/28630628\">https://www.zhihu.com/question/28630628</a></p>\n<p><a href=\"https://blog.csdn.net/zouxy09/article/details/24972869\">https://blog.csdn.net/zouxy09/article/details/24972869</a></p>\n</blockquote>\n"},{"title":"文献整理笔记","date":"2021-08-13T07:18:31.000Z","_content":"\n> 查找文献的网站\n> https://www.thecvf.com/\n> https://arxiv.org/list/cs/recent\n> https://www.researchgate.net/\n\n\n> 超宝藏博主： [科技猛兽](https://www.zhihu.com/people/wang-jia-hao-53-3)  \n> 宝藏公众号： 极市平台\n> 系列学习： [VIT学习](https://zhuanlan.zhihu.com/p/348593638)\n\n###  微调技巧\n\n[**Accurate, Large Minibatch SGD Training ImageNet in 1 Hour.pdf**](https://paper.mulindya.com/Accurate%2C%20Large%20Minibatch%20SGD%20Training%20ImageNet%20in%201%20Hour.pdf)\n\n[**BIT : General Visual Representation Learning.pdf**](https://paper.mulindya.com/BITGeneral%20Visual%20Representation%20Learning.pdf)\n\n[**Co-Tuning for Transfer Learning.pdf**](https://paper.mulindya.com/Co-Tuning%20for%20Transfer%20Learning.pdf)\n\n[**EfficientNet Rethinking Model Scaling for Convolutional Neural Networks.pdf**](https://paper.mulindya.com/EfficientNet%20Rethinking%20Model%20Scaling%20for%20Convolutional%20Neural%20Networks.pdf)\n\n[**He_Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks_CVPR_2019_paper.pdf**](https://paper.mulindya.com/He_Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks_CVPR_2019_paper.pdf)\n\n[**Simple Copy-Paste is a Strong Data Augmentation Method.pdf**](https://paper.mulindya.com/Simple%20Copy-Paste%20is%20a%20Strong%20Data%20Augmentation%20Method.pdf)\n\n[**Discriminative Feature Alignment Improving Transferability of.pdf**](https://paper.mulindya.com/Discriminative%20Feature%20Alignment%20Improving%20Transferability%20of.pdf)\n\n[**Movement Pruning adaptive sparsity by fine-tuning.pdf**](https://paper.mulindya.com/Movement%20Pruning%20adaptive%20sparsity%20by%20fine-tuning.pdf)\n\n### FPN\n\n[**Feature Pyramid Networks for Object Detection**](https://paper.mulindya.com/Feature%20Pyramid%20Networks%20for%20Object%20Detection.pdf)（FPN目标检测 解读https://zhuanlan.zhihu.com/p/36461718）\n\n### Transformer\n\n[**Attention Is All You Need**](https://paper.mulindya.com/Feature%20Pyramid%20Networks%20for%20Object%20Detection.pdf) (讲解Attention机制)\n\n[**A Survey of Transformers**](https://paper.mulindya.com/A%20Survey%20on%20Visual%20Transformer.pdf)（Transformer的总结）\n\n### VIT\n\n[**AN IMAGE IS WORTH 16X16 WORDS: TRANSFORMERS FOR IMAGE RECOGNITION AT**](https://paper.mulindya.com/A%20Survey%20on%20Visual%20Transformer.pdf)（将transformer应用于图像分类）\n\n[**How to train your ViT? Data, Augmentation,and Regularization in Vision Transformers**](https://paper.mulindya.com/How%20to%20train%20your%20ViT.pdf)（训练技巧）\n\n[**Scaling Vision Transformers**](https://paper.mulindya.com/Scaling%20Vision%20Transformers.pdf)（精炼VIT）\n\n[**LeViT: a Vision Transformer in ConvNet’s Clothing for Faster Inference**](https://paper.mulindya.com/levit.pdf) （混合网络）\n\n[**End-to-End Video Instance Segmentation with Transformers**](https://paper.mulindya.com/End-to-End%20Semi-Supervised%20Object%20Detection%20with%20Soft%20Teacher.pdf)（使用transformer进行实例分割）\n\n[**A Survey on Visual Transformer**](https://paper.mulindya.com/A%20Survey%20on%20Visual%20Transformer.pdf) （总结）\n\n### EfficientNet\n\n[**EfficientNet Rethinking Model Scaling for Convolutional Neural Networks.pdf**](https://paper.mulindya.com/EfficientNet%20Rethinking%20Model%20Scaling%20for%20Convolutional%20Neural%20Networks.pdf)\n\n### BIT\n\n[**BIT : General Visual Representation Learning.pdf**](https://paper.mulindya.com/BITGeneral%20Visual%20Representation%20Learning.pdf)\n\n### YOLOv4\n\n[**YOLOv4: Optimal Speed and Accuracy of Object Detection**](https://paper.mulindya.com/yolo4.pdf)\n\n### PaDim\n\n[**PaDiM: a Patch Distribution Modeling Framework for Anomaly Detection and Localization**](https://paper.mulindya.com/PaDiM_a%20Patch%20Distribution%20Modeling%20Framework.pdf) (使用马氏距离)\n\n[**Semi-orthogonal Embedding for Efficient Unsupervised Anomaly Segmentation**](https://paper.mulindya.com/Semi-orthogonal%20Embedding%20for%20Efficient%20Unsupervised%20Anomaly%20Segmentation.pdf) （很多数学知识）\n\n### Swin\n\n[**Swin Transformer: Hierarchical Vision Transformer using Shifted Windows**](https://paper.mulindya.com/Swin%20Transformer%20Hierarchical%20Vision%20Transformer%20using%20Shifted%20Windows.pdf)\n\n### 其他\n\n谷歌提出的使用MPL代替Transformer，CNN（[也引发了一些争议](https://zhuanlan.zhihu.com/p/370780575)）\n\n[**MLP-Mixer: An all-MLP Architecture for Vision**](https://paper.mulindya.com/MLP-Mixer_An%20all-MLP%20Architecture%20for%20Vision.pdf)\n\n","source":"_posts/paper/paper-site.md","raw":"---\ntitle: 文献整理笔记\ntags: [文献]\ncategories: [文献]\ndate: 2021-08-13 15:18:31\n---\n\n> 查找文献的网站\n> https://www.thecvf.com/\n> https://arxiv.org/list/cs/recent\n> https://www.researchgate.net/\n\n\n> 超宝藏博主： [科技猛兽](https://www.zhihu.com/people/wang-jia-hao-53-3)  \n> 宝藏公众号： 极市平台\n> 系列学习： [VIT学习](https://zhuanlan.zhihu.com/p/348593638)\n\n###  微调技巧\n\n[**Accurate, Large Minibatch SGD Training ImageNet in 1 Hour.pdf**](https://paper.mulindya.com/Accurate%2C%20Large%20Minibatch%20SGD%20Training%20ImageNet%20in%201%20Hour.pdf)\n\n[**BIT : General Visual Representation Learning.pdf**](https://paper.mulindya.com/BITGeneral%20Visual%20Representation%20Learning.pdf)\n\n[**Co-Tuning for Transfer Learning.pdf**](https://paper.mulindya.com/Co-Tuning%20for%20Transfer%20Learning.pdf)\n\n[**EfficientNet Rethinking Model Scaling for Convolutional Neural Networks.pdf**](https://paper.mulindya.com/EfficientNet%20Rethinking%20Model%20Scaling%20for%20Convolutional%20Neural%20Networks.pdf)\n\n[**He_Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks_CVPR_2019_paper.pdf**](https://paper.mulindya.com/He_Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks_CVPR_2019_paper.pdf)\n\n[**Simple Copy-Paste is a Strong Data Augmentation Method.pdf**](https://paper.mulindya.com/Simple%20Copy-Paste%20is%20a%20Strong%20Data%20Augmentation%20Method.pdf)\n\n[**Discriminative Feature Alignment Improving Transferability of.pdf**](https://paper.mulindya.com/Discriminative%20Feature%20Alignment%20Improving%20Transferability%20of.pdf)\n\n[**Movement Pruning adaptive sparsity by fine-tuning.pdf**](https://paper.mulindya.com/Movement%20Pruning%20adaptive%20sparsity%20by%20fine-tuning.pdf)\n\n### FPN\n\n[**Feature Pyramid Networks for Object Detection**](https://paper.mulindya.com/Feature%20Pyramid%20Networks%20for%20Object%20Detection.pdf)（FPN目标检测 解读https://zhuanlan.zhihu.com/p/36461718）\n\n### Transformer\n\n[**Attention Is All You Need**](https://paper.mulindya.com/Feature%20Pyramid%20Networks%20for%20Object%20Detection.pdf) (讲解Attention机制)\n\n[**A Survey of Transformers**](https://paper.mulindya.com/A%20Survey%20on%20Visual%20Transformer.pdf)（Transformer的总结）\n\n### VIT\n\n[**AN IMAGE IS WORTH 16X16 WORDS: TRANSFORMERS FOR IMAGE RECOGNITION AT**](https://paper.mulindya.com/A%20Survey%20on%20Visual%20Transformer.pdf)（将transformer应用于图像分类）\n\n[**How to train your ViT? Data, Augmentation,and Regularization in Vision Transformers**](https://paper.mulindya.com/How%20to%20train%20your%20ViT.pdf)（训练技巧）\n\n[**Scaling Vision Transformers**](https://paper.mulindya.com/Scaling%20Vision%20Transformers.pdf)（精炼VIT）\n\n[**LeViT: a Vision Transformer in ConvNet’s Clothing for Faster Inference**](https://paper.mulindya.com/levit.pdf) （混合网络）\n\n[**End-to-End Video Instance Segmentation with Transformers**](https://paper.mulindya.com/End-to-End%20Semi-Supervised%20Object%20Detection%20with%20Soft%20Teacher.pdf)（使用transformer进行实例分割）\n\n[**A Survey on Visual Transformer**](https://paper.mulindya.com/A%20Survey%20on%20Visual%20Transformer.pdf) （总结）\n\n### EfficientNet\n\n[**EfficientNet Rethinking Model Scaling for Convolutional Neural Networks.pdf**](https://paper.mulindya.com/EfficientNet%20Rethinking%20Model%20Scaling%20for%20Convolutional%20Neural%20Networks.pdf)\n\n### BIT\n\n[**BIT : General Visual Representation Learning.pdf**](https://paper.mulindya.com/BITGeneral%20Visual%20Representation%20Learning.pdf)\n\n### YOLOv4\n\n[**YOLOv4: Optimal Speed and Accuracy of Object Detection**](https://paper.mulindya.com/yolo4.pdf)\n\n### PaDim\n\n[**PaDiM: a Patch Distribution Modeling Framework for Anomaly Detection and Localization**](https://paper.mulindya.com/PaDiM_a%20Patch%20Distribution%20Modeling%20Framework.pdf) (使用马氏距离)\n\n[**Semi-orthogonal Embedding for Efficient Unsupervised Anomaly Segmentation**](https://paper.mulindya.com/Semi-orthogonal%20Embedding%20for%20Efficient%20Unsupervised%20Anomaly%20Segmentation.pdf) （很多数学知识）\n\n### Swin\n\n[**Swin Transformer: Hierarchical Vision Transformer using Shifted Windows**](https://paper.mulindya.com/Swin%20Transformer%20Hierarchical%20Vision%20Transformer%20using%20Shifted%20Windows.pdf)\n\n### 其他\n\n谷歌提出的使用MPL代替Transformer，CNN（[也引发了一些争议](https://zhuanlan.zhihu.com/p/370780575)）\n\n[**MLP-Mixer: An all-MLP Architecture for Vision**](https://paper.mulindya.com/MLP-Mixer_An%20all-MLP%20Architecture%20for%20Vision.pdf)\n\n","slug":"paper/paper-site","published":1,"updated":"2021-08-23T03:48:06.250Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxodh003mugx450ipayjb","content":"<blockquote>\n<p>查找文献的网站<br>\n<a href=\"https://www.thecvf.com/\">https://www.thecvf.com/</a><br>\n<a href=\"https://arxiv.org/list/cs/recent\">https://arxiv.org/list/cs/recent</a><br>\n<a href=\"https://www.researchgate.net/\">https://www.researchgate.net/</a></p>\n</blockquote>\n<blockquote>\n<p>超宝藏博主： <a href=\"https://www.zhihu.com/people/wang-jia-hao-53-3\">科技猛兽</a><br>\n宝藏公众号： 极市平台<br>\n系列学习： <a href=\"https://zhuanlan.zhihu.com/p/348593638\">VIT学习</a></p>\n</blockquote>\n<h3 id=\"微调技巧\">微调技巧</h3>\n<p><a href=\"https://paper.mulindya.com/Accurate%2C%20Large%20Minibatch%20SGD%20Training%20ImageNet%20in%201%20Hour.pdf\"><strong>Accurate, Large Minibatch SGD Training ImageNet in 1 Hour.pdf</strong></a></p>\n<p><a href=\"https://paper.mulindya.com/BITGeneral%20Visual%20Representation%20Learning.pdf\"><strong>BIT : General Visual Representation Learning.pdf</strong></a></p>\n<p><a href=\"https://paper.mulindya.com/Co-Tuning%20for%20Transfer%20Learning.pdf\"><strong>Co-Tuning for Transfer Learning.pdf</strong></a></p>\n<p><a href=\"https://paper.mulindya.com/EfficientNet%20Rethinking%20Model%20Scaling%20for%20Convolutional%20Neural%20Networks.pdf\"><strong>EfficientNet Rethinking Model Scaling for Convolutional Neural Networks.pdf</strong></a></p>\n<p><a href=\"https://paper.mulindya.com/He_Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks_CVPR_2019_paper.pdf\"><strong>He_Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks_CVPR_2019_paper.pdf</strong></a></p>\n<p><a href=\"https://paper.mulindya.com/Simple%20Copy-Paste%20is%20a%20Strong%20Data%20Augmentation%20Method.pdf\"><strong>Simple Copy-Paste is a Strong Data Augmentation Method.pdf</strong></a></p>\n<p><a href=\"https://paper.mulindya.com/Discriminative%20Feature%20Alignment%20Improving%20Transferability%20of.pdf\"><strong>Discriminative Feature Alignment Improving Transferability of.pdf</strong></a></p>\n<p><a href=\"https://paper.mulindya.com/Movement%20Pruning%20adaptive%20sparsity%20by%20fine-tuning.pdf\"><strong>Movement Pruning adaptive sparsity by fine-tuning.pdf</strong></a></p>\n<h3 id=\"FPN\">FPN</h3>\n<p><a href=\"https://paper.mulindya.com/Feature%20Pyramid%20Networks%20for%20Object%20Detection.pdf\"><strong>Feature Pyramid Networks for Object Detection</strong></a>（FPN目标检测 解读https://zhuanlan.zhihu.com/p/36461718）</p>\n<h3 id=\"Transformer\">Transformer</h3>\n<p><a href=\"https://paper.mulindya.com/Feature%20Pyramid%20Networks%20for%20Object%20Detection.pdf\"><strong>Attention Is All You Need</strong></a> (讲解Attention机制)</p>\n<p><a href=\"https://paper.mulindya.com/A%20Survey%20on%20Visual%20Transformer.pdf\"><strong>A Survey of Transformers</strong></a>（Transformer的总结）</p>\n<h3 id=\"VIT\">VIT</h3>\n<p><a href=\"https://paper.mulindya.com/A%20Survey%20on%20Visual%20Transformer.pdf\"><strong>AN IMAGE IS WORTH 16X16 WORDS: TRANSFORMERS FOR IMAGE RECOGNITION AT</strong></a>（将transformer应用于图像分类）</p>\n<p><a href=\"https://paper.mulindya.com/How%20to%20train%20your%20ViT.pdf\"><strong>How to train your ViT? Data, Augmentation,and Regularization in Vision Transformers</strong></a>（训练技巧）</p>\n<p><a href=\"https://paper.mulindya.com/Scaling%20Vision%20Transformers.pdf\"><strong>Scaling Vision Transformers</strong></a>（精炼VIT）</p>\n<p><a href=\"https://paper.mulindya.com/levit.pdf\"><strong>LeViT: a Vision Transformer in ConvNet’s Clothing for Faster Inference</strong></a> （混合网络）</p>\n<p><a href=\"https://paper.mulindya.com/End-to-End%20Semi-Supervised%20Object%20Detection%20with%20Soft%20Teacher.pdf\"><strong>End-to-End Video Instance Segmentation with Transformers</strong></a>（使用transformer进行实例分割）</p>\n<p><a href=\"https://paper.mulindya.com/A%20Survey%20on%20Visual%20Transformer.pdf\"><strong>A Survey on Visual Transformer</strong></a> （总结）</p>\n<h3 id=\"EfficientNet\">EfficientNet</h3>\n<p><a href=\"https://paper.mulindya.com/EfficientNet%20Rethinking%20Model%20Scaling%20for%20Convolutional%20Neural%20Networks.pdf\"><strong>EfficientNet Rethinking Model Scaling for Convolutional Neural Networks.pdf</strong></a></p>\n<h3 id=\"BIT\">BIT</h3>\n<p><a href=\"https://paper.mulindya.com/BITGeneral%20Visual%20Representation%20Learning.pdf\"><strong>BIT : General Visual Representation Learning.pdf</strong></a></p>\n<h3 id=\"YOLOv4\">YOLOv4</h3>\n<p><a href=\"https://paper.mulindya.com/yolo4.pdf\"><strong>YOLOv4: Optimal Speed and Accuracy of Object Detection</strong></a></p>\n<h3 id=\"PaDim\">PaDim</h3>\n<p><a href=\"https://paper.mulindya.com/PaDiM_a%20Patch%20Distribution%20Modeling%20Framework.pdf\"><strong>PaDiM: a Patch Distribution Modeling Framework for Anomaly Detection and Localization</strong></a> (使用马氏距离)</p>\n<p><a href=\"https://paper.mulindya.com/Semi-orthogonal%20Embedding%20for%20Efficient%20Unsupervised%20Anomaly%20Segmentation.pdf\"><strong>Semi-orthogonal Embedding for Efficient Unsupervised Anomaly Segmentation</strong></a> （很多数学知识）</p>\n<h3 id=\"Swin\">Swin</h3>\n<p><a href=\"https://paper.mulindya.com/Swin%20Transformer%20Hierarchical%20Vision%20Transformer%20using%20Shifted%20Windows.pdf\"><strong>Swin Transformer: Hierarchical Vision Transformer using Shifted Windows</strong></a></p>\n<h3 id=\"其他\">其他</h3>\n<p>谷歌提出的使用MPL代替Transformer，CNN（<a href=\"https://zhuanlan.zhihu.com/p/370780575\">也引发了一些争议</a>）</p>\n<p><a href=\"https://paper.mulindya.com/MLP-Mixer_An%20all-MLP%20Architecture%20for%20Vision.pdf\"><strong>MLP-Mixer: An all-MLP Architecture for Vision</strong></a></p>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>查找文献的网站<br>\n<a href=\"https://www.thecvf.com/\">https://www.thecvf.com/</a><br>\n<a href=\"https://arxiv.org/list/cs/recent\">https://arxiv.org/list/cs/recent</a><br>\n<a href=\"https://www.researchgate.net/\">https://www.researchgate.net/</a></p>\n</blockquote>\n<blockquote>\n<p>超宝藏博主： <a href=\"https://www.zhihu.com/people/wang-jia-hao-53-3\">科技猛兽</a><br>\n宝藏公众号： 极市平台<br>\n系列学习： <a href=\"https://zhuanlan.zhihu.com/p/348593638\">VIT学习</a></p>\n</blockquote>\n<h3 id=\"微调技巧\">微调技巧</h3>\n<p><a href=\"https://paper.mulindya.com/Accurate%2C%20Large%20Minibatch%20SGD%20Training%20ImageNet%20in%201%20Hour.pdf\"><strong>Accurate, Large Minibatch SGD Training ImageNet in 1 Hour.pdf</strong></a></p>\n<p><a href=\"https://paper.mulindya.com/BITGeneral%20Visual%20Representation%20Learning.pdf\"><strong>BIT : General Visual Representation Learning.pdf</strong></a></p>\n<p><a href=\"https://paper.mulindya.com/Co-Tuning%20for%20Transfer%20Learning.pdf\"><strong>Co-Tuning for Transfer Learning.pdf</strong></a></p>\n<p><a href=\"https://paper.mulindya.com/EfficientNet%20Rethinking%20Model%20Scaling%20for%20Convolutional%20Neural%20Networks.pdf\"><strong>EfficientNet Rethinking Model Scaling for Convolutional Neural Networks.pdf</strong></a></p>\n<p><a href=\"https://paper.mulindya.com/He_Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks_CVPR_2019_paper.pdf\"><strong>He_Bag_of_Tricks_for_Image_Classification_with_Convolutional_Neural_Networks_CVPR_2019_paper.pdf</strong></a></p>\n<p><a href=\"https://paper.mulindya.com/Simple%20Copy-Paste%20is%20a%20Strong%20Data%20Augmentation%20Method.pdf\"><strong>Simple Copy-Paste is a Strong Data Augmentation Method.pdf</strong></a></p>\n<p><a href=\"https://paper.mulindya.com/Discriminative%20Feature%20Alignment%20Improving%20Transferability%20of.pdf\"><strong>Discriminative Feature Alignment Improving Transferability of.pdf</strong></a></p>\n<p><a href=\"https://paper.mulindya.com/Movement%20Pruning%20adaptive%20sparsity%20by%20fine-tuning.pdf\"><strong>Movement Pruning adaptive sparsity by fine-tuning.pdf</strong></a></p>\n<h3 id=\"FPN\">FPN</h3>\n<p><a href=\"https://paper.mulindya.com/Feature%20Pyramid%20Networks%20for%20Object%20Detection.pdf\"><strong>Feature Pyramid Networks for Object Detection</strong></a>（FPN目标检测 解读https://zhuanlan.zhihu.com/p/36461718）</p>\n<h3 id=\"Transformer\">Transformer</h3>\n<p><a href=\"https://paper.mulindya.com/Feature%20Pyramid%20Networks%20for%20Object%20Detection.pdf\"><strong>Attention Is All You Need</strong></a> (讲解Attention机制)</p>\n<p><a href=\"https://paper.mulindya.com/A%20Survey%20on%20Visual%20Transformer.pdf\"><strong>A Survey of Transformers</strong></a>（Transformer的总结）</p>\n<h3 id=\"VIT\">VIT</h3>\n<p><a href=\"https://paper.mulindya.com/A%20Survey%20on%20Visual%20Transformer.pdf\"><strong>AN IMAGE IS WORTH 16X16 WORDS: TRANSFORMERS FOR IMAGE RECOGNITION AT</strong></a>（将transformer应用于图像分类）</p>\n<p><a href=\"https://paper.mulindya.com/How%20to%20train%20your%20ViT.pdf\"><strong>How to train your ViT? Data, Augmentation,and Regularization in Vision Transformers</strong></a>（训练技巧）</p>\n<p><a href=\"https://paper.mulindya.com/Scaling%20Vision%20Transformers.pdf\"><strong>Scaling Vision Transformers</strong></a>（精炼VIT）</p>\n<p><a href=\"https://paper.mulindya.com/levit.pdf\"><strong>LeViT: a Vision Transformer in ConvNet’s Clothing for Faster Inference</strong></a> （混合网络）</p>\n<p><a href=\"https://paper.mulindya.com/End-to-End%20Semi-Supervised%20Object%20Detection%20with%20Soft%20Teacher.pdf\"><strong>End-to-End Video Instance Segmentation with Transformers</strong></a>（使用transformer进行实例分割）</p>\n<p><a href=\"https://paper.mulindya.com/A%20Survey%20on%20Visual%20Transformer.pdf\"><strong>A Survey on Visual Transformer</strong></a> （总结）</p>\n<h3 id=\"EfficientNet\">EfficientNet</h3>\n<p><a href=\"https://paper.mulindya.com/EfficientNet%20Rethinking%20Model%20Scaling%20for%20Convolutional%20Neural%20Networks.pdf\"><strong>EfficientNet Rethinking Model Scaling for Convolutional Neural Networks.pdf</strong></a></p>\n<h3 id=\"BIT\">BIT</h3>\n<p><a href=\"https://paper.mulindya.com/BITGeneral%20Visual%20Representation%20Learning.pdf\"><strong>BIT : General Visual Representation Learning.pdf</strong></a></p>\n<h3 id=\"YOLOv4\">YOLOv4</h3>\n<p><a href=\"https://paper.mulindya.com/yolo4.pdf\"><strong>YOLOv4: Optimal Speed and Accuracy of Object Detection</strong></a></p>\n<h3 id=\"PaDim\">PaDim</h3>\n<p><a href=\"https://paper.mulindya.com/PaDiM_a%20Patch%20Distribution%20Modeling%20Framework.pdf\"><strong>PaDiM: a Patch Distribution Modeling Framework for Anomaly Detection and Localization</strong></a> (使用马氏距离)</p>\n<p><a href=\"https://paper.mulindya.com/Semi-orthogonal%20Embedding%20for%20Efficient%20Unsupervised%20Anomaly%20Segmentation.pdf\"><strong>Semi-orthogonal Embedding for Efficient Unsupervised Anomaly Segmentation</strong></a> （很多数学知识）</p>\n<h3 id=\"Swin\">Swin</h3>\n<p><a href=\"https://paper.mulindya.com/Swin%20Transformer%20Hierarchical%20Vision%20Transformer%20using%20Shifted%20Windows.pdf\"><strong>Swin Transformer: Hierarchical Vision Transformer using Shifted Windows</strong></a></p>\n<h3 id=\"其他\">其他</h3>\n<p>谷歌提出的使用MPL代替Transformer，CNN（<a href=\"https://zhuanlan.zhihu.com/p/370780575\">也引发了一些争议</a>）</p>\n<p><a href=\"https://paper.mulindya.com/MLP-Mixer_An%20all-MLP%20Architecture%20for%20Vision.pdf\"><strong>MLP-Mixer: An all-MLP Architecture for Vision</strong></a></p>\n"},{"title":"swin网络","date":"2021-08-25T03:27:25.000Z","_content":"\n> swin_transformer的结构和代码实现部分，在此基础上添加freeze的相关操作，记录如下。\n\n## 论文中的架构\n\n![](https://picture.mulindya.com/swin-pic1.png)\n\n## 论文笔记\n\n<details>\n<summary>Swin Transformer:Hierarchical Vision Transformer using Shifted Windows</summary>\n<iframe src='/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/Swin%20Transformer%20Hierarchical%20Vision%20Transformer%20using%20Shifted%20Windows.pdf' width=100% height=650></iframe>\n</details>\n\n## model架构\n\n``` python\nImageClassifier(\n  (backbone): SwinTransformer(\n    (patch_embed): PatchEmbed(\n      (projection): Conv2d(3, 96, kernel_size=(4, 4), stride=(4, 4))\n      (norm): LayerNorm((96,), eps=1e-05, elementwise_affine=True)\n    )\n    (drop_after_pos): Dropout(p=0.0, inplace=False)\n    (stages): ModuleList(\n      (0): SwinBlockSequence(\n        (blocks): ModuleList(\n          (0): SwinBlock(\n            (norm1): LayerNorm((96,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=96, out_features=288, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=96, out_features=96, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((96,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=96, out_features=384, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=384, out_features=96, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (1): SwinBlock(\n            (norm1): LayerNorm((96,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=96, out_features=288, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=96, out_features=96, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((96,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=96, out_features=384, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=384, out_features=96, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n        )\n        (downsample): PatchMerging(\n          (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))\n          (norm): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n          (reduction): Linear(in_features=384, out_features=192, bias=False)\n        )\n      )\n      (1): SwinBlockSequence(\n        (blocks): ModuleList(\n          (0): SwinBlock(\n            (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=192, out_features=576, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=192, out_features=192, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=192, out_features=768, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=768, out_features=192, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (1): SwinBlock(\n            (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=192, out_features=576, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=192, out_features=192, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=192, out_features=768, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=768, out_features=192, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n        )\n        (downsample): PatchMerging(\n          (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))\n          (norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)\n          (reduction): Linear(in_features=768, out_features=384, bias=False)\n        )\n      )\n      (2): SwinBlockSequence(\n        (blocks): ModuleList(\n          (0): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (1): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (2): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (3): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (4): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (5): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (6): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (7): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (8): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (9): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (10): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (11): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (12): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (13): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (14): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (15): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (16): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (17): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n        )\n        (downsample): PatchMerging(\n          (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))\n          (norm): LayerNorm((1536,), eps=1e-05, elementwise_affine=True)\n          (reduction): Linear(in_features=1536, out_features=768, bias=False)\n        )\n      )\n      (3): SwinBlockSequence(\n        (blocks): ModuleList(\n          (0): SwinBlock(\n            (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=768, out_features=2304, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=768, out_features=768, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=768, out_features=3072, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=3072, out_features=768, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (1): SwinBlock(\n            (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=768, out_features=2304, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=768, out_features=768, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=768, out_features=3072, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=3072, out_features=768, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n        )\n      )\n    )\n    (norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)\n  )\n  (neck): GlobalAveragePooling(\n    (gap): AdaptiveAvgPool1d(output_size=1)\n  )\n  (head): MultiLabelLinearClsHead(\n    (compute_loss): CrossEntropyLoss()\n    (fc): Linear(in_features=768, out_features=11, bias=True)\n  )\n)\n```\n\n## 代码\n\n添加fronzen_stages:\n\n> 该参数表示你想冻结前几个 stages 的权重，swin 结构包括 4 stage内部结构(2,2,18,2)\n>\n> frozen_stages=-1，表示全部可学习\n>\n> frozen_stage=0，表示stem权重固定\n>\n> frozen_stages=1，表示 stem 和第一个 stage 权重固定\n>\n> frozen_stages=2，表示 stem 和前两个 stage 权重固定\n\n```python\nstage = SwinBlockSequence(**_stage_cfg)\n# 冻结某几层frozen_stages\nif(frozen_stages==0 or (i in range(0,frozen_stages))):\n\tstage.eval()\n\tfor param in stage.parameters():\n\t\tparam.requires_grad = False\n```\n\n全部代码\n\n```python\nfrom copy import deepcopy\nfrom typing import Sequence\n\nimport torch\nimport torch.nn as nn\nfrom mmcv.cnn import build_norm_layer\nfrom mmcv.cnn.bricks.transformer import FFN\nfrom mmcv.cnn.utils.weight_init import trunc_normal_\nfrom mmcv.runner.base_module import BaseModule, ModuleList\n\nfrom ..builder import BACKBONES\nfrom ..utils import PatchEmbed, PatchMerging, ShiftWindowMSA\nfrom .base_backbone import BaseBackbone\n\n\nclass SwinBlock(BaseModule):\n    \"\"\"Swin Transformer block.\n\n    Args:\n        embed_dims (int): Number of input channels.\n        input_resolution (Tuple[int, int]): The resolution of the input feature\n            map.\n        num_heads (int): Number of attention heads.\n        window_size (int, optional): The height and width of the window.\n            Defaults to 7.\n        shift (bool, optional): Shift the attention window or not.\n            Defaults to False.\n        ffn_ratio (float, optional): The expansion ratio of feedforward network\n            hidden layer channels. Defaults to 4.\n        drop_path (float, optional): The drop path rate after attention and\n            ffn. Defaults to 0.\n        attn_cfgs (dict, optional): The extra config of Shift Window-MSA.\n            Defaults to empty dict.\n        ffn_cfgs (dict, optional): The extra config of FFN.\n            Defaults to empty dict.\n        norm_cfg (dict, optional): The config of norm layers.\n            Defaults to dict(type='LN').\n        auto_pad (bool, optional): Auto pad the feature map to be divisible by\n            window_size, Defaults to False.\n        init_cfg (dict, optional): The extra config for initialization.\n            Default: None.\n    \"\"\"\n\n    def __init__(self,\n                 embed_dims,\n                 input_resolution,\n                 num_heads,\n                 window_size=7,\n                 shift=False,\n                 ffn_ratio=4.,\n                 drop_path=0.,\n                 attn_cfgs=dict(),\n                 ffn_cfgs=dict(),\n                 norm_cfg=dict(type='LN'),\n                 auto_pad=False,\n                 init_cfg=None):\n\n        super(SwinBlock, self).__init__(init_cfg)\n\n        _attn_cfgs = {\n            'embed_dims': embed_dims,\n            'input_resolution': input_resolution,\n            'num_heads': num_heads,\n            'shift_size': window_size // 2 if shift else 0,\n            'window_size': window_size,\n            'dropout_layer': dict(type='DropPath', drop_prob=drop_path),\n            'auto_pad': auto_pad,\n            **attn_cfgs\n        }\n        self.norm1 = build_norm_layer(norm_cfg, embed_dims)[1]\n        self.attn = ShiftWindowMSA(**_attn_cfgs)\n\n        _ffn_cfgs = {\n            'embed_dims': embed_dims,\n            'feedforward_channels': int(embed_dims * ffn_ratio),\n            'num_fcs': 2,\n            'ffn_drop': 0,\n            'dropout_layer': dict(type='DropPath', drop_prob=drop_path),\n            'act_cfg': dict(type='GELU'),\n            **ffn_cfgs\n        }\n        self.norm2 = build_norm_layer(norm_cfg, embed_dims)[1]\n        self.ffn = FFN(**_ffn_cfgs)\n\n    def forward(self, x):\n        identity = x\n        x = self.norm1(x)\n        x = self.attn(x)\n        x = x + identity\n\n        identity = x\n        x = self.norm2(x)\n        x = self.ffn(x, identity=identity)\n        return x\n\n\nclass SwinBlockSequence(BaseModule):\n    \"\"\"Module with successive Swin Transformer blocks and downsample layer.\n\n    Args:\n        embed_dims (int): Number of input channels.\n        input_resolution (Tuple[int, int]): The resolution of the input feature\n            map.\n        depth (int): Number of successive swin transformer blocks.\n        num_heads (int): Number of attention heads.\n        downsample (bool, optional): Downsample the output of blocks by patch\n            merging. Defaults to False.\n        downsample_cfg (dict, optional): The extra config of the patch merging\n            layer. Defaults to empty dict.\n        drop_paths (Sequence[float] | float, optional): The drop path rate in\n            each block. Defaults to 0.\n        block_cfgs (Sequence[dict] | dict, optional): The extra config of each\n            block. Defaults to empty dicts.\n        auto_pad (bool, optional): Auto pad the feature map to be divisible by\n            window_size, Defaults to False.\n        init_cfg (dict, optional): The extra config for initialization.\n            Default: None.\n    \"\"\"\n\n    def __init__(self,\n                 embed_dims,\n                 input_resolution,\n                 depth,\n                 num_heads,\n                 downsample=False,\n                 downsample_cfg=dict(),\n                 drop_paths=0.,\n                 block_cfgs=dict(),\n                 auto_pad=False,\n                 init_cfg=None):\n        super().__init__(init_cfg)\n\n        if not isinstance(drop_paths, Sequence):\n            drop_paths = [drop_paths] * depth\n\n        if not isinstance(block_cfgs, Sequence):\n            block_cfg = [deepcopy(block_cfgs) for _ in range(depth)]\n\n        self.blocks = ModuleList()\n        for i in range(depth):\n            _block_cfg = {\n                'embed_dims': embed_dims,\n                'input_resolution': input_resolution,\n                'num_heads': num_heads,\n                'shift': False if i % 2 == 0 else True,\n                'drop_path': drop_paths[i],\n                'auto_pad': auto_pad,\n                **block_cfg[i]\n            }\n            block = SwinBlock(**_block_cfg)\n            self.blocks.append(block)\n\n        if downsample:\n            _downsample_cfg = {\n                'input_resolution': input_resolution,\n                'in_channels': embed_dims,\n                'expansion_ratio': 2,\n                'norm_cfg': dict(type='LN'),\n                **downsample_cfg\n            }\n            self.downsample = PatchMerging(**_downsample_cfg)\n        else:\n            self.downsample = None\n\n    def forward(self, x):\n        for block in self.blocks:\n            x = block(x)\n\n        if self.downsample:\n            x = self.downsample(x)\n        return x\n\n\n@BACKBONES.register_module()\nclass SwinTransformer(BaseBackbone):\n    \"\"\" Swin Transformer\n    A PyTorch implement of : `Swin Transformer:\n    Hierarchical Vision Transformer using Shifted Windows`  -\n        https://arxiv.org/abs/2103.14030\n\n    Inspiration from\n    https://github.com/microsoft/Swin-Transformer\n\n    Args:\n        arch (str | dict): Swin Transformer architecture\n            Defaults to 'T'.\n        img_size (int | tuple): The size of input image.\n            Defaults to 224.\n        in_channels (int): The num of input channels.\n            Defaults to 3.\n        drop_rate (float): Dropout rate after embedding.\n            Defaults to 0.\n        drop_path_rate (float): Stochastic depth rate.\n            Defaults to 0.1.\n\n        # add attr\n        frozen_stages: defaults-1 dont freeze,0: all freeze,other: frozen_stages stages to freeze\n\n        use_abs_pos_embed (bool): If True, add absolute position embedding to\n            the patch embedding. Defaults to False.\n        auto_pad (bool): If True, auto pad feature map to fit window_size.\n            Defaults to False.\n        norm_cfg (dict, optional): Config dict for normalization layer at end\n            of backone. Defaults to dict(type='LN')\n        stage_cfgs (Sequence | dict, optional): Extra config dict for each\n            stage. Defaults to empty dict.\n        patch_cfg (dict, optional): Extra config dict for patch embedding.\n            Defaults to empty dict.\n        init_cfg (dict, optional): The Config for initialization.\n            Defaults to None.\n\n    Examples:\n        >>> from mmcls.models import SwinTransformer\n        >>> import torch\n        >>> extra_config = dict(\n        >>>     arch='tiny',\n        >>>     stage_cfgs=dict(downsample_cfg={'kernel_size': 3,\n        >>>                                     'expansion_ratio': 3}),\n        >>>     auto_pad=True)\n        >>> self = SwinTransformer(**extra_config)\n        >>> inputs = torch.rand(1, 3, 224, 224)\n        >>> output = self.forward(inputs)\n        >>> print(output.shape)\n        (1, 2592, 4)\n    \"\"\"\n    arch_zoo = {\n        **dict.fromkeys(['t', 'tiny'],\n                        {'embed_dims': 96,\n                         'depths':     [2, 2,  6,  2],\n                         'num_heads':  [3, 6, 12, 24]}),\n        **dict.fromkeys(['s', 'small'],\n                        {'embed_dims': 96,\n                         'depths':     [2, 2, 18,  2],\n                         'num_heads':  [3, 6, 12, 24]}),\n        **dict.fromkeys(['b', 'base'],\n                        {'embed_dims': 128,\n                         'depths':     [2, 2, 18,  2],\n                         'num_heads':  [4, 8, 16, 32]}),\n        **dict.fromkeys(['l', 'large'],\n                        {'embed_dims': 192,\n                         'depths':     [2,  2, 18,  2],\n                         'num_heads':  [6, 12, 24, 48]}),\n    }  # yapf: disable\n\n    def __init__(self,\n                 arch='T',\n                 img_size=224,\n                 in_channels=3,\n                 drop_rate=0.,\n                 drop_path_rate=0.1,\n                 frozen_stages=-1,\n                 use_abs_pos_embed=False,\n                 auto_pad=False,\n                 norm_cfg=dict(type='LN'),\n                 stage_cfgs=dict(),\n                 patch_cfg=dict(),\n                 init_cfg=None):\n        super(SwinTransformer, self).__init__(init_cfg)\n\n        if isinstance(arch, str):\n            arch = arch.lower()\n            assert arch in set(self.arch_zoo), \\\n                f'Arch {arch} is not in default archs {set(self.arch_zoo)}'\n            self.arch_settings = self.arch_zoo[arch]\n        else:\n            essential_keys = {'embed_dims', 'depths', 'num_head'}\n            assert isinstance(arch, dict) and set(arch) == essential_keys, \\\n                f'Custom arch needs a dict with keys {essential_keys}'\n            self.arch_settings = arch\n\n        self.embed_dims = self.arch_settings['embed_dims']\n        self.depths = self.arch_settings['depths']\n        self.num_heads = self.arch_settings['num_heads']\n        self.num_layers = len(self.depths)\n        self.use_abs_pos_embed = use_abs_pos_embed\n        self.auto_pad = auto_pad\n\n        _patch_cfg = dict(\n            img_size=img_size,\n            in_channels=in_channels,\n            embed_dims=self.embed_dims,\n            conv_cfg=dict(\n                type='Conv2d', kernel_size=4, stride=4, padding=0, dilation=1),\n            norm_cfg=dict(type='LN'),\n            **patch_cfg)\n        self.patch_embed = PatchEmbed(**_patch_cfg)\n        num_patches = self.patch_embed.num_patches\n        patches_resolution = self.patch_embed.patches_resolution\n        self.patches_resolution = patches_resolution\n\n        if self.use_abs_pos_embed:\n            self.absolute_pos_embed = nn.Parameter(\n                torch.zeros(1, num_patches, self.embed_dims))\n\n        self.drop_after_pos = nn.Dropout(p=drop_rate)\n\n        # stochastic depth\n        total_depth = sum(self.depths)\n        dpr = [\n            x.item() for x in torch.linspace(0, drop_path_rate, total_depth)\n        ]  # stochastic depth decay rule\n\n        self.stages = ModuleList()\n        embed_dims = self.embed_dims\n        input_resolution = patches_resolution\n        for i, (depth,\n                num_heads) in enumerate(zip(self.depths, self.num_heads)):\n            if isinstance(stage_cfgs, Sequence):\n                stage_cfg = stage_cfgs[i]\n            else:\n                stage_cfg = deepcopy(stage_cfgs)\n            downsample = True if i < self.num_layers - 1 else False\n            _stage_cfg = {\n                'embed_dims': embed_dims,\n                'depth': depth,\n                'num_heads': num_heads,\n                'downsample': downsample,\n                'input_resolution': input_resolution,\n                'drop_paths': dpr[:depth],\n                'auto_pad': auto_pad,\n                **stage_cfg\n            }\n\n            stage = SwinBlockSequence(**_stage_cfg)\n            # 冻结某几层frozen_stages\n            if(frozen_stages==0 or (i in range(0,frozen_stages))):\n                stage.eval()\n                for param in stage.parameters():\n                    param.requires_grad = False\n            \n            self.stages.append(stage)\n\n            dpr = dpr[depth:]\n            if downsample:\n                embed_dims = stage.downsample.out_channels\n                input_resolution = stage.downsample.output_resolution\n            \n\n        if norm_cfg is not None:\n            self.norm = build_norm_layer(norm_cfg, embed_dims)[1]\n        else:\n            self.norm = None\n\n    def init_weights(self):\n        super(SwinTransformer, self).init_weights()\n\n        if self.use_abs_pos_embed:\n            trunc_normal_(self.absolute_pos_embed, std=0.02)\n\n    def forward(self, x):\n        x = self.patch_embed(x)\n        if self.use_abs_pos_embed:\n            x = x + self.absolute_pos_embed\n        x = self.drop_after_pos(x)\n\n        for stage in self.stages:\n            x = stage(x)\n\n        x = self.norm(x) if self.norm else x\n\n        return x.transpose(1, 2)\n```\n\n","source":"_posts/deep_learning/swin.md","raw":"---\ntitle: swin网络\ntags: [深度学习,swin]\ncategories: [深度学习,网络架构]\ndate: 2021-08-25 11:27:25\n---\n\n> swin_transformer的结构和代码实现部分，在此基础上添加freeze的相关操作，记录如下。\n\n## 论文中的架构\n\n![](https://picture.mulindya.com/swin-pic1.png)\n\n## 论文笔记\n\n<details>\n<summary>Swin Transformer:Hierarchical Vision Transformer using Shifted Windows</summary>\n<iframe src='/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/Swin%20Transformer%20Hierarchical%20Vision%20Transformer%20using%20Shifted%20Windows.pdf' width=100% height=650></iframe>\n</details>\n\n## model架构\n\n``` python\nImageClassifier(\n  (backbone): SwinTransformer(\n    (patch_embed): PatchEmbed(\n      (projection): Conv2d(3, 96, kernel_size=(4, 4), stride=(4, 4))\n      (norm): LayerNorm((96,), eps=1e-05, elementwise_affine=True)\n    )\n    (drop_after_pos): Dropout(p=0.0, inplace=False)\n    (stages): ModuleList(\n      (0): SwinBlockSequence(\n        (blocks): ModuleList(\n          (0): SwinBlock(\n            (norm1): LayerNorm((96,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=96, out_features=288, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=96, out_features=96, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((96,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=96, out_features=384, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=384, out_features=96, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (1): SwinBlock(\n            (norm1): LayerNorm((96,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=96, out_features=288, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=96, out_features=96, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((96,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=96, out_features=384, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=384, out_features=96, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n        )\n        (downsample): PatchMerging(\n          (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))\n          (norm): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n          (reduction): Linear(in_features=384, out_features=192, bias=False)\n        )\n      )\n      (1): SwinBlockSequence(\n        (blocks): ModuleList(\n          (0): SwinBlock(\n            (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=192, out_features=576, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=192, out_features=192, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=192, out_features=768, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=768, out_features=192, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (1): SwinBlock(\n            (norm1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=192, out_features=576, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=192, out_features=192, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=192, out_features=768, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=768, out_features=192, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n        )\n        (downsample): PatchMerging(\n          (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))\n          (norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)\n          (reduction): Linear(in_features=768, out_features=384, bias=False)\n        )\n      )\n      (2): SwinBlockSequence(\n        (blocks): ModuleList(\n          (0): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (1): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (2): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (3): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (4): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (5): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (6): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (7): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (8): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (9): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (10): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (11): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (12): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (13): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (14): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (15): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (16): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (17): SwinBlock(\n            (norm1): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=384, out_features=1152, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=384, out_features=384, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((384,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=384, out_features=1536, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=1536, out_features=384, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n        )\n        (downsample): PatchMerging(\n          (sampler): Unfold(kernel_size=(2, 2), dilation=(1, 1), padding=(0, 0), stride=(2, 2))\n          (norm): LayerNorm((1536,), eps=1e-05, elementwise_affine=True)\n          (reduction): Linear(in_features=1536, out_features=768, bias=False)\n        )\n      )\n      (3): SwinBlockSequence(\n        (blocks): ModuleList(\n          (0): SwinBlock(\n            (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=768, out_features=2304, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=768, out_features=768, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=768, out_features=3072, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=3072, out_features=768, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n          (1): SwinBlock(\n            (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)\n            (attn): ShiftWindowMSA(\n              (w_msa): WindowMSA(\n                (qkv): Linear(in_features=768, out_features=2304, bias=True)\n                (attn_drop): Dropout(p=0, inplace=False)\n                (proj): Linear(in_features=768, out_features=768, bias=True)\n                (proj_drop): Dropout(p=0, inplace=False)\n                (softmax): Softmax(dim=-1)\n              )\n              (drop): DropPath()\n            )\n            (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)\n            (ffn): FFN(\n              (activate): GELU()\n              (layers): Sequential(\n                (0): Sequential(\n                  (0): Linear(in_features=768, out_features=3072, bias=True)\n                  (1): GELU()\n                  (2): Dropout(p=0, inplace=False)\n                )\n                (1): Linear(in_features=3072, out_features=768, bias=True)\n                (2): Dropout(p=0, inplace=False)\n              )\n              (dropout_layer): DropPath()\n            )\n          )\n        )\n      )\n    )\n    (norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)\n  )\n  (neck): GlobalAveragePooling(\n    (gap): AdaptiveAvgPool1d(output_size=1)\n  )\n  (head): MultiLabelLinearClsHead(\n    (compute_loss): CrossEntropyLoss()\n    (fc): Linear(in_features=768, out_features=11, bias=True)\n  )\n)\n```\n\n## 代码\n\n添加fronzen_stages:\n\n> 该参数表示你想冻结前几个 stages 的权重，swin 结构包括 4 stage内部结构(2,2,18,2)\n>\n> frozen_stages=-1，表示全部可学习\n>\n> frozen_stage=0，表示stem权重固定\n>\n> frozen_stages=1，表示 stem 和第一个 stage 权重固定\n>\n> frozen_stages=2，表示 stem 和前两个 stage 权重固定\n\n```python\nstage = SwinBlockSequence(**_stage_cfg)\n# 冻结某几层frozen_stages\nif(frozen_stages==0 or (i in range(0,frozen_stages))):\n\tstage.eval()\n\tfor param in stage.parameters():\n\t\tparam.requires_grad = False\n```\n\n全部代码\n\n```python\nfrom copy import deepcopy\nfrom typing import Sequence\n\nimport torch\nimport torch.nn as nn\nfrom mmcv.cnn import build_norm_layer\nfrom mmcv.cnn.bricks.transformer import FFN\nfrom mmcv.cnn.utils.weight_init import trunc_normal_\nfrom mmcv.runner.base_module import BaseModule, ModuleList\n\nfrom ..builder import BACKBONES\nfrom ..utils import PatchEmbed, PatchMerging, ShiftWindowMSA\nfrom .base_backbone import BaseBackbone\n\n\nclass SwinBlock(BaseModule):\n    \"\"\"Swin Transformer block.\n\n    Args:\n        embed_dims (int): Number of input channels.\n        input_resolution (Tuple[int, int]): The resolution of the input feature\n            map.\n        num_heads (int): Number of attention heads.\n        window_size (int, optional): The height and width of the window.\n            Defaults to 7.\n        shift (bool, optional): Shift the attention window or not.\n            Defaults to False.\n        ffn_ratio (float, optional): The expansion ratio of feedforward network\n            hidden layer channels. Defaults to 4.\n        drop_path (float, optional): The drop path rate after attention and\n            ffn. Defaults to 0.\n        attn_cfgs (dict, optional): The extra config of Shift Window-MSA.\n            Defaults to empty dict.\n        ffn_cfgs (dict, optional): The extra config of FFN.\n            Defaults to empty dict.\n        norm_cfg (dict, optional): The config of norm layers.\n            Defaults to dict(type='LN').\n        auto_pad (bool, optional): Auto pad the feature map to be divisible by\n            window_size, Defaults to False.\n        init_cfg (dict, optional): The extra config for initialization.\n            Default: None.\n    \"\"\"\n\n    def __init__(self,\n                 embed_dims,\n                 input_resolution,\n                 num_heads,\n                 window_size=7,\n                 shift=False,\n                 ffn_ratio=4.,\n                 drop_path=0.,\n                 attn_cfgs=dict(),\n                 ffn_cfgs=dict(),\n                 norm_cfg=dict(type='LN'),\n                 auto_pad=False,\n                 init_cfg=None):\n\n        super(SwinBlock, self).__init__(init_cfg)\n\n        _attn_cfgs = {\n            'embed_dims': embed_dims,\n            'input_resolution': input_resolution,\n            'num_heads': num_heads,\n            'shift_size': window_size // 2 if shift else 0,\n            'window_size': window_size,\n            'dropout_layer': dict(type='DropPath', drop_prob=drop_path),\n            'auto_pad': auto_pad,\n            **attn_cfgs\n        }\n        self.norm1 = build_norm_layer(norm_cfg, embed_dims)[1]\n        self.attn = ShiftWindowMSA(**_attn_cfgs)\n\n        _ffn_cfgs = {\n            'embed_dims': embed_dims,\n            'feedforward_channels': int(embed_dims * ffn_ratio),\n            'num_fcs': 2,\n            'ffn_drop': 0,\n            'dropout_layer': dict(type='DropPath', drop_prob=drop_path),\n            'act_cfg': dict(type='GELU'),\n            **ffn_cfgs\n        }\n        self.norm2 = build_norm_layer(norm_cfg, embed_dims)[1]\n        self.ffn = FFN(**_ffn_cfgs)\n\n    def forward(self, x):\n        identity = x\n        x = self.norm1(x)\n        x = self.attn(x)\n        x = x + identity\n\n        identity = x\n        x = self.norm2(x)\n        x = self.ffn(x, identity=identity)\n        return x\n\n\nclass SwinBlockSequence(BaseModule):\n    \"\"\"Module with successive Swin Transformer blocks and downsample layer.\n\n    Args:\n        embed_dims (int): Number of input channels.\n        input_resolution (Tuple[int, int]): The resolution of the input feature\n            map.\n        depth (int): Number of successive swin transformer blocks.\n        num_heads (int): Number of attention heads.\n        downsample (bool, optional): Downsample the output of blocks by patch\n            merging. Defaults to False.\n        downsample_cfg (dict, optional): The extra config of the patch merging\n            layer. Defaults to empty dict.\n        drop_paths (Sequence[float] | float, optional): The drop path rate in\n            each block. Defaults to 0.\n        block_cfgs (Sequence[dict] | dict, optional): The extra config of each\n            block. Defaults to empty dicts.\n        auto_pad (bool, optional): Auto pad the feature map to be divisible by\n            window_size, Defaults to False.\n        init_cfg (dict, optional): The extra config for initialization.\n            Default: None.\n    \"\"\"\n\n    def __init__(self,\n                 embed_dims,\n                 input_resolution,\n                 depth,\n                 num_heads,\n                 downsample=False,\n                 downsample_cfg=dict(),\n                 drop_paths=0.,\n                 block_cfgs=dict(),\n                 auto_pad=False,\n                 init_cfg=None):\n        super().__init__(init_cfg)\n\n        if not isinstance(drop_paths, Sequence):\n            drop_paths = [drop_paths] * depth\n\n        if not isinstance(block_cfgs, Sequence):\n            block_cfg = [deepcopy(block_cfgs) for _ in range(depth)]\n\n        self.blocks = ModuleList()\n        for i in range(depth):\n            _block_cfg = {\n                'embed_dims': embed_dims,\n                'input_resolution': input_resolution,\n                'num_heads': num_heads,\n                'shift': False if i % 2 == 0 else True,\n                'drop_path': drop_paths[i],\n                'auto_pad': auto_pad,\n                **block_cfg[i]\n            }\n            block = SwinBlock(**_block_cfg)\n            self.blocks.append(block)\n\n        if downsample:\n            _downsample_cfg = {\n                'input_resolution': input_resolution,\n                'in_channels': embed_dims,\n                'expansion_ratio': 2,\n                'norm_cfg': dict(type='LN'),\n                **downsample_cfg\n            }\n            self.downsample = PatchMerging(**_downsample_cfg)\n        else:\n            self.downsample = None\n\n    def forward(self, x):\n        for block in self.blocks:\n            x = block(x)\n\n        if self.downsample:\n            x = self.downsample(x)\n        return x\n\n\n@BACKBONES.register_module()\nclass SwinTransformer(BaseBackbone):\n    \"\"\" Swin Transformer\n    A PyTorch implement of : `Swin Transformer:\n    Hierarchical Vision Transformer using Shifted Windows`  -\n        https://arxiv.org/abs/2103.14030\n\n    Inspiration from\n    https://github.com/microsoft/Swin-Transformer\n\n    Args:\n        arch (str | dict): Swin Transformer architecture\n            Defaults to 'T'.\n        img_size (int | tuple): The size of input image.\n            Defaults to 224.\n        in_channels (int): The num of input channels.\n            Defaults to 3.\n        drop_rate (float): Dropout rate after embedding.\n            Defaults to 0.\n        drop_path_rate (float): Stochastic depth rate.\n            Defaults to 0.1.\n\n        # add attr\n        frozen_stages: defaults-1 dont freeze,0: all freeze,other: frozen_stages stages to freeze\n\n        use_abs_pos_embed (bool): If True, add absolute position embedding to\n            the patch embedding. Defaults to False.\n        auto_pad (bool): If True, auto pad feature map to fit window_size.\n            Defaults to False.\n        norm_cfg (dict, optional): Config dict for normalization layer at end\n            of backone. Defaults to dict(type='LN')\n        stage_cfgs (Sequence | dict, optional): Extra config dict for each\n            stage. Defaults to empty dict.\n        patch_cfg (dict, optional): Extra config dict for patch embedding.\n            Defaults to empty dict.\n        init_cfg (dict, optional): The Config for initialization.\n            Defaults to None.\n\n    Examples:\n        >>> from mmcls.models import SwinTransformer\n        >>> import torch\n        >>> extra_config = dict(\n        >>>     arch='tiny',\n        >>>     stage_cfgs=dict(downsample_cfg={'kernel_size': 3,\n        >>>                                     'expansion_ratio': 3}),\n        >>>     auto_pad=True)\n        >>> self = SwinTransformer(**extra_config)\n        >>> inputs = torch.rand(1, 3, 224, 224)\n        >>> output = self.forward(inputs)\n        >>> print(output.shape)\n        (1, 2592, 4)\n    \"\"\"\n    arch_zoo = {\n        **dict.fromkeys(['t', 'tiny'],\n                        {'embed_dims': 96,\n                         'depths':     [2, 2,  6,  2],\n                         'num_heads':  [3, 6, 12, 24]}),\n        **dict.fromkeys(['s', 'small'],\n                        {'embed_dims': 96,\n                         'depths':     [2, 2, 18,  2],\n                         'num_heads':  [3, 6, 12, 24]}),\n        **dict.fromkeys(['b', 'base'],\n                        {'embed_dims': 128,\n                         'depths':     [2, 2, 18,  2],\n                         'num_heads':  [4, 8, 16, 32]}),\n        **dict.fromkeys(['l', 'large'],\n                        {'embed_dims': 192,\n                         'depths':     [2,  2, 18,  2],\n                         'num_heads':  [6, 12, 24, 48]}),\n    }  # yapf: disable\n\n    def __init__(self,\n                 arch='T',\n                 img_size=224,\n                 in_channels=3,\n                 drop_rate=0.,\n                 drop_path_rate=0.1,\n                 frozen_stages=-1,\n                 use_abs_pos_embed=False,\n                 auto_pad=False,\n                 norm_cfg=dict(type='LN'),\n                 stage_cfgs=dict(),\n                 patch_cfg=dict(),\n                 init_cfg=None):\n        super(SwinTransformer, self).__init__(init_cfg)\n\n        if isinstance(arch, str):\n            arch = arch.lower()\n            assert arch in set(self.arch_zoo), \\\n                f'Arch {arch} is not in default archs {set(self.arch_zoo)}'\n            self.arch_settings = self.arch_zoo[arch]\n        else:\n            essential_keys = {'embed_dims', 'depths', 'num_head'}\n            assert isinstance(arch, dict) and set(arch) == essential_keys, \\\n                f'Custom arch needs a dict with keys {essential_keys}'\n            self.arch_settings = arch\n\n        self.embed_dims = self.arch_settings['embed_dims']\n        self.depths = self.arch_settings['depths']\n        self.num_heads = self.arch_settings['num_heads']\n        self.num_layers = len(self.depths)\n        self.use_abs_pos_embed = use_abs_pos_embed\n        self.auto_pad = auto_pad\n\n        _patch_cfg = dict(\n            img_size=img_size,\n            in_channels=in_channels,\n            embed_dims=self.embed_dims,\n            conv_cfg=dict(\n                type='Conv2d', kernel_size=4, stride=4, padding=0, dilation=1),\n            norm_cfg=dict(type='LN'),\n            **patch_cfg)\n        self.patch_embed = PatchEmbed(**_patch_cfg)\n        num_patches = self.patch_embed.num_patches\n        patches_resolution = self.patch_embed.patches_resolution\n        self.patches_resolution = patches_resolution\n\n        if self.use_abs_pos_embed:\n            self.absolute_pos_embed = nn.Parameter(\n                torch.zeros(1, num_patches, self.embed_dims))\n\n        self.drop_after_pos = nn.Dropout(p=drop_rate)\n\n        # stochastic depth\n        total_depth = sum(self.depths)\n        dpr = [\n            x.item() for x in torch.linspace(0, drop_path_rate, total_depth)\n        ]  # stochastic depth decay rule\n\n        self.stages = ModuleList()\n        embed_dims = self.embed_dims\n        input_resolution = patches_resolution\n        for i, (depth,\n                num_heads) in enumerate(zip(self.depths, self.num_heads)):\n            if isinstance(stage_cfgs, Sequence):\n                stage_cfg = stage_cfgs[i]\n            else:\n                stage_cfg = deepcopy(stage_cfgs)\n            downsample = True if i < self.num_layers - 1 else False\n            _stage_cfg = {\n                'embed_dims': embed_dims,\n                'depth': depth,\n                'num_heads': num_heads,\n                'downsample': downsample,\n                'input_resolution': input_resolution,\n                'drop_paths': dpr[:depth],\n                'auto_pad': auto_pad,\n                **stage_cfg\n            }\n\n            stage = SwinBlockSequence(**_stage_cfg)\n            # 冻结某几层frozen_stages\n            if(frozen_stages==0 or (i in range(0,frozen_stages))):\n                stage.eval()\n                for param in stage.parameters():\n                    param.requires_grad = False\n            \n            self.stages.append(stage)\n\n            dpr = dpr[depth:]\n            if downsample:\n                embed_dims = stage.downsample.out_channels\n                input_resolution = stage.downsample.output_resolution\n            \n\n        if norm_cfg is not None:\n            self.norm = build_norm_layer(norm_cfg, embed_dims)[1]\n        else:\n            self.norm = None\n\n    def init_weights(self):\n        super(SwinTransformer, self).init_weights()\n\n        if self.use_abs_pos_embed:\n            trunc_normal_(self.absolute_pos_embed, std=0.02)\n\n    def forward(self, x):\n        x = self.patch_embed(x)\n        if self.use_abs_pos_embed:\n            x = x + self.absolute_pos_embed\n        x = self.drop_after_pos(x)\n\n        for stage in self.stages:\n            x = stage(x)\n\n        x = self.norm(x) if self.norm else x\n\n        return x.transpose(1, 2)\n```\n\n","slug":"deep_learning/swin","published":1,"updated":"2021-08-27T02:50:31.929Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cksvnxoew00bpugx40iephwan","content":"<blockquote>\n<p>swin_transformer的结构和代码实现部分，在此基础上添加freeze的相关操作，记录如下。</p>\n</blockquote>\n<h2 id=\"论文中的架构\">论文中的架构</h2>\n<p><img src=\"https://picture.mulindya.com/swin-pic1.png\" alt=\"\"></p>\n<h2 id=\"论文笔记\">论文笔记</h2>\n<details>\n<summary>Swin Transformer:Hierarchical Vision Transformer using Shifted Windows</summary>\n<iframe src=\"/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/Swin%20Transformer%20Hierarchical%20Vision%20Transformer%20using%20Shifted%20Windows.pdf\" width=\"100%\" height=\"650\"></iframe>\n</details>\n<h2 id=\"model架构\">model架构</h2>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\">ImageClassifier(<br>  (backbone): SwinTransformer(<br>    (patch_embed): PatchEmbed(<br>      (projection): Conv2d(<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">96</span>, kernel_size=(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>), stride=(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>))<br>      (norm): LayerNorm((<span class=\"hljs-number\">96</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>    )<br>    (drop_after_pos): Dropout(p=<span class=\"hljs-number\">0.0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>    (stages): ModuleList(<br>      (<span class=\"hljs-number\">0</span>): SwinBlockSequence(<br>        (blocks): ModuleList(<br>          (<span class=\"hljs-number\">0</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">96</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">96</span>, out_features=<span class=\"hljs-number\">288</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">96</span>, out_features=<span class=\"hljs-number\">96</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">96</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">96</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">96</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">1</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">96</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">96</span>, out_features=<span class=\"hljs-number\">288</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">96</span>, out_features=<span class=\"hljs-number\">96</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">96</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">96</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">96</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>        )<br>        (downsample): PatchMerging(<br>          (sampler): Unfold(kernel_size=(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>), dilation=(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>), padding=(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>), stride=(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>))<br>          (norm): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>          (reduction): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">192</span>, bias=<span class=\"hljs-literal\">False</span>)<br>        )<br>      )<br>      (<span class=\"hljs-number\">1</span>): SwinBlockSequence(<br>        (blocks): ModuleList(<br>          (<span class=\"hljs-number\">0</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">192</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">192</span>, out_features=<span class=\"hljs-number\">576</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">192</span>, out_features=<span class=\"hljs-number\">192</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">192</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">192</span>, out_features=<span class=\"hljs-number\">768</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">768</span>, out_features=<span class=\"hljs-number\">192</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">1</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">192</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">192</span>, out_features=<span class=\"hljs-number\">576</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">192</span>, out_features=<span class=\"hljs-number\">192</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">192</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">192</span>, out_features=<span class=\"hljs-number\">768</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">768</span>, out_features=<span class=\"hljs-number\">192</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>        )<br>        (downsample): PatchMerging(<br>          (sampler): Unfold(kernel_size=(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>), dilation=(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>), padding=(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>), stride=(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>))<br>          (norm): LayerNorm((<span class=\"hljs-number\">768</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>          (reduction): Linear(in_features=<span class=\"hljs-number\">768</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">False</span>)<br>        )<br>      )<br>      (<span class=\"hljs-number\">2</span>): SwinBlockSequence(<br>        (blocks): ModuleList(<br>          (<span class=\"hljs-number\">0</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">1</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">2</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">3</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">4</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">5</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">6</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">7</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">8</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">9</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">10</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">11</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">12</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">13</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">14</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">15</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">16</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">17</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>        )<br>        (downsample): PatchMerging(<br>          (sampler): Unfold(kernel_size=(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>), dilation=(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>), padding=(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>), stride=(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>))<br>          (norm): LayerNorm((<span class=\"hljs-number\">1536</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>          (reduction): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">768</span>, bias=<span class=\"hljs-literal\">False</span>)<br>        )<br>      )<br>      (<span class=\"hljs-number\">3</span>): SwinBlockSequence(<br>        (blocks): ModuleList(<br>          (<span class=\"hljs-number\">0</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">768</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">768</span>, out_features=<span class=\"hljs-number\">2304</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">768</span>, out_features=<span class=\"hljs-number\">768</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">768</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">768</span>, out_features=<span class=\"hljs-number\">3072</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">3072</span>, out_features=<span class=\"hljs-number\">768</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">1</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">768</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">768</span>, out_features=<span class=\"hljs-number\">2304</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">768</span>, out_features=<span class=\"hljs-number\">768</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">768</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">768</span>, out_features=<span class=\"hljs-number\">3072</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">3072</span>, out_features=<span class=\"hljs-number\">768</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>        )<br>      )<br>    )<br>    (norm): LayerNorm((<span class=\"hljs-number\">768</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>  )<br>  (neck): GlobalAveragePooling(<br>    (gap): AdaptiveAvgPool1d(output_size=<span class=\"hljs-number\">1</span>)<br>  )<br>  (head): MultiLabelLinearClsHead(<br>    (compute_loss): CrossEntropyLoss()<br>    (fc): Linear(in_features=<span class=\"hljs-number\">768</span>, out_features=<span class=\"hljs-number\">11</span>, bias=<span class=\"hljs-literal\">True</span>)<br>  )<br>)<br></code></pre></td></tr></tbody></table></figure>\n<h2 id=\"代码\">代码</h2>\n<p>添加fronzen_stages:</p>\n<blockquote>\n<p>该参数表示你想冻结前几个 stages 的权重，swin 结构包括 4 stage内部结构(2,2,18,2)</p>\n<p>frozen_stages=-1，表示全部可学习</p>\n<p>frozen_stage=0，表示stem权重固定</p>\n<p>frozen_stages=1，表示 stem 和第一个 stage 权重固定</p>\n<p>frozen_stages=2，表示 stem 和前两个 stage 权重固定</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\">stage = SwinBlockSequence(**_stage_cfg)<br><span class=\"hljs-comment\"># 冻结某几层frozen_stages</span><br><span class=\"hljs-keyword\">if</span>(frozen_stages==<span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">or</span> (i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">0</span>,frozen_stages))):<br>\tstage.<span class=\"hljs-built_in\">eval</span>()<br>\t<span class=\"hljs-keyword\">for</span> param <span class=\"hljs-keyword\">in</span> stage.parameters():<br>\t\tparam.requires_grad = <span class=\"hljs-literal\">False</span><br></code></pre></td></tr></tbody></table></figure>\n<p>全部代码</p>\n<figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">from</span> copy <span class=\"hljs-keyword\">import</span> deepcopy<br><span class=\"hljs-keyword\">from</span> typing <span class=\"hljs-keyword\">import</span> <span class=\"hljs-type\">Sequence</span><br><br><span class=\"hljs-keyword\">import</span> torch<br><span class=\"hljs-keyword\">import</span> torch.nn <span class=\"hljs-keyword\">as</span> nn<br><span class=\"hljs-keyword\">from</span> mmcv.cnn <span class=\"hljs-keyword\">import</span> build_norm_layer<br><span class=\"hljs-keyword\">from</span> mmcv.cnn.bricks.transformer <span class=\"hljs-keyword\">import</span> FFN<br><span class=\"hljs-keyword\">from</span> mmcv.cnn.utils.weight_init <span class=\"hljs-keyword\">import</span> trunc_normal_<br><span class=\"hljs-keyword\">from</span> mmcv.runner.base_module <span class=\"hljs-keyword\">import</span> BaseModule, ModuleList<br><br><span class=\"hljs-keyword\">from</span> ..builder <span class=\"hljs-keyword\">import</span> BACKBONES<br><span class=\"hljs-keyword\">from</span> ..utils <span class=\"hljs-keyword\">import</span> PatchEmbed, PatchMerging, ShiftWindowMSA<br><span class=\"hljs-keyword\">from</span> .base_backbone <span class=\"hljs-keyword\">import</span> BaseBackbone<br><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SwinBlock</span>(<span class=\"hljs-params\">BaseModule</span>):</span><br>    <span class=\"hljs-string\">\"\"\"Swin Transformer block.</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">    Args:</span><br><span class=\"hljs-string\">        embed_dims (int): Number of input channels.</span><br><span class=\"hljs-string\">        input_resolution (Tuple[int, int]): The resolution of the input feature</span><br><span class=\"hljs-string\">            map.</span><br><span class=\"hljs-string\">        num_heads (int): Number of attention heads.</span><br><span class=\"hljs-string\">        window_size (int, optional): The height and width of the window.</span><br><span class=\"hljs-string\">            Defaults to 7.</span><br><span class=\"hljs-string\">        shift (bool, optional): Shift the attention window or not.</span><br><span class=\"hljs-string\">            Defaults to False.</span><br><span class=\"hljs-string\">        ffn_ratio (float, optional): The expansion ratio of feedforward network</span><br><span class=\"hljs-string\">            hidden layer channels. Defaults to 4.</span><br><span class=\"hljs-string\">        drop_path (float, optional): The drop path rate after attention and</span><br><span class=\"hljs-string\">            ffn. Defaults to 0.</span><br><span class=\"hljs-string\">        attn_cfgs (dict, optional): The extra config of Shift Window-MSA.</span><br><span class=\"hljs-string\">            Defaults to empty dict.</span><br><span class=\"hljs-string\">        ffn_cfgs (dict, optional): The extra config of FFN.</span><br><span class=\"hljs-string\">            Defaults to empty dict.</span><br><span class=\"hljs-string\">        norm_cfg (dict, optional): The config of norm layers.</span><br><span class=\"hljs-string\">            Defaults to dict(type='LN').</span><br><span class=\"hljs-string\">        auto_pad (bool, optional): Auto pad the feature map to be divisible by</span><br><span class=\"hljs-string\">            window_size, Defaults to False.</span><br><span class=\"hljs-string\">        init_cfg (dict, optional): The extra config for initialization.</span><br><span class=\"hljs-string\">            Default: None.</span><br><span class=\"hljs-string\">    \"\"\"</span><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">__init__</span>(<span class=\"hljs-params\">self,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 embed_dims,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 input_resolution,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 num_heads,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 window_size=<span class=\"hljs-number\">7</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 shift=<span class=\"hljs-literal\">False</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 ffn_ratio=<span class=\"hljs-number\">4.</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 drop_path=<span class=\"hljs-number\">0.</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 attn_cfgs=<span class=\"hljs-built_in\">dict</span>(<span class=\"hljs-params\"></span>),</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 ffn_cfgs=<span class=\"hljs-built_in\">dict</span>(<span class=\"hljs-params\"></span>),</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 norm_cfg=<span class=\"hljs-built_in\">dict</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">type</span>=<span class=\"hljs-string\">'LN'</span></span>),</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 auto_pad=<span class=\"hljs-literal\">False</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 init_cfg=<span class=\"hljs-literal\">None</span></span>):</span><br><br>        <span class=\"hljs-built_in\">super</span>(SwinBlock, self).__init__(init_cfg)<br><br>        _attn_cfgs = {<br>            <span class=\"hljs-string\">'embed_dims'</span>: embed_dims,<br>            <span class=\"hljs-string\">'input_resolution'</span>: input_resolution,<br>            <span class=\"hljs-string\">'num_heads'</span>: num_heads,<br>            <span class=\"hljs-string\">'shift_size'</span>: window_size // <span class=\"hljs-number\">2</span> <span class=\"hljs-keyword\">if</span> shift <span class=\"hljs-keyword\">else</span> <span class=\"hljs-number\">0</span>,<br>            <span class=\"hljs-string\">'window_size'</span>: window_size,<br>            <span class=\"hljs-string\">'dropout_layer'</span>: <span class=\"hljs-built_in\">dict</span>(<span class=\"hljs-built_in\">type</span>=<span class=\"hljs-string\">'DropPath'</span>, drop_prob=drop_path),<br>            <span class=\"hljs-string\">'auto_pad'</span>: auto_pad,<br>            **attn_cfgs<br>        }<br>        self.norm1 = build_norm_layer(norm_cfg, embed_dims)[<span class=\"hljs-number\">1</span>]<br>        self.attn = ShiftWindowMSA(**_attn_cfgs)<br><br>        _ffn_cfgs = {<br>            <span class=\"hljs-string\">'embed_dims'</span>: embed_dims,<br>            <span class=\"hljs-string\">'feedforward_channels'</span>: <span class=\"hljs-built_in\">int</span>(embed_dims * ffn_ratio),<br>            <span class=\"hljs-string\">'num_fcs'</span>: <span class=\"hljs-number\">2</span>,<br>            <span class=\"hljs-string\">'ffn_drop'</span>: <span class=\"hljs-number\">0</span>,<br>            <span class=\"hljs-string\">'dropout_layer'</span>: <span class=\"hljs-built_in\">dict</span>(<span class=\"hljs-built_in\">type</span>=<span class=\"hljs-string\">'DropPath'</span>, drop_prob=drop_path),<br>            <span class=\"hljs-string\">'act_cfg'</span>: <span class=\"hljs-built_in\">dict</span>(<span class=\"hljs-built_in\">type</span>=<span class=\"hljs-string\">'GELU'</span>),<br>            **ffn_cfgs<br>        }<br>        self.norm2 = build_norm_layer(norm_cfg, embed_dims)[<span class=\"hljs-number\">1</span>]<br>        self.ffn = FFN(**_ffn_cfgs)<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">forward</span>(<span class=\"hljs-params\">self, x</span>):</span><br>        identity = x<br>        x = self.norm1(x)<br>        x = self.attn(x)<br>        x = x + identity<br><br>        identity = x<br>        x = self.norm2(x)<br>        x = self.ffn(x, identity=identity)<br>        <span class=\"hljs-keyword\">return</span> x<br><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SwinBlockSequence</span>(<span class=\"hljs-params\">BaseModule</span>):</span><br>    <span class=\"hljs-string\">\"\"\"Module with successive Swin Transformer blocks and downsample layer.</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">    Args:</span><br><span class=\"hljs-string\">        embed_dims (int): Number of input channels.</span><br><span class=\"hljs-string\">        input_resolution (Tuple[int, int]): The resolution of the input feature</span><br><span class=\"hljs-string\">            map.</span><br><span class=\"hljs-string\">        depth (int): Number of successive swin transformer blocks.</span><br><span class=\"hljs-string\">        num_heads (int): Number of attention heads.</span><br><span class=\"hljs-string\">        downsample (bool, optional): Downsample the output of blocks by patch</span><br><span class=\"hljs-string\">            merging. Defaults to False.</span><br><span class=\"hljs-string\">        downsample_cfg (dict, optional): The extra config of the patch merging</span><br><span class=\"hljs-string\">            layer. Defaults to empty dict.</span><br><span class=\"hljs-string\">        drop_paths (Sequence[float] | float, optional): The drop path rate in</span><br><span class=\"hljs-string\">            each block. Defaults to 0.</span><br><span class=\"hljs-string\">        block_cfgs (Sequence[dict] | dict, optional): The extra config of each</span><br><span class=\"hljs-string\">            block. Defaults to empty dicts.</span><br><span class=\"hljs-string\">        auto_pad (bool, optional): Auto pad the feature map to be divisible by</span><br><span class=\"hljs-string\">            window_size, Defaults to False.</span><br><span class=\"hljs-string\">        init_cfg (dict, optional): The extra config for initialization.</span><br><span class=\"hljs-string\">            Default: None.</span><br><span class=\"hljs-string\">    \"\"\"</span><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">__init__</span>(<span class=\"hljs-params\">self,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 embed_dims,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 input_resolution,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 depth,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 num_heads,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 downsample=<span class=\"hljs-literal\">False</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 downsample_cfg=<span class=\"hljs-built_in\">dict</span>(<span class=\"hljs-params\"></span>),</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 drop_paths=<span class=\"hljs-number\">0.</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 block_cfgs=<span class=\"hljs-built_in\">dict</span>(<span class=\"hljs-params\"></span>),</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 auto_pad=<span class=\"hljs-literal\">False</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 init_cfg=<span class=\"hljs-literal\">None</span></span>):</span><br>        <span class=\"hljs-built_in\">super</span>().__init__(init_cfg)<br><br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-built_in\">isinstance</span>(drop_paths, <span class=\"hljs-type\">Sequence</span>):<br>            drop_paths = [drop_paths] * depth<br><br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-built_in\">isinstance</span>(block_cfgs, <span class=\"hljs-type\">Sequence</span>):<br>            block_cfg = [deepcopy(block_cfgs) <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(depth)]<br><br>        self.blocks = ModuleList()<br>        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(depth):<br>            _block_cfg = {<br>                <span class=\"hljs-string\">'embed_dims'</span>: embed_dims,<br>                <span class=\"hljs-string\">'input_resolution'</span>: input_resolution,<br>                <span class=\"hljs-string\">'num_heads'</span>: num_heads,<br>                <span class=\"hljs-string\">'shift'</span>: <span class=\"hljs-literal\">False</span> <span class=\"hljs-keyword\">if</span> i % <span class=\"hljs-number\">2</span> == <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">else</span> <span class=\"hljs-literal\">True</span>,<br>                <span class=\"hljs-string\">'drop_path'</span>: drop_paths[i],<br>                <span class=\"hljs-string\">'auto_pad'</span>: auto_pad,<br>                **block_cfg[i]<br>            }<br>            block = SwinBlock(**_block_cfg)<br>            self.blocks.append(block)<br><br>        <span class=\"hljs-keyword\">if</span> downsample:<br>            _downsample_cfg = {<br>                <span class=\"hljs-string\">'input_resolution'</span>: input_resolution,<br>                <span class=\"hljs-string\">'in_channels'</span>: embed_dims,<br>                <span class=\"hljs-string\">'expansion_ratio'</span>: <span class=\"hljs-number\">2</span>,<br>                <span class=\"hljs-string\">'norm_cfg'</span>: <span class=\"hljs-built_in\">dict</span>(<span class=\"hljs-built_in\">type</span>=<span class=\"hljs-string\">'LN'</span>),<br>                **downsample_cfg<br>            }<br>            self.downsample = PatchMerging(**_downsample_cfg)<br>        <span class=\"hljs-keyword\">else</span>:<br>            self.downsample = <span class=\"hljs-literal\">None</span><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">forward</span>(<span class=\"hljs-params\">self, x</span>):</span><br>        <span class=\"hljs-keyword\">for</span> block <span class=\"hljs-keyword\">in</span> self.blocks:<br>            x = block(x)<br><br>        <span class=\"hljs-keyword\">if</span> self.downsample:<br>            x = self.downsample(x)<br>        <span class=\"hljs-keyword\">return</span> x<br><br><br><span class=\"hljs-meta\">@BACKBONES.register_module()</span><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SwinTransformer</span>(<span class=\"hljs-params\">BaseBackbone</span>):</span><br>    <span class=\"hljs-string\">\"\"\" Swin Transformer</span><br><span class=\"hljs-string\">    A PyTorch implement of : `Swin Transformer:</span><br><span class=\"hljs-string\">    Hierarchical Vision Transformer using Shifted Windows`  -</span><br><span class=\"hljs-string\">        https://arxiv.org/abs/2103.14030</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">    Inspiration from</span><br><span class=\"hljs-string\">    https://github.com/microsoft/Swin-Transformer</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">    Args:</span><br><span class=\"hljs-string\">        arch (str | dict): Swin Transformer architecture</span><br><span class=\"hljs-string\">            Defaults to 'T'.</span><br><span class=\"hljs-string\">        img_size (int | tuple): The size of input image.</span><br><span class=\"hljs-string\">            Defaults to 224.</span><br><span class=\"hljs-string\">        in_channels (int): The num of input channels.</span><br><span class=\"hljs-string\">            Defaults to 3.</span><br><span class=\"hljs-string\">        drop_rate (float): Dropout rate after embedding.</span><br><span class=\"hljs-string\">            Defaults to 0.</span><br><span class=\"hljs-string\">        drop_path_rate (float): Stochastic depth rate.</span><br><span class=\"hljs-string\">            Defaults to 0.1.</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">        # add attr</span><br><span class=\"hljs-string\">        frozen_stages: defaults-1 dont freeze,0: all freeze,other: frozen_stages stages to freeze</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">        use_abs_pos_embed (bool): If True, add absolute position embedding to</span><br><span class=\"hljs-string\">            the patch embedding. Defaults to False.</span><br><span class=\"hljs-string\">        auto_pad (bool): If True, auto pad feature map to fit window_size.</span><br><span class=\"hljs-string\">            Defaults to False.</span><br><span class=\"hljs-string\">        norm_cfg (dict, optional): Config dict for normalization layer at end</span><br><span class=\"hljs-string\">            of backone. Defaults to dict(type='LN')</span><br><span class=\"hljs-string\">        stage_cfgs (Sequence | dict, optional): Extra config dict for each</span><br><span class=\"hljs-string\">            stage. Defaults to empty dict.</span><br><span class=\"hljs-string\">        patch_cfg (dict, optional): Extra config dict for patch embedding.</span><br><span class=\"hljs-string\">            Defaults to empty dict.</span><br><span class=\"hljs-string\">        init_cfg (dict, optional): The Config for initialization.</span><br><span class=\"hljs-string\">            Defaults to None.</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">    Examples:</span><br><span class=\"hljs-string\">        &gt;&gt;&gt; from mmcls.models import SwinTransformer</span><br><span class=\"hljs-string\">        &gt;&gt;&gt; import torch</span><br><span class=\"hljs-string\">        &gt;&gt;&gt; extra_config = dict(</span><br><span class=\"hljs-string\">        &gt;&gt;&gt;     arch='tiny',</span><br><span class=\"hljs-string\">        &gt;&gt;&gt;     stage_cfgs=dict(downsample_cfg={'kernel_size': 3,</span><br><span class=\"hljs-string\">        &gt;&gt;&gt;                                     'expansion_ratio': 3}),</span><br><span class=\"hljs-string\">        &gt;&gt;&gt;     auto_pad=True)</span><br><span class=\"hljs-string\">        &gt;&gt;&gt; self = SwinTransformer(**extra_config)</span><br><span class=\"hljs-string\">        &gt;&gt;&gt; inputs = torch.rand(1, 3, 224, 224)</span><br><span class=\"hljs-string\">        &gt;&gt;&gt; output = self.forward(inputs)</span><br><span class=\"hljs-string\">        &gt;&gt;&gt; print(output.shape)</span><br><span class=\"hljs-string\">        (1, 2592, 4)</span><br><span class=\"hljs-string\">    \"\"\"</span><br>    arch_zoo = {<br>        **<span class=\"hljs-built_in\">dict</span>.fromkeys([<span class=\"hljs-string\">'t'</span>, <span class=\"hljs-string\">'tiny'</span>],<br>                        {<span class=\"hljs-string\">'embed_dims'</span>: <span class=\"hljs-number\">96</span>,<br>                         <span class=\"hljs-string\">'depths'</span>:     [<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>,  <span class=\"hljs-number\">6</span>,  <span class=\"hljs-number\">2</span>],<br>                         <span class=\"hljs-string\">'num_heads'</span>:  [<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">24</span>]}),<br>        **<span class=\"hljs-built_in\">dict</span>.fromkeys([<span class=\"hljs-string\">'s'</span>, <span class=\"hljs-string\">'small'</span>],<br>                        {<span class=\"hljs-string\">'embed_dims'</span>: <span class=\"hljs-number\">96</span>,<br>                         <span class=\"hljs-string\">'depths'</span>:     [<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">18</span>,  <span class=\"hljs-number\">2</span>],<br>                         <span class=\"hljs-string\">'num_heads'</span>:  [<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">24</span>]}),<br>        **<span class=\"hljs-built_in\">dict</span>.fromkeys([<span class=\"hljs-string\">'b'</span>, <span class=\"hljs-string\">'base'</span>],<br>                        {<span class=\"hljs-string\">'embed_dims'</span>: <span class=\"hljs-number\">128</span>,<br>                         <span class=\"hljs-string\">'depths'</span>:     [<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">18</span>,  <span class=\"hljs-number\">2</span>],<br>                         <span class=\"hljs-string\">'num_heads'</span>:  [<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">16</span>, <span class=\"hljs-number\">32</span>]}),<br>        **<span class=\"hljs-built_in\">dict</span>.fromkeys([<span class=\"hljs-string\">'l'</span>, <span class=\"hljs-string\">'large'</span>],<br>                        {<span class=\"hljs-string\">'embed_dims'</span>: <span class=\"hljs-number\">192</span>,<br>                         <span class=\"hljs-string\">'depths'</span>:     [<span class=\"hljs-number\">2</span>,  <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">18</span>,  <span class=\"hljs-number\">2</span>],<br>                         <span class=\"hljs-string\">'num_heads'</span>:  [<span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">24</span>, <span class=\"hljs-number\">48</span>]}),<br>    }  <span class=\"hljs-comment\"># yapf: disable</span><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">__init__</span>(<span class=\"hljs-params\">self,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 arch=<span class=\"hljs-string\">'T'</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 img_size=<span class=\"hljs-number\">224</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 in_channels=<span class=\"hljs-number\">3</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 drop_rate=<span class=\"hljs-number\">0.</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 drop_path_rate=<span class=\"hljs-number\">0.1</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 frozen_stages=-<span class=\"hljs-number\">1</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 use_abs_pos_embed=<span class=\"hljs-literal\">False</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 auto_pad=<span class=\"hljs-literal\">False</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 norm_cfg=<span class=\"hljs-built_in\">dict</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">type</span>=<span class=\"hljs-string\">'LN'</span></span>),</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 stage_cfgs=<span class=\"hljs-built_in\">dict</span>(<span class=\"hljs-params\"></span>),</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 patch_cfg=<span class=\"hljs-built_in\">dict</span>(<span class=\"hljs-params\"></span>),</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 init_cfg=<span class=\"hljs-literal\">None</span></span>):</span><br>        <span class=\"hljs-built_in\">super</span>(SwinTransformer, self).__init__(init_cfg)<br><br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">isinstance</span>(arch, <span class=\"hljs-built_in\">str</span>):<br>            arch = arch.lower()<br>            <span class=\"hljs-keyword\">assert</span> arch <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">set</span>(self.arch_zoo), \\<br>                <span class=\"hljs-string\">f'Arch <span class=\"hljs-subst\">{arch}</span> is not in default archs <span class=\"hljs-subst\">{<span class=\"hljs-built_in\">set</span>(self.arch_zoo)}</span>'</span><br>            self.arch_settings = self.arch_zoo[arch]<br>        <span class=\"hljs-keyword\">else</span>:<br>            essential_keys = {<span class=\"hljs-string\">'embed_dims'</span>, <span class=\"hljs-string\">'depths'</span>, <span class=\"hljs-string\">'num_head'</span>}<br>            <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-built_in\">isinstance</span>(arch, <span class=\"hljs-built_in\">dict</span>) <span class=\"hljs-keyword\">and</span> <span class=\"hljs-built_in\">set</span>(arch) == essential_keys, \\<br>                <span class=\"hljs-string\">f'Custom arch needs a dict with keys <span class=\"hljs-subst\">{essential_keys}</span>'</span><br>            self.arch_settings = arch<br><br>        self.embed_dims = self.arch_settings[<span class=\"hljs-string\">'embed_dims'</span>]<br>        self.depths = self.arch_settings[<span class=\"hljs-string\">'depths'</span>]<br>        self.num_heads = self.arch_settings[<span class=\"hljs-string\">'num_heads'</span>]<br>        self.num_layers = <span class=\"hljs-built_in\">len</span>(self.depths)<br>        self.use_abs_pos_embed = use_abs_pos_embed<br>        self.auto_pad = auto_pad<br><br>        _patch_cfg = <span class=\"hljs-built_in\">dict</span>(<br>            img_size=img_size,<br>            in_channels=in_channels,<br>            embed_dims=self.embed_dims,<br>            conv_cfg=<span class=\"hljs-built_in\">dict</span>(<br>                <span class=\"hljs-built_in\">type</span>=<span class=\"hljs-string\">'Conv2d'</span>, kernel_size=<span class=\"hljs-number\">4</span>, stride=<span class=\"hljs-number\">4</span>, padding=<span class=\"hljs-number\">0</span>, dilation=<span class=\"hljs-number\">1</span>),<br>            norm_cfg=<span class=\"hljs-built_in\">dict</span>(<span class=\"hljs-built_in\">type</span>=<span class=\"hljs-string\">'LN'</span>),<br>            **patch_cfg)<br>        self.patch_embed = PatchEmbed(**_patch_cfg)<br>        num_patches = self.patch_embed.num_patches<br>        patches_resolution = self.patch_embed.patches_resolution<br>        self.patches_resolution = patches_resolution<br><br>        <span class=\"hljs-keyword\">if</span> self.use_abs_pos_embed:<br>            self.absolute_pos_embed = nn.Parameter(<br>                torch.zeros(<span class=\"hljs-number\">1</span>, num_patches, self.embed_dims))<br><br>        self.drop_after_pos = nn.Dropout(p=drop_rate)<br><br>        <span class=\"hljs-comment\"># stochastic depth</span><br>        total_depth = <span class=\"hljs-built_in\">sum</span>(self.depths)<br>        dpr = [<br>            x.item() <span class=\"hljs-keyword\">for</span> x <span class=\"hljs-keyword\">in</span> torch.linspace(<span class=\"hljs-number\">0</span>, drop_path_rate, total_depth)<br>        ]  <span class=\"hljs-comment\"># stochastic depth decay rule</span><br><br>        self.stages = ModuleList()<br>        embed_dims = self.embed_dims<br>        input_resolution = patches_resolution<br>        <span class=\"hljs-keyword\">for</span> i, (depth,<br>                num_heads) <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">enumerate</span>(<span class=\"hljs-built_in\">zip</span>(self.depths, self.num_heads)):<br>            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">isinstance</span>(stage_cfgs, <span class=\"hljs-type\">Sequence</span>):<br>                stage_cfg = stage_cfgs[i]<br>            <span class=\"hljs-keyword\">else</span>:<br>                stage_cfg = deepcopy(stage_cfgs)<br>            downsample = <span class=\"hljs-literal\">True</span> <span class=\"hljs-keyword\">if</span> i &lt; self.num_layers - <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">else</span> <span class=\"hljs-literal\">False</span><br>            _stage_cfg = {<br>                <span class=\"hljs-string\">'embed_dims'</span>: embed_dims,<br>                <span class=\"hljs-string\">'depth'</span>: depth,<br>                <span class=\"hljs-string\">'num_heads'</span>: num_heads,<br>                <span class=\"hljs-string\">'downsample'</span>: downsample,<br>                <span class=\"hljs-string\">'input_resolution'</span>: input_resolution,<br>                <span class=\"hljs-string\">'drop_paths'</span>: dpr[:depth],<br>                <span class=\"hljs-string\">'auto_pad'</span>: auto_pad,<br>                **stage_cfg<br>            }<br><br>            stage = SwinBlockSequence(**_stage_cfg)<br>            <span class=\"hljs-comment\"># 冻结某几层frozen_stages</span><br>            <span class=\"hljs-keyword\">if</span>(frozen_stages==<span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">or</span> (i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">0</span>,frozen_stages))):<br>                stage.<span class=\"hljs-built_in\">eval</span>()<br>                <span class=\"hljs-keyword\">for</span> param <span class=\"hljs-keyword\">in</span> stage.parameters():<br>                    param.requires_grad = <span class=\"hljs-literal\">False</span><br>            <br>            self.stages.append(stage)<br><br>            dpr = dpr[depth:]<br>            <span class=\"hljs-keyword\">if</span> downsample:<br>                embed_dims = stage.downsample.out_channels<br>                input_resolution = stage.downsample.output_resolution<br>            <br><br>        <span class=\"hljs-keyword\">if</span> norm_cfg <span class=\"hljs-keyword\">is</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-literal\">None</span>:<br>            self.norm = build_norm_layer(norm_cfg, embed_dims)[<span class=\"hljs-number\">1</span>]<br>        <span class=\"hljs-keyword\">else</span>:<br>            self.norm = <span class=\"hljs-literal\">None</span><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">init_weights</span>(<span class=\"hljs-params\">self</span>):</span><br>        <span class=\"hljs-built_in\">super</span>(SwinTransformer, self).init_weights()<br><br>        <span class=\"hljs-keyword\">if</span> self.use_abs_pos_embed:<br>            trunc_normal_(self.absolute_pos_embed, std=<span class=\"hljs-number\">0.02</span>)<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">forward</span>(<span class=\"hljs-params\">self, x</span>):</span><br>        x = self.patch_embed(x)<br>        <span class=\"hljs-keyword\">if</span> self.use_abs_pos_embed:<br>            x = x + self.absolute_pos_embed<br>        x = self.drop_after_pos(x)<br><br>        <span class=\"hljs-keyword\">for</span> stage <span class=\"hljs-keyword\">in</span> self.stages:<br>            x = stage(x)<br><br>        x = self.norm(x) <span class=\"hljs-keyword\">if</span> self.norm <span class=\"hljs-keyword\">else</span> x<br><br>        <span class=\"hljs-keyword\">return</span> x.transpose(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>)<br></code></pre></td></tr></tbody></table></figure>\n","site":{"data":{"friends":[{"avatar":"http://image.luokangyuan.com/1_qq_27922023.jpg","name":"码酱","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"http://luokangyuan.com/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/4027734.jpeg","name":"闪烁之狐","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"https://blinkfox.github.io/","title":"前去学习"},{"avatar":"http://image.luokangyuan.com/avatar.jpg","name":"ja_rome","introduction":"平凡的脚步也可以走出伟大的行程","url":"https://me.csdn.net/jlh912008548","title":"前去学习"}]}},"excerpt":"","more":"<blockquote>\n<p>swin_transformer的结构和代码实现部分，在此基础上添加freeze的相关操作，记录如下。</p>\n</blockquote>\n<h2 id=\"论文中的架构\">论文中的架构</h2>\n<p><img src=\"https://picture.mulindya.com/swin-pic1.png\" alt=\"\"></p>\n<h2 id=\"论文笔记\">论文笔记</h2>\n<details>\n<summary>Swin Transformer:Hierarchical Vision Transformer using Shifted Windows</summary>\n<iframe src='/js/pdfjs_old/web/viewer.html?file=https://paper.mulindya.com/Swin%20Transformer%20Hierarchical%20Vision%20Transformer%20using%20Shifted%20Windows.pdf' width=100% height=650></iframe>\n</details>\n<h2 id=\"model架构\">model架构</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\">ImageClassifier(<br>  (backbone): SwinTransformer(<br>    (patch_embed): PatchEmbed(<br>      (projection): Conv2d(<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">96</span>, kernel_size=(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>), stride=(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>))<br>      (norm): LayerNorm((<span class=\"hljs-number\">96</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>    )<br>    (drop_after_pos): Dropout(p=<span class=\"hljs-number\">0.0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>    (stages): ModuleList(<br>      (<span class=\"hljs-number\">0</span>): SwinBlockSequence(<br>        (blocks): ModuleList(<br>          (<span class=\"hljs-number\">0</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">96</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">96</span>, out_features=<span class=\"hljs-number\">288</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">96</span>, out_features=<span class=\"hljs-number\">96</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">96</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">96</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">96</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">1</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">96</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">96</span>, out_features=<span class=\"hljs-number\">288</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">96</span>, out_features=<span class=\"hljs-number\">96</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">96</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">96</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">96</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>        )<br>        (downsample): PatchMerging(<br>          (sampler): Unfold(kernel_size=(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>), dilation=(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>), padding=(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>), stride=(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>))<br>          (norm): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>          (reduction): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">192</span>, bias=<span class=\"hljs-literal\">False</span>)<br>        )<br>      )<br>      (<span class=\"hljs-number\">1</span>): SwinBlockSequence(<br>        (blocks): ModuleList(<br>          (<span class=\"hljs-number\">0</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">192</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">192</span>, out_features=<span class=\"hljs-number\">576</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">192</span>, out_features=<span class=\"hljs-number\">192</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">192</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">192</span>, out_features=<span class=\"hljs-number\">768</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">768</span>, out_features=<span class=\"hljs-number\">192</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">1</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">192</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">192</span>, out_features=<span class=\"hljs-number\">576</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">192</span>, out_features=<span class=\"hljs-number\">192</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">192</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">192</span>, out_features=<span class=\"hljs-number\">768</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">768</span>, out_features=<span class=\"hljs-number\">192</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>        )<br>        (downsample): PatchMerging(<br>          (sampler): Unfold(kernel_size=(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>), dilation=(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>), padding=(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>), stride=(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>))<br>          (norm): LayerNorm((<span class=\"hljs-number\">768</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>          (reduction): Linear(in_features=<span class=\"hljs-number\">768</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">False</span>)<br>        )<br>      )<br>      (<span class=\"hljs-number\">2</span>): SwinBlockSequence(<br>        (blocks): ModuleList(<br>          (<span class=\"hljs-number\">0</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">1</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">2</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">3</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">4</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">5</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">6</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">7</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">8</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">9</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">10</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">11</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">12</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">13</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">14</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">15</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">16</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">17</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1152</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">384</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">384</span>, out_features=<span class=\"hljs-number\">1536</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">384</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>        )<br>        (downsample): PatchMerging(<br>          (sampler): Unfold(kernel_size=(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>), dilation=(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>), padding=(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>), stride=(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>))<br>          (norm): LayerNorm((<span class=\"hljs-number\">1536</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>          (reduction): Linear(in_features=<span class=\"hljs-number\">1536</span>, out_features=<span class=\"hljs-number\">768</span>, bias=<span class=\"hljs-literal\">False</span>)<br>        )<br>      )<br>      (<span class=\"hljs-number\">3</span>): SwinBlockSequence(<br>        (blocks): ModuleList(<br>          (<span class=\"hljs-number\">0</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">768</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">768</span>, out_features=<span class=\"hljs-number\">2304</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">768</span>, out_features=<span class=\"hljs-number\">768</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">768</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">768</span>, out_features=<span class=\"hljs-number\">3072</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">3072</span>, out_features=<span class=\"hljs-number\">768</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>          (<span class=\"hljs-number\">1</span>): SwinBlock(<br>            (norm1): LayerNorm((<span class=\"hljs-number\">768</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (attn): ShiftWindowMSA(<br>              (w_msa): WindowMSA(<br>                (qkv): Linear(in_features=<span class=\"hljs-number\">768</span>, out_features=<span class=\"hljs-number\">2304</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (attn_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (proj): Linear(in_features=<span class=\"hljs-number\">768</span>, out_features=<span class=\"hljs-number\">768</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (proj_drop): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                (softmax): Softmax(dim=-<span class=\"hljs-number\">1</span>)<br>              )<br>              (drop): DropPath()<br>            )<br>            (norm2): LayerNorm((<span class=\"hljs-number\">768</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>            (ffn): FFN(<br>              (activate): GELU()<br>              (layers): Sequential(<br>                (<span class=\"hljs-number\">0</span>): Sequential(<br>                  (<span class=\"hljs-number\">0</span>): Linear(in_features=<span class=\"hljs-number\">768</span>, out_features=<span class=\"hljs-number\">3072</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                  (<span class=\"hljs-number\">1</span>): GELU()<br>                  (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>                )<br>                (<span class=\"hljs-number\">1</span>): Linear(in_features=<span class=\"hljs-number\">3072</span>, out_features=<span class=\"hljs-number\">768</span>, bias=<span class=\"hljs-literal\">True</span>)<br>                (<span class=\"hljs-number\">2</span>): Dropout(p=<span class=\"hljs-number\">0</span>, inplace=<span class=\"hljs-literal\">False</span>)<br>              )<br>              (dropout_layer): DropPath()<br>            )<br>          )<br>        )<br>      )<br>    )<br>    (norm): LayerNorm((<span class=\"hljs-number\">768</span>,), eps=<span class=\"hljs-number\">1e-05</span>, elementwise_affine=<span class=\"hljs-literal\">True</span>)<br>  )<br>  (neck): GlobalAveragePooling(<br>    (gap): AdaptiveAvgPool1d(output_size=<span class=\"hljs-number\">1</span>)<br>  )<br>  (head): MultiLabelLinearClsHead(<br>    (compute_loss): CrossEntropyLoss()<br>    (fc): Linear(in_features=<span class=\"hljs-number\">768</span>, out_features=<span class=\"hljs-number\">11</span>, bias=<span class=\"hljs-literal\">True</span>)<br>  )<br>)<br></code></pre></td></tr></table></figure>\n<h2 id=\"代码\">代码</h2>\n<p>添加fronzen_stages:</p>\n<blockquote>\n<p>该参数表示你想冻结前几个 stages 的权重，swin 结构包括 4 stage内部结构(2,2,18,2)</p>\n<p>frozen_stages=-1，表示全部可学习</p>\n<p>frozen_stage=0，表示stem权重固定</p>\n<p>frozen_stages=1，表示 stem 和第一个 stage 权重固定</p>\n<p>frozen_stages=2，表示 stem 和前两个 stage 权重固定</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\">stage = SwinBlockSequence(**_stage_cfg)<br><span class=\"hljs-comment\"># 冻结某几层frozen_stages</span><br><span class=\"hljs-keyword\">if</span>(frozen_stages==<span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">or</span> (i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">0</span>,frozen_stages))):<br>\tstage.<span class=\"hljs-built_in\">eval</span>()<br>\t<span class=\"hljs-keyword\">for</span> param <span class=\"hljs-keyword\">in</span> stage.parameters():<br>\t\tparam.requires_grad = <span class=\"hljs-literal\">False</span><br></code></pre></td></tr></table></figure>\n<p>全部代码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">from</span> copy <span class=\"hljs-keyword\">import</span> deepcopy<br><span class=\"hljs-keyword\">from</span> typing <span class=\"hljs-keyword\">import</span> <span class=\"hljs-type\">Sequence</span><br><br><span class=\"hljs-keyword\">import</span> torch<br><span class=\"hljs-keyword\">import</span> torch.nn <span class=\"hljs-keyword\">as</span> nn<br><span class=\"hljs-keyword\">from</span> mmcv.cnn <span class=\"hljs-keyword\">import</span> build_norm_layer<br><span class=\"hljs-keyword\">from</span> mmcv.cnn.bricks.transformer <span class=\"hljs-keyword\">import</span> FFN<br><span class=\"hljs-keyword\">from</span> mmcv.cnn.utils.weight_init <span class=\"hljs-keyword\">import</span> trunc_normal_<br><span class=\"hljs-keyword\">from</span> mmcv.runner.base_module <span class=\"hljs-keyword\">import</span> BaseModule, ModuleList<br><br><span class=\"hljs-keyword\">from</span> ..builder <span class=\"hljs-keyword\">import</span> BACKBONES<br><span class=\"hljs-keyword\">from</span> ..utils <span class=\"hljs-keyword\">import</span> PatchEmbed, PatchMerging, ShiftWindowMSA<br><span class=\"hljs-keyword\">from</span> .base_backbone <span class=\"hljs-keyword\">import</span> BaseBackbone<br><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SwinBlock</span>(<span class=\"hljs-params\">BaseModule</span>):</span><br>    <span class=\"hljs-string\">&quot;&quot;&quot;Swin Transformer block.</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">    Args:</span><br><span class=\"hljs-string\">        embed_dims (int): Number of input channels.</span><br><span class=\"hljs-string\">        input_resolution (Tuple[int, int]): The resolution of the input feature</span><br><span class=\"hljs-string\">            map.</span><br><span class=\"hljs-string\">        num_heads (int): Number of attention heads.</span><br><span class=\"hljs-string\">        window_size (int, optional): The height and width of the window.</span><br><span class=\"hljs-string\">            Defaults to 7.</span><br><span class=\"hljs-string\">        shift (bool, optional): Shift the attention window or not.</span><br><span class=\"hljs-string\">            Defaults to False.</span><br><span class=\"hljs-string\">        ffn_ratio (float, optional): The expansion ratio of feedforward network</span><br><span class=\"hljs-string\">            hidden layer channels. Defaults to 4.</span><br><span class=\"hljs-string\">        drop_path (float, optional): The drop path rate after attention and</span><br><span class=\"hljs-string\">            ffn. Defaults to 0.</span><br><span class=\"hljs-string\">        attn_cfgs (dict, optional): The extra config of Shift Window-MSA.</span><br><span class=\"hljs-string\">            Defaults to empty dict.</span><br><span class=\"hljs-string\">        ffn_cfgs (dict, optional): The extra config of FFN.</span><br><span class=\"hljs-string\">            Defaults to empty dict.</span><br><span class=\"hljs-string\">        norm_cfg (dict, optional): The config of norm layers.</span><br><span class=\"hljs-string\">            Defaults to dict(type=&#x27;LN&#x27;).</span><br><span class=\"hljs-string\">        auto_pad (bool, optional): Auto pad the feature map to be divisible by</span><br><span class=\"hljs-string\">            window_size, Defaults to False.</span><br><span class=\"hljs-string\">        init_cfg (dict, optional): The extra config for initialization.</span><br><span class=\"hljs-string\">            Default: None.</span><br><span class=\"hljs-string\">    &quot;&quot;&quot;</span><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">__init__</span>(<span class=\"hljs-params\">self,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 embed_dims,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 input_resolution,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 num_heads,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 window_size=<span class=\"hljs-number\">7</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 shift=<span class=\"hljs-literal\">False</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 ffn_ratio=<span class=\"hljs-number\">4.</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 drop_path=<span class=\"hljs-number\">0.</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 attn_cfgs=<span class=\"hljs-built_in\">dict</span>(<span class=\"hljs-params\"></span>),</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 ffn_cfgs=<span class=\"hljs-built_in\">dict</span>(<span class=\"hljs-params\"></span>),</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 norm_cfg=<span class=\"hljs-built_in\">dict</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">type</span>=<span class=\"hljs-string\">&#x27;LN&#x27;</span></span>),</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 auto_pad=<span class=\"hljs-literal\">False</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 init_cfg=<span class=\"hljs-literal\">None</span></span>):</span><br><br>        <span class=\"hljs-built_in\">super</span>(SwinBlock, self).__init__(init_cfg)<br><br>        _attn_cfgs = &#123;<br>            <span class=\"hljs-string\">&#x27;embed_dims&#x27;</span>: embed_dims,<br>            <span class=\"hljs-string\">&#x27;input_resolution&#x27;</span>: input_resolution,<br>            <span class=\"hljs-string\">&#x27;num_heads&#x27;</span>: num_heads,<br>            <span class=\"hljs-string\">&#x27;shift_size&#x27;</span>: window_size // <span class=\"hljs-number\">2</span> <span class=\"hljs-keyword\">if</span> shift <span class=\"hljs-keyword\">else</span> <span class=\"hljs-number\">0</span>,<br>            <span class=\"hljs-string\">&#x27;window_size&#x27;</span>: window_size,<br>            <span class=\"hljs-string\">&#x27;dropout_layer&#x27;</span>: <span class=\"hljs-built_in\">dict</span>(<span class=\"hljs-built_in\">type</span>=<span class=\"hljs-string\">&#x27;DropPath&#x27;</span>, drop_prob=drop_path),<br>            <span class=\"hljs-string\">&#x27;auto_pad&#x27;</span>: auto_pad,<br>            **attn_cfgs<br>        &#125;<br>        self.norm1 = build_norm_layer(norm_cfg, embed_dims)[<span class=\"hljs-number\">1</span>]<br>        self.attn = ShiftWindowMSA(**_attn_cfgs)<br><br>        _ffn_cfgs = &#123;<br>            <span class=\"hljs-string\">&#x27;embed_dims&#x27;</span>: embed_dims,<br>            <span class=\"hljs-string\">&#x27;feedforward_channels&#x27;</span>: <span class=\"hljs-built_in\">int</span>(embed_dims * ffn_ratio),<br>            <span class=\"hljs-string\">&#x27;num_fcs&#x27;</span>: <span class=\"hljs-number\">2</span>,<br>            <span class=\"hljs-string\">&#x27;ffn_drop&#x27;</span>: <span class=\"hljs-number\">0</span>,<br>            <span class=\"hljs-string\">&#x27;dropout_layer&#x27;</span>: <span class=\"hljs-built_in\">dict</span>(<span class=\"hljs-built_in\">type</span>=<span class=\"hljs-string\">&#x27;DropPath&#x27;</span>, drop_prob=drop_path),<br>            <span class=\"hljs-string\">&#x27;act_cfg&#x27;</span>: <span class=\"hljs-built_in\">dict</span>(<span class=\"hljs-built_in\">type</span>=<span class=\"hljs-string\">&#x27;GELU&#x27;</span>),<br>            **ffn_cfgs<br>        &#125;<br>        self.norm2 = build_norm_layer(norm_cfg, embed_dims)[<span class=\"hljs-number\">1</span>]<br>        self.ffn = FFN(**_ffn_cfgs)<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">forward</span>(<span class=\"hljs-params\">self, x</span>):</span><br>        identity = x<br>        x = self.norm1(x)<br>        x = self.attn(x)<br>        x = x + identity<br><br>        identity = x<br>        x = self.norm2(x)<br>        x = self.ffn(x, identity=identity)<br>        <span class=\"hljs-keyword\">return</span> x<br><br><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SwinBlockSequence</span>(<span class=\"hljs-params\">BaseModule</span>):</span><br>    <span class=\"hljs-string\">&quot;&quot;&quot;Module with successive Swin Transformer blocks and downsample layer.</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">    Args:</span><br><span class=\"hljs-string\">        embed_dims (int): Number of input channels.</span><br><span class=\"hljs-string\">        input_resolution (Tuple[int, int]): The resolution of the input feature</span><br><span class=\"hljs-string\">            map.</span><br><span class=\"hljs-string\">        depth (int): Number of successive swin transformer blocks.</span><br><span class=\"hljs-string\">        num_heads (int): Number of attention heads.</span><br><span class=\"hljs-string\">        downsample (bool, optional): Downsample the output of blocks by patch</span><br><span class=\"hljs-string\">            merging. Defaults to False.</span><br><span class=\"hljs-string\">        downsample_cfg (dict, optional): The extra config of the patch merging</span><br><span class=\"hljs-string\">            layer. Defaults to empty dict.</span><br><span class=\"hljs-string\">        drop_paths (Sequence[float] | float, optional): The drop path rate in</span><br><span class=\"hljs-string\">            each block. Defaults to 0.</span><br><span class=\"hljs-string\">        block_cfgs (Sequence[dict] | dict, optional): The extra config of each</span><br><span class=\"hljs-string\">            block. Defaults to empty dicts.</span><br><span class=\"hljs-string\">        auto_pad (bool, optional): Auto pad the feature map to be divisible by</span><br><span class=\"hljs-string\">            window_size, Defaults to False.</span><br><span class=\"hljs-string\">        init_cfg (dict, optional): The extra config for initialization.</span><br><span class=\"hljs-string\">            Default: None.</span><br><span class=\"hljs-string\">    &quot;&quot;&quot;</span><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">__init__</span>(<span class=\"hljs-params\">self,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 embed_dims,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 input_resolution,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 depth,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 num_heads,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 downsample=<span class=\"hljs-literal\">False</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 downsample_cfg=<span class=\"hljs-built_in\">dict</span>(<span class=\"hljs-params\"></span>),</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 drop_paths=<span class=\"hljs-number\">0.</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 block_cfgs=<span class=\"hljs-built_in\">dict</span>(<span class=\"hljs-params\"></span>),</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 auto_pad=<span class=\"hljs-literal\">False</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 init_cfg=<span class=\"hljs-literal\">None</span></span>):</span><br>        <span class=\"hljs-built_in\">super</span>().__init__(init_cfg)<br><br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-built_in\">isinstance</span>(drop_paths, <span class=\"hljs-type\">Sequence</span>):<br>            drop_paths = [drop_paths] * depth<br><br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-built_in\">isinstance</span>(block_cfgs, <span class=\"hljs-type\">Sequence</span>):<br>            block_cfg = [deepcopy(block_cfgs) <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(depth)]<br><br>        self.blocks = ModuleList()<br>        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(depth):<br>            _block_cfg = &#123;<br>                <span class=\"hljs-string\">&#x27;embed_dims&#x27;</span>: embed_dims,<br>                <span class=\"hljs-string\">&#x27;input_resolution&#x27;</span>: input_resolution,<br>                <span class=\"hljs-string\">&#x27;num_heads&#x27;</span>: num_heads,<br>                <span class=\"hljs-string\">&#x27;shift&#x27;</span>: <span class=\"hljs-literal\">False</span> <span class=\"hljs-keyword\">if</span> i % <span class=\"hljs-number\">2</span> == <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">else</span> <span class=\"hljs-literal\">True</span>,<br>                <span class=\"hljs-string\">&#x27;drop_path&#x27;</span>: drop_paths[i],<br>                <span class=\"hljs-string\">&#x27;auto_pad&#x27;</span>: auto_pad,<br>                **block_cfg[i]<br>            &#125;<br>            block = SwinBlock(**_block_cfg)<br>            self.blocks.append(block)<br><br>        <span class=\"hljs-keyword\">if</span> downsample:<br>            _downsample_cfg = &#123;<br>                <span class=\"hljs-string\">&#x27;input_resolution&#x27;</span>: input_resolution,<br>                <span class=\"hljs-string\">&#x27;in_channels&#x27;</span>: embed_dims,<br>                <span class=\"hljs-string\">&#x27;expansion_ratio&#x27;</span>: <span class=\"hljs-number\">2</span>,<br>                <span class=\"hljs-string\">&#x27;norm_cfg&#x27;</span>: <span class=\"hljs-built_in\">dict</span>(<span class=\"hljs-built_in\">type</span>=<span class=\"hljs-string\">&#x27;LN&#x27;</span>),<br>                **downsample_cfg<br>            &#125;<br>            self.downsample = PatchMerging(**_downsample_cfg)<br>        <span class=\"hljs-keyword\">else</span>:<br>            self.downsample = <span class=\"hljs-literal\">None</span><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">forward</span>(<span class=\"hljs-params\">self, x</span>):</span><br>        <span class=\"hljs-keyword\">for</span> block <span class=\"hljs-keyword\">in</span> self.blocks:<br>            x = block(x)<br><br>        <span class=\"hljs-keyword\">if</span> self.downsample:<br>            x = self.downsample(x)<br>        <span class=\"hljs-keyword\">return</span> x<br><br><br><span class=\"hljs-meta\">@BACKBONES.register_module()</span><br><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SwinTransformer</span>(<span class=\"hljs-params\">BaseBackbone</span>):</span><br>    <span class=\"hljs-string\">&quot;&quot;&quot; Swin Transformer</span><br><span class=\"hljs-string\">    A PyTorch implement of : `Swin Transformer:</span><br><span class=\"hljs-string\">    Hierarchical Vision Transformer using Shifted Windows`  -</span><br><span class=\"hljs-string\">        https://arxiv.org/abs/2103.14030</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">    Inspiration from</span><br><span class=\"hljs-string\">    https://github.com/microsoft/Swin-Transformer</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">    Args:</span><br><span class=\"hljs-string\">        arch (str | dict): Swin Transformer architecture</span><br><span class=\"hljs-string\">            Defaults to &#x27;T&#x27;.</span><br><span class=\"hljs-string\">        img_size (int | tuple): The size of input image.</span><br><span class=\"hljs-string\">            Defaults to 224.</span><br><span class=\"hljs-string\">        in_channels (int): The num of input channels.</span><br><span class=\"hljs-string\">            Defaults to 3.</span><br><span class=\"hljs-string\">        drop_rate (float): Dropout rate after embedding.</span><br><span class=\"hljs-string\">            Defaults to 0.</span><br><span class=\"hljs-string\">        drop_path_rate (float): Stochastic depth rate.</span><br><span class=\"hljs-string\">            Defaults to 0.1.</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">        # add attr</span><br><span class=\"hljs-string\">        frozen_stages: defaults-1 dont freeze,0: all freeze,other: frozen_stages stages to freeze</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">        use_abs_pos_embed (bool): If True, add absolute position embedding to</span><br><span class=\"hljs-string\">            the patch embedding. Defaults to False.</span><br><span class=\"hljs-string\">        auto_pad (bool): If True, auto pad feature map to fit window_size.</span><br><span class=\"hljs-string\">            Defaults to False.</span><br><span class=\"hljs-string\">        norm_cfg (dict, optional): Config dict for normalization layer at end</span><br><span class=\"hljs-string\">            of backone. Defaults to dict(type=&#x27;LN&#x27;)</span><br><span class=\"hljs-string\">        stage_cfgs (Sequence | dict, optional): Extra config dict for each</span><br><span class=\"hljs-string\">            stage. Defaults to empty dict.</span><br><span class=\"hljs-string\">        patch_cfg (dict, optional): Extra config dict for patch embedding.</span><br><span class=\"hljs-string\">            Defaults to empty dict.</span><br><span class=\"hljs-string\">        init_cfg (dict, optional): The Config for initialization.</span><br><span class=\"hljs-string\">            Defaults to None.</span><br><span class=\"hljs-string\"></span><br><span class=\"hljs-string\">    Examples:</span><br><span class=\"hljs-string\">        &gt;&gt;&gt; from mmcls.models import SwinTransformer</span><br><span class=\"hljs-string\">        &gt;&gt;&gt; import torch</span><br><span class=\"hljs-string\">        &gt;&gt;&gt; extra_config = dict(</span><br><span class=\"hljs-string\">        &gt;&gt;&gt;     arch=&#x27;tiny&#x27;,</span><br><span class=\"hljs-string\">        &gt;&gt;&gt;     stage_cfgs=dict(downsample_cfg=&#123;&#x27;kernel_size&#x27;: 3,</span><br><span class=\"hljs-string\">        &gt;&gt;&gt;                                     &#x27;expansion_ratio&#x27;: 3&#125;),</span><br><span class=\"hljs-string\">        &gt;&gt;&gt;     auto_pad=True)</span><br><span class=\"hljs-string\">        &gt;&gt;&gt; self = SwinTransformer(**extra_config)</span><br><span class=\"hljs-string\">        &gt;&gt;&gt; inputs = torch.rand(1, 3, 224, 224)</span><br><span class=\"hljs-string\">        &gt;&gt;&gt; output = self.forward(inputs)</span><br><span class=\"hljs-string\">        &gt;&gt;&gt; print(output.shape)</span><br><span class=\"hljs-string\">        (1, 2592, 4)</span><br><span class=\"hljs-string\">    &quot;&quot;&quot;</span><br>    arch_zoo = &#123;<br>        **<span class=\"hljs-built_in\">dict</span>.fromkeys([<span class=\"hljs-string\">&#x27;t&#x27;</span>, <span class=\"hljs-string\">&#x27;tiny&#x27;</span>],<br>                        &#123;<span class=\"hljs-string\">&#x27;embed_dims&#x27;</span>: <span class=\"hljs-number\">96</span>,<br>                         <span class=\"hljs-string\">&#x27;depths&#x27;</span>:     [<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>,  <span class=\"hljs-number\">6</span>,  <span class=\"hljs-number\">2</span>],<br>                         <span class=\"hljs-string\">&#x27;num_heads&#x27;</span>:  [<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">24</span>]&#125;),<br>        **<span class=\"hljs-built_in\">dict</span>.fromkeys([<span class=\"hljs-string\">&#x27;s&#x27;</span>, <span class=\"hljs-string\">&#x27;small&#x27;</span>],<br>                        &#123;<span class=\"hljs-string\">&#x27;embed_dims&#x27;</span>: <span class=\"hljs-number\">96</span>,<br>                         <span class=\"hljs-string\">&#x27;depths&#x27;</span>:     [<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">18</span>,  <span class=\"hljs-number\">2</span>],<br>                         <span class=\"hljs-string\">&#x27;num_heads&#x27;</span>:  [<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">24</span>]&#125;),<br>        **<span class=\"hljs-built_in\">dict</span>.fromkeys([<span class=\"hljs-string\">&#x27;b&#x27;</span>, <span class=\"hljs-string\">&#x27;base&#x27;</span>],<br>                        &#123;<span class=\"hljs-string\">&#x27;embed_dims&#x27;</span>: <span class=\"hljs-number\">128</span>,<br>                         <span class=\"hljs-string\">&#x27;depths&#x27;</span>:     [<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">18</span>,  <span class=\"hljs-number\">2</span>],<br>                         <span class=\"hljs-string\">&#x27;num_heads&#x27;</span>:  [<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">16</span>, <span class=\"hljs-number\">32</span>]&#125;),<br>        **<span class=\"hljs-built_in\">dict</span>.fromkeys([<span class=\"hljs-string\">&#x27;l&#x27;</span>, <span class=\"hljs-string\">&#x27;large&#x27;</span>],<br>                        &#123;<span class=\"hljs-string\">&#x27;embed_dims&#x27;</span>: <span class=\"hljs-number\">192</span>,<br>                         <span class=\"hljs-string\">&#x27;depths&#x27;</span>:     [<span class=\"hljs-number\">2</span>,  <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">18</span>,  <span class=\"hljs-number\">2</span>],<br>                         <span class=\"hljs-string\">&#x27;num_heads&#x27;</span>:  [<span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">24</span>, <span class=\"hljs-number\">48</span>]&#125;),<br>    &#125;  <span class=\"hljs-comment\"># yapf: disable</span><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">__init__</span>(<span class=\"hljs-params\">self,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 arch=<span class=\"hljs-string\">&#x27;T&#x27;</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 img_size=<span class=\"hljs-number\">224</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 in_channels=<span class=\"hljs-number\">3</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 drop_rate=<span class=\"hljs-number\">0.</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 drop_path_rate=<span class=\"hljs-number\">0.1</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 frozen_stages=-<span class=\"hljs-number\">1</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 use_abs_pos_embed=<span class=\"hljs-literal\">False</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 auto_pad=<span class=\"hljs-literal\">False</span>,</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 norm_cfg=<span class=\"hljs-built_in\">dict</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">type</span>=<span class=\"hljs-string\">&#x27;LN&#x27;</span></span>),</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 stage_cfgs=<span class=\"hljs-built_in\">dict</span>(<span class=\"hljs-params\"></span>),</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 patch_cfg=<span class=\"hljs-built_in\">dict</span>(<span class=\"hljs-params\"></span>),</span></span><br><span class=\"hljs-params\"><span class=\"hljs-function\">                 init_cfg=<span class=\"hljs-literal\">None</span></span>):</span><br>        <span class=\"hljs-built_in\">super</span>(SwinTransformer, self).__init__(init_cfg)<br><br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">isinstance</span>(arch, <span class=\"hljs-built_in\">str</span>):<br>            arch = arch.lower()<br>            <span class=\"hljs-keyword\">assert</span> arch <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">set</span>(self.arch_zoo), \\<br>                <span class=\"hljs-string\">f&#x27;Arch <span class=\"hljs-subst\">&#123;arch&#125;</span> is not in default archs <span class=\"hljs-subst\">&#123;<span class=\"hljs-built_in\">set</span>(self.arch_zoo)&#125;</span>&#x27;</span><br>            self.arch_settings = self.arch_zoo[arch]<br>        <span class=\"hljs-keyword\">else</span>:<br>            essential_keys = &#123;<span class=\"hljs-string\">&#x27;embed_dims&#x27;</span>, <span class=\"hljs-string\">&#x27;depths&#x27;</span>, <span class=\"hljs-string\">&#x27;num_head&#x27;</span>&#125;<br>            <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-built_in\">isinstance</span>(arch, <span class=\"hljs-built_in\">dict</span>) <span class=\"hljs-keyword\">and</span> <span class=\"hljs-built_in\">set</span>(arch) == essential_keys, \\<br>                <span class=\"hljs-string\">f&#x27;Custom arch needs a dict with keys <span class=\"hljs-subst\">&#123;essential_keys&#125;</span>&#x27;</span><br>            self.arch_settings = arch<br><br>        self.embed_dims = self.arch_settings[<span class=\"hljs-string\">&#x27;embed_dims&#x27;</span>]<br>        self.depths = self.arch_settings[<span class=\"hljs-string\">&#x27;depths&#x27;</span>]<br>        self.num_heads = self.arch_settings[<span class=\"hljs-string\">&#x27;num_heads&#x27;</span>]<br>        self.num_layers = <span class=\"hljs-built_in\">len</span>(self.depths)<br>        self.use_abs_pos_embed = use_abs_pos_embed<br>        self.auto_pad = auto_pad<br><br>        _patch_cfg = <span class=\"hljs-built_in\">dict</span>(<br>            img_size=img_size,<br>            in_channels=in_channels,<br>            embed_dims=self.embed_dims,<br>            conv_cfg=<span class=\"hljs-built_in\">dict</span>(<br>                <span class=\"hljs-built_in\">type</span>=<span class=\"hljs-string\">&#x27;Conv2d&#x27;</span>, kernel_size=<span class=\"hljs-number\">4</span>, stride=<span class=\"hljs-number\">4</span>, padding=<span class=\"hljs-number\">0</span>, dilation=<span class=\"hljs-number\">1</span>),<br>            norm_cfg=<span class=\"hljs-built_in\">dict</span>(<span class=\"hljs-built_in\">type</span>=<span class=\"hljs-string\">&#x27;LN&#x27;</span>),<br>            **patch_cfg)<br>        self.patch_embed = PatchEmbed(**_patch_cfg)<br>        num_patches = self.patch_embed.num_patches<br>        patches_resolution = self.patch_embed.patches_resolution<br>        self.patches_resolution = patches_resolution<br><br>        <span class=\"hljs-keyword\">if</span> self.use_abs_pos_embed:<br>            self.absolute_pos_embed = nn.Parameter(<br>                torch.zeros(<span class=\"hljs-number\">1</span>, num_patches, self.embed_dims))<br><br>        self.drop_after_pos = nn.Dropout(p=drop_rate)<br><br>        <span class=\"hljs-comment\"># stochastic depth</span><br>        total_depth = <span class=\"hljs-built_in\">sum</span>(self.depths)<br>        dpr = [<br>            x.item() <span class=\"hljs-keyword\">for</span> x <span class=\"hljs-keyword\">in</span> torch.linspace(<span class=\"hljs-number\">0</span>, drop_path_rate, total_depth)<br>        ]  <span class=\"hljs-comment\"># stochastic depth decay rule</span><br><br>        self.stages = ModuleList()<br>        embed_dims = self.embed_dims<br>        input_resolution = patches_resolution<br>        <span class=\"hljs-keyword\">for</span> i, (depth,<br>                num_heads) <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">enumerate</span>(<span class=\"hljs-built_in\">zip</span>(self.depths, self.num_heads)):<br>            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">isinstance</span>(stage_cfgs, <span class=\"hljs-type\">Sequence</span>):<br>                stage_cfg = stage_cfgs[i]<br>            <span class=\"hljs-keyword\">else</span>:<br>                stage_cfg = deepcopy(stage_cfgs)<br>            downsample = <span class=\"hljs-literal\">True</span> <span class=\"hljs-keyword\">if</span> i &lt; self.num_layers - <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">else</span> <span class=\"hljs-literal\">False</span><br>            _stage_cfg = &#123;<br>                <span class=\"hljs-string\">&#x27;embed_dims&#x27;</span>: embed_dims,<br>                <span class=\"hljs-string\">&#x27;depth&#x27;</span>: depth,<br>                <span class=\"hljs-string\">&#x27;num_heads&#x27;</span>: num_heads,<br>                <span class=\"hljs-string\">&#x27;downsample&#x27;</span>: downsample,<br>                <span class=\"hljs-string\">&#x27;input_resolution&#x27;</span>: input_resolution,<br>                <span class=\"hljs-string\">&#x27;drop_paths&#x27;</span>: dpr[:depth],<br>                <span class=\"hljs-string\">&#x27;auto_pad&#x27;</span>: auto_pad,<br>                **stage_cfg<br>            &#125;<br><br>            stage = SwinBlockSequence(**_stage_cfg)<br>            <span class=\"hljs-comment\"># 冻结某几层frozen_stages</span><br>            <span class=\"hljs-keyword\">if</span>(frozen_stages==<span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">or</span> (i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">0</span>,frozen_stages))):<br>                stage.<span class=\"hljs-built_in\">eval</span>()<br>                <span class=\"hljs-keyword\">for</span> param <span class=\"hljs-keyword\">in</span> stage.parameters():<br>                    param.requires_grad = <span class=\"hljs-literal\">False</span><br>            <br>            self.stages.append(stage)<br><br>            dpr = dpr[depth:]<br>            <span class=\"hljs-keyword\">if</span> downsample:<br>                embed_dims = stage.downsample.out_channels<br>                input_resolution = stage.downsample.output_resolution<br>            <br><br>        <span class=\"hljs-keyword\">if</span> norm_cfg <span class=\"hljs-keyword\">is</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-literal\">None</span>:<br>            self.norm = build_norm_layer(norm_cfg, embed_dims)[<span class=\"hljs-number\">1</span>]<br>        <span class=\"hljs-keyword\">else</span>:<br>            self.norm = <span class=\"hljs-literal\">None</span><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">init_weights</span>(<span class=\"hljs-params\">self</span>):</span><br>        <span class=\"hljs-built_in\">super</span>(SwinTransformer, self).init_weights()<br><br>        <span class=\"hljs-keyword\">if</span> self.use_abs_pos_embed:<br>            trunc_normal_(self.absolute_pos_embed, std=<span class=\"hljs-number\">0.02</span>)<br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">forward</span>(<span class=\"hljs-params\">self, x</span>):</span><br>        x = self.patch_embed(x)<br>        <span class=\"hljs-keyword\">if</span> self.use_abs_pos_embed:<br>            x = x + self.absolute_pos_embed<br>        x = self.drop_after_pos(x)<br><br>        <span class=\"hljs-keyword\">for</span> stage <span class=\"hljs-keyword\">in</span> self.stages:<br>            x = stage(x)<br><br>        x = self.norm(x) <span class=\"hljs-keyword\">if</span> self.norm <span class=\"hljs-keyword\">else</span> x<br><br>        <span class=\"hljs-keyword\">return</span> x.transpose(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>)<br></code></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cksvnxoc10003ugx434uf6xfg","category_id":"cksvnxoc6000cugx4hcn34klu","_id":"cksvnxoce000ougx4932t77q4"},{"post_id":"cksvnxoc40007ugx4c2lig1lp","category_id":"cksvnxoc20004ugx4biosapea","_id":"cksvnxocg000sugx42r571k3w"},{"post_id":"cksvnxoc50009ugx46o5l2qmv","category_id":"cksvnxoc20004ugx4biosapea","_id":"cksvnxoci000zugx418td7cv9"},{"post_id":"cksvnxoc50009ugx46o5l2qmv","category_id":"cksvnxocc000nugx443vcdem0","_id":"cksvnxocj0013ugx49tmn3vwt"},{"post_id":"cksvnxoby0001ugx4acy53i5r","category_id":"cksvnxoc20004ugx4biosapea","_id":"cksvnxocj0015ugx4cc6c2br1"},{"post_id":"cksvnxoby0001ugx4acy53i5r","category_id":"cksvnxocc000nugx443vcdem0","_id":"cksvnxock0019ugx4ax4q4xco"},{"post_id":"cksvnxoc6000bugx441l531cf","category_id":"cksvnxoci000yugx4fego4l1i","_id":"cksvnxocm001cugx4hv82fpc8"},{"post_id":"cksvnxoc7000gugx4hhgv7a6i","category_id":"cksvnxoci000yugx4fego4l1i","_id":"cksvnxoco001hugx4cpap7ztm"},{"post_id":"cksvnxoc8000hugx4h6a0gl6h","category_id":"cksvnxocl001bugx470i4evv5","_id":"cksvnxocr001qugx451nl51jg"},{"post_id":"cksvnxoca000kugx4hlu2fium","category_id":"cksvnxocl001bugx470i4evv5","_id":"cksvnxocs001wugx45htc363p"},{"post_id":"cksvnxocb000mugx4gxfhcpcf","category_id":"cksvnxocl001bugx470i4evv5","_id":"cksvnxocu0022ugx48jamcrj8"},{"post_id":"cksvnxoch000vugx40ol17e7u","category_id":"cksvnxocw0026ugx4b4uv7tjr","_id":"cksvnxocz002hugx45kq1214e"},{"post_id":"cksvnxoch000xugx41t1tfkc3","category_id":"cksvnxocx002bugx45rldgfxt","_id":"cksvnxod0002nugx42b4ieyst"},{"post_id":"cksvnxoci0011ugx46m0kela2","category_id":"cksvnxocz002iugx42r6wfyjt","_id":"cksvnxod5002vugx43zi5came"},{"post_id":"cksvnxocj0014ugx4gqba5960","category_id":"cksvnxocz002iugx42r6wfyjt","_id":"cksvnxod60030ugx45bshgzgj"},{"post_id":"cksvnxocf000qugx41zot9pkj","category_id":"cksvnxocl001bugx470i4evv5","_id":"cksvnxodq0047ugx43w5oefln"},{"post_id":"cksvnxocf000qugx41zot9pkj","category_id":"cksvnxodk0040ugx4hd25c0sj","_id":"cksvnxodr0049ugx49y5n0tea"},{"post_id":"cksvnxocf000rugx4bwpw4ko2","category_id":"cksvnxocl001bugx470i4evv5","_id":"cksvnxods004gugx4axv85owy"},{"post_id":"cksvnxocf000rugx4bwpw4ko2","category_id":"cksvnxodk0040ugx4hd25c0sj","_id":"cksvnxodt004jugx4fc45er1r"},{"post_id":"cksvnxod5002yugx47co2f9u0","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxody005fugx4c0pufw58"},{"post_id":"cksvnxod5002yugx47co2f9u0","category_id":"cksvnxodx0058ugx44uvsc00d","_id":"cksvnxodz005hugx4580l8wz7"},{"post_id":"cksvnxock0017ugx4fxldhh63","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxodz005jugx498y5156c"},{"post_id":"cksvnxock0017ugx4fxldhh63","category_id":"cksvnxody005bugx4d5bh66tz","_id":"cksvnxodz005mugx4bit178ni"},{"post_id":"cksvnxod60031ugx4dv7sbvml","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoe0005qugx4emm2av5a"},{"post_id":"cksvnxod60031ugx4dv7sbvml","category_id":"cksvnxody005gugx40bd2cqaz","_id":"cksvnxoe0005rugx4gi8bdx3k"},{"post_id":"cksvnxod70034ugx45n4zgo99","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoe0005uugx44yrg91dz"},{"post_id":"cksvnxod70034ugx45n4zgo99","category_id":"cksvnxody005gugx40bd2cqaz","_id":"cksvnxoe0005vugx4cqsifuhi"},{"post_id":"cksvnxocl001augx48bw1eowt","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoe1005yugx4a8tlc6nc"},{"post_id":"cksvnxocl001augx48bw1eowt","category_id":"cksvnxody005bugx4d5bh66tz","_id":"cksvnxoe10060ugx41h8ubqqk"},{"post_id":"cksvnxod90035ugx4gfko6laz","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoe20064ugx44c9r542d"},{"post_id":"cksvnxod90035ugx4gfko6laz","category_id":"cksvnxody005gugx40bd2cqaz","_id":"cksvnxoe20066ugx42c135qqt"},{"post_id":"cksvnxoda0037ugx45geahkfv","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoe20068ugx4d9w4ao6v"},{"post_id":"cksvnxoda0037ugx45geahkfv","category_id":"cksvnxody005bugx4d5bh66tz","_id":"cksvnxoe2006augx4fwy7cqt2"},{"post_id":"cksvnxocm001dugx4aor426jq","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoe3006cugx4afkkapgy"},{"post_id":"cksvnxocm001dugx4aor426jq","category_id":"cksvnxoe10063ugx48j5tg25w","_id":"cksvnxoe3006eugx4ci4s46cs"},{"post_id":"cksvnxoda0039ugx4559oh924","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoe3006hugx48x4ifwtv"},{"post_id":"cksvnxoda0039ugx4559oh924","category_id":"cksvnxoe20069ugx4dzf1cnd6","_id":"cksvnxoe3006kugx42v5l5ll0"},{"post_id":"cksvnxocn001fugx4eaibahki","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoe4006rugx42gzravur"},{"post_id":"cksvnxocn001fugx4eaibahki","category_id":"cksvnxodx0058ugx44uvsc00d","_id":"cksvnxoe5006tugx43bpn2njx"},{"post_id":"cksvnxoco001iugx4bppja3fn","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoe60072ugx424sn50eq"},{"post_id":"cksvnxoco001iugx4bppja3fn","category_id":"cksvnxody005gugx40bd2cqaz","_id":"cksvnxoe60073ugx48gqhg6ma"},{"post_id":"cksvnxodh003mugx450ipayjb","category_id":"cksvnxoe60071ugx4bhim6qm0","_id":"cksvnxoe7007augx4h9kq4z4v"},{"post_id":"cksvnxocp001mugx42dj34hoq","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoe8007dugx49zxif8hr"},{"post_id":"cksvnxocp001mugx42dj34hoq","category_id":"cksvnxoe70076ugx42cvyfa67","_id":"cksvnxoe9007gugx459qbga1g"},{"post_id":"cksvnxocq001ougx4cyv8edr2","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoe9007jugx479nv60aa"},{"post_id":"cksvnxocq001ougx4cyv8edr2","category_id":"cksvnxoe7007bugx4cuuicxd4","_id":"cksvnxoea007mugx4c8jxdbnn"},{"post_id":"cksvnxocr001sugx4gr3iauj0","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoea007pugx450kla7ms"},{"post_id":"cksvnxocr001sugx4gr3iauj0","category_id":"cksvnxoe7007bugx4cuuicxd4","_id":"cksvnxoea007rugx4akpx1mt8"},{"post_id":"cksvnxocs001uugx4hrg91zc0","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoeb007sugx400va8fxm"},{"post_id":"cksvnxocs001uugx4hrg91zc0","category_id":"cksvnxody005bugx4d5bh66tz","_id":"cksvnxoeb007vugx45qna9jzc"},{"post_id":"cksvnxoct001zugx43ezkd91j","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoeb007zugx4a49ae5y2"},{"post_id":"cksvnxoct001zugx43ezkd91j","category_id":"cksvnxoea007ougx41olra4l8","_id":"cksvnxoec0082ugx4g4j3fnfi"},{"post_id":"cksvnxocu0020ugx40h126mif","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoec0084ugx4gtltgbqg"},{"post_id":"cksvnxocu0020ugx40h126mif","category_id":"cksvnxoea007ougx41olra4l8","_id":"cksvnxoec0087ugx4bj6pf5zf"},{"post_id":"cksvnxocv0024ugx4faelagqs","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoed008augx45kaad1cf"},{"post_id":"cksvnxocv0024ugx4faelagqs","category_id":"cksvnxoe7007bugx4cuuicxd4","_id":"cksvnxoed008cugx42tjhf71y"},{"post_id":"cksvnxocv0025ugx4gwg67ovb","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoed008dugx4ctcg7zwb"},{"post_id":"cksvnxocv0025ugx4gwg67ovb","category_id":"cksvnxoe7007bugx4cuuicxd4","_id":"cksvnxoee008gugx4613xh1om"},{"post_id":"cksvnxocw0027ugx4hms1f8dt","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoee008jugx49noh5y1j"},{"post_id":"cksvnxocw0027ugx4hms1f8dt","category_id":"cksvnxoed0089ugx4gl4g6gbe","_id":"cksvnxoee008mugx4emv1aovb"},{"post_id":"cksvnxocx002augx45s3cardx","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoee008nugx4h2t04l5e"},{"post_id":"cksvnxocx002augx45s3cardx","category_id":"cksvnxoed008eugx41lwf42w5","_id":"cksvnxoef008qugx44ydzd0nz"},{"post_id":"cksvnxocy002dugx48pas9zu4","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoef008tugx47dsk6trk"},{"post_id":"cksvnxocy002dugx48pas9zu4","category_id":"cksvnxoee008lugx449ma0rsu","_id":"cksvnxoeg008vugx4gh2adee5"},{"post_id":"cksvnxocy002gugx4hhci1acb","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoeg008zugx48n4u09kn"},{"post_id":"cksvnxocy002gugx4hhci1acb","category_id":"cksvnxodx0058ugx44uvsc00d","_id":"cksvnxoeh0091ugx43cl2bduc"},{"post_id":"cksvnxocz002jugx4gihq6x13","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoeh0092ugx4dco8fqs4"},{"post_id":"cksvnxocz002jugx4gihq6x13","category_id":"cksvnxoe7007bugx4cuuicxd4","_id":"cksvnxoeh0096ugx4e2sv6xqy"},{"post_id":"cksvnxod0002lugx481bl5jxl","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoei009augx486w54nf0"},{"post_id":"cksvnxod0002lugx481bl5jxl","category_id":"cksvnxoeg008yugx4758360c1","_id":"cksvnxoei009bugx4aayg4med"},{"post_id":"cksvnxod1002pugx4bwza945u","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoei009eugx4gdgw7e5a"},{"post_id":"cksvnxod1002pugx4bwza945u","category_id":"cksvnxody005bugx4d5bh66tz","_id":"cksvnxoej009gugx4gwx8h9rv"},{"post_id":"cksvnxod2002sugx4ci0nd3xv","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoej009kugx4hb0tb6zj"},{"post_id":"cksvnxod2002sugx4ci0nd3xv","category_id":"cksvnxodx0058ugx44uvsc00d","_id":"cksvnxoej009lugx47wr43m9p"},{"post_id":"cksvnxod5002wugx40oo698ne","category_id":"cksvnxod4002uugx43prg7tru","_id":"cksvnxoej009nugx45i8mcra5"},{"post_id":"cksvnxod5002wugx40oo698ne","category_id":"cksvnxodx0058ugx44uvsc00d","_id":"cksvnxoek009qugx41ec91qtg"},{"post_id":"cksvnxodc003bugx44ngyerkg","category_id":"cksvnxoe3006dugx48g2pgvfp","_id":"cksvnxoek009tugx4fb3pf58q"},{"post_id":"cksvnxodc003bugx44ngyerkg","category_id":"cksvnxoej009jugx40vdddfc7","_id":"cksvnxoek009vugx4hur7bae4"},{"post_id":"cksvnxodd003dugx48zhh95rc","category_id":"cksvnxoe3006dugx48g2pgvfp","_id":"cksvnxoel009yugx4fzad5ccu"},{"post_id":"cksvnxodd003dugx48zhh95rc","category_id":"cksvnxoek009ougx48dfd120k","_id":"cksvnxoel009zugx4e4pq5a05"},{"post_id":"cksvnxodf003gugx4gwc97ddn","category_id":"cksvnxoe3006dugx48g2pgvfp","_id":"cksvnxoel00a1ugx4eo4l4lea"},{"post_id":"cksvnxodf003gugx4gwc97ddn","category_id":"cksvnxoek009ougx48dfd120k","_id":"cksvnxoel00a3ugx4cqsog73m"},{"post_id":"cksvnxodg003jugx47v6ob78a","category_id":"cksvnxoe3006dugx48g2pgvfp","_id":"cksvnxoem00a6ugx4c5k83dba"},{"post_id":"cksvnxodg003jugx47v6ob78a","category_id":"cksvnxoej009jugx40vdddfc7","_id":"cksvnxoen00a8ugx4curbhqor"},{"post_id":"cksvnxoew00bpugx40iephwan","category_id":"cksvnxocl001bugx470i4evv5","_id":"cksvnxoex00buugx4eyvy6k9k"},{"post_id":"cksvnxoew00bpugx40iephwan","category_id":"cksvnxoew00brugx48jex3yas","_id":"cksvnxoex00bvugx44yb0hot2"}],"PostTag":[{"post_id":"cksvnxoby0001ugx4acy53i5r","tag_id":"cksvnxoc30005ugx47y83gt3f","_id":"cksvnxoc7000eugx440dwamd5"},{"post_id":"cksvnxoc10003ugx434uf6xfg","tag_id":"cksvnxoc6000dugx45rfgbo5j","_id":"cksvnxocb000lugx45g6s6nrz"},{"post_id":"cksvnxoc40007ugx4c2lig1lp","tag_id":"cksvnxoc9000jugx48l1818ie","_id":"cksvnxoch000wugx48g881rj1"},{"post_id":"cksvnxoc40007ugx4c2lig1lp","tag_id":"cksvnxoce000pugx449pz0tx0","_id":"cksvnxoci0010ugx4dimc919y"},{"post_id":"cksvnxoc50009ugx46o5l2qmv","tag_id":"cksvnxocg000uugx443y55myo","_id":"cksvnxoco001gugx4cp2q65yf"},{"post_id":"cksvnxoc50009ugx46o5l2qmv","tag_id":"cksvnxocj0012ugx4cahh81km","_id":"cksvnxocp001kugx456owfjlq"},{"post_id":"cksvnxoc50009ugx46o5l2qmv","tag_id":"cksvnxoc9000jugx48l1818ie","_id":"cksvnxocq001nugx4czb238db"},{"post_id":"cksvnxoc6000bugx441l531cf","tag_id":"cksvnxocm001eugx45p22fg5m","_id":"cksvnxocs001tugx464l3cwwt"},{"post_id":"cksvnxoc6000bugx441l531cf","tag_id":"cksvnxocp001lugx4gzfeegtx","_id":"cksvnxoct001xugx44dhwhvnd"},{"post_id":"cksvnxoc7000gugx4hhgv7a6i","tag_id":"cksvnxocm001eugx45p22fg5m","_id":"cksvnxocx0029ugx44rnmbhxv"},{"post_id":"cksvnxoc7000gugx4hhgv7a6i","tag_id":"cksvnxocp001lugx4gzfeegtx","_id":"cksvnxocy002cugx46rzgeee3"},{"post_id":"cksvnxoc7000gugx4hhgv7a6i","tag_id":"cksvnxocv0023ugx49cz2elev","_id":"cksvnxocy002fugx4fv3ece9p"},{"post_id":"cksvnxoc8000hugx4h6a0gl6h","tag_id":"cksvnxocx0028ugx47qzp0mod","_id":"cksvnxod0002mugx4dvk44dml"},{"post_id":"cksvnxoc8000hugx4h6a0gl6h","tag_id":"cksvnxocy002eugx46svqbwmk","_id":"cksvnxod2002qugx42yzi47l6"},{"post_id":"cksvnxoca000kugx4hlu2fium","tag_id":"cksvnxod0002kugx4hqcp0k3x","_id":"cksvnxod4002tugx4eocz8k7b"},{"post_id":"cksvnxocb000mugx4gxfhcpcf","tag_id":"cksvnxocx0028ugx47qzp0mod","_id":"cksvnxod6002zugx42mr250np"},{"post_id":"cksvnxocf000qugx41zot9pkj","tag_id":"cksvnxocx0028ugx47qzp0mod","_id":"cksvnxode003fugx4hyx3elnz"},{"post_id":"cksvnxocf000qugx41zot9pkj","tag_id":"cksvnxod70033ugx4gacsauy8","_id":"cksvnxodf003hugx4g2zkbgon"},{"post_id":"cksvnxocf000qugx41zot9pkj","tag_id":"cksvnxoda0038ugx43jo66fix","_id":"cksvnxodg003lugx4hnlvhji9"},{"post_id":"cksvnxocf000rugx4bwpw4ko2","tag_id":"cksvnxocx0028ugx47qzp0mod","_id":"cksvnxodi003rugx4ctdwdciz"},{"post_id":"cksvnxocf000rugx4bwpw4ko2","tag_id":"cksvnxod70033ugx4gacsauy8","_id":"cksvnxodj003sugx46xke3ugg"},{"post_id":"cksvnxocf000rugx4bwpw4ko2","tag_id":"cksvnxoda0038ugx43jo66fix","_id":"cksvnxodj003vugx447ctcgrq"},{"post_id":"cksvnxoch000vugx40ol17e7u","tag_id":"cksvnxodi003pugx4bz2jd4iw","_id":"cksvnxodj003wugx4cf15d14o"},{"post_id":"cksvnxoch000xugx41t1tfkc3","tag_id":"cksvnxodj003tugx41qj22zi9","_id":"cksvnxodk003zugx43x3f19fe"},{"post_id":"cksvnxoci0011ugx46m0kela2","tag_id":"cksvnxodj003xugx41hy1dmiy","_id":"cksvnxodl0042ugx4es6k67kf"},{"post_id":"cksvnxocj0014ugx4gqba5960","tag_id":"cksvnxodj003xugx41hy1dmiy","_id":"cksvnxodq0045ugx448qcdugw"},{"post_id":"cksvnxock0017ugx4fxldhh63","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxods004eugx4210kg39e"},{"post_id":"cksvnxock0017ugx4fxldhh63","tag_id":"cksvnxodr0048ugx46z6s7lyz","_id":"cksvnxods004hugx471dp1tuv"},{"post_id":"cksvnxock0017ugx4fxldhh63","tag_id":"cksvnxodr004bugx40y2t3ptp","_id":"cksvnxodt004kugx4af4wcgz0"},{"post_id":"cksvnxocl001augx48bw1eowt","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxodu004pugx4behbf21e"},{"post_id":"cksvnxocl001augx48bw1eowt","tag_id":"cksvnxodt004iugx43bh70yk0","_id":"cksvnxodu004rugx49mo98cx3"},{"post_id":"cksvnxocl001augx48bw1eowt","tag_id":"cksvnxodr004bugx40y2t3ptp","_id":"cksvnxodv004tugx48qy4gp0g"},{"post_id":"cksvnxocm001dugx4aor426jq","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxodv004wugx4041tbrch"},{"post_id":"cksvnxocm001dugx4aor426jq","tag_id":"cksvnxodu004sugx437skhxlq","_id":"cksvnxodw004yugx4gpuqf969"},{"post_id":"cksvnxocn001fugx4eaibahki","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxodx0055ugx4cryzbw4l"},{"post_id":"cksvnxocn001fugx4eaibahki","tag_id":"cksvnxodw004zugx48eswby3s","_id":"cksvnxodx0056ugx404ss8vy5"},{"post_id":"cksvnxocn001fugx4eaibahki","tag_id":"cksvnxodr004bugx40y2t3ptp","_id":"cksvnxody0059ugx4h3uyffne"},{"post_id":"cksvnxoco001iugx4bppja3fn","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxody005cugx43pjfb71q"},{"post_id":"cksvnxoco001iugx4bppja3fn","tag_id":"cksvnxodx0057ugx48kob27i7","_id":"cksvnxody005dugx4dvvzb8yd"},{"post_id":"cksvnxocp001mugx42dj34hoq","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxodz005kugx41mi8bp77"},{"post_id":"cksvnxocp001mugx42dj34hoq","tag_id":"cksvnxody005eugx425ky4u9z","_id":"cksvnxodz005nugx424se605p"},{"post_id":"cksvnxocq001ougx4cyv8edr2","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxoe1005zugx4g468ebee"},{"post_id":"cksvnxocq001ougx4cyv8edr2","tag_id":"cksvnxodz005ougx413gwb74p","_id":"cksvnxoe10061ugx464l8ed1e"},{"post_id":"cksvnxocq001ougx4cyv8edr2","tag_id":"cksvnxoe0005sugx44711azbv","_id":"cksvnxoe20065ugx4dzzz0q4m"},{"post_id":"cksvnxocr001sugx4gr3iauj0","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxoe3006gugx426ey6yws"},{"post_id":"cksvnxocr001sugx4gr3iauj0","tag_id":"cksvnxodz005ougx413gwb74p","_id":"cksvnxoe3006jugx42ojr1yy9"},{"post_id":"cksvnxocr001sugx4gr3iauj0","tag_id":"cksvnxoe0005sugx44711azbv","_id":"cksvnxoe4006mugx4gxmk6blb"},{"post_id":"cksvnxocr001sugx4gr3iauj0","tag_id":"cksvnxodr004bugx40y2t3ptp","_id":"cksvnxoe4006ougx41ooa04w4"},{"post_id":"cksvnxocs001uugx4hrg91zc0","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxoe5006uugx43ae3fonh"},{"post_id":"cksvnxocs001uugx4hrg91zc0","tag_id":"cksvnxodr0048ugx46z6s7lyz","_id":"cksvnxoe5006wugx46y5gfa6z"},{"post_id":"cksvnxocs001uugx4hrg91zc0","tag_id":"cksvnxodr004bugx40y2t3ptp","_id":"cksvnxoe5006yugx4biwn38f7"},{"post_id":"cksvnxoct001zugx43ezkd91j","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxoe70075ugx48z3d4n8y"},{"post_id":"cksvnxoct001zugx43ezkd91j","tag_id":"cksvnxoe5006xugx47af3g4sz","_id":"cksvnxoe70077ugx490kb8et4"},{"post_id":"cksvnxoct001zugx43ezkd91j","tag_id":"cksvnxodr004bugx40y2t3ptp","_id":"cksvnxoe70079ugx46qnxe3ob"},{"post_id":"cksvnxocu0020ugx40h126mif","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxoe9007hugx41othea4k"},{"post_id":"cksvnxocu0020ugx40h126mif","tag_id":"cksvnxoe5006xugx47af3g4sz","_id":"cksvnxoe9007kugx4bplcd1jk"},{"post_id":"cksvnxocu0020ugx40h126mif","tag_id":"cksvnxodr004bugx40y2t3ptp","_id":"cksvnxoea007nugx4h4vtcqkt"},{"post_id":"cksvnxocv0024ugx4faelagqs","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxoeb007wugx4bgaqgnsu"},{"post_id":"cksvnxocv0024ugx4faelagqs","tag_id":"cksvnxoe0005sugx44711azbv","_id":"cksvnxoeb007xugx40nry7lpa"},{"post_id":"cksvnxocv0024ugx4faelagqs","tag_id":"cksvnxodr004bugx40y2t3ptp","_id":"cksvnxoec0081ugx42exc1oyf"},{"post_id":"cksvnxocv0025ugx4gwg67ovb","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxoec0086ugx41r7hcpfe"},{"post_id":"cksvnxocv0025ugx4gwg67ovb","tag_id":"cksvnxoe0005sugx44711azbv","_id":"cksvnxoed0088ugx4f26o64a4"},{"post_id":"cksvnxocw0027ugx4hms1f8dt","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxoee008hugx43sgl8tnq"},{"post_id":"cksvnxocw0027ugx4hms1f8dt","tag_id":"cksvnxoed008bugx4f93sh3n1","_id":"cksvnxoee008iugx4h12i0yg7"},{"post_id":"cksvnxocx002augx45s3cardx","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxoeg008uugx4eaieaonb"},{"post_id":"cksvnxocx002augx45s3cardx","tag_id":"cksvnxoee008kugx4fq9g2p48","_id":"cksvnxoeg008wugx4dgyyev3c"},{"post_id":"cksvnxocx002augx45s3cardx","tag_id":"cksvnxodr004bugx40y2t3ptp","_id":"cksvnxoeh0090ugx41itcfcq5"},{"post_id":"cksvnxocy002dugx48pas9zu4","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxoeh0095ugx46u9c9szb"},{"post_id":"cksvnxocy002dugx48pas9zu4","tag_id":"cksvnxoeg008xugx4hwoz5x3x","_id":"cksvnxoeh0097ugx41epp4sqn"},{"post_id":"cksvnxocy002gugx4hhci1acb","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxoej009fugx484xmat6x"},{"post_id":"cksvnxocy002gugx4hhci1acb","tag_id":"cksvnxodw004zugx48eswby3s","_id":"cksvnxoej009hugx4bf3ugyp2"},{"post_id":"cksvnxocz002jugx4gihq6x13","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxoek009pugx4exue6jb7"},{"post_id":"cksvnxocz002jugx4gihq6x13","tag_id":"cksvnxoe0005sugx44711azbv","_id":"cksvnxoek009rugx45zdd83ex"},{"post_id":"cksvnxod0002lugx481bl5jxl","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxoel00a2ugx42v5yd6ym"},{"post_id":"cksvnxod0002lugx481bl5jxl","tag_id":"cksvnxoek009sugx425xjffir","_id":"cksvnxoel00a4ugx4e07n7dv1"},{"post_id":"cksvnxod0002lugx481bl5jxl","tag_id":"cksvnxodr004bugx40y2t3ptp","_id":"cksvnxoen00a7ugx46agocn71"},{"post_id":"cksvnxod1002pugx4bwza945u","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxoen00aaugx43iqa47td"},{"post_id":"cksvnxod1002pugx4bwza945u","tag_id":"cksvnxodr0048ugx46z6s7lyz","_id":"cksvnxoen00abugx4blvmbxtm"},{"post_id":"cksvnxod2002sugx4ci0nd3xv","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxoeo00aeugx42l4e51l2"},{"post_id":"cksvnxod2002sugx4ci0nd3xv","tag_id":"cksvnxodw004zugx48eswby3s","_id":"cksvnxoeo00afugx42tvo3ubr"},{"post_id":"cksvnxod5002wugx40oo698ne","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxoeo00aiugx4aute94ga"},{"post_id":"cksvnxod5002wugx40oo698ne","tag_id":"cksvnxodw004zugx48eswby3s","_id":"cksvnxoeo00ajugx4fpgi474z"},{"post_id":"cksvnxod5002yugx47co2f9u0","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxoep00amugx4eofjagiz"},{"post_id":"cksvnxod5002yugx47co2f9u0","tag_id":"cksvnxodw004zugx48eswby3s","_id":"cksvnxoep00anugx4dho32032"},{"post_id":"cksvnxod60031ugx4dv7sbvml","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxoeq00arugx4howmbfdc"},{"post_id":"cksvnxod60031ugx4dv7sbvml","tag_id":"cksvnxodx0057ugx48kob27i7","_id":"cksvnxoeq00asugx44vh78daq"},{"post_id":"cksvnxod60031ugx4dv7sbvml","tag_id":"cksvnxodr004bugx40y2t3ptp","_id":"cksvnxoeq00auugx4fdw3hzwr"},{"post_id":"cksvnxod70034ugx45n4zgo99","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxoer00awugx45di1frat"},{"post_id":"cksvnxod70034ugx45n4zgo99","tag_id":"cksvnxodx0057ugx48kob27i7","_id":"cksvnxoer00axugx472et5nis"},{"post_id":"cksvnxod90035ugx4gfko6laz","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxoer00b0ugx4bgxd2bvz"},{"post_id":"cksvnxod90035ugx4gfko6laz","tag_id":"cksvnxodx0057ugx48kob27i7","_id":"cksvnxoer00b1ugx45jba2ixx"},{"post_id":"cksvnxoda0037ugx45geahkfv","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxoes00b4ugx45zfyh8hr"},{"post_id":"cksvnxoda0037ugx45geahkfv","tag_id":"cksvnxodr0048ugx46z6s7lyz","_id":"cksvnxoes00b5ugx4hwdl7ka2"},{"post_id":"cksvnxoda0039ugx4559oh924","tag_id":"cksvnxodl0043ugx4deagdpo0","_id":"cksvnxoes00b8ugx493vobfor"},{"post_id":"cksvnxoda0039ugx4559oh924","tag_id":"cksvnxoes00b6ugx40f4pamf8","_id":"cksvnxoes00b9ugx4e3hsd3xj"},{"post_id":"cksvnxodc003bugx44ngyerkg","tag_id":"cksvnxoes00b7ugx4571y3inj","_id":"cksvnxoet00bcugx44wt8e9kr"},{"post_id":"cksvnxodc003bugx44ngyerkg","tag_id":"cksvnxoes00baugx4ghqw7ekg","_id":"cksvnxoet00bdugx47zr59uri"},{"post_id":"cksvnxodd003dugx48zhh95rc","tag_id":"cksvnxoet00bbugx401p6cd97","_id":"cksvnxoet00bfugx49s10ejye"},{"post_id":"cksvnxodf003gugx4gwc97ddn","tag_id":"cksvnxoes00b7ugx4571y3inj","_id":"cksvnxoeu00biugx46m3u94mv"},{"post_id":"cksvnxodf003gugx4gwc97ddn","tag_id":"cksvnxoet00bgugx470kxanmd","_id":"cksvnxoeu00bjugx46vxk1nui"},{"post_id":"cksvnxodg003jugx47v6ob78a","tag_id":"cksvnxoes00b7ugx4571y3inj","_id":"cksvnxoeu00bmugx41cde9dz2"},{"post_id":"cksvnxodg003jugx47v6ob78a","tag_id":"cksvnxoes00baugx4ghqw7ekg","_id":"cksvnxoeu00bnugx41ffccmkw"},{"post_id":"cksvnxodh003mugx450ipayjb","tag_id":"cksvnxoeu00blugx4c8qk00ih","_id":"cksvnxoeu00bougx49dxw4acx"},{"post_id":"cksvnxoew00bpugx40iephwan","tag_id":"cksvnxocx0028ugx47qzp0mod","_id":"cksvnxoex00bsugx44562guhr"},{"post_id":"cksvnxoew00bpugx40iephwan","tag_id":"cksvnxoew00bqugx4aoj18ybt","_id":"cksvnxoex00btugx4gzpw05nj"}],"Tag":[{"name":"emoji","_id":"cksvnxoc30005ugx47y83gt3f"},{"name":"git","_id":"cksvnxoc6000dugx45rfgbo5j"},{"name":"配置","_id":"cksvnxoc9000jugx48l1818ie"},{"name":"pdf","_id":"cksvnxoce000pugx449pz0tx0"},{"name":"hexo","_id":"cksvnxocg000uugx443y55myo"},{"name":"fluid","_id":"cksvnxocj0012ugx4cahh81km"},{"name":"docker","_id":"cksvnxocm001eugx45p22fg5m"},{"name":"远程配置","_id":"cksvnxocp001lugx4gzfeegtx"},{"name":"ssh","_id":"cksvnxocv0023ugx49cz2elev"},{"name":"深度学习","_id":"cksvnxocx0028ugx47qzp0mod"},{"name":"微调","_id":"cksvnxocy002eugx46svqbwmk"},{"name":"深度学习，梯度","_id":"cksvnxod0002kugx4hqcp0k3x"},{"name":"目标检测","_id":"cksvnxod70033ugx4gacsauy8"},{"name":"yolo","_id":"cksvnxoda0038ugx43jo66fix"},{"name":"dvc","_id":"cksvnxodi003pugx4bz2jd4iw"},{"name":"英语","_id":"cksvnxodj003tugx41qj22zi9"},{"name":"图像处理","_id":"cksvnxodj003xugx41hy1dmiy"},{"name":"剑指","_id":"cksvnxodl0043ugx4deagdpo0"},{"name":"数组","_id":"cksvnxodr0048ugx46z6s7lyz"},{"name":"idea","_id":"cksvnxodr004bugx40y2t3ptp"},{"name":"数组查找","_id":"cksvnxodt004iugx43bh70yk0"},{"name":"字符串","_id":"cksvnxodu004sugx437skhxlq"},{"name":"链表","_id":"cksvnxodw004zugx48eswby3s"},{"name":"树","_id":"cksvnxodx0057ugx48kob27i7"},{"name":"栈","_id":"cksvnxody005eugx425ky4u9z"},{"name":"斐波那契","_id":"cksvnxodz005ougx413gwb74p"},{"name":"动态规划","_id":"cksvnxoe0005sugx44711azbv"},{"name":"DFS","_id":"cksvnxoe5006xugx47af3g4sz"},{"name":"变量","_id":"cksvnxoed008bugx4f93sh3n1"},{"name":"快速幂","_id":"cksvnxoee008kugx4fq9g2p48"},{"name":"大数","_id":"cksvnxoeg008xugx4hwoz5x3x"},{"name":"有限状态机","_id":"cksvnxoek009sugx425xjffir"},{"name":"快速排序","_id":"cksvnxoes00b6ugx40f4pamf8"},{"name":"math","_id":"cksvnxoes00b7ugx4571y3inj"},{"name":"线性代数","_id":"cksvnxoes00baugx4ghqw7ekg"},{"name":"马氏距离","_id":"cksvnxoet00bbugx401p6cd97"},{"name":"概率论","_id":"cksvnxoet00bgugx470kxanmd"},{"name":"文献","_id":"cksvnxoeu00blugx4c8qk00ih"},{"name":"swin","_id":"cksvnxoew00bqugx4aoj18ybt"}]}}